
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model AppConfig
 * 
 */
export type AppConfig = $Result.DefaultSelection<Prisma.$AppConfigPayload>
/**
 * Model InviteCode
 * 
 */
export type InviteCode = $Result.DefaultSelection<Prisma.$InviteCodePayload>
/**
 * Model DiscordMessage
 * 
 */
export type DiscordMessage = $Result.DefaultSelection<Prisma.$DiscordMessagePayload>
/**
 * Model DiscordMessageTemplate
 * 
 */
export type DiscordMessageTemplate = $Result.DefaultSelection<Prisma.$DiscordMessageTemplatePayload>
/**
 * Model DiscordChannelWebhook
 * 
 */
export type DiscordChannelWebhook = $Result.DefaultSelection<Prisma.$DiscordChannelWebhookPayload>
/**
 * Model ListenerEvent
 * 
 */
export type ListenerEvent = $Result.DefaultSelection<Prisma.$ListenerEventPayload>
/**
 * Model ListenerEventSender
 * 
 */
export type ListenerEventSender = $Result.DefaultSelection<Prisma.$ListenerEventSenderPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserPrivacySettings
 * 
 */
export type UserPrivacySettings = $Result.DefaultSelection<Prisma.$UserPrivacySettingsPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model Permission
 * 
 */
export type Permission = $Result.DefaultSelection<Prisma.$PermissionPayload>
/**
 * Model Livery
 * 
 */
export type Livery = $Result.DefaultSelection<Prisma.$LiveryPayload>
/**
 * Model LiveryImage
 * 
 */
export type LiveryImage = $Result.DefaultSelection<Prisma.$LiveryImagePayload>
/**
 * Model LiveryFile
 * 
 */
export type LiveryFile = $Result.DefaultSelection<Prisma.$LiveryFilePayload>
/**
 * Model VirtualAirline
 * 
 */
export type VirtualAirline = $Result.DefaultSelection<Prisma.$VirtualAirlinePayload>
/**
 * Model VirtualAirlineRole
 * 
 */
export type VirtualAirlineRole = $Result.DefaultSelection<Prisma.$VirtualAirlineRolePayload>
/**
 * Model World
 * 
 */
export type World = $Result.DefaultSelection<Prisma.$WorldPayload>
/**
 * Model Member
 * 
 */
export type Member = $Result.DefaultSelection<Prisma.$MemberPayload>
/**
 * Model Company
 * 
 */
export type Company = $Result.DefaultSelection<Prisma.$CompanyPayload>
/**
 * Model Aircraft
 * 
 */
export type Aircraft = $Result.DefaultSelection<Prisma.$AircraftPayload>
/**
 * Model AircraftClass
 * 
 */
export type AircraftClass = $Result.DefaultSelection<Prisma.$AircraftClassPayload>
/**
 * Model AircraftMaintenance
 * 
 */
export type AircraftMaintenance = $Result.DefaultSelection<Prisma.$AircraftMaintenancePayload>
/**
 * Model AircraftStatus
 * 
 */
export type AircraftStatus = $Result.DefaultSelection<Prisma.$AircraftStatusPayload>
/**
 * Model Airport
 * 
 */
export type Airport = $Result.DefaultSelection<Prisma.$AirportPayload>
/**
 * Model Flight
 * 
 */
export type Flight = $Result.DefaultSelection<Prisma.$FlightPayload>
/**
 * Model FlightRoute
 * 
 */
export type FlightRoute = $Result.DefaultSelection<Prisma.$FlightRoutePayload>
/**
 * Model Job
 * 
 */
export type Job = $Result.DefaultSelection<Prisma.$JobPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const ListenerEventStatus: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

export type ListenerEventStatus = (typeof ListenerEventStatus)[keyof typeof ListenerEventStatus]


export const FlightStatus: {
  PENDING: 'PENDING',
  FLIGHT: 'FLIGHT',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  WARP: 'WARP'
};

export type FlightStatus = (typeof FlightStatus)[keyof typeof FlightStatus]


export const JobType: {
  VIRTUAL_AIRLINE_SYNC: 'VIRTUAL_AIRLINE_SYNC',
  VIRTUAL_AIRLINE_MEMBERS_SYNC: 'VIRTUAL_AIRLINE_MEMBERS_SYNC',
  VIRTUAL_AIRLINE_FLEET_SYNC: 'VIRTUAL_AIRLINE_FLEET_SYNC',
  VIRTUAL_AIRLINE_FLIGHTS_SYNC: 'VIRTUAL_AIRLINE_FLIGHTS_SYNC'
};

export type JobType = (typeof JobType)[keyof typeof JobType]


export const JobStatus: {
  INACTIVE: 'INACTIVE',
  ACTIVE: 'ACTIVE',
  RUNNING: 'RUNNING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus]


export const CronExpression: {
  EVERY_30_SECONDS: 'EVERY_30_SECONDS',
  EVERY_MINUTE: 'EVERY_MINUTE',
  EVERY_5_MINUTES: 'EVERY_5_MINUTES',
  EVERY_10_MINUTES: 'EVERY_10_MINUTES',
  EVERY_30_MINUTES: 'EVERY_30_MINUTES',
  EVERY_HOUR: 'EVERY_HOUR',
  EVERY_6_HOURS: 'EVERY_6_HOURS',
  EVERY_12_HOURS: 'EVERY_12_HOURS',
  EVERY_DAY_AT_MIDNIGHT: 'EVERY_DAY_AT_MIDNIGHT',
  EVERY_WEEK: 'EVERY_WEEK',
  EVERY_MONTH: 'EVERY_MONTH'
};

export type CronExpression = (typeof CronExpression)[keyof typeof CronExpression]

}

export type ListenerEventStatus = $Enums.ListenerEventStatus

export const ListenerEventStatus: typeof $Enums.ListenerEventStatus

export type FlightStatus = $Enums.FlightStatus

export const FlightStatus: typeof $Enums.FlightStatus

export type JobType = $Enums.JobType

export const JobType: typeof $Enums.JobType

export type JobStatus = $Enums.JobStatus

export const JobStatus: typeof $Enums.JobStatus

export type CronExpression = $Enums.CronExpression

export const CronExpression: typeof $Enums.CronExpression

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more AppConfigs
 * const appConfigs = await prisma.appConfig.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more AppConfigs
   * const appConfigs = await prisma.appConfig.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.appConfig`: Exposes CRUD operations for the **AppConfig** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AppConfigs
    * const appConfigs = await prisma.appConfig.findMany()
    * ```
    */
  get appConfig(): Prisma.AppConfigDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inviteCode`: Exposes CRUD operations for the **InviteCode** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InviteCodes
    * const inviteCodes = await prisma.inviteCode.findMany()
    * ```
    */
  get inviteCode(): Prisma.InviteCodeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.discordMessage`: Exposes CRUD operations for the **DiscordMessage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscordMessages
    * const discordMessages = await prisma.discordMessage.findMany()
    * ```
    */
  get discordMessage(): Prisma.DiscordMessageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.discordMessageTemplate`: Exposes CRUD operations for the **DiscordMessageTemplate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscordMessageTemplates
    * const discordMessageTemplates = await prisma.discordMessageTemplate.findMany()
    * ```
    */
  get discordMessageTemplate(): Prisma.DiscordMessageTemplateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.discordChannelWebhook`: Exposes CRUD operations for the **DiscordChannelWebhook** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscordChannelWebhooks
    * const discordChannelWebhooks = await prisma.discordChannelWebhook.findMany()
    * ```
    */
  get discordChannelWebhook(): Prisma.DiscordChannelWebhookDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listenerEvent`: Exposes CRUD operations for the **ListenerEvent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListenerEvents
    * const listenerEvents = await prisma.listenerEvent.findMany()
    * ```
    */
  get listenerEvent(): Prisma.ListenerEventDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listenerEventSender`: Exposes CRUD operations for the **ListenerEventSender** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListenerEventSenders
    * const listenerEventSenders = await prisma.listenerEventSender.findMany()
    * ```
    */
  get listenerEventSender(): Prisma.ListenerEventSenderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userPrivacySettings`: Exposes CRUD operations for the **UserPrivacySettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserPrivacySettings
    * const userPrivacySettings = await prisma.userPrivacySettings.findMany()
    * ```
    */
  get userPrivacySettings(): Prisma.UserPrivacySettingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permission`: Exposes CRUD operations for the **Permission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permission.findMany()
    * ```
    */
  get permission(): Prisma.PermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.livery`: Exposes CRUD operations for the **Livery** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Liveries
    * const liveries = await prisma.livery.findMany()
    * ```
    */
  get livery(): Prisma.LiveryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.liveryImage`: Exposes CRUD operations for the **LiveryImage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LiveryImages
    * const liveryImages = await prisma.liveryImage.findMany()
    * ```
    */
  get liveryImage(): Prisma.LiveryImageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.liveryFile`: Exposes CRUD operations for the **LiveryFile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LiveryFiles
    * const liveryFiles = await prisma.liveryFile.findMany()
    * ```
    */
  get liveryFile(): Prisma.LiveryFileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.virtualAirline`: Exposes CRUD operations for the **VirtualAirline** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VirtualAirlines
    * const virtualAirlines = await prisma.virtualAirline.findMany()
    * ```
    */
  get virtualAirline(): Prisma.VirtualAirlineDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.virtualAirlineRole`: Exposes CRUD operations for the **VirtualAirlineRole** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VirtualAirlineRoles
    * const virtualAirlineRoles = await prisma.virtualAirlineRole.findMany()
    * ```
    */
  get virtualAirlineRole(): Prisma.VirtualAirlineRoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.world`: Exposes CRUD operations for the **World** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Worlds
    * const worlds = await prisma.world.findMany()
    * ```
    */
  get world(): Prisma.WorldDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.member`: Exposes CRUD operations for the **Member** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Members
    * const members = await prisma.member.findMany()
    * ```
    */
  get member(): Prisma.MemberDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.company`: Exposes CRUD operations for the **Company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.CompanyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aircraft`: Exposes CRUD operations for the **Aircraft** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Aircraft
    * const aircraft = await prisma.aircraft.findMany()
    * ```
    */
  get aircraft(): Prisma.AircraftDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aircraftClass`: Exposes CRUD operations for the **AircraftClass** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AircraftClasses
    * const aircraftClasses = await prisma.aircraftClass.findMany()
    * ```
    */
  get aircraftClass(): Prisma.AircraftClassDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aircraftMaintenance`: Exposes CRUD operations for the **AircraftMaintenance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AircraftMaintenances
    * const aircraftMaintenances = await prisma.aircraftMaintenance.findMany()
    * ```
    */
  get aircraftMaintenance(): Prisma.AircraftMaintenanceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aircraftStatus`: Exposes CRUD operations for the **AircraftStatus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AircraftStatuses
    * const aircraftStatuses = await prisma.aircraftStatus.findMany()
    * ```
    */
  get aircraftStatus(): Prisma.AircraftStatusDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.airport`: Exposes CRUD operations for the **Airport** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Airports
    * const airports = await prisma.airport.findMany()
    * ```
    */
  get airport(): Prisma.AirportDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.flight`: Exposes CRUD operations for the **Flight** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Flights
    * const flights = await prisma.flight.findMany()
    * ```
    */
  get flight(): Prisma.FlightDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.flightRoute`: Exposes CRUD operations for the **FlightRoute** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FlightRoutes
    * const flightRoutes = await prisma.flightRoute.findMany()
    * ```
    */
  get flightRoute(): Prisma.FlightRouteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.job`: Exposes CRUD operations for the **Job** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Jobs
    * const jobs = await prisma.job.findMany()
    * ```
    */
  get job(): Prisma.JobDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.15.0
   * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    AppConfig: 'AppConfig',
    InviteCode: 'InviteCode',
    DiscordMessage: 'DiscordMessage',
    DiscordMessageTemplate: 'DiscordMessageTemplate',
    DiscordChannelWebhook: 'DiscordChannelWebhook',
    ListenerEvent: 'ListenerEvent',
    ListenerEventSender: 'ListenerEventSender',
    User: 'User',
    UserPrivacySettings: 'UserPrivacySettings',
    Role: 'Role',
    Permission: 'Permission',
    Livery: 'Livery',
    LiveryImage: 'LiveryImage',
    LiveryFile: 'LiveryFile',
    VirtualAirline: 'VirtualAirline',
    VirtualAirlineRole: 'VirtualAirlineRole',
    World: 'World',
    Member: 'Member',
    Company: 'Company',
    Aircraft: 'Aircraft',
    AircraftClass: 'AircraftClass',
    AircraftMaintenance: 'AircraftMaintenance',
    AircraftStatus: 'AircraftStatus',
    Airport: 'Airport',
    Flight: 'Flight',
    FlightRoute: 'FlightRoute',
    Job: 'Job'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "appConfig" | "inviteCode" | "discordMessage" | "discordMessageTemplate" | "discordChannelWebhook" | "listenerEvent" | "listenerEventSender" | "user" | "userPrivacySettings" | "role" | "permission" | "livery" | "liveryImage" | "liveryFile" | "virtualAirline" | "virtualAirlineRole" | "world" | "member" | "company" | "aircraft" | "aircraftClass" | "aircraftMaintenance" | "aircraftStatus" | "airport" | "flight" | "flightRoute" | "job"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      AppConfig: {
        payload: Prisma.$AppConfigPayload<ExtArgs>
        fields: Prisma.AppConfigFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AppConfigFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AppConfigFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload>
          }
          findFirst: {
            args: Prisma.AppConfigFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AppConfigFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload>
          }
          findMany: {
            args: Prisma.AppConfigFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload>[]
          }
          create: {
            args: Prisma.AppConfigCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload>
          }
          createMany: {
            args: Prisma.AppConfigCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AppConfigCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload>[]
          }
          delete: {
            args: Prisma.AppConfigDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload>
          }
          update: {
            args: Prisma.AppConfigUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload>
          }
          deleteMany: {
            args: Prisma.AppConfigDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AppConfigUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AppConfigUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload>[]
          }
          upsert: {
            args: Prisma.AppConfigUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppConfigPayload>
          }
          aggregate: {
            args: Prisma.AppConfigAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAppConfig>
          }
          groupBy: {
            args: Prisma.AppConfigGroupByArgs<ExtArgs>
            result: $Utils.Optional<AppConfigGroupByOutputType>[]
          }
          count: {
            args: Prisma.AppConfigCountArgs<ExtArgs>
            result: $Utils.Optional<AppConfigCountAggregateOutputType> | number
          }
        }
      }
      InviteCode: {
        payload: Prisma.$InviteCodePayload<ExtArgs>
        fields: Prisma.InviteCodeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InviteCodeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InviteCodeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload>
          }
          findFirst: {
            args: Prisma.InviteCodeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InviteCodeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload>
          }
          findMany: {
            args: Prisma.InviteCodeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload>[]
          }
          create: {
            args: Prisma.InviteCodeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload>
          }
          createMany: {
            args: Prisma.InviteCodeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InviteCodeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload>[]
          }
          delete: {
            args: Prisma.InviteCodeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload>
          }
          update: {
            args: Prisma.InviteCodeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload>
          }
          deleteMany: {
            args: Prisma.InviteCodeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InviteCodeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InviteCodeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload>[]
          }
          upsert: {
            args: Prisma.InviteCodeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InviteCodePayload>
          }
          aggregate: {
            args: Prisma.InviteCodeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInviteCode>
          }
          groupBy: {
            args: Prisma.InviteCodeGroupByArgs<ExtArgs>
            result: $Utils.Optional<InviteCodeGroupByOutputType>[]
          }
          count: {
            args: Prisma.InviteCodeCountArgs<ExtArgs>
            result: $Utils.Optional<InviteCodeCountAggregateOutputType> | number
          }
        }
      }
      DiscordMessage: {
        payload: Prisma.$DiscordMessagePayload<ExtArgs>
        fields: Prisma.DiscordMessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiscordMessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiscordMessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload>
          }
          findFirst: {
            args: Prisma.DiscordMessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiscordMessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload>
          }
          findMany: {
            args: Prisma.DiscordMessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload>[]
          }
          create: {
            args: Prisma.DiscordMessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload>
          }
          createMany: {
            args: Prisma.DiscordMessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiscordMessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload>[]
          }
          delete: {
            args: Prisma.DiscordMessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload>
          }
          update: {
            args: Prisma.DiscordMessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload>
          }
          deleteMany: {
            args: Prisma.DiscordMessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiscordMessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DiscordMessageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload>[]
          }
          upsert: {
            args: Prisma.DiscordMessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessagePayload>
          }
          aggregate: {
            args: Prisma.DiscordMessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscordMessage>
          }
          groupBy: {
            args: Prisma.DiscordMessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiscordMessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiscordMessageCountArgs<ExtArgs>
            result: $Utils.Optional<DiscordMessageCountAggregateOutputType> | number
          }
        }
      }
      DiscordMessageTemplate: {
        payload: Prisma.$DiscordMessageTemplatePayload<ExtArgs>
        fields: Prisma.DiscordMessageTemplateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiscordMessageTemplateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiscordMessageTemplateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload>
          }
          findFirst: {
            args: Prisma.DiscordMessageTemplateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiscordMessageTemplateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload>
          }
          findMany: {
            args: Prisma.DiscordMessageTemplateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload>[]
          }
          create: {
            args: Prisma.DiscordMessageTemplateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload>
          }
          createMany: {
            args: Prisma.DiscordMessageTemplateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiscordMessageTemplateCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload>[]
          }
          delete: {
            args: Prisma.DiscordMessageTemplateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload>
          }
          update: {
            args: Prisma.DiscordMessageTemplateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload>
          }
          deleteMany: {
            args: Prisma.DiscordMessageTemplateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiscordMessageTemplateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DiscordMessageTemplateUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload>[]
          }
          upsert: {
            args: Prisma.DiscordMessageTemplateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordMessageTemplatePayload>
          }
          aggregate: {
            args: Prisma.DiscordMessageTemplateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscordMessageTemplate>
          }
          groupBy: {
            args: Prisma.DiscordMessageTemplateGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiscordMessageTemplateGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiscordMessageTemplateCountArgs<ExtArgs>
            result: $Utils.Optional<DiscordMessageTemplateCountAggregateOutputType> | number
          }
        }
      }
      DiscordChannelWebhook: {
        payload: Prisma.$DiscordChannelWebhookPayload<ExtArgs>
        fields: Prisma.DiscordChannelWebhookFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiscordChannelWebhookFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiscordChannelWebhookFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload>
          }
          findFirst: {
            args: Prisma.DiscordChannelWebhookFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiscordChannelWebhookFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload>
          }
          findMany: {
            args: Prisma.DiscordChannelWebhookFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload>[]
          }
          create: {
            args: Prisma.DiscordChannelWebhookCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload>
          }
          createMany: {
            args: Prisma.DiscordChannelWebhookCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiscordChannelWebhookCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload>[]
          }
          delete: {
            args: Prisma.DiscordChannelWebhookDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload>
          }
          update: {
            args: Prisma.DiscordChannelWebhookUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload>
          }
          deleteMany: {
            args: Prisma.DiscordChannelWebhookDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiscordChannelWebhookUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DiscordChannelWebhookUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload>[]
          }
          upsert: {
            args: Prisma.DiscordChannelWebhookUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscordChannelWebhookPayload>
          }
          aggregate: {
            args: Prisma.DiscordChannelWebhookAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscordChannelWebhook>
          }
          groupBy: {
            args: Prisma.DiscordChannelWebhookGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiscordChannelWebhookGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiscordChannelWebhookCountArgs<ExtArgs>
            result: $Utils.Optional<DiscordChannelWebhookCountAggregateOutputType> | number
          }
        }
      }
      ListenerEvent: {
        payload: Prisma.$ListenerEventPayload<ExtArgs>
        fields: Prisma.ListenerEventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListenerEventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListenerEventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload>
          }
          findFirst: {
            args: Prisma.ListenerEventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListenerEventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload>
          }
          findMany: {
            args: Prisma.ListenerEventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload>[]
          }
          create: {
            args: Prisma.ListenerEventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload>
          }
          createMany: {
            args: Prisma.ListenerEventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListenerEventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload>[]
          }
          delete: {
            args: Prisma.ListenerEventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload>
          }
          update: {
            args: Prisma.ListenerEventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload>
          }
          deleteMany: {
            args: Prisma.ListenerEventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListenerEventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListenerEventUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload>[]
          }
          upsert: {
            args: Prisma.ListenerEventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventPayload>
          }
          aggregate: {
            args: Prisma.ListenerEventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListenerEvent>
          }
          groupBy: {
            args: Prisma.ListenerEventGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListenerEventGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListenerEventCountArgs<ExtArgs>
            result: $Utils.Optional<ListenerEventCountAggregateOutputType> | number
          }
        }
      }
      ListenerEventSender: {
        payload: Prisma.$ListenerEventSenderPayload<ExtArgs>
        fields: Prisma.ListenerEventSenderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListenerEventSenderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListenerEventSenderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload>
          }
          findFirst: {
            args: Prisma.ListenerEventSenderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListenerEventSenderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload>
          }
          findMany: {
            args: Prisma.ListenerEventSenderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload>[]
          }
          create: {
            args: Prisma.ListenerEventSenderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload>
          }
          createMany: {
            args: Prisma.ListenerEventSenderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListenerEventSenderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload>[]
          }
          delete: {
            args: Prisma.ListenerEventSenderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload>
          }
          update: {
            args: Prisma.ListenerEventSenderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload>
          }
          deleteMany: {
            args: Prisma.ListenerEventSenderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListenerEventSenderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListenerEventSenderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload>[]
          }
          upsert: {
            args: Prisma.ListenerEventSenderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListenerEventSenderPayload>
          }
          aggregate: {
            args: Prisma.ListenerEventSenderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListenerEventSender>
          }
          groupBy: {
            args: Prisma.ListenerEventSenderGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListenerEventSenderGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListenerEventSenderCountArgs<ExtArgs>
            result: $Utils.Optional<ListenerEventSenderCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserPrivacySettings: {
        payload: Prisma.$UserPrivacySettingsPayload<ExtArgs>
        fields: Prisma.UserPrivacySettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserPrivacySettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserPrivacySettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload>
          }
          findFirst: {
            args: Prisma.UserPrivacySettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserPrivacySettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload>
          }
          findMany: {
            args: Prisma.UserPrivacySettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload>[]
          }
          create: {
            args: Prisma.UserPrivacySettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload>
          }
          createMany: {
            args: Prisma.UserPrivacySettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserPrivacySettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload>[]
          }
          delete: {
            args: Prisma.UserPrivacySettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload>
          }
          update: {
            args: Prisma.UserPrivacySettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload>
          }
          deleteMany: {
            args: Prisma.UserPrivacySettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserPrivacySettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserPrivacySettingsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload>[]
          }
          upsert: {
            args: Prisma.UserPrivacySettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPrivacySettingsPayload>
          }
          aggregate: {
            args: Prisma.UserPrivacySettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserPrivacySettings>
          }
          groupBy: {
            args: Prisma.UserPrivacySettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserPrivacySettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserPrivacySettingsCountArgs<ExtArgs>
            result: $Utils.Optional<UserPrivacySettingsCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      Permission: {
        payload: Prisma.$PermissionPayload<ExtArgs>
        fields: Prisma.PermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findFirst: {
            args: Prisma.PermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findMany: {
            args: Prisma.PermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          create: {
            args: Prisma.PermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          createMany: {
            args: Prisma.PermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          delete: {
            args: Prisma.PermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          update: {
            args: Prisma.PermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          deleteMany: {
            args: Prisma.PermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          upsert: {
            args: Prisma.PermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          aggregate: {
            args: Prisma.PermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermission>
          }
          groupBy: {
            args: Prisma.PermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermissionCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionCountAggregateOutputType> | number
          }
        }
      }
      Livery: {
        payload: Prisma.$LiveryPayload<ExtArgs>
        fields: Prisma.LiveryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LiveryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LiveryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload>
          }
          findFirst: {
            args: Prisma.LiveryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LiveryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload>
          }
          findMany: {
            args: Prisma.LiveryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload>[]
          }
          create: {
            args: Prisma.LiveryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload>
          }
          createMany: {
            args: Prisma.LiveryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LiveryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload>[]
          }
          delete: {
            args: Prisma.LiveryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload>
          }
          update: {
            args: Prisma.LiveryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload>
          }
          deleteMany: {
            args: Prisma.LiveryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LiveryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LiveryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload>[]
          }
          upsert: {
            args: Prisma.LiveryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryPayload>
          }
          aggregate: {
            args: Prisma.LiveryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLivery>
          }
          groupBy: {
            args: Prisma.LiveryGroupByArgs<ExtArgs>
            result: $Utils.Optional<LiveryGroupByOutputType>[]
          }
          count: {
            args: Prisma.LiveryCountArgs<ExtArgs>
            result: $Utils.Optional<LiveryCountAggregateOutputType> | number
          }
        }
      }
      LiveryImage: {
        payload: Prisma.$LiveryImagePayload<ExtArgs>
        fields: Prisma.LiveryImageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LiveryImageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LiveryImageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload>
          }
          findFirst: {
            args: Prisma.LiveryImageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LiveryImageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload>
          }
          findMany: {
            args: Prisma.LiveryImageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload>[]
          }
          create: {
            args: Prisma.LiveryImageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload>
          }
          createMany: {
            args: Prisma.LiveryImageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LiveryImageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload>[]
          }
          delete: {
            args: Prisma.LiveryImageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload>
          }
          update: {
            args: Prisma.LiveryImageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload>
          }
          deleteMany: {
            args: Prisma.LiveryImageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LiveryImageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LiveryImageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload>[]
          }
          upsert: {
            args: Prisma.LiveryImageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryImagePayload>
          }
          aggregate: {
            args: Prisma.LiveryImageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLiveryImage>
          }
          groupBy: {
            args: Prisma.LiveryImageGroupByArgs<ExtArgs>
            result: $Utils.Optional<LiveryImageGroupByOutputType>[]
          }
          count: {
            args: Prisma.LiveryImageCountArgs<ExtArgs>
            result: $Utils.Optional<LiveryImageCountAggregateOutputType> | number
          }
        }
      }
      LiveryFile: {
        payload: Prisma.$LiveryFilePayload<ExtArgs>
        fields: Prisma.LiveryFileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LiveryFileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LiveryFileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload>
          }
          findFirst: {
            args: Prisma.LiveryFileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LiveryFileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload>
          }
          findMany: {
            args: Prisma.LiveryFileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload>[]
          }
          create: {
            args: Prisma.LiveryFileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload>
          }
          createMany: {
            args: Prisma.LiveryFileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LiveryFileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload>[]
          }
          delete: {
            args: Prisma.LiveryFileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload>
          }
          update: {
            args: Prisma.LiveryFileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload>
          }
          deleteMany: {
            args: Prisma.LiveryFileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LiveryFileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LiveryFileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload>[]
          }
          upsert: {
            args: Prisma.LiveryFileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LiveryFilePayload>
          }
          aggregate: {
            args: Prisma.LiveryFileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLiveryFile>
          }
          groupBy: {
            args: Prisma.LiveryFileGroupByArgs<ExtArgs>
            result: $Utils.Optional<LiveryFileGroupByOutputType>[]
          }
          count: {
            args: Prisma.LiveryFileCountArgs<ExtArgs>
            result: $Utils.Optional<LiveryFileCountAggregateOutputType> | number
          }
        }
      }
      VirtualAirline: {
        payload: Prisma.$VirtualAirlinePayload<ExtArgs>
        fields: Prisma.VirtualAirlineFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VirtualAirlineFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VirtualAirlineFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload>
          }
          findFirst: {
            args: Prisma.VirtualAirlineFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VirtualAirlineFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload>
          }
          findMany: {
            args: Prisma.VirtualAirlineFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload>[]
          }
          create: {
            args: Prisma.VirtualAirlineCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload>
          }
          createMany: {
            args: Prisma.VirtualAirlineCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VirtualAirlineCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload>[]
          }
          delete: {
            args: Prisma.VirtualAirlineDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload>
          }
          update: {
            args: Prisma.VirtualAirlineUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload>
          }
          deleteMany: {
            args: Prisma.VirtualAirlineDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VirtualAirlineUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VirtualAirlineUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload>[]
          }
          upsert: {
            args: Prisma.VirtualAirlineUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlinePayload>
          }
          aggregate: {
            args: Prisma.VirtualAirlineAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVirtualAirline>
          }
          groupBy: {
            args: Prisma.VirtualAirlineGroupByArgs<ExtArgs>
            result: $Utils.Optional<VirtualAirlineGroupByOutputType>[]
          }
          count: {
            args: Prisma.VirtualAirlineCountArgs<ExtArgs>
            result: $Utils.Optional<VirtualAirlineCountAggregateOutputType> | number
          }
        }
      }
      VirtualAirlineRole: {
        payload: Prisma.$VirtualAirlineRolePayload<ExtArgs>
        fields: Prisma.VirtualAirlineRoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VirtualAirlineRoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VirtualAirlineRoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload>
          }
          findFirst: {
            args: Prisma.VirtualAirlineRoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VirtualAirlineRoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload>
          }
          findMany: {
            args: Prisma.VirtualAirlineRoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload>[]
          }
          create: {
            args: Prisma.VirtualAirlineRoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload>
          }
          createMany: {
            args: Prisma.VirtualAirlineRoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VirtualAirlineRoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload>[]
          }
          delete: {
            args: Prisma.VirtualAirlineRoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload>
          }
          update: {
            args: Prisma.VirtualAirlineRoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload>
          }
          deleteMany: {
            args: Prisma.VirtualAirlineRoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VirtualAirlineRoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VirtualAirlineRoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload>[]
          }
          upsert: {
            args: Prisma.VirtualAirlineRoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualAirlineRolePayload>
          }
          aggregate: {
            args: Prisma.VirtualAirlineRoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVirtualAirlineRole>
          }
          groupBy: {
            args: Prisma.VirtualAirlineRoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<VirtualAirlineRoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.VirtualAirlineRoleCountArgs<ExtArgs>
            result: $Utils.Optional<VirtualAirlineRoleCountAggregateOutputType> | number
          }
        }
      }
      World: {
        payload: Prisma.$WorldPayload<ExtArgs>
        fields: Prisma.WorldFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WorldFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WorldFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload>
          }
          findFirst: {
            args: Prisma.WorldFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WorldFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload>
          }
          findMany: {
            args: Prisma.WorldFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload>[]
          }
          create: {
            args: Prisma.WorldCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload>
          }
          createMany: {
            args: Prisma.WorldCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WorldCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload>[]
          }
          delete: {
            args: Prisma.WorldDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload>
          }
          update: {
            args: Prisma.WorldUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload>
          }
          deleteMany: {
            args: Prisma.WorldDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WorldUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.WorldUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload>[]
          }
          upsert: {
            args: Prisma.WorldUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorldPayload>
          }
          aggregate: {
            args: Prisma.WorldAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWorld>
          }
          groupBy: {
            args: Prisma.WorldGroupByArgs<ExtArgs>
            result: $Utils.Optional<WorldGroupByOutputType>[]
          }
          count: {
            args: Prisma.WorldCountArgs<ExtArgs>
            result: $Utils.Optional<WorldCountAggregateOutputType> | number
          }
        }
      }
      Member: {
        payload: Prisma.$MemberPayload<ExtArgs>
        fields: Prisma.MemberFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MemberFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MemberFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          findFirst: {
            args: Prisma.MemberFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MemberFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          findMany: {
            args: Prisma.MemberFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>[]
          }
          create: {
            args: Prisma.MemberCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          createMany: {
            args: Prisma.MemberCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MemberCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>[]
          }
          delete: {
            args: Prisma.MemberDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          update: {
            args: Prisma.MemberUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          deleteMany: {
            args: Prisma.MemberDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MemberUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MemberUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>[]
          }
          upsert: {
            args: Prisma.MemberUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          aggregate: {
            args: Prisma.MemberAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMember>
          }
          groupBy: {
            args: Prisma.MemberGroupByArgs<ExtArgs>
            result: $Utils.Optional<MemberGroupByOutputType>[]
          }
          count: {
            args: Prisma.MemberCountArgs<ExtArgs>
            result: $Utils.Optional<MemberCountAggregateOutputType> | number
          }
        }
      }
      Company: {
        payload: Prisma.$CompanyPayload<ExtArgs>
        fields: Prisma.CompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findFirst: {
            args: Prisma.CompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findMany: {
            args: Prisma.CompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          create: {
            args: Prisma.CompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          createMany: {
            args: Prisma.CompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CompanyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          delete: {
            args: Prisma.CompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          update: {
            args: Prisma.CompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          deleteMany: {
            args: Prisma.CompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CompanyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          upsert: {
            args: Prisma.CompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.CompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      Aircraft: {
        payload: Prisma.$AircraftPayload<ExtArgs>
        fields: Prisma.AircraftFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AircraftFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AircraftFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload>
          }
          findFirst: {
            args: Prisma.AircraftFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AircraftFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload>
          }
          findMany: {
            args: Prisma.AircraftFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload>[]
          }
          create: {
            args: Prisma.AircraftCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload>
          }
          createMany: {
            args: Prisma.AircraftCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AircraftCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload>[]
          }
          delete: {
            args: Prisma.AircraftDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload>
          }
          update: {
            args: Prisma.AircraftUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload>
          }
          deleteMany: {
            args: Prisma.AircraftDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AircraftUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AircraftUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload>[]
          }
          upsert: {
            args: Prisma.AircraftUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftPayload>
          }
          aggregate: {
            args: Prisma.AircraftAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAircraft>
          }
          groupBy: {
            args: Prisma.AircraftGroupByArgs<ExtArgs>
            result: $Utils.Optional<AircraftGroupByOutputType>[]
          }
          count: {
            args: Prisma.AircraftCountArgs<ExtArgs>
            result: $Utils.Optional<AircraftCountAggregateOutputType> | number
          }
        }
      }
      AircraftClass: {
        payload: Prisma.$AircraftClassPayload<ExtArgs>
        fields: Prisma.AircraftClassFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AircraftClassFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AircraftClassFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload>
          }
          findFirst: {
            args: Prisma.AircraftClassFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AircraftClassFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload>
          }
          findMany: {
            args: Prisma.AircraftClassFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload>[]
          }
          create: {
            args: Prisma.AircraftClassCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload>
          }
          createMany: {
            args: Prisma.AircraftClassCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AircraftClassCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload>[]
          }
          delete: {
            args: Prisma.AircraftClassDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload>
          }
          update: {
            args: Prisma.AircraftClassUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload>
          }
          deleteMany: {
            args: Prisma.AircraftClassDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AircraftClassUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AircraftClassUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload>[]
          }
          upsert: {
            args: Prisma.AircraftClassUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftClassPayload>
          }
          aggregate: {
            args: Prisma.AircraftClassAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAircraftClass>
          }
          groupBy: {
            args: Prisma.AircraftClassGroupByArgs<ExtArgs>
            result: $Utils.Optional<AircraftClassGroupByOutputType>[]
          }
          count: {
            args: Prisma.AircraftClassCountArgs<ExtArgs>
            result: $Utils.Optional<AircraftClassCountAggregateOutputType> | number
          }
        }
      }
      AircraftMaintenance: {
        payload: Prisma.$AircraftMaintenancePayload<ExtArgs>
        fields: Prisma.AircraftMaintenanceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AircraftMaintenanceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AircraftMaintenanceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload>
          }
          findFirst: {
            args: Prisma.AircraftMaintenanceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AircraftMaintenanceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload>
          }
          findMany: {
            args: Prisma.AircraftMaintenanceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload>[]
          }
          create: {
            args: Prisma.AircraftMaintenanceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload>
          }
          createMany: {
            args: Prisma.AircraftMaintenanceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AircraftMaintenanceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload>[]
          }
          delete: {
            args: Prisma.AircraftMaintenanceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload>
          }
          update: {
            args: Prisma.AircraftMaintenanceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload>
          }
          deleteMany: {
            args: Prisma.AircraftMaintenanceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AircraftMaintenanceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AircraftMaintenanceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload>[]
          }
          upsert: {
            args: Prisma.AircraftMaintenanceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftMaintenancePayload>
          }
          aggregate: {
            args: Prisma.AircraftMaintenanceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAircraftMaintenance>
          }
          groupBy: {
            args: Prisma.AircraftMaintenanceGroupByArgs<ExtArgs>
            result: $Utils.Optional<AircraftMaintenanceGroupByOutputType>[]
          }
          count: {
            args: Prisma.AircraftMaintenanceCountArgs<ExtArgs>
            result: $Utils.Optional<AircraftMaintenanceCountAggregateOutputType> | number
          }
        }
      }
      AircraftStatus: {
        payload: Prisma.$AircraftStatusPayload<ExtArgs>
        fields: Prisma.AircraftStatusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AircraftStatusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AircraftStatusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload>
          }
          findFirst: {
            args: Prisma.AircraftStatusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AircraftStatusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload>
          }
          findMany: {
            args: Prisma.AircraftStatusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload>[]
          }
          create: {
            args: Prisma.AircraftStatusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload>
          }
          createMany: {
            args: Prisma.AircraftStatusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AircraftStatusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload>[]
          }
          delete: {
            args: Prisma.AircraftStatusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload>
          }
          update: {
            args: Prisma.AircraftStatusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload>
          }
          deleteMany: {
            args: Prisma.AircraftStatusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AircraftStatusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AircraftStatusUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload>[]
          }
          upsert: {
            args: Prisma.AircraftStatusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AircraftStatusPayload>
          }
          aggregate: {
            args: Prisma.AircraftStatusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAircraftStatus>
          }
          groupBy: {
            args: Prisma.AircraftStatusGroupByArgs<ExtArgs>
            result: $Utils.Optional<AircraftStatusGroupByOutputType>[]
          }
          count: {
            args: Prisma.AircraftStatusCountArgs<ExtArgs>
            result: $Utils.Optional<AircraftStatusCountAggregateOutputType> | number
          }
        }
      }
      Airport: {
        payload: Prisma.$AirportPayload<ExtArgs>
        fields: Prisma.AirportFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AirportFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AirportFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload>
          }
          findFirst: {
            args: Prisma.AirportFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AirportFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload>
          }
          findMany: {
            args: Prisma.AirportFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload>[]
          }
          create: {
            args: Prisma.AirportCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload>
          }
          createMany: {
            args: Prisma.AirportCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AirportCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload>[]
          }
          delete: {
            args: Prisma.AirportDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload>
          }
          update: {
            args: Prisma.AirportUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload>
          }
          deleteMany: {
            args: Prisma.AirportDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AirportUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AirportUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload>[]
          }
          upsert: {
            args: Prisma.AirportUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AirportPayload>
          }
          aggregate: {
            args: Prisma.AirportAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAirport>
          }
          groupBy: {
            args: Prisma.AirportGroupByArgs<ExtArgs>
            result: $Utils.Optional<AirportGroupByOutputType>[]
          }
          count: {
            args: Prisma.AirportCountArgs<ExtArgs>
            result: $Utils.Optional<AirportCountAggregateOutputType> | number
          }
        }
      }
      Flight: {
        payload: Prisma.$FlightPayload<ExtArgs>
        fields: Prisma.FlightFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FlightFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FlightFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload>
          }
          findFirst: {
            args: Prisma.FlightFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FlightFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload>
          }
          findMany: {
            args: Prisma.FlightFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload>[]
          }
          create: {
            args: Prisma.FlightCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload>
          }
          createMany: {
            args: Prisma.FlightCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FlightCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload>[]
          }
          delete: {
            args: Prisma.FlightDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload>
          }
          update: {
            args: Prisma.FlightUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload>
          }
          deleteMany: {
            args: Prisma.FlightDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FlightUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FlightUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload>[]
          }
          upsert: {
            args: Prisma.FlightUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightPayload>
          }
          aggregate: {
            args: Prisma.FlightAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFlight>
          }
          groupBy: {
            args: Prisma.FlightGroupByArgs<ExtArgs>
            result: $Utils.Optional<FlightGroupByOutputType>[]
          }
          count: {
            args: Prisma.FlightCountArgs<ExtArgs>
            result: $Utils.Optional<FlightCountAggregateOutputType> | number
          }
        }
      }
      FlightRoute: {
        payload: Prisma.$FlightRoutePayload<ExtArgs>
        fields: Prisma.FlightRouteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FlightRouteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FlightRouteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload>
          }
          findFirst: {
            args: Prisma.FlightRouteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FlightRouteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload>
          }
          findMany: {
            args: Prisma.FlightRouteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload>[]
          }
          create: {
            args: Prisma.FlightRouteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload>
          }
          createMany: {
            args: Prisma.FlightRouteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FlightRouteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload>[]
          }
          delete: {
            args: Prisma.FlightRouteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload>
          }
          update: {
            args: Prisma.FlightRouteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload>
          }
          deleteMany: {
            args: Prisma.FlightRouteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FlightRouteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FlightRouteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload>[]
          }
          upsert: {
            args: Prisma.FlightRouteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlightRoutePayload>
          }
          aggregate: {
            args: Prisma.FlightRouteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFlightRoute>
          }
          groupBy: {
            args: Prisma.FlightRouteGroupByArgs<ExtArgs>
            result: $Utils.Optional<FlightRouteGroupByOutputType>[]
          }
          count: {
            args: Prisma.FlightRouteCountArgs<ExtArgs>
            result: $Utils.Optional<FlightRouteCountAggregateOutputType> | number
          }
        }
      }
      Job: {
        payload: Prisma.$JobPayload<ExtArgs>
        fields: Prisma.JobFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          findFirst: {
            args: Prisma.JobFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          findMany: {
            args: Prisma.JobFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>[]
          }
          create: {
            args: Prisma.JobCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          createMany: {
            args: Prisma.JobCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>[]
          }
          delete: {
            args: Prisma.JobDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          update: {
            args: Prisma.JobUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          deleteMany: {
            args: Prisma.JobDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.JobUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>[]
          }
          upsert: {
            args: Prisma.JobUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobPayload>
          }
          aggregate: {
            args: Prisma.JobAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJob>
          }
          groupBy: {
            args: Prisma.JobGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobCountArgs<ExtArgs>
            result: $Utils.Optional<JobCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    appConfig?: AppConfigOmit
    inviteCode?: InviteCodeOmit
    discordMessage?: DiscordMessageOmit
    discordMessageTemplate?: DiscordMessageTemplateOmit
    discordChannelWebhook?: DiscordChannelWebhookOmit
    listenerEvent?: ListenerEventOmit
    listenerEventSender?: ListenerEventSenderOmit
    user?: UserOmit
    userPrivacySettings?: UserPrivacySettingsOmit
    role?: RoleOmit
    permission?: PermissionOmit
    livery?: LiveryOmit
    liveryImage?: LiveryImageOmit
    liveryFile?: LiveryFileOmit
    virtualAirline?: VirtualAirlineOmit
    virtualAirlineRole?: VirtualAirlineRoleOmit
    world?: WorldOmit
    member?: MemberOmit
    company?: CompanyOmit
    aircraft?: AircraftOmit
    aircraftClass?: AircraftClassOmit
    aircraftMaintenance?: AircraftMaintenanceOmit
    aircraftStatus?: AircraftStatusOmit
    airport?: AirportOmit
    flight?: FlightOmit
    flightRoute?: FlightRouteOmit
    job?: JobOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type DiscordMessageCountOutputType
   */

  export type DiscordMessageCountOutputType = {
    ListenerEvents: number
  }

  export type DiscordMessageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListenerEvents?: boolean | DiscordMessageCountOutputTypeCountListenerEventsArgs
  }

  // Custom InputTypes
  /**
   * DiscordMessageCountOutputType without action
   */
  export type DiscordMessageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageCountOutputType
     */
    select?: DiscordMessageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DiscordMessageCountOutputType without action
   */
  export type DiscordMessageCountOutputTypeCountListenerEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListenerEventWhereInput
  }


  /**
   * Count Type DiscordMessageTemplateCountOutputType
   */

  export type DiscordMessageTemplateCountOutputType = {
    DiscordMessages: number
  }

  export type DiscordMessageTemplateCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordMessages?: boolean | DiscordMessageTemplateCountOutputTypeCountDiscordMessagesArgs
  }

  // Custom InputTypes
  /**
   * DiscordMessageTemplateCountOutputType without action
   */
  export type DiscordMessageTemplateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplateCountOutputType
     */
    select?: DiscordMessageTemplateCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DiscordMessageTemplateCountOutputType without action
   */
  export type DiscordMessageTemplateCountOutputTypeCountDiscordMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscordMessageWhereInput
  }


  /**
   * Count Type DiscordChannelWebhookCountOutputType
   */

  export type DiscordChannelWebhookCountOutputType = {
    DiscordMessages: number
    ListenerEventSenders: number
  }

  export type DiscordChannelWebhookCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordMessages?: boolean | DiscordChannelWebhookCountOutputTypeCountDiscordMessagesArgs
    ListenerEventSenders?: boolean | DiscordChannelWebhookCountOutputTypeCountListenerEventSendersArgs
  }

  // Custom InputTypes
  /**
   * DiscordChannelWebhookCountOutputType without action
   */
  export type DiscordChannelWebhookCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhookCountOutputType
     */
    select?: DiscordChannelWebhookCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DiscordChannelWebhookCountOutputType without action
   */
  export type DiscordChannelWebhookCountOutputTypeCountDiscordMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscordMessageWhereInput
  }

  /**
   * DiscordChannelWebhookCountOutputType without action
   */
  export type DiscordChannelWebhookCountOutputTypeCountListenerEventSendersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListenerEventSenderWhereInput
  }


  /**
   * Count Type ListenerEventSenderCountOutputType
   */

  export type ListenerEventSenderCountOutputType = {
    ListenerEvents: number
  }

  export type ListenerEventSenderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListenerEvents?: boolean | ListenerEventSenderCountOutputTypeCountListenerEventsArgs
  }

  // Custom InputTypes
  /**
   * ListenerEventSenderCountOutputType without action
   */
  export type ListenerEventSenderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSenderCountOutputType
     */
    select?: ListenerEventSenderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ListenerEventSenderCountOutputType without action
   */
  export type ListenerEventSenderCountOutputTypeCountListenerEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListenerEventWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    Roles: number
    PrivacySettings: number
    Members: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Roles?: boolean | UserCountOutputTypeCountRolesArgs
    PrivacySettings?: boolean | UserCountOutputTypeCountPrivacySettingsArgs
    Members?: boolean | UserCountOutputTypeCountMembersArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPrivacySettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserPrivacySettingsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MemberWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    Permissions: number
    Users: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Permissions?: boolean | RoleCountOutputTypeCountPermissionsArgs
    Users?: boolean | RoleCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type PermissionCountOutputType
   */

  export type PermissionCountOutputType = {
    Roles: number
  }

  export type PermissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Roles?: boolean | PermissionCountOutputTypeCountRolesArgs
  }

  // Custom InputTypes
  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionCountOutputType
     */
    select?: PermissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }


  /**
   * Count Type LiveryCountOutputType
   */

  export type LiveryCountOutputType = {
    Images: number
    Files: number
  }

  export type LiveryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Images?: boolean | LiveryCountOutputTypeCountImagesArgs
    Files?: boolean | LiveryCountOutputTypeCountFilesArgs
  }

  // Custom InputTypes
  /**
   * LiveryCountOutputType without action
   */
  export type LiveryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryCountOutputType
     */
    select?: LiveryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LiveryCountOutputType without action
   */
  export type LiveryCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LiveryImageWhereInput
  }

  /**
   * LiveryCountOutputType without action
   */
  export type LiveryCountOutputTypeCountFilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LiveryFileWhereInput
  }


  /**
   * Count Type VirtualAirlineCountOutputType
   */

  export type VirtualAirlineCountOutputType = {
    VARoles: number
    Members: number
    Fleet: number
    Flights: number
  }

  export type VirtualAirlineCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    VARoles?: boolean | VirtualAirlineCountOutputTypeCountVARolesArgs
    Members?: boolean | VirtualAirlineCountOutputTypeCountMembersArgs
    Fleet?: boolean | VirtualAirlineCountOutputTypeCountFleetArgs
    Flights?: boolean | VirtualAirlineCountOutputTypeCountFlightsArgs
  }

  // Custom InputTypes
  /**
   * VirtualAirlineCountOutputType without action
   */
  export type VirtualAirlineCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineCountOutputType
     */
    select?: VirtualAirlineCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VirtualAirlineCountOutputType without action
   */
  export type VirtualAirlineCountOutputTypeCountVARolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VirtualAirlineRoleWhereInput
  }

  /**
   * VirtualAirlineCountOutputType without action
   */
  export type VirtualAirlineCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MemberWhereInput
  }

  /**
   * VirtualAirlineCountOutputType without action
   */
  export type VirtualAirlineCountOutputTypeCountFleetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AircraftWhereInput
  }

  /**
   * VirtualAirlineCountOutputType without action
   */
  export type VirtualAirlineCountOutputTypeCountFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightWhereInput
  }


  /**
   * Count Type VirtualAirlineRoleCountOutputType
   */

  export type VirtualAirlineRoleCountOutputType = {
    Members: number
  }

  export type VirtualAirlineRoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Members?: boolean | VirtualAirlineRoleCountOutputTypeCountMembersArgs
  }

  // Custom InputTypes
  /**
   * VirtualAirlineRoleCountOutputType without action
   */
  export type VirtualAirlineRoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRoleCountOutputType
     */
    select?: VirtualAirlineRoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VirtualAirlineRoleCountOutputType without action
   */
  export type VirtualAirlineRoleCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MemberWhereInput
  }


  /**
   * Count Type WorldCountOutputType
   */

  export type WorldCountOutputType = {
    VirtualAirlines: number
    Companies: number
  }

  export type WorldCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    VirtualAirlines?: boolean | WorldCountOutputTypeCountVirtualAirlinesArgs
    Companies?: boolean | WorldCountOutputTypeCountCompaniesArgs
  }

  // Custom InputTypes
  /**
   * WorldCountOutputType without action
   */
  export type WorldCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorldCountOutputType
     */
    select?: WorldCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * WorldCountOutputType without action
   */
  export type WorldCountOutputTypeCountVirtualAirlinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VirtualAirlineWhereInput
  }

  /**
   * WorldCountOutputType without action
   */
  export type WorldCountOutputTypeCountCompaniesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
  }


  /**
   * Count Type MemberCountOutputType
   */

  export type MemberCountOutputType = {
    Flights: number
    FlightRoutes: number
  }

  export type MemberCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Flights?: boolean | MemberCountOutputTypeCountFlightsArgs
    FlightRoutes?: boolean | MemberCountOutputTypeCountFlightRoutesArgs
  }

  // Custom InputTypes
  /**
   * MemberCountOutputType without action
   */
  export type MemberCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MemberCountOutputType
     */
    select?: MemberCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MemberCountOutputType without action
   */
  export type MemberCountOutputTypeCountFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightWhereInput
  }

  /**
   * MemberCountOutputType without action
   */
  export type MemberCountOutputTypeCountFlightRoutesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightRouteWhereInput
  }


  /**
   * Count Type CompanyCountOutputType
   */

  export type CompanyCountOutputType = {
    Flights: number
  }

  export type CompanyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Flights?: boolean | CompanyCountOutputTypeCountFlightsArgs
  }

  // Custom InputTypes
  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyCountOutputType
     */
    select?: CompanyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightWhereInput
  }


  /**
   * Count Type AircraftCountOutputType
   */

  export type AircraftCountOutputType = {
    AircraftMaintenance: number
    Flights: number
    Liveries: number
  }

  export type AircraftCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AircraftMaintenance?: boolean | AircraftCountOutputTypeCountAircraftMaintenanceArgs
    Flights?: boolean | AircraftCountOutputTypeCountFlightsArgs
    Liveries?: boolean | AircraftCountOutputTypeCountLiveriesArgs
  }

  // Custom InputTypes
  /**
   * AircraftCountOutputType without action
   */
  export type AircraftCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftCountOutputType
     */
    select?: AircraftCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AircraftCountOutputType without action
   */
  export type AircraftCountOutputTypeCountAircraftMaintenanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AircraftMaintenanceWhereInput
  }

  /**
   * AircraftCountOutputType without action
   */
  export type AircraftCountOutputTypeCountFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightWhereInput
  }

  /**
   * AircraftCountOutputType without action
   */
  export type AircraftCountOutputTypeCountLiveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LiveryWhereInput
  }


  /**
   * Count Type AircraftClassCountOutputType
   */

  export type AircraftClassCountOutputType = {
    Aircrafts: number
  }

  export type AircraftClassCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Aircrafts?: boolean | AircraftClassCountOutputTypeCountAircraftsArgs
  }

  // Custom InputTypes
  /**
   * AircraftClassCountOutputType without action
   */
  export type AircraftClassCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClassCountOutputType
     */
    select?: AircraftClassCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AircraftClassCountOutputType without action
   */
  export type AircraftClassCountOutputTypeCountAircraftsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AircraftWhereInput
  }


  /**
   * Count Type AircraftStatusCountOutputType
   */

  export type AircraftStatusCountOutputType = {
    Aircrafts: number
  }

  export type AircraftStatusCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Aircrafts?: boolean | AircraftStatusCountOutputTypeCountAircraftsArgs
  }

  // Custom InputTypes
  /**
   * AircraftStatusCountOutputType without action
   */
  export type AircraftStatusCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatusCountOutputType
     */
    select?: AircraftStatusCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AircraftStatusCountOutputType without action
   */
  export type AircraftStatusCountOutputTypeCountAircraftsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AircraftWhereInput
  }


  /**
   * Count Type AirportCountOutputType
   */

  export type AirportCountOutputType = {
    AircraftAtAirport: number
    DepartingFlights: number
    ArrivingFlights: number
    ArrivingAlternateFlights: number
    ArrivingActualFlights: number
  }

  export type AirportCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AircraftAtAirport?: boolean | AirportCountOutputTypeCountAircraftAtAirportArgs
    DepartingFlights?: boolean | AirportCountOutputTypeCountDepartingFlightsArgs
    ArrivingFlights?: boolean | AirportCountOutputTypeCountArrivingFlightsArgs
    ArrivingAlternateFlights?: boolean | AirportCountOutputTypeCountArrivingAlternateFlightsArgs
    ArrivingActualFlights?: boolean | AirportCountOutputTypeCountArrivingActualFlightsArgs
  }

  // Custom InputTypes
  /**
   * AirportCountOutputType without action
   */
  export type AirportCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AirportCountOutputType
     */
    select?: AirportCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AirportCountOutputType without action
   */
  export type AirportCountOutputTypeCountAircraftAtAirportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AircraftWhereInput
  }

  /**
   * AirportCountOutputType without action
   */
  export type AirportCountOutputTypeCountDepartingFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightWhereInput
  }

  /**
   * AirportCountOutputType without action
   */
  export type AirportCountOutputTypeCountArrivingFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightWhereInput
  }

  /**
   * AirportCountOutputType without action
   */
  export type AirportCountOutputTypeCountArrivingAlternateFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightWhereInput
  }

  /**
   * AirportCountOutputType without action
   */
  export type AirportCountOutputTypeCountArrivingActualFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightWhereInput
  }


  /**
   * Count Type FlightCountOutputType
   */

  export type FlightCountOutputType = {
    FlightRoute: number
  }

  export type FlightCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    FlightRoute?: boolean | FlightCountOutputTypeCountFlightRouteArgs
  }

  // Custom InputTypes
  /**
   * FlightCountOutputType without action
   */
  export type FlightCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightCountOutputType
     */
    select?: FlightCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FlightCountOutputType without action
   */
  export type FlightCountOutputTypeCountFlightRouteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightRouteWhereInput
  }


  /**
   * Models
   */

  /**
   * Model AppConfig
   */

  export type AggregateAppConfig = {
    _count: AppConfigCountAggregateOutputType | null
    _avg: AppConfigAvgAggregateOutputType | null
    _sum: AppConfigSumAggregateOutputType | null
    _min: AppConfigMinAggregateOutputType | null
    _max: AppConfigMaxAggregateOutputType | null
  }

  export type AppConfigAvgAggregateOutputType = {
    Id: number | null
  }

  export type AppConfigSumAggregateOutputType = {
    Id: number | null
  }

  export type AppConfigMinAggregateOutputType = {
    Id: number | null
    OnAirSyncEnabled: boolean | null
    OnAirVASyncEnabled: boolean | null
    OnAirVAMembersSyncEnabled: boolean | null
    OnAirCompanySyncEnabled: boolean | null
    DiscordServerInviteLink: string | null
    DiscordServerInviteLinkEnabled: boolean | null
    AcceptingNewMembers: boolean | null
    DiscordAuthEnabled: boolean | null
    DiscordAuthCreateUser: boolean | null
    LocalAuthEnabled: boolean | null
    VirtualAirlineInitiated: boolean | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AppConfigMaxAggregateOutputType = {
    Id: number | null
    OnAirSyncEnabled: boolean | null
    OnAirVASyncEnabled: boolean | null
    OnAirVAMembersSyncEnabled: boolean | null
    OnAirCompanySyncEnabled: boolean | null
    DiscordServerInviteLink: string | null
    DiscordServerInviteLinkEnabled: boolean | null
    AcceptingNewMembers: boolean | null
    DiscordAuthEnabled: boolean | null
    DiscordAuthCreateUser: boolean | null
    LocalAuthEnabled: boolean | null
    VirtualAirlineInitiated: boolean | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AppConfigCountAggregateOutputType = {
    Id: number
    OnAirSyncEnabled: number
    OnAirVASyncEnabled: number
    OnAirVAMembersSyncEnabled: number
    OnAirCompanySyncEnabled: number
    DiscordServerInviteLink: number
    DiscordServerInviteLinkEnabled: number
    AcceptingNewMembers: number
    DiscordAuthEnabled: number
    DiscordAuthCreateUser: number
    LocalAuthEnabled: number
    VirtualAirlineInitiated: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type AppConfigAvgAggregateInputType = {
    Id?: true
  }

  export type AppConfigSumAggregateInputType = {
    Id?: true
  }

  export type AppConfigMinAggregateInputType = {
    Id?: true
    OnAirSyncEnabled?: true
    OnAirVASyncEnabled?: true
    OnAirVAMembersSyncEnabled?: true
    OnAirCompanySyncEnabled?: true
    DiscordServerInviteLink?: true
    DiscordServerInviteLinkEnabled?: true
    AcceptingNewMembers?: true
    DiscordAuthEnabled?: true
    DiscordAuthCreateUser?: true
    LocalAuthEnabled?: true
    VirtualAirlineInitiated?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AppConfigMaxAggregateInputType = {
    Id?: true
    OnAirSyncEnabled?: true
    OnAirVASyncEnabled?: true
    OnAirVAMembersSyncEnabled?: true
    OnAirCompanySyncEnabled?: true
    DiscordServerInviteLink?: true
    DiscordServerInviteLinkEnabled?: true
    AcceptingNewMembers?: true
    DiscordAuthEnabled?: true
    DiscordAuthCreateUser?: true
    LocalAuthEnabled?: true
    VirtualAirlineInitiated?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AppConfigCountAggregateInputType = {
    Id?: true
    OnAirSyncEnabled?: true
    OnAirVASyncEnabled?: true
    OnAirVAMembersSyncEnabled?: true
    OnAirCompanySyncEnabled?: true
    DiscordServerInviteLink?: true
    DiscordServerInviteLinkEnabled?: true
    AcceptingNewMembers?: true
    DiscordAuthEnabled?: true
    DiscordAuthCreateUser?: true
    LocalAuthEnabled?: true
    VirtualAirlineInitiated?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type AppConfigAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AppConfig to aggregate.
     */
    where?: AppConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppConfigs to fetch.
     */
    orderBy?: AppConfigOrderByWithRelationInput | AppConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AppConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AppConfigs
    **/
    _count?: true | AppConfigCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AppConfigAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AppConfigSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AppConfigMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AppConfigMaxAggregateInputType
  }

  export type GetAppConfigAggregateType<T extends AppConfigAggregateArgs> = {
        [P in keyof T & keyof AggregateAppConfig]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAppConfig[P]>
      : GetScalarType<T[P], AggregateAppConfig[P]>
  }




  export type AppConfigGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppConfigWhereInput
    orderBy?: AppConfigOrderByWithAggregationInput | AppConfigOrderByWithAggregationInput[]
    by: AppConfigScalarFieldEnum[] | AppConfigScalarFieldEnum
    having?: AppConfigScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AppConfigCountAggregateInputType | true
    _avg?: AppConfigAvgAggregateInputType
    _sum?: AppConfigSumAggregateInputType
    _min?: AppConfigMinAggregateInputType
    _max?: AppConfigMaxAggregateInputType
  }

  export type AppConfigGroupByOutputType = {
    Id: number
    OnAirSyncEnabled: boolean
    OnAirVASyncEnabled: boolean
    OnAirVAMembersSyncEnabled: boolean
    OnAirCompanySyncEnabled: boolean
    DiscordServerInviteLink: string | null
    DiscordServerInviteLinkEnabled: boolean
    AcceptingNewMembers: boolean
    DiscordAuthEnabled: boolean
    DiscordAuthCreateUser: boolean
    LocalAuthEnabled: boolean
    VirtualAirlineInitiated: boolean
    CreatedAt: Date
    UpdatedAt: Date
    _count: AppConfigCountAggregateOutputType | null
    _avg: AppConfigAvgAggregateOutputType | null
    _sum: AppConfigSumAggregateOutputType | null
    _min: AppConfigMinAggregateOutputType | null
    _max: AppConfigMaxAggregateOutputType | null
  }

  type GetAppConfigGroupByPayload<T extends AppConfigGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AppConfigGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AppConfigGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AppConfigGroupByOutputType[P]>
            : GetScalarType<T[P], AppConfigGroupByOutputType[P]>
        }
      >
    >


  export type AppConfigSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    OnAirSyncEnabled?: boolean
    OnAirVASyncEnabled?: boolean
    OnAirVAMembersSyncEnabled?: boolean
    OnAirCompanySyncEnabled?: boolean
    DiscordServerInviteLink?: boolean
    DiscordServerInviteLinkEnabled?: boolean
    AcceptingNewMembers?: boolean
    DiscordAuthEnabled?: boolean
    DiscordAuthCreateUser?: boolean
    LocalAuthEnabled?: boolean
    VirtualAirlineInitiated?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["appConfig"]>

  export type AppConfigSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    OnAirSyncEnabled?: boolean
    OnAirVASyncEnabled?: boolean
    OnAirVAMembersSyncEnabled?: boolean
    OnAirCompanySyncEnabled?: boolean
    DiscordServerInviteLink?: boolean
    DiscordServerInviteLinkEnabled?: boolean
    AcceptingNewMembers?: boolean
    DiscordAuthEnabled?: boolean
    DiscordAuthCreateUser?: boolean
    LocalAuthEnabled?: boolean
    VirtualAirlineInitiated?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["appConfig"]>

  export type AppConfigSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    OnAirSyncEnabled?: boolean
    OnAirVASyncEnabled?: boolean
    OnAirVAMembersSyncEnabled?: boolean
    OnAirCompanySyncEnabled?: boolean
    DiscordServerInviteLink?: boolean
    DiscordServerInviteLinkEnabled?: boolean
    AcceptingNewMembers?: boolean
    DiscordAuthEnabled?: boolean
    DiscordAuthCreateUser?: boolean
    LocalAuthEnabled?: boolean
    VirtualAirlineInitiated?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["appConfig"]>

  export type AppConfigSelectScalar = {
    Id?: boolean
    OnAirSyncEnabled?: boolean
    OnAirVASyncEnabled?: boolean
    OnAirVAMembersSyncEnabled?: boolean
    OnAirCompanySyncEnabled?: boolean
    DiscordServerInviteLink?: boolean
    DiscordServerInviteLinkEnabled?: boolean
    AcceptingNewMembers?: boolean
    DiscordAuthEnabled?: boolean
    DiscordAuthCreateUser?: boolean
    LocalAuthEnabled?: boolean
    VirtualAirlineInitiated?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type AppConfigOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "OnAirSyncEnabled" | "OnAirVASyncEnabled" | "OnAirVAMembersSyncEnabled" | "OnAirCompanySyncEnabled" | "DiscordServerInviteLink" | "DiscordServerInviteLinkEnabled" | "AcceptingNewMembers" | "DiscordAuthEnabled" | "DiscordAuthCreateUser" | "LocalAuthEnabled" | "VirtualAirlineInitiated" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["appConfig"]>

  export type $AppConfigPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AppConfig"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      OnAirSyncEnabled: boolean
      OnAirVASyncEnabled: boolean
      OnAirVAMembersSyncEnabled: boolean
      OnAirCompanySyncEnabled: boolean
      DiscordServerInviteLink: string | null
      DiscordServerInviteLinkEnabled: boolean
      AcceptingNewMembers: boolean
      DiscordAuthEnabled: boolean
      DiscordAuthCreateUser: boolean
      LocalAuthEnabled: boolean
      VirtualAirlineInitiated: boolean
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["appConfig"]>
    composites: {}
  }

  type AppConfigGetPayload<S extends boolean | null | undefined | AppConfigDefaultArgs> = $Result.GetResult<Prisma.$AppConfigPayload, S>

  type AppConfigCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AppConfigFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AppConfigCountAggregateInputType | true
    }

  export interface AppConfigDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AppConfig'], meta: { name: 'AppConfig' } }
    /**
     * Find zero or one AppConfig that matches the filter.
     * @param {AppConfigFindUniqueArgs} args - Arguments to find a AppConfig
     * @example
     * // Get one AppConfig
     * const appConfig = await prisma.appConfig.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AppConfigFindUniqueArgs>(args: SelectSubset<T, AppConfigFindUniqueArgs<ExtArgs>>): Prisma__AppConfigClient<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AppConfig that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AppConfigFindUniqueOrThrowArgs} args - Arguments to find a AppConfig
     * @example
     * // Get one AppConfig
     * const appConfig = await prisma.appConfig.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AppConfigFindUniqueOrThrowArgs>(args: SelectSubset<T, AppConfigFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AppConfigClient<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AppConfig that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppConfigFindFirstArgs} args - Arguments to find a AppConfig
     * @example
     * // Get one AppConfig
     * const appConfig = await prisma.appConfig.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AppConfigFindFirstArgs>(args?: SelectSubset<T, AppConfigFindFirstArgs<ExtArgs>>): Prisma__AppConfigClient<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AppConfig that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppConfigFindFirstOrThrowArgs} args - Arguments to find a AppConfig
     * @example
     * // Get one AppConfig
     * const appConfig = await prisma.appConfig.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AppConfigFindFirstOrThrowArgs>(args?: SelectSubset<T, AppConfigFindFirstOrThrowArgs<ExtArgs>>): Prisma__AppConfigClient<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AppConfigs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppConfigFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AppConfigs
     * const appConfigs = await prisma.appConfig.findMany()
     * 
     * // Get first 10 AppConfigs
     * const appConfigs = await prisma.appConfig.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const appConfigWithIdOnly = await prisma.appConfig.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends AppConfigFindManyArgs>(args?: SelectSubset<T, AppConfigFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AppConfig.
     * @param {AppConfigCreateArgs} args - Arguments to create a AppConfig.
     * @example
     * // Create one AppConfig
     * const AppConfig = await prisma.appConfig.create({
     *   data: {
     *     // ... data to create a AppConfig
     *   }
     * })
     * 
     */
    create<T extends AppConfigCreateArgs>(args: SelectSubset<T, AppConfigCreateArgs<ExtArgs>>): Prisma__AppConfigClient<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AppConfigs.
     * @param {AppConfigCreateManyArgs} args - Arguments to create many AppConfigs.
     * @example
     * // Create many AppConfigs
     * const appConfig = await prisma.appConfig.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AppConfigCreateManyArgs>(args?: SelectSubset<T, AppConfigCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AppConfigs and returns the data saved in the database.
     * @param {AppConfigCreateManyAndReturnArgs} args - Arguments to create many AppConfigs.
     * @example
     * // Create many AppConfigs
     * const appConfig = await prisma.appConfig.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AppConfigs and only return the `Id`
     * const appConfigWithIdOnly = await prisma.appConfig.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AppConfigCreateManyAndReturnArgs>(args?: SelectSubset<T, AppConfigCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AppConfig.
     * @param {AppConfigDeleteArgs} args - Arguments to delete one AppConfig.
     * @example
     * // Delete one AppConfig
     * const AppConfig = await prisma.appConfig.delete({
     *   where: {
     *     // ... filter to delete one AppConfig
     *   }
     * })
     * 
     */
    delete<T extends AppConfigDeleteArgs>(args: SelectSubset<T, AppConfigDeleteArgs<ExtArgs>>): Prisma__AppConfigClient<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AppConfig.
     * @param {AppConfigUpdateArgs} args - Arguments to update one AppConfig.
     * @example
     * // Update one AppConfig
     * const appConfig = await prisma.appConfig.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AppConfigUpdateArgs>(args: SelectSubset<T, AppConfigUpdateArgs<ExtArgs>>): Prisma__AppConfigClient<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AppConfigs.
     * @param {AppConfigDeleteManyArgs} args - Arguments to filter AppConfigs to delete.
     * @example
     * // Delete a few AppConfigs
     * const { count } = await prisma.appConfig.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AppConfigDeleteManyArgs>(args?: SelectSubset<T, AppConfigDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AppConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppConfigUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AppConfigs
     * const appConfig = await prisma.appConfig.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AppConfigUpdateManyArgs>(args: SelectSubset<T, AppConfigUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AppConfigs and returns the data updated in the database.
     * @param {AppConfigUpdateManyAndReturnArgs} args - Arguments to update many AppConfigs.
     * @example
     * // Update many AppConfigs
     * const appConfig = await prisma.appConfig.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AppConfigs and only return the `Id`
     * const appConfigWithIdOnly = await prisma.appConfig.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AppConfigUpdateManyAndReturnArgs>(args: SelectSubset<T, AppConfigUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AppConfig.
     * @param {AppConfigUpsertArgs} args - Arguments to update or create a AppConfig.
     * @example
     * // Update or create a AppConfig
     * const appConfig = await prisma.appConfig.upsert({
     *   create: {
     *     // ... data to create a AppConfig
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AppConfig we want to update
     *   }
     * })
     */
    upsert<T extends AppConfigUpsertArgs>(args: SelectSubset<T, AppConfigUpsertArgs<ExtArgs>>): Prisma__AppConfigClient<$Result.GetResult<Prisma.$AppConfigPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AppConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppConfigCountArgs} args - Arguments to filter AppConfigs to count.
     * @example
     * // Count the number of AppConfigs
     * const count = await prisma.appConfig.count({
     *   where: {
     *     // ... the filter for the AppConfigs we want to count
     *   }
     * })
    **/
    count<T extends AppConfigCountArgs>(
      args?: Subset<T, AppConfigCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AppConfigCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AppConfig.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppConfigAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AppConfigAggregateArgs>(args: Subset<T, AppConfigAggregateArgs>): Prisma.PrismaPromise<GetAppConfigAggregateType<T>>

    /**
     * Group by AppConfig.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppConfigGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AppConfigGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AppConfigGroupByArgs['orderBy'] }
        : { orderBy?: AppConfigGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AppConfigGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAppConfigGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AppConfig model
   */
  readonly fields: AppConfigFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AppConfig.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AppConfigClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AppConfig model
   */
  interface AppConfigFieldRefs {
    readonly Id: FieldRef<"AppConfig", 'Int'>
    readonly OnAirSyncEnabled: FieldRef<"AppConfig", 'Boolean'>
    readonly OnAirVASyncEnabled: FieldRef<"AppConfig", 'Boolean'>
    readonly OnAirVAMembersSyncEnabled: FieldRef<"AppConfig", 'Boolean'>
    readonly OnAirCompanySyncEnabled: FieldRef<"AppConfig", 'Boolean'>
    readonly DiscordServerInviteLink: FieldRef<"AppConfig", 'String'>
    readonly DiscordServerInviteLinkEnabled: FieldRef<"AppConfig", 'Boolean'>
    readonly AcceptingNewMembers: FieldRef<"AppConfig", 'Boolean'>
    readonly DiscordAuthEnabled: FieldRef<"AppConfig", 'Boolean'>
    readonly DiscordAuthCreateUser: FieldRef<"AppConfig", 'Boolean'>
    readonly LocalAuthEnabled: FieldRef<"AppConfig", 'Boolean'>
    readonly VirtualAirlineInitiated: FieldRef<"AppConfig", 'Boolean'>
    readonly CreatedAt: FieldRef<"AppConfig", 'DateTime'>
    readonly UpdatedAt: FieldRef<"AppConfig", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AppConfig findUnique
   */
  export type AppConfigFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * Filter, which AppConfig to fetch.
     */
    where: AppConfigWhereUniqueInput
  }

  /**
   * AppConfig findUniqueOrThrow
   */
  export type AppConfigFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * Filter, which AppConfig to fetch.
     */
    where: AppConfigWhereUniqueInput
  }

  /**
   * AppConfig findFirst
   */
  export type AppConfigFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * Filter, which AppConfig to fetch.
     */
    where?: AppConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppConfigs to fetch.
     */
    orderBy?: AppConfigOrderByWithRelationInput | AppConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AppConfigs.
     */
    cursor?: AppConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AppConfigs.
     */
    distinct?: AppConfigScalarFieldEnum | AppConfigScalarFieldEnum[]
  }

  /**
   * AppConfig findFirstOrThrow
   */
  export type AppConfigFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * Filter, which AppConfig to fetch.
     */
    where?: AppConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppConfigs to fetch.
     */
    orderBy?: AppConfigOrderByWithRelationInput | AppConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AppConfigs.
     */
    cursor?: AppConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AppConfigs.
     */
    distinct?: AppConfigScalarFieldEnum | AppConfigScalarFieldEnum[]
  }

  /**
   * AppConfig findMany
   */
  export type AppConfigFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * Filter, which AppConfigs to fetch.
     */
    where?: AppConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppConfigs to fetch.
     */
    orderBy?: AppConfigOrderByWithRelationInput | AppConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AppConfigs.
     */
    cursor?: AppConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppConfigs.
     */
    skip?: number
    distinct?: AppConfigScalarFieldEnum | AppConfigScalarFieldEnum[]
  }

  /**
   * AppConfig create
   */
  export type AppConfigCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * The data needed to create a AppConfig.
     */
    data?: XOR<AppConfigCreateInput, AppConfigUncheckedCreateInput>
  }

  /**
   * AppConfig createMany
   */
  export type AppConfigCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AppConfigs.
     */
    data: AppConfigCreateManyInput | AppConfigCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AppConfig createManyAndReturn
   */
  export type AppConfigCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * The data used to create many AppConfigs.
     */
    data: AppConfigCreateManyInput | AppConfigCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AppConfig update
   */
  export type AppConfigUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * The data needed to update a AppConfig.
     */
    data: XOR<AppConfigUpdateInput, AppConfigUncheckedUpdateInput>
    /**
     * Choose, which AppConfig to update.
     */
    where: AppConfigWhereUniqueInput
  }

  /**
   * AppConfig updateMany
   */
  export type AppConfigUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AppConfigs.
     */
    data: XOR<AppConfigUpdateManyMutationInput, AppConfigUncheckedUpdateManyInput>
    /**
     * Filter which AppConfigs to update
     */
    where?: AppConfigWhereInput
    /**
     * Limit how many AppConfigs to update.
     */
    limit?: number
  }

  /**
   * AppConfig updateManyAndReturn
   */
  export type AppConfigUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * The data used to update AppConfigs.
     */
    data: XOR<AppConfigUpdateManyMutationInput, AppConfigUncheckedUpdateManyInput>
    /**
     * Filter which AppConfigs to update
     */
    where?: AppConfigWhereInput
    /**
     * Limit how many AppConfigs to update.
     */
    limit?: number
  }

  /**
   * AppConfig upsert
   */
  export type AppConfigUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * The filter to search for the AppConfig to update in case it exists.
     */
    where: AppConfigWhereUniqueInput
    /**
     * In case the AppConfig found by the `where` argument doesn't exist, create a new AppConfig with this data.
     */
    create: XOR<AppConfigCreateInput, AppConfigUncheckedCreateInput>
    /**
     * In case the AppConfig was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AppConfigUpdateInput, AppConfigUncheckedUpdateInput>
  }

  /**
   * AppConfig delete
   */
  export type AppConfigDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
    /**
     * Filter which AppConfig to delete.
     */
    where: AppConfigWhereUniqueInput
  }

  /**
   * AppConfig deleteMany
   */
  export type AppConfigDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AppConfigs to delete
     */
    where?: AppConfigWhereInput
    /**
     * Limit how many AppConfigs to delete.
     */
    limit?: number
  }

  /**
   * AppConfig without action
   */
  export type AppConfigDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppConfig
     */
    select?: AppConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AppConfig
     */
    omit?: AppConfigOmit<ExtArgs> | null
  }


  /**
   * Model InviteCode
   */

  export type AggregateInviteCode = {
    _count: InviteCodeCountAggregateOutputType | null
    _min: InviteCodeMinAggregateOutputType | null
    _max: InviteCodeMaxAggregateOutputType | null
  }

  export type InviteCodeMinAggregateOutputType = {
    Id: string | null
    Code: string | null
    IsUsed: boolean | null
    UsedAt: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type InviteCodeMaxAggregateOutputType = {
    Id: string | null
    Code: string | null
    IsUsed: boolean | null
    UsedAt: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type InviteCodeCountAggregateOutputType = {
    Id: number
    Code: number
    IsUsed: number
    UsedAt: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type InviteCodeMinAggregateInputType = {
    Id?: true
    Code?: true
    IsUsed?: true
    UsedAt?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type InviteCodeMaxAggregateInputType = {
    Id?: true
    Code?: true
    IsUsed?: true
    UsedAt?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type InviteCodeCountAggregateInputType = {
    Id?: true
    Code?: true
    IsUsed?: true
    UsedAt?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type InviteCodeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InviteCode to aggregate.
     */
    where?: InviteCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InviteCodes to fetch.
     */
    orderBy?: InviteCodeOrderByWithRelationInput | InviteCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InviteCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InviteCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InviteCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InviteCodes
    **/
    _count?: true | InviteCodeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InviteCodeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InviteCodeMaxAggregateInputType
  }

  export type GetInviteCodeAggregateType<T extends InviteCodeAggregateArgs> = {
        [P in keyof T & keyof AggregateInviteCode]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInviteCode[P]>
      : GetScalarType<T[P], AggregateInviteCode[P]>
  }




  export type InviteCodeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InviteCodeWhereInput
    orderBy?: InviteCodeOrderByWithAggregationInput | InviteCodeOrderByWithAggregationInput[]
    by: InviteCodeScalarFieldEnum[] | InviteCodeScalarFieldEnum
    having?: InviteCodeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InviteCodeCountAggregateInputType | true
    _min?: InviteCodeMinAggregateInputType
    _max?: InviteCodeMaxAggregateInputType
  }

  export type InviteCodeGroupByOutputType = {
    Id: string
    Code: string
    IsUsed: boolean
    UsedAt: Date | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: InviteCodeCountAggregateOutputType | null
    _min: InviteCodeMinAggregateOutputType | null
    _max: InviteCodeMaxAggregateOutputType | null
  }

  type GetInviteCodeGroupByPayload<T extends InviteCodeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InviteCodeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InviteCodeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InviteCodeGroupByOutputType[P]>
            : GetScalarType<T[P], InviteCodeGroupByOutputType[P]>
        }
      >
    >


  export type InviteCodeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Code?: boolean
    IsUsed?: boolean
    UsedAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    User?: boolean | InviteCode$UserArgs<ExtArgs>
  }, ExtArgs["result"]["inviteCode"]>

  export type InviteCodeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Code?: boolean
    IsUsed?: boolean
    UsedAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["inviteCode"]>

  export type InviteCodeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Code?: boolean
    IsUsed?: boolean
    UsedAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["inviteCode"]>

  export type InviteCodeSelectScalar = {
    Id?: boolean
    Code?: boolean
    IsUsed?: boolean
    UsedAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type InviteCodeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Code" | "IsUsed" | "UsedAt" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["inviteCode"]>
  export type InviteCodeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | InviteCode$UserArgs<ExtArgs>
  }
  export type InviteCodeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type InviteCodeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $InviteCodePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InviteCode"
    objects: {
      User: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      Code: string
      IsUsed: boolean
      UsedAt: Date | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["inviteCode"]>
    composites: {}
  }

  type InviteCodeGetPayload<S extends boolean | null | undefined | InviteCodeDefaultArgs> = $Result.GetResult<Prisma.$InviteCodePayload, S>

  type InviteCodeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InviteCodeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InviteCodeCountAggregateInputType | true
    }

  export interface InviteCodeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InviteCode'], meta: { name: 'InviteCode' } }
    /**
     * Find zero or one InviteCode that matches the filter.
     * @param {InviteCodeFindUniqueArgs} args - Arguments to find a InviteCode
     * @example
     * // Get one InviteCode
     * const inviteCode = await prisma.inviteCode.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InviteCodeFindUniqueArgs>(args: SelectSubset<T, InviteCodeFindUniqueArgs<ExtArgs>>): Prisma__InviteCodeClient<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InviteCode that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InviteCodeFindUniqueOrThrowArgs} args - Arguments to find a InviteCode
     * @example
     * // Get one InviteCode
     * const inviteCode = await prisma.inviteCode.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InviteCodeFindUniqueOrThrowArgs>(args: SelectSubset<T, InviteCodeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InviteCodeClient<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InviteCode that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InviteCodeFindFirstArgs} args - Arguments to find a InviteCode
     * @example
     * // Get one InviteCode
     * const inviteCode = await prisma.inviteCode.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InviteCodeFindFirstArgs>(args?: SelectSubset<T, InviteCodeFindFirstArgs<ExtArgs>>): Prisma__InviteCodeClient<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InviteCode that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InviteCodeFindFirstOrThrowArgs} args - Arguments to find a InviteCode
     * @example
     * // Get one InviteCode
     * const inviteCode = await prisma.inviteCode.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InviteCodeFindFirstOrThrowArgs>(args?: SelectSubset<T, InviteCodeFindFirstOrThrowArgs<ExtArgs>>): Prisma__InviteCodeClient<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InviteCodes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InviteCodeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InviteCodes
     * const inviteCodes = await prisma.inviteCode.findMany()
     * 
     * // Get first 10 InviteCodes
     * const inviteCodes = await prisma.inviteCode.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const inviteCodeWithIdOnly = await prisma.inviteCode.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends InviteCodeFindManyArgs>(args?: SelectSubset<T, InviteCodeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InviteCode.
     * @param {InviteCodeCreateArgs} args - Arguments to create a InviteCode.
     * @example
     * // Create one InviteCode
     * const InviteCode = await prisma.inviteCode.create({
     *   data: {
     *     // ... data to create a InviteCode
     *   }
     * })
     * 
     */
    create<T extends InviteCodeCreateArgs>(args: SelectSubset<T, InviteCodeCreateArgs<ExtArgs>>): Prisma__InviteCodeClient<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InviteCodes.
     * @param {InviteCodeCreateManyArgs} args - Arguments to create many InviteCodes.
     * @example
     * // Create many InviteCodes
     * const inviteCode = await prisma.inviteCode.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InviteCodeCreateManyArgs>(args?: SelectSubset<T, InviteCodeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InviteCodes and returns the data saved in the database.
     * @param {InviteCodeCreateManyAndReturnArgs} args - Arguments to create many InviteCodes.
     * @example
     * // Create many InviteCodes
     * const inviteCode = await prisma.inviteCode.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InviteCodes and only return the `Id`
     * const inviteCodeWithIdOnly = await prisma.inviteCode.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InviteCodeCreateManyAndReturnArgs>(args?: SelectSubset<T, InviteCodeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InviteCode.
     * @param {InviteCodeDeleteArgs} args - Arguments to delete one InviteCode.
     * @example
     * // Delete one InviteCode
     * const InviteCode = await prisma.inviteCode.delete({
     *   where: {
     *     // ... filter to delete one InviteCode
     *   }
     * })
     * 
     */
    delete<T extends InviteCodeDeleteArgs>(args: SelectSubset<T, InviteCodeDeleteArgs<ExtArgs>>): Prisma__InviteCodeClient<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InviteCode.
     * @param {InviteCodeUpdateArgs} args - Arguments to update one InviteCode.
     * @example
     * // Update one InviteCode
     * const inviteCode = await prisma.inviteCode.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InviteCodeUpdateArgs>(args: SelectSubset<T, InviteCodeUpdateArgs<ExtArgs>>): Prisma__InviteCodeClient<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InviteCodes.
     * @param {InviteCodeDeleteManyArgs} args - Arguments to filter InviteCodes to delete.
     * @example
     * // Delete a few InviteCodes
     * const { count } = await prisma.inviteCode.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InviteCodeDeleteManyArgs>(args?: SelectSubset<T, InviteCodeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InviteCodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InviteCodeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InviteCodes
     * const inviteCode = await prisma.inviteCode.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InviteCodeUpdateManyArgs>(args: SelectSubset<T, InviteCodeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InviteCodes and returns the data updated in the database.
     * @param {InviteCodeUpdateManyAndReturnArgs} args - Arguments to update many InviteCodes.
     * @example
     * // Update many InviteCodes
     * const inviteCode = await prisma.inviteCode.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InviteCodes and only return the `Id`
     * const inviteCodeWithIdOnly = await prisma.inviteCode.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InviteCodeUpdateManyAndReturnArgs>(args: SelectSubset<T, InviteCodeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InviteCode.
     * @param {InviteCodeUpsertArgs} args - Arguments to update or create a InviteCode.
     * @example
     * // Update or create a InviteCode
     * const inviteCode = await prisma.inviteCode.upsert({
     *   create: {
     *     // ... data to create a InviteCode
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InviteCode we want to update
     *   }
     * })
     */
    upsert<T extends InviteCodeUpsertArgs>(args: SelectSubset<T, InviteCodeUpsertArgs<ExtArgs>>): Prisma__InviteCodeClient<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InviteCodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InviteCodeCountArgs} args - Arguments to filter InviteCodes to count.
     * @example
     * // Count the number of InviteCodes
     * const count = await prisma.inviteCode.count({
     *   where: {
     *     // ... the filter for the InviteCodes we want to count
     *   }
     * })
    **/
    count<T extends InviteCodeCountArgs>(
      args?: Subset<T, InviteCodeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InviteCodeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InviteCode.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InviteCodeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InviteCodeAggregateArgs>(args: Subset<T, InviteCodeAggregateArgs>): Prisma.PrismaPromise<GetInviteCodeAggregateType<T>>

    /**
     * Group by InviteCode.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InviteCodeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InviteCodeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InviteCodeGroupByArgs['orderBy'] }
        : { orderBy?: InviteCodeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InviteCodeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInviteCodeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InviteCode model
   */
  readonly fields: InviteCodeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InviteCode.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InviteCodeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends InviteCode$UserArgs<ExtArgs> = {}>(args?: Subset<T, InviteCode$UserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InviteCode model
   */
  interface InviteCodeFieldRefs {
    readonly Id: FieldRef<"InviteCode", 'String'>
    readonly Code: FieldRef<"InviteCode", 'String'>
    readonly IsUsed: FieldRef<"InviteCode", 'Boolean'>
    readonly UsedAt: FieldRef<"InviteCode", 'DateTime'>
    readonly CreatedAt: FieldRef<"InviteCode", 'DateTime'>
    readonly UpdatedAt: FieldRef<"InviteCode", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InviteCode findUnique
   */
  export type InviteCodeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
    /**
     * Filter, which InviteCode to fetch.
     */
    where: InviteCodeWhereUniqueInput
  }

  /**
   * InviteCode findUniqueOrThrow
   */
  export type InviteCodeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
    /**
     * Filter, which InviteCode to fetch.
     */
    where: InviteCodeWhereUniqueInput
  }

  /**
   * InviteCode findFirst
   */
  export type InviteCodeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
    /**
     * Filter, which InviteCode to fetch.
     */
    where?: InviteCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InviteCodes to fetch.
     */
    orderBy?: InviteCodeOrderByWithRelationInput | InviteCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InviteCodes.
     */
    cursor?: InviteCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InviteCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InviteCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InviteCodes.
     */
    distinct?: InviteCodeScalarFieldEnum | InviteCodeScalarFieldEnum[]
  }

  /**
   * InviteCode findFirstOrThrow
   */
  export type InviteCodeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
    /**
     * Filter, which InviteCode to fetch.
     */
    where?: InviteCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InviteCodes to fetch.
     */
    orderBy?: InviteCodeOrderByWithRelationInput | InviteCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InviteCodes.
     */
    cursor?: InviteCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InviteCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InviteCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InviteCodes.
     */
    distinct?: InviteCodeScalarFieldEnum | InviteCodeScalarFieldEnum[]
  }

  /**
   * InviteCode findMany
   */
  export type InviteCodeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
    /**
     * Filter, which InviteCodes to fetch.
     */
    where?: InviteCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InviteCodes to fetch.
     */
    orderBy?: InviteCodeOrderByWithRelationInput | InviteCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InviteCodes.
     */
    cursor?: InviteCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InviteCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InviteCodes.
     */
    skip?: number
    distinct?: InviteCodeScalarFieldEnum | InviteCodeScalarFieldEnum[]
  }

  /**
   * InviteCode create
   */
  export type InviteCodeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
    /**
     * The data needed to create a InviteCode.
     */
    data: XOR<InviteCodeCreateInput, InviteCodeUncheckedCreateInput>
  }

  /**
   * InviteCode createMany
   */
  export type InviteCodeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InviteCodes.
     */
    data: InviteCodeCreateManyInput | InviteCodeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InviteCode createManyAndReturn
   */
  export type InviteCodeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * The data used to create many InviteCodes.
     */
    data: InviteCodeCreateManyInput | InviteCodeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InviteCode update
   */
  export type InviteCodeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
    /**
     * The data needed to update a InviteCode.
     */
    data: XOR<InviteCodeUpdateInput, InviteCodeUncheckedUpdateInput>
    /**
     * Choose, which InviteCode to update.
     */
    where: InviteCodeWhereUniqueInput
  }

  /**
   * InviteCode updateMany
   */
  export type InviteCodeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InviteCodes.
     */
    data: XOR<InviteCodeUpdateManyMutationInput, InviteCodeUncheckedUpdateManyInput>
    /**
     * Filter which InviteCodes to update
     */
    where?: InviteCodeWhereInput
    /**
     * Limit how many InviteCodes to update.
     */
    limit?: number
  }

  /**
   * InviteCode updateManyAndReturn
   */
  export type InviteCodeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * The data used to update InviteCodes.
     */
    data: XOR<InviteCodeUpdateManyMutationInput, InviteCodeUncheckedUpdateManyInput>
    /**
     * Filter which InviteCodes to update
     */
    where?: InviteCodeWhereInput
    /**
     * Limit how many InviteCodes to update.
     */
    limit?: number
  }

  /**
   * InviteCode upsert
   */
  export type InviteCodeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
    /**
     * The filter to search for the InviteCode to update in case it exists.
     */
    where: InviteCodeWhereUniqueInput
    /**
     * In case the InviteCode found by the `where` argument doesn't exist, create a new InviteCode with this data.
     */
    create: XOR<InviteCodeCreateInput, InviteCodeUncheckedCreateInput>
    /**
     * In case the InviteCode was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InviteCodeUpdateInput, InviteCodeUncheckedUpdateInput>
  }

  /**
   * InviteCode delete
   */
  export type InviteCodeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
    /**
     * Filter which InviteCode to delete.
     */
    where: InviteCodeWhereUniqueInput
  }

  /**
   * InviteCode deleteMany
   */
  export type InviteCodeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InviteCodes to delete
     */
    where?: InviteCodeWhereInput
    /**
     * Limit how many InviteCodes to delete.
     */
    limit?: number
  }

  /**
   * InviteCode.User
   */
  export type InviteCode$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * InviteCode without action
   */
  export type InviteCodeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
  }


  /**
   * Model DiscordMessage
   */

  export type AggregateDiscordMessage = {
    _count: DiscordMessageCountAggregateOutputType | null
    _avg: DiscordMessageAvgAggregateOutputType | null
    _sum: DiscordMessageSumAggregateOutputType | null
    _min: DiscordMessageMinAggregateOutputType | null
    _max: DiscordMessageMaxAggregateOutputType | null
  }

  export type DiscordMessageAvgAggregateOutputType = {
    DiscordMessageTemplateId: number | null
  }

  export type DiscordMessageSumAggregateOutputType = {
    DiscordMessageTemplateId: number | null
  }

  export type DiscordMessageMinAggregateOutputType = {
    Id: string | null
    ChannelId: string | null
    Content: string | null
    DiscordMessageTemplateId: number | null
    DiscordChannelWebhookId: string | null
    DiscordMessageSentAt: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type DiscordMessageMaxAggregateOutputType = {
    Id: string | null
    ChannelId: string | null
    Content: string | null
    DiscordMessageTemplateId: number | null
    DiscordChannelWebhookId: string | null
    DiscordMessageSentAt: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type DiscordMessageCountAggregateOutputType = {
    Id: number
    ChannelId: number
    Content: number
    DiscordMessageTemplateId: number
    DiscordChannelWebhookId: number
    DiscordMessageSentAt: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type DiscordMessageAvgAggregateInputType = {
    DiscordMessageTemplateId?: true
  }

  export type DiscordMessageSumAggregateInputType = {
    DiscordMessageTemplateId?: true
  }

  export type DiscordMessageMinAggregateInputType = {
    Id?: true
    ChannelId?: true
    Content?: true
    DiscordMessageTemplateId?: true
    DiscordChannelWebhookId?: true
    DiscordMessageSentAt?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type DiscordMessageMaxAggregateInputType = {
    Id?: true
    ChannelId?: true
    Content?: true
    DiscordMessageTemplateId?: true
    DiscordChannelWebhookId?: true
    DiscordMessageSentAt?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type DiscordMessageCountAggregateInputType = {
    Id?: true
    ChannelId?: true
    Content?: true
    DiscordMessageTemplateId?: true
    DiscordChannelWebhookId?: true
    DiscordMessageSentAt?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type DiscordMessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscordMessage to aggregate.
     */
    where?: DiscordMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordMessages to fetch.
     */
    orderBy?: DiscordMessageOrderByWithRelationInput | DiscordMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiscordMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscordMessages
    **/
    _count?: true | DiscordMessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DiscordMessageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DiscordMessageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscordMessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscordMessageMaxAggregateInputType
  }

  export type GetDiscordMessageAggregateType<T extends DiscordMessageAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscordMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscordMessage[P]>
      : GetScalarType<T[P], AggregateDiscordMessage[P]>
  }




  export type DiscordMessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscordMessageWhereInput
    orderBy?: DiscordMessageOrderByWithAggregationInput | DiscordMessageOrderByWithAggregationInput[]
    by: DiscordMessageScalarFieldEnum[] | DiscordMessageScalarFieldEnum
    having?: DiscordMessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscordMessageCountAggregateInputType | true
    _avg?: DiscordMessageAvgAggregateInputType
    _sum?: DiscordMessageSumAggregateInputType
    _min?: DiscordMessageMinAggregateInputType
    _max?: DiscordMessageMaxAggregateInputType
  }

  export type DiscordMessageGroupByOutputType = {
    Id: string
    ChannelId: string
    Content: string
    DiscordMessageTemplateId: number | null
    DiscordChannelWebhookId: string | null
    DiscordMessageSentAt: Date | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: DiscordMessageCountAggregateOutputType | null
    _avg: DiscordMessageAvgAggregateOutputType | null
    _sum: DiscordMessageSumAggregateOutputType | null
    _min: DiscordMessageMinAggregateOutputType | null
    _max: DiscordMessageMaxAggregateOutputType | null
  }

  type GetDiscordMessageGroupByPayload<T extends DiscordMessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscordMessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscordMessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscordMessageGroupByOutputType[P]>
            : GetScalarType<T[P], DiscordMessageGroupByOutputType[P]>
        }
      >
    >


  export type DiscordMessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ChannelId?: boolean
    Content?: boolean
    DiscordMessageTemplateId?: boolean
    DiscordChannelWebhookId?: boolean
    DiscordMessageSentAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordMessageTemplate?: boolean | DiscordMessage$DiscordMessageTemplateArgs<ExtArgs>
    DiscordChannelWebhook?: boolean | DiscordMessage$DiscordChannelWebhookArgs<ExtArgs>
    ListenerEvents?: boolean | DiscordMessage$ListenerEventsArgs<ExtArgs>
    _count?: boolean | DiscordMessageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discordMessage"]>

  export type DiscordMessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ChannelId?: boolean
    Content?: boolean
    DiscordMessageTemplateId?: boolean
    DiscordChannelWebhookId?: boolean
    DiscordMessageSentAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordMessageTemplate?: boolean | DiscordMessage$DiscordMessageTemplateArgs<ExtArgs>
    DiscordChannelWebhook?: boolean | DiscordMessage$DiscordChannelWebhookArgs<ExtArgs>
  }, ExtArgs["result"]["discordMessage"]>

  export type DiscordMessageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ChannelId?: boolean
    Content?: boolean
    DiscordMessageTemplateId?: boolean
    DiscordChannelWebhookId?: boolean
    DiscordMessageSentAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordMessageTemplate?: boolean | DiscordMessage$DiscordMessageTemplateArgs<ExtArgs>
    DiscordChannelWebhook?: boolean | DiscordMessage$DiscordChannelWebhookArgs<ExtArgs>
  }, ExtArgs["result"]["discordMessage"]>

  export type DiscordMessageSelectScalar = {
    Id?: boolean
    ChannelId?: boolean
    Content?: boolean
    DiscordMessageTemplateId?: boolean
    DiscordChannelWebhookId?: boolean
    DiscordMessageSentAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type DiscordMessageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "ChannelId" | "Content" | "DiscordMessageTemplateId" | "DiscordChannelWebhookId" | "DiscordMessageSentAt" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["discordMessage"]>
  export type DiscordMessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordMessageTemplate?: boolean | DiscordMessage$DiscordMessageTemplateArgs<ExtArgs>
    DiscordChannelWebhook?: boolean | DiscordMessage$DiscordChannelWebhookArgs<ExtArgs>
    ListenerEvents?: boolean | DiscordMessage$ListenerEventsArgs<ExtArgs>
    _count?: boolean | DiscordMessageCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DiscordMessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordMessageTemplate?: boolean | DiscordMessage$DiscordMessageTemplateArgs<ExtArgs>
    DiscordChannelWebhook?: boolean | DiscordMessage$DiscordChannelWebhookArgs<ExtArgs>
  }
  export type DiscordMessageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordMessageTemplate?: boolean | DiscordMessage$DiscordMessageTemplateArgs<ExtArgs>
    DiscordChannelWebhook?: boolean | DiscordMessage$DiscordChannelWebhookArgs<ExtArgs>
  }

  export type $DiscordMessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DiscordMessage"
    objects: {
      DiscordMessageTemplate: Prisma.$DiscordMessageTemplatePayload<ExtArgs> | null
      DiscordChannelWebhook: Prisma.$DiscordChannelWebhookPayload<ExtArgs> | null
      ListenerEvents: Prisma.$ListenerEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      ChannelId: string
      Content: string
      DiscordMessageTemplateId: number | null
      DiscordChannelWebhookId: string | null
      DiscordMessageSentAt: Date | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["discordMessage"]>
    composites: {}
  }

  type DiscordMessageGetPayload<S extends boolean | null | undefined | DiscordMessageDefaultArgs> = $Result.GetResult<Prisma.$DiscordMessagePayload, S>

  type DiscordMessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DiscordMessageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiscordMessageCountAggregateInputType | true
    }

  export interface DiscordMessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DiscordMessage'], meta: { name: 'DiscordMessage' } }
    /**
     * Find zero or one DiscordMessage that matches the filter.
     * @param {DiscordMessageFindUniqueArgs} args - Arguments to find a DiscordMessage
     * @example
     * // Get one DiscordMessage
     * const discordMessage = await prisma.discordMessage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiscordMessageFindUniqueArgs>(args: SelectSubset<T, DiscordMessageFindUniqueArgs<ExtArgs>>): Prisma__DiscordMessageClient<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DiscordMessage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DiscordMessageFindUniqueOrThrowArgs} args - Arguments to find a DiscordMessage
     * @example
     * // Get one DiscordMessage
     * const discordMessage = await prisma.discordMessage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiscordMessageFindUniqueOrThrowArgs>(args: SelectSubset<T, DiscordMessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiscordMessageClient<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscordMessage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageFindFirstArgs} args - Arguments to find a DiscordMessage
     * @example
     * // Get one DiscordMessage
     * const discordMessage = await prisma.discordMessage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiscordMessageFindFirstArgs>(args?: SelectSubset<T, DiscordMessageFindFirstArgs<ExtArgs>>): Prisma__DiscordMessageClient<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscordMessage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageFindFirstOrThrowArgs} args - Arguments to find a DiscordMessage
     * @example
     * // Get one DiscordMessage
     * const discordMessage = await prisma.discordMessage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiscordMessageFindFirstOrThrowArgs>(args?: SelectSubset<T, DiscordMessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiscordMessageClient<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DiscordMessages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscordMessages
     * const discordMessages = await prisma.discordMessage.findMany()
     * 
     * // Get first 10 DiscordMessages
     * const discordMessages = await prisma.discordMessage.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const discordMessageWithIdOnly = await prisma.discordMessage.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends DiscordMessageFindManyArgs>(args?: SelectSubset<T, DiscordMessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DiscordMessage.
     * @param {DiscordMessageCreateArgs} args - Arguments to create a DiscordMessage.
     * @example
     * // Create one DiscordMessage
     * const DiscordMessage = await prisma.discordMessage.create({
     *   data: {
     *     // ... data to create a DiscordMessage
     *   }
     * })
     * 
     */
    create<T extends DiscordMessageCreateArgs>(args: SelectSubset<T, DiscordMessageCreateArgs<ExtArgs>>): Prisma__DiscordMessageClient<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DiscordMessages.
     * @param {DiscordMessageCreateManyArgs} args - Arguments to create many DiscordMessages.
     * @example
     * // Create many DiscordMessages
     * const discordMessage = await prisma.discordMessage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiscordMessageCreateManyArgs>(args?: SelectSubset<T, DiscordMessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DiscordMessages and returns the data saved in the database.
     * @param {DiscordMessageCreateManyAndReturnArgs} args - Arguments to create many DiscordMessages.
     * @example
     * // Create many DiscordMessages
     * const discordMessage = await prisma.discordMessage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DiscordMessages and only return the `Id`
     * const discordMessageWithIdOnly = await prisma.discordMessage.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiscordMessageCreateManyAndReturnArgs>(args?: SelectSubset<T, DiscordMessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DiscordMessage.
     * @param {DiscordMessageDeleteArgs} args - Arguments to delete one DiscordMessage.
     * @example
     * // Delete one DiscordMessage
     * const DiscordMessage = await prisma.discordMessage.delete({
     *   where: {
     *     // ... filter to delete one DiscordMessage
     *   }
     * })
     * 
     */
    delete<T extends DiscordMessageDeleteArgs>(args: SelectSubset<T, DiscordMessageDeleteArgs<ExtArgs>>): Prisma__DiscordMessageClient<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DiscordMessage.
     * @param {DiscordMessageUpdateArgs} args - Arguments to update one DiscordMessage.
     * @example
     * // Update one DiscordMessage
     * const discordMessage = await prisma.discordMessage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiscordMessageUpdateArgs>(args: SelectSubset<T, DiscordMessageUpdateArgs<ExtArgs>>): Prisma__DiscordMessageClient<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DiscordMessages.
     * @param {DiscordMessageDeleteManyArgs} args - Arguments to filter DiscordMessages to delete.
     * @example
     * // Delete a few DiscordMessages
     * const { count } = await prisma.discordMessage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiscordMessageDeleteManyArgs>(args?: SelectSubset<T, DiscordMessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscordMessages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscordMessages
     * const discordMessage = await prisma.discordMessage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiscordMessageUpdateManyArgs>(args: SelectSubset<T, DiscordMessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscordMessages and returns the data updated in the database.
     * @param {DiscordMessageUpdateManyAndReturnArgs} args - Arguments to update many DiscordMessages.
     * @example
     * // Update many DiscordMessages
     * const discordMessage = await prisma.discordMessage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DiscordMessages and only return the `Id`
     * const discordMessageWithIdOnly = await prisma.discordMessage.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DiscordMessageUpdateManyAndReturnArgs>(args: SelectSubset<T, DiscordMessageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DiscordMessage.
     * @param {DiscordMessageUpsertArgs} args - Arguments to update or create a DiscordMessage.
     * @example
     * // Update or create a DiscordMessage
     * const discordMessage = await prisma.discordMessage.upsert({
     *   create: {
     *     // ... data to create a DiscordMessage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscordMessage we want to update
     *   }
     * })
     */
    upsert<T extends DiscordMessageUpsertArgs>(args: SelectSubset<T, DiscordMessageUpsertArgs<ExtArgs>>): Prisma__DiscordMessageClient<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DiscordMessages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageCountArgs} args - Arguments to filter DiscordMessages to count.
     * @example
     * // Count the number of DiscordMessages
     * const count = await prisma.discordMessage.count({
     *   where: {
     *     // ... the filter for the DiscordMessages we want to count
     *   }
     * })
    **/
    count<T extends DiscordMessageCountArgs>(
      args?: Subset<T, DiscordMessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscordMessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscordMessage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscordMessageAggregateArgs>(args: Subset<T, DiscordMessageAggregateArgs>): Prisma.PrismaPromise<GetDiscordMessageAggregateType<T>>

    /**
     * Group by DiscordMessage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscordMessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscordMessageGroupByArgs['orderBy'] }
        : { orderBy?: DiscordMessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscordMessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscordMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DiscordMessage model
   */
  readonly fields: DiscordMessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscordMessage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiscordMessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    DiscordMessageTemplate<T extends DiscordMessage$DiscordMessageTemplateArgs<ExtArgs> = {}>(args?: Subset<T, DiscordMessage$DiscordMessageTemplateArgs<ExtArgs>>): Prisma__DiscordMessageTemplateClient<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    DiscordChannelWebhook<T extends DiscordMessage$DiscordChannelWebhookArgs<ExtArgs> = {}>(args?: Subset<T, DiscordMessage$DiscordChannelWebhookArgs<ExtArgs>>): Prisma__DiscordChannelWebhookClient<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ListenerEvents<T extends DiscordMessage$ListenerEventsArgs<ExtArgs> = {}>(args?: Subset<T, DiscordMessage$ListenerEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DiscordMessage model
   */
  interface DiscordMessageFieldRefs {
    readonly Id: FieldRef<"DiscordMessage", 'String'>
    readonly ChannelId: FieldRef<"DiscordMessage", 'String'>
    readonly Content: FieldRef<"DiscordMessage", 'String'>
    readonly DiscordMessageTemplateId: FieldRef<"DiscordMessage", 'Int'>
    readonly DiscordChannelWebhookId: FieldRef<"DiscordMessage", 'String'>
    readonly DiscordMessageSentAt: FieldRef<"DiscordMessage", 'DateTime'>
    readonly CreatedAt: FieldRef<"DiscordMessage", 'DateTime'>
    readonly UpdatedAt: FieldRef<"DiscordMessage", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DiscordMessage findUnique
   */
  export type DiscordMessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    /**
     * Filter, which DiscordMessage to fetch.
     */
    where: DiscordMessageWhereUniqueInput
  }

  /**
   * DiscordMessage findUniqueOrThrow
   */
  export type DiscordMessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    /**
     * Filter, which DiscordMessage to fetch.
     */
    where: DiscordMessageWhereUniqueInput
  }

  /**
   * DiscordMessage findFirst
   */
  export type DiscordMessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    /**
     * Filter, which DiscordMessage to fetch.
     */
    where?: DiscordMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordMessages to fetch.
     */
    orderBy?: DiscordMessageOrderByWithRelationInput | DiscordMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscordMessages.
     */
    cursor?: DiscordMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscordMessages.
     */
    distinct?: DiscordMessageScalarFieldEnum | DiscordMessageScalarFieldEnum[]
  }

  /**
   * DiscordMessage findFirstOrThrow
   */
  export type DiscordMessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    /**
     * Filter, which DiscordMessage to fetch.
     */
    where?: DiscordMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordMessages to fetch.
     */
    orderBy?: DiscordMessageOrderByWithRelationInput | DiscordMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscordMessages.
     */
    cursor?: DiscordMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscordMessages.
     */
    distinct?: DiscordMessageScalarFieldEnum | DiscordMessageScalarFieldEnum[]
  }

  /**
   * DiscordMessage findMany
   */
  export type DiscordMessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    /**
     * Filter, which DiscordMessages to fetch.
     */
    where?: DiscordMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordMessages to fetch.
     */
    orderBy?: DiscordMessageOrderByWithRelationInput | DiscordMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscordMessages.
     */
    cursor?: DiscordMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordMessages.
     */
    skip?: number
    distinct?: DiscordMessageScalarFieldEnum | DiscordMessageScalarFieldEnum[]
  }

  /**
   * DiscordMessage create
   */
  export type DiscordMessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    /**
     * The data needed to create a DiscordMessage.
     */
    data: XOR<DiscordMessageCreateInput, DiscordMessageUncheckedCreateInput>
  }

  /**
   * DiscordMessage createMany
   */
  export type DiscordMessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DiscordMessages.
     */
    data: DiscordMessageCreateManyInput | DiscordMessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiscordMessage createManyAndReturn
   */
  export type DiscordMessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * The data used to create many DiscordMessages.
     */
    data: DiscordMessageCreateManyInput | DiscordMessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DiscordMessage update
   */
  export type DiscordMessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    /**
     * The data needed to update a DiscordMessage.
     */
    data: XOR<DiscordMessageUpdateInput, DiscordMessageUncheckedUpdateInput>
    /**
     * Choose, which DiscordMessage to update.
     */
    where: DiscordMessageWhereUniqueInput
  }

  /**
   * DiscordMessage updateMany
   */
  export type DiscordMessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DiscordMessages.
     */
    data: XOR<DiscordMessageUpdateManyMutationInput, DiscordMessageUncheckedUpdateManyInput>
    /**
     * Filter which DiscordMessages to update
     */
    where?: DiscordMessageWhereInput
    /**
     * Limit how many DiscordMessages to update.
     */
    limit?: number
  }

  /**
   * DiscordMessage updateManyAndReturn
   */
  export type DiscordMessageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * The data used to update DiscordMessages.
     */
    data: XOR<DiscordMessageUpdateManyMutationInput, DiscordMessageUncheckedUpdateManyInput>
    /**
     * Filter which DiscordMessages to update
     */
    where?: DiscordMessageWhereInput
    /**
     * Limit how many DiscordMessages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DiscordMessage upsert
   */
  export type DiscordMessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    /**
     * The filter to search for the DiscordMessage to update in case it exists.
     */
    where: DiscordMessageWhereUniqueInput
    /**
     * In case the DiscordMessage found by the `where` argument doesn't exist, create a new DiscordMessage with this data.
     */
    create: XOR<DiscordMessageCreateInput, DiscordMessageUncheckedCreateInput>
    /**
     * In case the DiscordMessage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiscordMessageUpdateInput, DiscordMessageUncheckedUpdateInput>
  }

  /**
   * DiscordMessage delete
   */
  export type DiscordMessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    /**
     * Filter which DiscordMessage to delete.
     */
    where: DiscordMessageWhereUniqueInput
  }

  /**
   * DiscordMessage deleteMany
   */
  export type DiscordMessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscordMessages to delete
     */
    where?: DiscordMessageWhereInput
    /**
     * Limit how many DiscordMessages to delete.
     */
    limit?: number
  }

  /**
   * DiscordMessage.DiscordMessageTemplate
   */
  export type DiscordMessage$DiscordMessageTemplateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
    where?: DiscordMessageTemplateWhereInput
  }

  /**
   * DiscordMessage.DiscordChannelWebhook
   */
  export type DiscordMessage$DiscordChannelWebhookArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    where?: DiscordChannelWebhookWhereInput
  }

  /**
   * DiscordMessage.ListenerEvents
   */
  export type DiscordMessage$ListenerEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    where?: ListenerEventWhereInput
    orderBy?: ListenerEventOrderByWithRelationInput | ListenerEventOrderByWithRelationInput[]
    cursor?: ListenerEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListenerEventScalarFieldEnum | ListenerEventScalarFieldEnum[]
  }

  /**
   * DiscordMessage without action
   */
  export type DiscordMessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
  }


  /**
   * Model DiscordMessageTemplate
   */

  export type AggregateDiscordMessageTemplate = {
    _count: DiscordMessageTemplateCountAggregateOutputType | null
    _avg: DiscordMessageTemplateAvgAggregateOutputType | null
    _sum: DiscordMessageTemplateSumAggregateOutputType | null
    _min: DiscordMessageTemplateMinAggregateOutputType | null
    _max: DiscordMessageTemplateMaxAggregateOutputType | null
  }

  export type DiscordMessageTemplateAvgAggregateOutputType = {
    Id: number | null
  }

  export type DiscordMessageTemplateSumAggregateOutputType = {
    Id: number | null
  }

  export type DiscordMessageTemplateMinAggregateOutputType = {
    Id: number | null
    Slug: string | null
    Name: string | null
    Description: string | null
    Content: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type DiscordMessageTemplateMaxAggregateOutputType = {
    Id: number | null
    Slug: string | null
    Name: string | null
    Description: string | null
    Content: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type DiscordMessageTemplateCountAggregateOutputType = {
    Id: number
    Slug: number
    Name: number
    Description: number
    Content: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type DiscordMessageTemplateAvgAggregateInputType = {
    Id?: true
  }

  export type DiscordMessageTemplateSumAggregateInputType = {
    Id?: true
  }

  export type DiscordMessageTemplateMinAggregateInputType = {
    Id?: true
    Slug?: true
    Name?: true
    Description?: true
    Content?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type DiscordMessageTemplateMaxAggregateInputType = {
    Id?: true
    Slug?: true
    Name?: true
    Description?: true
    Content?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type DiscordMessageTemplateCountAggregateInputType = {
    Id?: true
    Slug?: true
    Name?: true
    Description?: true
    Content?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type DiscordMessageTemplateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscordMessageTemplate to aggregate.
     */
    where?: DiscordMessageTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordMessageTemplates to fetch.
     */
    orderBy?: DiscordMessageTemplateOrderByWithRelationInput | DiscordMessageTemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiscordMessageTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordMessageTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordMessageTemplates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscordMessageTemplates
    **/
    _count?: true | DiscordMessageTemplateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DiscordMessageTemplateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DiscordMessageTemplateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscordMessageTemplateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscordMessageTemplateMaxAggregateInputType
  }

  export type GetDiscordMessageTemplateAggregateType<T extends DiscordMessageTemplateAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscordMessageTemplate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscordMessageTemplate[P]>
      : GetScalarType<T[P], AggregateDiscordMessageTemplate[P]>
  }




  export type DiscordMessageTemplateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscordMessageTemplateWhereInput
    orderBy?: DiscordMessageTemplateOrderByWithAggregationInput | DiscordMessageTemplateOrderByWithAggregationInput[]
    by: DiscordMessageTemplateScalarFieldEnum[] | DiscordMessageTemplateScalarFieldEnum
    having?: DiscordMessageTemplateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscordMessageTemplateCountAggregateInputType | true
    _avg?: DiscordMessageTemplateAvgAggregateInputType
    _sum?: DiscordMessageTemplateSumAggregateInputType
    _min?: DiscordMessageTemplateMinAggregateInputType
    _max?: DiscordMessageTemplateMaxAggregateInputType
  }

  export type DiscordMessageTemplateGroupByOutputType = {
    Id: number
    Slug: string
    Name: string
    Description: string | null
    Content: string
    CreatedAt: Date
    UpdatedAt: Date
    _count: DiscordMessageTemplateCountAggregateOutputType | null
    _avg: DiscordMessageTemplateAvgAggregateOutputType | null
    _sum: DiscordMessageTemplateSumAggregateOutputType | null
    _min: DiscordMessageTemplateMinAggregateOutputType | null
    _max: DiscordMessageTemplateMaxAggregateOutputType | null
  }

  type GetDiscordMessageTemplateGroupByPayload<T extends DiscordMessageTemplateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscordMessageTemplateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscordMessageTemplateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscordMessageTemplateGroupByOutputType[P]>
            : GetScalarType<T[P], DiscordMessageTemplateGroupByOutputType[P]>
        }
      >
    >


  export type DiscordMessageTemplateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Slug?: boolean
    Name?: boolean
    Description?: boolean
    Content?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordMessages?: boolean | DiscordMessageTemplate$DiscordMessagesArgs<ExtArgs>
    _count?: boolean | DiscordMessageTemplateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discordMessageTemplate"]>

  export type DiscordMessageTemplateSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Slug?: boolean
    Name?: boolean
    Description?: boolean
    Content?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["discordMessageTemplate"]>

  export type DiscordMessageTemplateSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Slug?: boolean
    Name?: boolean
    Description?: boolean
    Content?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["discordMessageTemplate"]>

  export type DiscordMessageTemplateSelectScalar = {
    Id?: boolean
    Slug?: boolean
    Name?: boolean
    Description?: boolean
    Content?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type DiscordMessageTemplateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Slug" | "Name" | "Description" | "Content" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["discordMessageTemplate"]>
  export type DiscordMessageTemplateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordMessages?: boolean | DiscordMessageTemplate$DiscordMessagesArgs<ExtArgs>
    _count?: boolean | DiscordMessageTemplateCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DiscordMessageTemplateIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DiscordMessageTemplateIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DiscordMessageTemplatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DiscordMessageTemplate"
    objects: {
      DiscordMessages: Prisma.$DiscordMessagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      Slug: string
      Name: string
      Description: string | null
      Content: string
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["discordMessageTemplate"]>
    composites: {}
  }

  type DiscordMessageTemplateGetPayload<S extends boolean | null | undefined | DiscordMessageTemplateDefaultArgs> = $Result.GetResult<Prisma.$DiscordMessageTemplatePayload, S>

  type DiscordMessageTemplateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DiscordMessageTemplateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiscordMessageTemplateCountAggregateInputType | true
    }

  export interface DiscordMessageTemplateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DiscordMessageTemplate'], meta: { name: 'DiscordMessageTemplate' } }
    /**
     * Find zero or one DiscordMessageTemplate that matches the filter.
     * @param {DiscordMessageTemplateFindUniqueArgs} args - Arguments to find a DiscordMessageTemplate
     * @example
     * // Get one DiscordMessageTemplate
     * const discordMessageTemplate = await prisma.discordMessageTemplate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiscordMessageTemplateFindUniqueArgs>(args: SelectSubset<T, DiscordMessageTemplateFindUniqueArgs<ExtArgs>>): Prisma__DiscordMessageTemplateClient<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DiscordMessageTemplate that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DiscordMessageTemplateFindUniqueOrThrowArgs} args - Arguments to find a DiscordMessageTemplate
     * @example
     * // Get one DiscordMessageTemplate
     * const discordMessageTemplate = await prisma.discordMessageTemplate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiscordMessageTemplateFindUniqueOrThrowArgs>(args: SelectSubset<T, DiscordMessageTemplateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiscordMessageTemplateClient<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscordMessageTemplate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageTemplateFindFirstArgs} args - Arguments to find a DiscordMessageTemplate
     * @example
     * // Get one DiscordMessageTemplate
     * const discordMessageTemplate = await prisma.discordMessageTemplate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiscordMessageTemplateFindFirstArgs>(args?: SelectSubset<T, DiscordMessageTemplateFindFirstArgs<ExtArgs>>): Prisma__DiscordMessageTemplateClient<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscordMessageTemplate that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageTemplateFindFirstOrThrowArgs} args - Arguments to find a DiscordMessageTemplate
     * @example
     * // Get one DiscordMessageTemplate
     * const discordMessageTemplate = await prisma.discordMessageTemplate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiscordMessageTemplateFindFirstOrThrowArgs>(args?: SelectSubset<T, DiscordMessageTemplateFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiscordMessageTemplateClient<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DiscordMessageTemplates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageTemplateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscordMessageTemplates
     * const discordMessageTemplates = await prisma.discordMessageTemplate.findMany()
     * 
     * // Get first 10 DiscordMessageTemplates
     * const discordMessageTemplates = await prisma.discordMessageTemplate.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const discordMessageTemplateWithIdOnly = await prisma.discordMessageTemplate.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends DiscordMessageTemplateFindManyArgs>(args?: SelectSubset<T, DiscordMessageTemplateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DiscordMessageTemplate.
     * @param {DiscordMessageTemplateCreateArgs} args - Arguments to create a DiscordMessageTemplate.
     * @example
     * // Create one DiscordMessageTemplate
     * const DiscordMessageTemplate = await prisma.discordMessageTemplate.create({
     *   data: {
     *     // ... data to create a DiscordMessageTemplate
     *   }
     * })
     * 
     */
    create<T extends DiscordMessageTemplateCreateArgs>(args: SelectSubset<T, DiscordMessageTemplateCreateArgs<ExtArgs>>): Prisma__DiscordMessageTemplateClient<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DiscordMessageTemplates.
     * @param {DiscordMessageTemplateCreateManyArgs} args - Arguments to create many DiscordMessageTemplates.
     * @example
     * // Create many DiscordMessageTemplates
     * const discordMessageTemplate = await prisma.discordMessageTemplate.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiscordMessageTemplateCreateManyArgs>(args?: SelectSubset<T, DiscordMessageTemplateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DiscordMessageTemplates and returns the data saved in the database.
     * @param {DiscordMessageTemplateCreateManyAndReturnArgs} args - Arguments to create many DiscordMessageTemplates.
     * @example
     * // Create many DiscordMessageTemplates
     * const discordMessageTemplate = await prisma.discordMessageTemplate.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DiscordMessageTemplates and only return the `Id`
     * const discordMessageTemplateWithIdOnly = await prisma.discordMessageTemplate.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiscordMessageTemplateCreateManyAndReturnArgs>(args?: SelectSubset<T, DiscordMessageTemplateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DiscordMessageTemplate.
     * @param {DiscordMessageTemplateDeleteArgs} args - Arguments to delete one DiscordMessageTemplate.
     * @example
     * // Delete one DiscordMessageTemplate
     * const DiscordMessageTemplate = await prisma.discordMessageTemplate.delete({
     *   where: {
     *     // ... filter to delete one DiscordMessageTemplate
     *   }
     * })
     * 
     */
    delete<T extends DiscordMessageTemplateDeleteArgs>(args: SelectSubset<T, DiscordMessageTemplateDeleteArgs<ExtArgs>>): Prisma__DiscordMessageTemplateClient<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DiscordMessageTemplate.
     * @param {DiscordMessageTemplateUpdateArgs} args - Arguments to update one DiscordMessageTemplate.
     * @example
     * // Update one DiscordMessageTemplate
     * const discordMessageTemplate = await prisma.discordMessageTemplate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiscordMessageTemplateUpdateArgs>(args: SelectSubset<T, DiscordMessageTemplateUpdateArgs<ExtArgs>>): Prisma__DiscordMessageTemplateClient<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DiscordMessageTemplates.
     * @param {DiscordMessageTemplateDeleteManyArgs} args - Arguments to filter DiscordMessageTemplates to delete.
     * @example
     * // Delete a few DiscordMessageTemplates
     * const { count } = await prisma.discordMessageTemplate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiscordMessageTemplateDeleteManyArgs>(args?: SelectSubset<T, DiscordMessageTemplateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscordMessageTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageTemplateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscordMessageTemplates
     * const discordMessageTemplate = await prisma.discordMessageTemplate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiscordMessageTemplateUpdateManyArgs>(args: SelectSubset<T, DiscordMessageTemplateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscordMessageTemplates and returns the data updated in the database.
     * @param {DiscordMessageTemplateUpdateManyAndReturnArgs} args - Arguments to update many DiscordMessageTemplates.
     * @example
     * // Update many DiscordMessageTemplates
     * const discordMessageTemplate = await prisma.discordMessageTemplate.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DiscordMessageTemplates and only return the `Id`
     * const discordMessageTemplateWithIdOnly = await prisma.discordMessageTemplate.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DiscordMessageTemplateUpdateManyAndReturnArgs>(args: SelectSubset<T, DiscordMessageTemplateUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DiscordMessageTemplate.
     * @param {DiscordMessageTemplateUpsertArgs} args - Arguments to update or create a DiscordMessageTemplate.
     * @example
     * // Update or create a DiscordMessageTemplate
     * const discordMessageTemplate = await prisma.discordMessageTemplate.upsert({
     *   create: {
     *     // ... data to create a DiscordMessageTemplate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscordMessageTemplate we want to update
     *   }
     * })
     */
    upsert<T extends DiscordMessageTemplateUpsertArgs>(args: SelectSubset<T, DiscordMessageTemplateUpsertArgs<ExtArgs>>): Prisma__DiscordMessageTemplateClient<$Result.GetResult<Prisma.$DiscordMessageTemplatePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DiscordMessageTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageTemplateCountArgs} args - Arguments to filter DiscordMessageTemplates to count.
     * @example
     * // Count the number of DiscordMessageTemplates
     * const count = await prisma.discordMessageTemplate.count({
     *   where: {
     *     // ... the filter for the DiscordMessageTemplates we want to count
     *   }
     * })
    **/
    count<T extends DiscordMessageTemplateCountArgs>(
      args?: Subset<T, DiscordMessageTemplateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscordMessageTemplateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscordMessageTemplate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageTemplateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscordMessageTemplateAggregateArgs>(args: Subset<T, DiscordMessageTemplateAggregateArgs>): Prisma.PrismaPromise<GetDiscordMessageTemplateAggregateType<T>>

    /**
     * Group by DiscordMessageTemplate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordMessageTemplateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscordMessageTemplateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscordMessageTemplateGroupByArgs['orderBy'] }
        : { orderBy?: DiscordMessageTemplateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscordMessageTemplateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscordMessageTemplateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DiscordMessageTemplate model
   */
  readonly fields: DiscordMessageTemplateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscordMessageTemplate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiscordMessageTemplateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    DiscordMessages<T extends DiscordMessageTemplate$DiscordMessagesArgs<ExtArgs> = {}>(args?: Subset<T, DiscordMessageTemplate$DiscordMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DiscordMessageTemplate model
   */
  interface DiscordMessageTemplateFieldRefs {
    readonly Id: FieldRef<"DiscordMessageTemplate", 'Int'>
    readonly Slug: FieldRef<"DiscordMessageTemplate", 'String'>
    readonly Name: FieldRef<"DiscordMessageTemplate", 'String'>
    readonly Description: FieldRef<"DiscordMessageTemplate", 'String'>
    readonly Content: FieldRef<"DiscordMessageTemplate", 'String'>
    readonly CreatedAt: FieldRef<"DiscordMessageTemplate", 'DateTime'>
    readonly UpdatedAt: FieldRef<"DiscordMessageTemplate", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DiscordMessageTemplate findUnique
   */
  export type DiscordMessageTemplateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
    /**
     * Filter, which DiscordMessageTemplate to fetch.
     */
    where: DiscordMessageTemplateWhereUniqueInput
  }

  /**
   * DiscordMessageTemplate findUniqueOrThrow
   */
  export type DiscordMessageTemplateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
    /**
     * Filter, which DiscordMessageTemplate to fetch.
     */
    where: DiscordMessageTemplateWhereUniqueInput
  }

  /**
   * DiscordMessageTemplate findFirst
   */
  export type DiscordMessageTemplateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
    /**
     * Filter, which DiscordMessageTemplate to fetch.
     */
    where?: DiscordMessageTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordMessageTemplates to fetch.
     */
    orderBy?: DiscordMessageTemplateOrderByWithRelationInput | DiscordMessageTemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscordMessageTemplates.
     */
    cursor?: DiscordMessageTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordMessageTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordMessageTemplates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscordMessageTemplates.
     */
    distinct?: DiscordMessageTemplateScalarFieldEnum | DiscordMessageTemplateScalarFieldEnum[]
  }

  /**
   * DiscordMessageTemplate findFirstOrThrow
   */
  export type DiscordMessageTemplateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
    /**
     * Filter, which DiscordMessageTemplate to fetch.
     */
    where?: DiscordMessageTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordMessageTemplates to fetch.
     */
    orderBy?: DiscordMessageTemplateOrderByWithRelationInput | DiscordMessageTemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscordMessageTemplates.
     */
    cursor?: DiscordMessageTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordMessageTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordMessageTemplates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscordMessageTemplates.
     */
    distinct?: DiscordMessageTemplateScalarFieldEnum | DiscordMessageTemplateScalarFieldEnum[]
  }

  /**
   * DiscordMessageTemplate findMany
   */
  export type DiscordMessageTemplateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
    /**
     * Filter, which DiscordMessageTemplates to fetch.
     */
    where?: DiscordMessageTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordMessageTemplates to fetch.
     */
    orderBy?: DiscordMessageTemplateOrderByWithRelationInput | DiscordMessageTemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscordMessageTemplates.
     */
    cursor?: DiscordMessageTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordMessageTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordMessageTemplates.
     */
    skip?: number
    distinct?: DiscordMessageTemplateScalarFieldEnum | DiscordMessageTemplateScalarFieldEnum[]
  }

  /**
   * DiscordMessageTemplate create
   */
  export type DiscordMessageTemplateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
    /**
     * The data needed to create a DiscordMessageTemplate.
     */
    data: XOR<DiscordMessageTemplateCreateInput, DiscordMessageTemplateUncheckedCreateInput>
  }

  /**
   * DiscordMessageTemplate createMany
   */
  export type DiscordMessageTemplateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DiscordMessageTemplates.
     */
    data: DiscordMessageTemplateCreateManyInput | DiscordMessageTemplateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiscordMessageTemplate createManyAndReturn
   */
  export type DiscordMessageTemplateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * The data used to create many DiscordMessageTemplates.
     */
    data: DiscordMessageTemplateCreateManyInput | DiscordMessageTemplateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiscordMessageTemplate update
   */
  export type DiscordMessageTemplateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
    /**
     * The data needed to update a DiscordMessageTemplate.
     */
    data: XOR<DiscordMessageTemplateUpdateInput, DiscordMessageTemplateUncheckedUpdateInput>
    /**
     * Choose, which DiscordMessageTemplate to update.
     */
    where: DiscordMessageTemplateWhereUniqueInput
  }

  /**
   * DiscordMessageTemplate updateMany
   */
  export type DiscordMessageTemplateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DiscordMessageTemplates.
     */
    data: XOR<DiscordMessageTemplateUpdateManyMutationInput, DiscordMessageTemplateUncheckedUpdateManyInput>
    /**
     * Filter which DiscordMessageTemplates to update
     */
    where?: DiscordMessageTemplateWhereInput
    /**
     * Limit how many DiscordMessageTemplates to update.
     */
    limit?: number
  }

  /**
   * DiscordMessageTemplate updateManyAndReturn
   */
  export type DiscordMessageTemplateUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * The data used to update DiscordMessageTemplates.
     */
    data: XOR<DiscordMessageTemplateUpdateManyMutationInput, DiscordMessageTemplateUncheckedUpdateManyInput>
    /**
     * Filter which DiscordMessageTemplates to update
     */
    where?: DiscordMessageTemplateWhereInput
    /**
     * Limit how many DiscordMessageTemplates to update.
     */
    limit?: number
  }

  /**
   * DiscordMessageTemplate upsert
   */
  export type DiscordMessageTemplateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
    /**
     * The filter to search for the DiscordMessageTemplate to update in case it exists.
     */
    where: DiscordMessageTemplateWhereUniqueInput
    /**
     * In case the DiscordMessageTemplate found by the `where` argument doesn't exist, create a new DiscordMessageTemplate with this data.
     */
    create: XOR<DiscordMessageTemplateCreateInput, DiscordMessageTemplateUncheckedCreateInput>
    /**
     * In case the DiscordMessageTemplate was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiscordMessageTemplateUpdateInput, DiscordMessageTemplateUncheckedUpdateInput>
  }

  /**
   * DiscordMessageTemplate delete
   */
  export type DiscordMessageTemplateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
    /**
     * Filter which DiscordMessageTemplate to delete.
     */
    where: DiscordMessageTemplateWhereUniqueInput
  }

  /**
   * DiscordMessageTemplate deleteMany
   */
  export type DiscordMessageTemplateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscordMessageTemplates to delete
     */
    where?: DiscordMessageTemplateWhereInput
    /**
     * Limit how many DiscordMessageTemplates to delete.
     */
    limit?: number
  }

  /**
   * DiscordMessageTemplate.DiscordMessages
   */
  export type DiscordMessageTemplate$DiscordMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    where?: DiscordMessageWhereInput
    orderBy?: DiscordMessageOrderByWithRelationInput | DiscordMessageOrderByWithRelationInput[]
    cursor?: DiscordMessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscordMessageScalarFieldEnum | DiscordMessageScalarFieldEnum[]
  }

  /**
   * DiscordMessageTemplate without action
   */
  export type DiscordMessageTemplateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessageTemplate
     */
    select?: DiscordMessageTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessageTemplate
     */
    omit?: DiscordMessageTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageTemplateInclude<ExtArgs> | null
  }


  /**
   * Model DiscordChannelWebhook
   */

  export type AggregateDiscordChannelWebhook = {
    _count: DiscordChannelWebhookCountAggregateOutputType | null
    _min: DiscordChannelWebhookMinAggregateOutputType | null
    _max: DiscordChannelWebhookMaxAggregateOutputType | null
  }

  export type DiscordChannelWebhookMinAggregateOutputType = {
    Id: string | null
    Name: string | null
    Description: string | null
    WebhookUrl: string | null
    ChannelId: string | null
    Token: string | null
    IsActive: boolean | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type DiscordChannelWebhookMaxAggregateOutputType = {
    Id: string | null
    Name: string | null
    Description: string | null
    WebhookUrl: string | null
    ChannelId: string | null
    Token: string | null
    IsActive: boolean | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type DiscordChannelWebhookCountAggregateOutputType = {
    Id: number
    Name: number
    Description: number
    WebhookUrl: number
    ChannelId: number
    Token: number
    IsActive: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type DiscordChannelWebhookMinAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    WebhookUrl?: true
    ChannelId?: true
    Token?: true
    IsActive?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type DiscordChannelWebhookMaxAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    WebhookUrl?: true
    ChannelId?: true
    Token?: true
    IsActive?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type DiscordChannelWebhookCountAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    WebhookUrl?: true
    ChannelId?: true
    Token?: true
    IsActive?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type DiscordChannelWebhookAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscordChannelWebhook to aggregate.
     */
    where?: DiscordChannelWebhookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordChannelWebhooks to fetch.
     */
    orderBy?: DiscordChannelWebhookOrderByWithRelationInput | DiscordChannelWebhookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiscordChannelWebhookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordChannelWebhooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordChannelWebhooks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscordChannelWebhooks
    **/
    _count?: true | DiscordChannelWebhookCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscordChannelWebhookMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscordChannelWebhookMaxAggregateInputType
  }

  export type GetDiscordChannelWebhookAggregateType<T extends DiscordChannelWebhookAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscordChannelWebhook]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscordChannelWebhook[P]>
      : GetScalarType<T[P], AggregateDiscordChannelWebhook[P]>
  }




  export type DiscordChannelWebhookGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscordChannelWebhookWhereInput
    orderBy?: DiscordChannelWebhookOrderByWithAggregationInput | DiscordChannelWebhookOrderByWithAggregationInput[]
    by: DiscordChannelWebhookScalarFieldEnum[] | DiscordChannelWebhookScalarFieldEnum
    having?: DiscordChannelWebhookScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscordChannelWebhookCountAggregateInputType | true
    _min?: DiscordChannelWebhookMinAggregateInputType
    _max?: DiscordChannelWebhookMaxAggregateInputType
  }

  export type DiscordChannelWebhookGroupByOutputType = {
    Id: string
    Name: string
    Description: string | null
    WebhookUrl: string
    ChannelId: string
    Token: string
    IsActive: boolean
    CreatedAt: Date
    UpdatedAt: Date
    _count: DiscordChannelWebhookCountAggregateOutputType | null
    _min: DiscordChannelWebhookMinAggregateOutputType | null
    _max: DiscordChannelWebhookMaxAggregateOutputType | null
  }

  type GetDiscordChannelWebhookGroupByPayload<T extends DiscordChannelWebhookGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscordChannelWebhookGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscordChannelWebhookGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscordChannelWebhookGroupByOutputType[P]>
            : GetScalarType<T[P], DiscordChannelWebhookGroupByOutputType[P]>
        }
      >
    >


  export type DiscordChannelWebhookSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    WebhookUrl?: boolean
    ChannelId?: boolean
    Token?: boolean
    IsActive?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordMessages?: boolean | DiscordChannelWebhook$DiscordMessagesArgs<ExtArgs>
    ListenerEventSenders?: boolean | DiscordChannelWebhook$ListenerEventSendersArgs<ExtArgs>
    _count?: boolean | DiscordChannelWebhookCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discordChannelWebhook"]>

  export type DiscordChannelWebhookSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    WebhookUrl?: boolean
    ChannelId?: boolean
    Token?: boolean
    IsActive?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["discordChannelWebhook"]>

  export type DiscordChannelWebhookSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    WebhookUrl?: boolean
    ChannelId?: boolean
    Token?: boolean
    IsActive?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["discordChannelWebhook"]>

  export type DiscordChannelWebhookSelectScalar = {
    Id?: boolean
    Name?: boolean
    Description?: boolean
    WebhookUrl?: boolean
    ChannelId?: boolean
    Token?: boolean
    IsActive?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type DiscordChannelWebhookOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Name" | "Description" | "WebhookUrl" | "ChannelId" | "Token" | "IsActive" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["discordChannelWebhook"]>
  export type DiscordChannelWebhookInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordMessages?: boolean | DiscordChannelWebhook$DiscordMessagesArgs<ExtArgs>
    ListenerEventSenders?: boolean | DiscordChannelWebhook$ListenerEventSendersArgs<ExtArgs>
    _count?: boolean | DiscordChannelWebhookCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DiscordChannelWebhookIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DiscordChannelWebhookIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DiscordChannelWebhookPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DiscordChannelWebhook"
    objects: {
      DiscordMessages: Prisma.$DiscordMessagePayload<ExtArgs>[]
      ListenerEventSenders: Prisma.$ListenerEventSenderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      Name: string
      Description: string | null
      WebhookUrl: string
      ChannelId: string
      Token: string
      IsActive: boolean
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["discordChannelWebhook"]>
    composites: {}
  }

  type DiscordChannelWebhookGetPayload<S extends boolean | null | undefined | DiscordChannelWebhookDefaultArgs> = $Result.GetResult<Prisma.$DiscordChannelWebhookPayload, S>

  type DiscordChannelWebhookCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DiscordChannelWebhookFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiscordChannelWebhookCountAggregateInputType | true
    }

  export interface DiscordChannelWebhookDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DiscordChannelWebhook'], meta: { name: 'DiscordChannelWebhook' } }
    /**
     * Find zero or one DiscordChannelWebhook that matches the filter.
     * @param {DiscordChannelWebhookFindUniqueArgs} args - Arguments to find a DiscordChannelWebhook
     * @example
     * // Get one DiscordChannelWebhook
     * const discordChannelWebhook = await prisma.discordChannelWebhook.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiscordChannelWebhookFindUniqueArgs>(args: SelectSubset<T, DiscordChannelWebhookFindUniqueArgs<ExtArgs>>): Prisma__DiscordChannelWebhookClient<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DiscordChannelWebhook that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DiscordChannelWebhookFindUniqueOrThrowArgs} args - Arguments to find a DiscordChannelWebhook
     * @example
     * // Get one DiscordChannelWebhook
     * const discordChannelWebhook = await prisma.discordChannelWebhook.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiscordChannelWebhookFindUniqueOrThrowArgs>(args: SelectSubset<T, DiscordChannelWebhookFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiscordChannelWebhookClient<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscordChannelWebhook that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordChannelWebhookFindFirstArgs} args - Arguments to find a DiscordChannelWebhook
     * @example
     * // Get one DiscordChannelWebhook
     * const discordChannelWebhook = await prisma.discordChannelWebhook.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiscordChannelWebhookFindFirstArgs>(args?: SelectSubset<T, DiscordChannelWebhookFindFirstArgs<ExtArgs>>): Prisma__DiscordChannelWebhookClient<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscordChannelWebhook that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordChannelWebhookFindFirstOrThrowArgs} args - Arguments to find a DiscordChannelWebhook
     * @example
     * // Get one DiscordChannelWebhook
     * const discordChannelWebhook = await prisma.discordChannelWebhook.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiscordChannelWebhookFindFirstOrThrowArgs>(args?: SelectSubset<T, DiscordChannelWebhookFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiscordChannelWebhookClient<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DiscordChannelWebhooks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordChannelWebhookFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscordChannelWebhooks
     * const discordChannelWebhooks = await prisma.discordChannelWebhook.findMany()
     * 
     * // Get first 10 DiscordChannelWebhooks
     * const discordChannelWebhooks = await prisma.discordChannelWebhook.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const discordChannelWebhookWithIdOnly = await prisma.discordChannelWebhook.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends DiscordChannelWebhookFindManyArgs>(args?: SelectSubset<T, DiscordChannelWebhookFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DiscordChannelWebhook.
     * @param {DiscordChannelWebhookCreateArgs} args - Arguments to create a DiscordChannelWebhook.
     * @example
     * // Create one DiscordChannelWebhook
     * const DiscordChannelWebhook = await prisma.discordChannelWebhook.create({
     *   data: {
     *     // ... data to create a DiscordChannelWebhook
     *   }
     * })
     * 
     */
    create<T extends DiscordChannelWebhookCreateArgs>(args: SelectSubset<T, DiscordChannelWebhookCreateArgs<ExtArgs>>): Prisma__DiscordChannelWebhookClient<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DiscordChannelWebhooks.
     * @param {DiscordChannelWebhookCreateManyArgs} args - Arguments to create many DiscordChannelWebhooks.
     * @example
     * // Create many DiscordChannelWebhooks
     * const discordChannelWebhook = await prisma.discordChannelWebhook.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiscordChannelWebhookCreateManyArgs>(args?: SelectSubset<T, DiscordChannelWebhookCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DiscordChannelWebhooks and returns the data saved in the database.
     * @param {DiscordChannelWebhookCreateManyAndReturnArgs} args - Arguments to create many DiscordChannelWebhooks.
     * @example
     * // Create many DiscordChannelWebhooks
     * const discordChannelWebhook = await prisma.discordChannelWebhook.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DiscordChannelWebhooks and only return the `Id`
     * const discordChannelWebhookWithIdOnly = await prisma.discordChannelWebhook.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiscordChannelWebhookCreateManyAndReturnArgs>(args?: SelectSubset<T, DiscordChannelWebhookCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DiscordChannelWebhook.
     * @param {DiscordChannelWebhookDeleteArgs} args - Arguments to delete one DiscordChannelWebhook.
     * @example
     * // Delete one DiscordChannelWebhook
     * const DiscordChannelWebhook = await prisma.discordChannelWebhook.delete({
     *   where: {
     *     // ... filter to delete one DiscordChannelWebhook
     *   }
     * })
     * 
     */
    delete<T extends DiscordChannelWebhookDeleteArgs>(args: SelectSubset<T, DiscordChannelWebhookDeleteArgs<ExtArgs>>): Prisma__DiscordChannelWebhookClient<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DiscordChannelWebhook.
     * @param {DiscordChannelWebhookUpdateArgs} args - Arguments to update one DiscordChannelWebhook.
     * @example
     * // Update one DiscordChannelWebhook
     * const discordChannelWebhook = await prisma.discordChannelWebhook.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiscordChannelWebhookUpdateArgs>(args: SelectSubset<T, DiscordChannelWebhookUpdateArgs<ExtArgs>>): Prisma__DiscordChannelWebhookClient<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DiscordChannelWebhooks.
     * @param {DiscordChannelWebhookDeleteManyArgs} args - Arguments to filter DiscordChannelWebhooks to delete.
     * @example
     * // Delete a few DiscordChannelWebhooks
     * const { count } = await prisma.discordChannelWebhook.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiscordChannelWebhookDeleteManyArgs>(args?: SelectSubset<T, DiscordChannelWebhookDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscordChannelWebhooks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordChannelWebhookUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscordChannelWebhooks
     * const discordChannelWebhook = await prisma.discordChannelWebhook.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiscordChannelWebhookUpdateManyArgs>(args: SelectSubset<T, DiscordChannelWebhookUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscordChannelWebhooks and returns the data updated in the database.
     * @param {DiscordChannelWebhookUpdateManyAndReturnArgs} args - Arguments to update many DiscordChannelWebhooks.
     * @example
     * // Update many DiscordChannelWebhooks
     * const discordChannelWebhook = await prisma.discordChannelWebhook.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DiscordChannelWebhooks and only return the `Id`
     * const discordChannelWebhookWithIdOnly = await prisma.discordChannelWebhook.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DiscordChannelWebhookUpdateManyAndReturnArgs>(args: SelectSubset<T, DiscordChannelWebhookUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DiscordChannelWebhook.
     * @param {DiscordChannelWebhookUpsertArgs} args - Arguments to update or create a DiscordChannelWebhook.
     * @example
     * // Update or create a DiscordChannelWebhook
     * const discordChannelWebhook = await prisma.discordChannelWebhook.upsert({
     *   create: {
     *     // ... data to create a DiscordChannelWebhook
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscordChannelWebhook we want to update
     *   }
     * })
     */
    upsert<T extends DiscordChannelWebhookUpsertArgs>(args: SelectSubset<T, DiscordChannelWebhookUpsertArgs<ExtArgs>>): Prisma__DiscordChannelWebhookClient<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DiscordChannelWebhooks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordChannelWebhookCountArgs} args - Arguments to filter DiscordChannelWebhooks to count.
     * @example
     * // Count the number of DiscordChannelWebhooks
     * const count = await prisma.discordChannelWebhook.count({
     *   where: {
     *     // ... the filter for the DiscordChannelWebhooks we want to count
     *   }
     * })
    **/
    count<T extends DiscordChannelWebhookCountArgs>(
      args?: Subset<T, DiscordChannelWebhookCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscordChannelWebhookCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscordChannelWebhook.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordChannelWebhookAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscordChannelWebhookAggregateArgs>(args: Subset<T, DiscordChannelWebhookAggregateArgs>): Prisma.PrismaPromise<GetDiscordChannelWebhookAggregateType<T>>

    /**
     * Group by DiscordChannelWebhook.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscordChannelWebhookGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscordChannelWebhookGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscordChannelWebhookGroupByArgs['orderBy'] }
        : { orderBy?: DiscordChannelWebhookGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscordChannelWebhookGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscordChannelWebhookGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DiscordChannelWebhook model
   */
  readonly fields: DiscordChannelWebhookFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscordChannelWebhook.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiscordChannelWebhookClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    DiscordMessages<T extends DiscordChannelWebhook$DiscordMessagesArgs<ExtArgs> = {}>(args?: Subset<T, DiscordChannelWebhook$DiscordMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ListenerEventSenders<T extends DiscordChannelWebhook$ListenerEventSendersArgs<ExtArgs> = {}>(args?: Subset<T, DiscordChannelWebhook$ListenerEventSendersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DiscordChannelWebhook model
   */
  interface DiscordChannelWebhookFieldRefs {
    readonly Id: FieldRef<"DiscordChannelWebhook", 'String'>
    readonly Name: FieldRef<"DiscordChannelWebhook", 'String'>
    readonly Description: FieldRef<"DiscordChannelWebhook", 'String'>
    readonly WebhookUrl: FieldRef<"DiscordChannelWebhook", 'String'>
    readonly ChannelId: FieldRef<"DiscordChannelWebhook", 'String'>
    readonly Token: FieldRef<"DiscordChannelWebhook", 'String'>
    readonly IsActive: FieldRef<"DiscordChannelWebhook", 'Boolean'>
    readonly CreatedAt: FieldRef<"DiscordChannelWebhook", 'DateTime'>
    readonly UpdatedAt: FieldRef<"DiscordChannelWebhook", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DiscordChannelWebhook findUnique
   */
  export type DiscordChannelWebhookFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    /**
     * Filter, which DiscordChannelWebhook to fetch.
     */
    where: DiscordChannelWebhookWhereUniqueInput
  }

  /**
   * DiscordChannelWebhook findUniqueOrThrow
   */
  export type DiscordChannelWebhookFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    /**
     * Filter, which DiscordChannelWebhook to fetch.
     */
    where: DiscordChannelWebhookWhereUniqueInput
  }

  /**
   * DiscordChannelWebhook findFirst
   */
  export type DiscordChannelWebhookFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    /**
     * Filter, which DiscordChannelWebhook to fetch.
     */
    where?: DiscordChannelWebhookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordChannelWebhooks to fetch.
     */
    orderBy?: DiscordChannelWebhookOrderByWithRelationInput | DiscordChannelWebhookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscordChannelWebhooks.
     */
    cursor?: DiscordChannelWebhookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordChannelWebhooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordChannelWebhooks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscordChannelWebhooks.
     */
    distinct?: DiscordChannelWebhookScalarFieldEnum | DiscordChannelWebhookScalarFieldEnum[]
  }

  /**
   * DiscordChannelWebhook findFirstOrThrow
   */
  export type DiscordChannelWebhookFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    /**
     * Filter, which DiscordChannelWebhook to fetch.
     */
    where?: DiscordChannelWebhookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordChannelWebhooks to fetch.
     */
    orderBy?: DiscordChannelWebhookOrderByWithRelationInput | DiscordChannelWebhookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscordChannelWebhooks.
     */
    cursor?: DiscordChannelWebhookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordChannelWebhooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordChannelWebhooks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscordChannelWebhooks.
     */
    distinct?: DiscordChannelWebhookScalarFieldEnum | DiscordChannelWebhookScalarFieldEnum[]
  }

  /**
   * DiscordChannelWebhook findMany
   */
  export type DiscordChannelWebhookFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    /**
     * Filter, which DiscordChannelWebhooks to fetch.
     */
    where?: DiscordChannelWebhookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscordChannelWebhooks to fetch.
     */
    orderBy?: DiscordChannelWebhookOrderByWithRelationInput | DiscordChannelWebhookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscordChannelWebhooks.
     */
    cursor?: DiscordChannelWebhookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscordChannelWebhooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscordChannelWebhooks.
     */
    skip?: number
    distinct?: DiscordChannelWebhookScalarFieldEnum | DiscordChannelWebhookScalarFieldEnum[]
  }

  /**
   * DiscordChannelWebhook create
   */
  export type DiscordChannelWebhookCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    /**
     * The data needed to create a DiscordChannelWebhook.
     */
    data: XOR<DiscordChannelWebhookCreateInput, DiscordChannelWebhookUncheckedCreateInput>
  }

  /**
   * DiscordChannelWebhook createMany
   */
  export type DiscordChannelWebhookCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DiscordChannelWebhooks.
     */
    data: DiscordChannelWebhookCreateManyInput | DiscordChannelWebhookCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiscordChannelWebhook createManyAndReturn
   */
  export type DiscordChannelWebhookCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * The data used to create many DiscordChannelWebhooks.
     */
    data: DiscordChannelWebhookCreateManyInput | DiscordChannelWebhookCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiscordChannelWebhook update
   */
  export type DiscordChannelWebhookUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    /**
     * The data needed to update a DiscordChannelWebhook.
     */
    data: XOR<DiscordChannelWebhookUpdateInput, DiscordChannelWebhookUncheckedUpdateInput>
    /**
     * Choose, which DiscordChannelWebhook to update.
     */
    where: DiscordChannelWebhookWhereUniqueInput
  }

  /**
   * DiscordChannelWebhook updateMany
   */
  export type DiscordChannelWebhookUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DiscordChannelWebhooks.
     */
    data: XOR<DiscordChannelWebhookUpdateManyMutationInput, DiscordChannelWebhookUncheckedUpdateManyInput>
    /**
     * Filter which DiscordChannelWebhooks to update
     */
    where?: DiscordChannelWebhookWhereInput
    /**
     * Limit how many DiscordChannelWebhooks to update.
     */
    limit?: number
  }

  /**
   * DiscordChannelWebhook updateManyAndReturn
   */
  export type DiscordChannelWebhookUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * The data used to update DiscordChannelWebhooks.
     */
    data: XOR<DiscordChannelWebhookUpdateManyMutationInput, DiscordChannelWebhookUncheckedUpdateManyInput>
    /**
     * Filter which DiscordChannelWebhooks to update
     */
    where?: DiscordChannelWebhookWhereInput
    /**
     * Limit how many DiscordChannelWebhooks to update.
     */
    limit?: number
  }

  /**
   * DiscordChannelWebhook upsert
   */
  export type DiscordChannelWebhookUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    /**
     * The filter to search for the DiscordChannelWebhook to update in case it exists.
     */
    where: DiscordChannelWebhookWhereUniqueInput
    /**
     * In case the DiscordChannelWebhook found by the `where` argument doesn't exist, create a new DiscordChannelWebhook with this data.
     */
    create: XOR<DiscordChannelWebhookCreateInput, DiscordChannelWebhookUncheckedCreateInput>
    /**
     * In case the DiscordChannelWebhook was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiscordChannelWebhookUpdateInput, DiscordChannelWebhookUncheckedUpdateInput>
  }

  /**
   * DiscordChannelWebhook delete
   */
  export type DiscordChannelWebhookDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    /**
     * Filter which DiscordChannelWebhook to delete.
     */
    where: DiscordChannelWebhookWhereUniqueInput
  }

  /**
   * DiscordChannelWebhook deleteMany
   */
  export type DiscordChannelWebhookDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscordChannelWebhooks to delete
     */
    where?: DiscordChannelWebhookWhereInput
    /**
     * Limit how many DiscordChannelWebhooks to delete.
     */
    limit?: number
  }

  /**
   * DiscordChannelWebhook.DiscordMessages
   */
  export type DiscordChannelWebhook$DiscordMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    where?: DiscordMessageWhereInput
    orderBy?: DiscordMessageOrderByWithRelationInput | DiscordMessageOrderByWithRelationInput[]
    cursor?: DiscordMessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscordMessageScalarFieldEnum | DiscordMessageScalarFieldEnum[]
  }

  /**
   * DiscordChannelWebhook.ListenerEventSenders
   */
  export type DiscordChannelWebhook$ListenerEventSendersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
    where?: ListenerEventSenderWhereInput
    orderBy?: ListenerEventSenderOrderByWithRelationInput | ListenerEventSenderOrderByWithRelationInput[]
    cursor?: ListenerEventSenderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListenerEventSenderScalarFieldEnum | ListenerEventSenderScalarFieldEnum[]
  }

  /**
   * DiscordChannelWebhook without action
   */
  export type DiscordChannelWebhookDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
  }


  /**
   * Model ListenerEvent
   */

  export type AggregateListenerEvent = {
    _count: ListenerEventCountAggregateOutputType | null
    _avg: ListenerEventAvgAggregateOutputType | null
    _sum: ListenerEventSumAggregateOutputType | null
    _min: ListenerEventMinAggregateOutputType | null
    _max: ListenerEventMaxAggregateOutputType | null
  }

  export type ListenerEventAvgAggregateOutputType = {
    Id: number | null
  }

  export type ListenerEventSumAggregateOutputType = {
    Id: number | null
  }

  export type ListenerEventMinAggregateOutputType = {
    Id: number | null
    Variant: string | null
    Type: string | null
    SentAt: Date | null
    Status: $Enums.ListenerEventStatus | null
    SenderId: string | null
    Error: string | null
    DiscordMessageId: string | null
    DeliveredAt: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type ListenerEventMaxAggregateOutputType = {
    Id: number | null
    Variant: string | null
    Type: string | null
    SentAt: Date | null
    Status: $Enums.ListenerEventStatus | null
    SenderId: string | null
    Error: string | null
    DiscordMessageId: string | null
    DeliveredAt: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type ListenerEventCountAggregateOutputType = {
    Id: number
    Variant: number
    Type: number
    SentAt: number
    Status: number
    SenderId: number
    Error: number
    Data: number
    DiscordMessageId: number
    DeliveredAt: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type ListenerEventAvgAggregateInputType = {
    Id?: true
  }

  export type ListenerEventSumAggregateInputType = {
    Id?: true
  }

  export type ListenerEventMinAggregateInputType = {
    Id?: true
    Variant?: true
    Type?: true
    SentAt?: true
    Status?: true
    SenderId?: true
    Error?: true
    DiscordMessageId?: true
    DeliveredAt?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type ListenerEventMaxAggregateInputType = {
    Id?: true
    Variant?: true
    Type?: true
    SentAt?: true
    Status?: true
    SenderId?: true
    Error?: true
    DiscordMessageId?: true
    DeliveredAt?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type ListenerEventCountAggregateInputType = {
    Id?: true
    Variant?: true
    Type?: true
    SentAt?: true
    Status?: true
    SenderId?: true
    Error?: true
    Data?: true
    DiscordMessageId?: true
    DeliveredAt?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type ListenerEventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListenerEvent to aggregate.
     */
    where?: ListenerEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListenerEvents to fetch.
     */
    orderBy?: ListenerEventOrderByWithRelationInput | ListenerEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListenerEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListenerEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListenerEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListenerEvents
    **/
    _count?: true | ListenerEventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListenerEventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListenerEventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListenerEventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListenerEventMaxAggregateInputType
  }

  export type GetListenerEventAggregateType<T extends ListenerEventAggregateArgs> = {
        [P in keyof T & keyof AggregateListenerEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListenerEvent[P]>
      : GetScalarType<T[P], AggregateListenerEvent[P]>
  }




  export type ListenerEventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListenerEventWhereInput
    orderBy?: ListenerEventOrderByWithAggregationInput | ListenerEventOrderByWithAggregationInput[]
    by: ListenerEventScalarFieldEnum[] | ListenerEventScalarFieldEnum
    having?: ListenerEventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListenerEventCountAggregateInputType | true
    _avg?: ListenerEventAvgAggregateInputType
    _sum?: ListenerEventSumAggregateInputType
    _min?: ListenerEventMinAggregateInputType
    _max?: ListenerEventMaxAggregateInputType
  }

  export type ListenerEventGroupByOutputType = {
    Id: number
    Variant: string
    Type: string
    SentAt: Date
    Status: $Enums.ListenerEventStatus
    SenderId: string
    Error: string | null
    Data: JsonValue | null
    DiscordMessageId: string | null
    DeliveredAt: Date | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: ListenerEventCountAggregateOutputType | null
    _avg: ListenerEventAvgAggregateOutputType | null
    _sum: ListenerEventSumAggregateOutputType | null
    _min: ListenerEventMinAggregateOutputType | null
    _max: ListenerEventMaxAggregateOutputType | null
  }

  type GetListenerEventGroupByPayload<T extends ListenerEventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListenerEventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListenerEventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListenerEventGroupByOutputType[P]>
            : GetScalarType<T[P], ListenerEventGroupByOutputType[P]>
        }
      >
    >


  export type ListenerEventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Variant?: boolean
    Type?: boolean
    SentAt?: boolean
    Status?: boolean
    SenderId?: boolean
    Error?: boolean
    Data?: boolean
    DiscordMessageId?: boolean
    DeliveredAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordMessage?: boolean | ListenerEvent$DiscordMessageArgs<ExtArgs>
    Sender?: boolean | ListenerEventSenderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listenerEvent"]>

  export type ListenerEventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Variant?: boolean
    Type?: boolean
    SentAt?: boolean
    Status?: boolean
    SenderId?: boolean
    Error?: boolean
    Data?: boolean
    DiscordMessageId?: boolean
    DeliveredAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordMessage?: boolean | ListenerEvent$DiscordMessageArgs<ExtArgs>
    Sender?: boolean | ListenerEventSenderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listenerEvent"]>

  export type ListenerEventSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Variant?: boolean
    Type?: boolean
    SentAt?: boolean
    Status?: boolean
    SenderId?: boolean
    Error?: boolean
    Data?: boolean
    DiscordMessageId?: boolean
    DeliveredAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordMessage?: boolean | ListenerEvent$DiscordMessageArgs<ExtArgs>
    Sender?: boolean | ListenerEventSenderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listenerEvent"]>

  export type ListenerEventSelectScalar = {
    Id?: boolean
    Variant?: boolean
    Type?: boolean
    SentAt?: boolean
    Status?: boolean
    SenderId?: boolean
    Error?: boolean
    Data?: boolean
    DiscordMessageId?: boolean
    DeliveredAt?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type ListenerEventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Variant" | "Type" | "SentAt" | "Status" | "SenderId" | "Error" | "Data" | "DiscordMessageId" | "DeliveredAt" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["listenerEvent"]>
  export type ListenerEventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordMessage?: boolean | ListenerEvent$DiscordMessageArgs<ExtArgs>
    Sender?: boolean | ListenerEventSenderDefaultArgs<ExtArgs>
  }
  export type ListenerEventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordMessage?: boolean | ListenerEvent$DiscordMessageArgs<ExtArgs>
    Sender?: boolean | ListenerEventSenderDefaultArgs<ExtArgs>
  }
  export type ListenerEventIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordMessage?: boolean | ListenerEvent$DiscordMessageArgs<ExtArgs>
    Sender?: boolean | ListenerEventSenderDefaultArgs<ExtArgs>
  }

  export type $ListenerEventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListenerEvent"
    objects: {
      DiscordMessage: Prisma.$DiscordMessagePayload<ExtArgs> | null
      Sender: Prisma.$ListenerEventSenderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      Variant: string
      Type: string
      SentAt: Date
      Status: $Enums.ListenerEventStatus
      SenderId: string
      Error: string | null
      Data: Prisma.JsonValue | null
      DiscordMessageId: string | null
      DeliveredAt: Date | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["listenerEvent"]>
    composites: {}
  }

  type ListenerEventGetPayload<S extends boolean | null | undefined | ListenerEventDefaultArgs> = $Result.GetResult<Prisma.$ListenerEventPayload, S>

  type ListenerEventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListenerEventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListenerEventCountAggregateInputType | true
    }

  export interface ListenerEventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListenerEvent'], meta: { name: 'ListenerEvent' } }
    /**
     * Find zero or one ListenerEvent that matches the filter.
     * @param {ListenerEventFindUniqueArgs} args - Arguments to find a ListenerEvent
     * @example
     * // Get one ListenerEvent
     * const listenerEvent = await prisma.listenerEvent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListenerEventFindUniqueArgs>(args: SelectSubset<T, ListenerEventFindUniqueArgs<ExtArgs>>): Prisma__ListenerEventClient<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListenerEvent that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListenerEventFindUniqueOrThrowArgs} args - Arguments to find a ListenerEvent
     * @example
     * // Get one ListenerEvent
     * const listenerEvent = await prisma.listenerEvent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListenerEventFindUniqueOrThrowArgs>(args: SelectSubset<T, ListenerEventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListenerEventClient<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListenerEvent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventFindFirstArgs} args - Arguments to find a ListenerEvent
     * @example
     * // Get one ListenerEvent
     * const listenerEvent = await prisma.listenerEvent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListenerEventFindFirstArgs>(args?: SelectSubset<T, ListenerEventFindFirstArgs<ExtArgs>>): Prisma__ListenerEventClient<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListenerEvent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventFindFirstOrThrowArgs} args - Arguments to find a ListenerEvent
     * @example
     * // Get one ListenerEvent
     * const listenerEvent = await prisma.listenerEvent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListenerEventFindFirstOrThrowArgs>(args?: SelectSubset<T, ListenerEventFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListenerEventClient<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListenerEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListenerEvents
     * const listenerEvents = await prisma.listenerEvent.findMany()
     * 
     * // Get first 10 ListenerEvents
     * const listenerEvents = await prisma.listenerEvent.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const listenerEventWithIdOnly = await prisma.listenerEvent.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends ListenerEventFindManyArgs>(args?: SelectSubset<T, ListenerEventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListenerEvent.
     * @param {ListenerEventCreateArgs} args - Arguments to create a ListenerEvent.
     * @example
     * // Create one ListenerEvent
     * const ListenerEvent = await prisma.listenerEvent.create({
     *   data: {
     *     // ... data to create a ListenerEvent
     *   }
     * })
     * 
     */
    create<T extends ListenerEventCreateArgs>(args: SelectSubset<T, ListenerEventCreateArgs<ExtArgs>>): Prisma__ListenerEventClient<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListenerEvents.
     * @param {ListenerEventCreateManyArgs} args - Arguments to create many ListenerEvents.
     * @example
     * // Create many ListenerEvents
     * const listenerEvent = await prisma.listenerEvent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListenerEventCreateManyArgs>(args?: SelectSubset<T, ListenerEventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListenerEvents and returns the data saved in the database.
     * @param {ListenerEventCreateManyAndReturnArgs} args - Arguments to create many ListenerEvents.
     * @example
     * // Create many ListenerEvents
     * const listenerEvent = await prisma.listenerEvent.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListenerEvents and only return the `Id`
     * const listenerEventWithIdOnly = await prisma.listenerEvent.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListenerEventCreateManyAndReturnArgs>(args?: SelectSubset<T, ListenerEventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListenerEvent.
     * @param {ListenerEventDeleteArgs} args - Arguments to delete one ListenerEvent.
     * @example
     * // Delete one ListenerEvent
     * const ListenerEvent = await prisma.listenerEvent.delete({
     *   where: {
     *     // ... filter to delete one ListenerEvent
     *   }
     * })
     * 
     */
    delete<T extends ListenerEventDeleteArgs>(args: SelectSubset<T, ListenerEventDeleteArgs<ExtArgs>>): Prisma__ListenerEventClient<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListenerEvent.
     * @param {ListenerEventUpdateArgs} args - Arguments to update one ListenerEvent.
     * @example
     * // Update one ListenerEvent
     * const listenerEvent = await prisma.listenerEvent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListenerEventUpdateArgs>(args: SelectSubset<T, ListenerEventUpdateArgs<ExtArgs>>): Prisma__ListenerEventClient<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListenerEvents.
     * @param {ListenerEventDeleteManyArgs} args - Arguments to filter ListenerEvents to delete.
     * @example
     * // Delete a few ListenerEvents
     * const { count } = await prisma.listenerEvent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListenerEventDeleteManyArgs>(args?: SelectSubset<T, ListenerEventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListenerEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListenerEvents
     * const listenerEvent = await prisma.listenerEvent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListenerEventUpdateManyArgs>(args: SelectSubset<T, ListenerEventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListenerEvents and returns the data updated in the database.
     * @param {ListenerEventUpdateManyAndReturnArgs} args - Arguments to update many ListenerEvents.
     * @example
     * // Update many ListenerEvents
     * const listenerEvent = await prisma.listenerEvent.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListenerEvents and only return the `Id`
     * const listenerEventWithIdOnly = await prisma.listenerEvent.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListenerEventUpdateManyAndReturnArgs>(args: SelectSubset<T, ListenerEventUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListenerEvent.
     * @param {ListenerEventUpsertArgs} args - Arguments to update or create a ListenerEvent.
     * @example
     * // Update or create a ListenerEvent
     * const listenerEvent = await prisma.listenerEvent.upsert({
     *   create: {
     *     // ... data to create a ListenerEvent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListenerEvent we want to update
     *   }
     * })
     */
    upsert<T extends ListenerEventUpsertArgs>(args: SelectSubset<T, ListenerEventUpsertArgs<ExtArgs>>): Prisma__ListenerEventClient<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListenerEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventCountArgs} args - Arguments to filter ListenerEvents to count.
     * @example
     * // Count the number of ListenerEvents
     * const count = await prisma.listenerEvent.count({
     *   where: {
     *     // ... the filter for the ListenerEvents we want to count
     *   }
     * })
    **/
    count<T extends ListenerEventCountArgs>(
      args?: Subset<T, ListenerEventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListenerEventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListenerEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListenerEventAggregateArgs>(args: Subset<T, ListenerEventAggregateArgs>): Prisma.PrismaPromise<GetListenerEventAggregateType<T>>

    /**
     * Group by ListenerEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListenerEventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListenerEventGroupByArgs['orderBy'] }
        : { orderBy?: ListenerEventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListenerEventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListenerEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListenerEvent model
   */
  readonly fields: ListenerEventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListenerEvent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListenerEventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    DiscordMessage<T extends ListenerEvent$DiscordMessageArgs<ExtArgs> = {}>(args?: Subset<T, ListenerEvent$DiscordMessageArgs<ExtArgs>>): Prisma__DiscordMessageClient<$Result.GetResult<Prisma.$DiscordMessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Sender<T extends ListenerEventSenderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListenerEventSenderDefaultArgs<ExtArgs>>): Prisma__ListenerEventSenderClient<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListenerEvent model
   */
  interface ListenerEventFieldRefs {
    readonly Id: FieldRef<"ListenerEvent", 'Int'>
    readonly Variant: FieldRef<"ListenerEvent", 'String'>
    readonly Type: FieldRef<"ListenerEvent", 'String'>
    readonly SentAt: FieldRef<"ListenerEvent", 'DateTime'>
    readonly Status: FieldRef<"ListenerEvent", 'ListenerEventStatus'>
    readonly SenderId: FieldRef<"ListenerEvent", 'String'>
    readonly Error: FieldRef<"ListenerEvent", 'String'>
    readonly Data: FieldRef<"ListenerEvent", 'Json'>
    readonly DiscordMessageId: FieldRef<"ListenerEvent", 'String'>
    readonly DeliveredAt: FieldRef<"ListenerEvent", 'DateTime'>
    readonly CreatedAt: FieldRef<"ListenerEvent", 'DateTime'>
    readonly UpdatedAt: FieldRef<"ListenerEvent", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ListenerEvent findUnique
   */
  export type ListenerEventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    /**
     * Filter, which ListenerEvent to fetch.
     */
    where: ListenerEventWhereUniqueInput
  }

  /**
   * ListenerEvent findUniqueOrThrow
   */
  export type ListenerEventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    /**
     * Filter, which ListenerEvent to fetch.
     */
    where: ListenerEventWhereUniqueInput
  }

  /**
   * ListenerEvent findFirst
   */
  export type ListenerEventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    /**
     * Filter, which ListenerEvent to fetch.
     */
    where?: ListenerEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListenerEvents to fetch.
     */
    orderBy?: ListenerEventOrderByWithRelationInput | ListenerEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListenerEvents.
     */
    cursor?: ListenerEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListenerEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListenerEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListenerEvents.
     */
    distinct?: ListenerEventScalarFieldEnum | ListenerEventScalarFieldEnum[]
  }

  /**
   * ListenerEvent findFirstOrThrow
   */
  export type ListenerEventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    /**
     * Filter, which ListenerEvent to fetch.
     */
    where?: ListenerEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListenerEvents to fetch.
     */
    orderBy?: ListenerEventOrderByWithRelationInput | ListenerEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListenerEvents.
     */
    cursor?: ListenerEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListenerEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListenerEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListenerEvents.
     */
    distinct?: ListenerEventScalarFieldEnum | ListenerEventScalarFieldEnum[]
  }

  /**
   * ListenerEvent findMany
   */
  export type ListenerEventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    /**
     * Filter, which ListenerEvents to fetch.
     */
    where?: ListenerEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListenerEvents to fetch.
     */
    orderBy?: ListenerEventOrderByWithRelationInput | ListenerEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListenerEvents.
     */
    cursor?: ListenerEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListenerEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListenerEvents.
     */
    skip?: number
    distinct?: ListenerEventScalarFieldEnum | ListenerEventScalarFieldEnum[]
  }

  /**
   * ListenerEvent create
   */
  export type ListenerEventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    /**
     * The data needed to create a ListenerEvent.
     */
    data: XOR<ListenerEventCreateInput, ListenerEventUncheckedCreateInput>
  }

  /**
   * ListenerEvent createMany
   */
  export type ListenerEventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListenerEvents.
     */
    data: ListenerEventCreateManyInput | ListenerEventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListenerEvent createManyAndReturn
   */
  export type ListenerEventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * The data used to create many ListenerEvents.
     */
    data: ListenerEventCreateManyInput | ListenerEventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListenerEvent update
   */
  export type ListenerEventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    /**
     * The data needed to update a ListenerEvent.
     */
    data: XOR<ListenerEventUpdateInput, ListenerEventUncheckedUpdateInput>
    /**
     * Choose, which ListenerEvent to update.
     */
    where: ListenerEventWhereUniqueInput
  }

  /**
   * ListenerEvent updateMany
   */
  export type ListenerEventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListenerEvents.
     */
    data: XOR<ListenerEventUpdateManyMutationInput, ListenerEventUncheckedUpdateManyInput>
    /**
     * Filter which ListenerEvents to update
     */
    where?: ListenerEventWhereInput
    /**
     * Limit how many ListenerEvents to update.
     */
    limit?: number
  }

  /**
   * ListenerEvent updateManyAndReturn
   */
  export type ListenerEventUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * The data used to update ListenerEvents.
     */
    data: XOR<ListenerEventUpdateManyMutationInput, ListenerEventUncheckedUpdateManyInput>
    /**
     * Filter which ListenerEvents to update
     */
    where?: ListenerEventWhereInput
    /**
     * Limit how many ListenerEvents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListenerEvent upsert
   */
  export type ListenerEventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    /**
     * The filter to search for the ListenerEvent to update in case it exists.
     */
    where: ListenerEventWhereUniqueInput
    /**
     * In case the ListenerEvent found by the `where` argument doesn't exist, create a new ListenerEvent with this data.
     */
    create: XOR<ListenerEventCreateInput, ListenerEventUncheckedCreateInput>
    /**
     * In case the ListenerEvent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListenerEventUpdateInput, ListenerEventUncheckedUpdateInput>
  }

  /**
   * ListenerEvent delete
   */
  export type ListenerEventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    /**
     * Filter which ListenerEvent to delete.
     */
    where: ListenerEventWhereUniqueInput
  }

  /**
   * ListenerEvent deleteMany
   */
  export type ListenerEventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListenerEvents to delete
     */
    where?: ListenerEventWhereInput
    /**
     * Limit how many ListenerEvents to delete.
     */
    limit?: number
  }

  /**
   * ListenerEvent.DiscordMessage
   */
  export type ListenerEvent$DiscordMessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordMessage
     */
    select?: DiscordMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordMessage
     */
    omit?: DiscordMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordMessageInclude<ExtArgs> | null
    where?: DiscordMessageWhereInput
  }

  /**
   * ListenerEvent without action
   */
  export type ListenerEventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
  }


  /**
   * Model ListenerEventSender
   */

  export type AggregateListenerEventSender = {
    _count: ListenerEventSenderCountAggregateOutputType | null
    _min: ListenerEventSenderMinAggregateOutputType | null
    _max: ListenerEventSenderMaxAggregateOutputType | null
  }

  export type ListenerEventSenderMinAggregateOutputType = {
    Id: string | null
    Name: string | null
    Description: string | null
    Slug: string | null
    Token: string | null
    IsActive: boolean | null
    DiscordChannelWebhookId: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type ListenerEventSenderMaxAggregateOutputType = {
    Id: string | null
    Name: string | null
    Description: string | null
    Slug: string | null
    Token: string | null
    IsActive: boolean | null
    DiscordChannelWebhookId: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type ListenerEventSenderCountAggregateOutputType = {
    Id: number
    Name: number
    Description: number
    Slug: number
    Token: number
    IsActive: number
    DiscordChannelWebhookId: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type ListenerEventSenderMinAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Slug?: true
    Token?: true
    IsActive?: true
    DiscordChannelWebhookId?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type ListenerEventSenderMaxAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Slug?: true
    Token?: true
    IsActive?: true
    DiscordChannelWebhookId?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type ListenerEventSenderCountAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Slug?: true
    Token?: true
    IsActive?: true
    DiscordChannelWebhookId?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type ListenerEventSenderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListenerEventSender to aggregate.
     */
    where?: ListenerEventSenderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListenerEventSenders to fetch.
     */
    orderBy?: ListenerEventSenderOrderByWithRelationInput | ListenerEventSenderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListenerEventSenderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListenerEventSenders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListenerEventSenders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListenerEventSenders
    **/
    _count?: true | ListenerEventSenderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListenerEventSenderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListenerEventSenderMaxAggregateInputType
  }

  export type GetListenerEventSenderAggregateType<T extends ListenerEventSenderAggregateArgs> = {
        [P in keyof T & keyof AggregateListenerEventSender]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListenerEventSender[P]>
      : GetScalarType<T[P], AggregateListenerEventSender[P]>
  }




  export type ListenerEventSenderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListenerEventSenderWhereInput
    orderBy?: ListenerEventSenderOrderByWithAggregationInput | ListenerEventSenderOrderByWithAggregationInput[]
    by: ListenerEventSenderScalarFieldEnum[] | ListenerEventSenderScalarFieldEnum
    having?: ListenerEventSenderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListenerEventSenderCountAggregateInputType | true
    _min?: ListenerEventSenderMinAggregateInputType
    _max?: ListenerEventSenderMaxAggregateInputType
  }

  export type ListenerEventSenderGroupByOutputType = {
    Id: string
    Name: string
    Description: string | null
    Slug: string
    Token: string
    IsActive: boolean
    DiscordChannelWebhookId: string | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: ListenerEventSenderCountAggregateOutputType | null
    _min: ListenerEventSenderMinAggregateOutputType | null
    _max: ListenerEventSenderMaxAggregateOutputType | null
  }

  type GetListenerEventSenderGroupByPayload<T extends ListenerEventSenderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListenerEventSenderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListenerEventSenderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListenerEventSenderGroupByOutputType[P]>
            : GetScalarType<T[P], ListenerEventSenderGroupByOutputType[P]>
        }
      >
    >


  export type ListenerEventSenderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    Token?: boolean
    IsActive?: boolean
    DiscordChannelWebhookId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    ListenerEvents?: boolean | ListenerEventSender$ListenerEventsArgs<ExtArgs>
    DiscordChannelWebhook?: boolean | ListenerEventSender$DiscordChannelWebhookArgs<ExtArgs>
    _count?: boolean | ListenerEventSenderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listenerEventSender"]>

  export type ListenerEventSenderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    Token?: boolean
    IsActive?: boolean
    DiscordChannelWebhookId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordChannelWebhook?: boolean | ListenerEventSender$DiscordChannelWebhookArgs<ExtArgs>
  }, ExtArgs["result"]["listenerEventSender"]>

  export type ListenerEventSenderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    Token?: boolean
    IsActive?: boolean
    DiscordChannelWebhookId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordChannelWebhook?: boolean | ListenerEventSender$DiscordChannelWebhookArgs<ExtArgs>
  }, ExtArgs["result"]["listenerEventSender"]>

  export type ListenerEventSenderSelectScalar = {
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    Token?: boolean
    IsActive?: boolean
    DiscordChannelWebhookId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type ListenerEventSenderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Name" | "Description" | "Slug" | "Token" | "IsActive" | "DiscordChannelWebhookId" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["listenerEventSender"]>
  export type ListenerEventSenderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListenerEvents?: boolean | ListenerEventSender$ListenerEventsArgs<ExtArgs>
    DiscordChannelWebhook?: boolean | ListenerEventSender$DiscordChannelWebhookArgs<ExtArgs>
    _count?: boolean | ListenerEventSenderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ListenerEventSenderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordChannelWebhook?: boolean | ListenerEventSender$DiscordChannelWebhookArgs<ExtArgs>
  }
  export type ListenerEventSenderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DiscordChannelWebhook?: boolean | ListenerEventSender$DiscordChannelWebhookArgs<ExtArgs>
  }

  export type $ListenerEventSenderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListenerEventSender"
    objects: {
      ListenerEvents: Prisma.$ListenerEventPayload<ExtArgs>[]
      DiscordChannelWebhook: Prisma.$DiscordChannelWebhookPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      Name: string
      Description: string | null
      Slug: string
      Token: string
      IsActive: boolean
      DiscordChannelWebhookId: string | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["listenerEventSender"]>
    composites: {}
  }

  type ListenerEventSenderGetPayload<S extends boolean | null | undefined | ListenerEventSenderDefaultArgs> = $Result.GetResult<Prisma.$ListenerEventSenderPayload, S>

  type ListenerEventSenderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListenerEventSenderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListenerEventSenderCountAggregateInputType | true
    }

  export interface ListenerEventSenderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListenerEventSender'], meta: { name: 'ListenerEventSender' } }
    /**
     * Find zero or one ListenerEventSender that matches the filter.
     * @param {ListenerEventSenderFindUniqueArgs} args - Arguments to find a ListenerEventSender
     * @example
     * // Get one ListenerEventSender
     * const listenerEventSender = await prisma.listenerEventSender.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListenerEventSenderFindUniqueArgs>(args: SelectSubset<T, ListenerEventSenderFindUniqueArgs<ExtArgs>>): Prisma__ListenerEventSenderClient<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListenerEventSender that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListenerEventSenderFindUniqueOrThrowArgs} args - Arguments to find a ListenerEventSender
     * @example
     * // Get one ListenerEventSender
     * const listenerEventSender = await prisma.listenerEventSender.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListenerEventSenderFindUniqueOrThrowArgs>(args: SelectSubset<T, ListenerEventSenderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListenerEventSenderClient<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListenerEventSender that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventSenderFindFirstArgs} args - Arguments to find a ListenerEventSender
     * @example
     * // Get one ListenerEventSender
     * const listenerEventSender = await prisma.listenerEventSender.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListenerEventSenderFindFirstArgs>(args?: SelectSubset<T, ListenerEventSenderFindFirstArgs<ExtArgs>>): Prisma__ListenerEventSenderClient<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListenerEventSender that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventSenderFindFirstOrThrowArgs} args - Arguments to find a ListenerEventSender
     * @example
     * // Get one ListenerEventSender
     * const listenerEventSender = await prisma.listenerEventSender.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListenerEventSenderFindFirstOrThrowArgs>(args?: SelectSubset<T, ListenerEventSenderFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListenerEventSenderClient<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListenerEventSenders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventSenderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListenerEventSenders
     * const listenerEventSenders = await prisma.listenerEventSender.findMany()
     * 
     * // Get first 10 ListenerEventSenders
     * const listenerEventSenders = await prisma.listenerEventSender.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const listenerEventSenderWithIdOnly = await prisma.listenerEventSender.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends ListenerEventSenderFindManyArgs>(args?: SelectSubset<T, ListenerEventSenderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListenerEventSender.
     * @param {ListenerEventSenderCreateArgs} args - Arguments to create a ListenerEventSender.
     * @example
     * // Create one ListenerEventSender
     * const ListenerEventSender = await prisma.listenerEventSender.create({
     *   data: {
     *     // ... data to create a ListenerEventSender
     *   }
     * })
     * 
     */
    create<T extends ListenerEventSenderCreateArgs>(args: SelectSubset<T, ListenerEventSenderCreateArgs<ExtArgs>>): Prisma__ListenerEventSenderClient<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListenerEventSenders.
     * @param {ListenerEventSenderCreateManyArgs} args - Arguments to create many ListenerEventSenders.
     * @example
     * // Create many ListenerEventSenders
     * const listenerEventSender = await prisma.listenerEventSender.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListenerEventSenderCreateManyArgs>(args?: SelectSubset<T, ListenerEventSenderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListenerEventSenders and returns the data saved in the database.
     * @param {ListenerEventSenderCreateManyAndReturnArgs} args - Arguments to create many ListenerEventSenders.
     * @example
     * // Create many ListenerEventSenders
     * const listenerEventSender = await prisma.listenerEventSender.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListenerEventSenders and only return the `Id`
     * const listenerEventSenderWithIdOnly = await prisma.listenerEventSender.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListenerEventSenderCreateManyAndReturnArgs>(args?: SelectSubset<T, ListenerEventSenderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListenerEventSender.
     * @param {ListenerEventSenderDeleteArgs} args - Arguments to delete one ListenerEventSender.
     * @example
     * // Delete one ListenerEventSender
     * const ListenerEventSender = await prisma.listenerEventSender.delete({
     *   where: {
     *     // ... filter to delete one ListenerEventSender
     *   }
     * })
     * 
     */
    delete<T extends ListenerEventSenderDeleteArgs>(args: SelectSubset<T, ListenerEventSenderDeleteArgs<ExtArgs>>): Prisma__ListenerEventSenderClient<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListenerEventSender.
     * @param {ListenerEventSenderUpdateArgs} args - Arguments to update one ListenerEventSender.
     * @example
     * // Update one ListenerEventSender
     * const listenerEventSender = await prisma.listenerEventSender.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListenerEventSenderUpdateArgs>(args: SelectSubset<T, ListenerEventSenderUpdateArgs<ExtArgs>>): Prisma__ListenerEventSenderClient<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListenerEventSenders.
     * @param {ListenerEventSenderDeleteManyArgs} args - Arguments to filter ListenerEventSenders to delete.
     * @example
     * // Delete a few ListenerEventSenders
     * const { count } = await prisma.listenerEventSender.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListenerEventSenderDeleteManyArgs>(args?: SelectSubset<T, ListenerEventSenderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListenerEventSenders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventSenderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListenerEventSenders
     * const listenerEventSender = await prisma.listenerEventSender.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListenerEventSenderUpdateManyArgs>(args: SelectSubset<T, ListenerEventSenderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListenerEventSenders and returns the data updated in the database.
     * @param {ListenerEventSenderUpdateManyAndReturnArgs} args - Arguments to update many ListenerEventSenders.
     * @example
     * // Update many ListenerEventSenders
     * const listenerEventSender = await prisma.listenerEventSender.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListenerEventSenders and only return the `Id`
     * const listenerEventSenderWithIdOnly = await prisma.listenerEventSender.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListenerEventSenderUpdateManyAndReturnArgs>(args: SelectSubset<T, ListenerEventSenderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListenerEventSender.
     * @param {ListenerEventSenderUpsertArgs} args - Arguments to update or create a ListenerEventSender.
     * @example
     * // Update or create a ListenerEventSender
     * const listenerEventSender = await prisma.listenerEventSender.upsert({
     *   create: {
     *     // ... data to create a ListenerEventSender
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListenerEventSender we want to update
     *   }
     * })
     */
    upsert<T extends ListenerEventSenderUpsertArgs>(args: SelectSubset<T, ListenerEventSenderUpsertArgs<ExtArgs>>): Prisma__ListenerEventSenderClient<$Result.GetResult<Prisma.$ListenerEventSenderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListenerEventSenders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventSenderCountArgs} args - Arguments to filter ListenerEventSenders to count.
     * @example
     * // Count the number of ListenerEventSenders
     * const count = await prisma.listenerEventSender.count({
     *   where: {
     *     // ... the filter for the ListenerEventSenders we want to count
     *   }
     * })
    **/
    count<T extends ListenerEventSenderCountArgs>(
      args?: Subset<T, ListenerEventSenderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListenerEventSenderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListenerEventSender.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventSenderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListenerEventSenderAggregateArgs>(args: Subset<T, ListenerEventSenderAggregateArgs>): Prisma.PrismaPromise<GetListenerEventSenderAggregateType<T>>

    /**
     * Group by ListenerEventSender.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListenerEventSenderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListenerEventSenderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListenerEventSenderGroupByArgs['orderBy'] }
        : { orderBy?: ListenerEventSenderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListenerEventSenderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListenerEventSenderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListenerEventSender model
   */
  readonly fields: ListenerEventSenderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListenerEventSender.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListenerEventSenderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ListenerEvents<T extends ListenerEventSender$ListenerEventsArgs<ExtArgs> = {}>(args?: Subset<T, ListenerEventSender$ListenerEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListenerEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    DiscordChannelWebhook<T extends ListenerEventSender$DiscordChannelWebhookArgs<ExtArgs> = {}>(args?: Subset<T, ListenerEventSender$DiscordChannelWebhookArgs<ExtArgs>>): Prisma__DiscordChannelWebhookClient<$Result.GetResult<Prisma.$DiscordChannelWebhookPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListenerEventSender model
   */
  interface ListenerEventSenderFieldRefs {
    readonly Id: FieldRef<"ListenerEventSender", 'String'>
    readonly Name: FieldRef<"ListenerEventSender", 'String'>
    readonly Description: FieldRef<"ListenerEventSender", 'String'>
    readonly Slug: FieldRef<"ListenerEventSender", 'String'>
    readonly Token: FieldRef<"ListenerEventSender", 'String'>
    readonly IsActive: FieldRef<"ListenerEventSender", 'Boolean'>
    readonly DiscordChannelWebhookId: FieldRef<"ListenerEventSender", 'String'>
    readonly CreatedAt: FieldRef<"ListenerEventSender", 'DateTime'>
    readonly UpdatedAt: FieldRef<"ListenerEventSender", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ListenerEventSender findUnique
   */
  export type ListenerEventSenderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
    /**
     * Filter, which ListenerEventSender to fetch.
     */
    where: ListenerEventSenderWhereUniqueInput
  }

  /**
   * ListenerEventSender findUniqueOrThrow
   */
  export type ListenerEventSenderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
    /**
     * Filter, which ListenerEventSender to fetch.
     */
    where: ListenerEventSenderWhereUniqueInput
  }

  /**
   * ListenerEventSender findFirst
   */
  export type ListenerEventSenderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
    /**
     * Filter, which ListenerEventSender to fetch.
     */
    where?: ListenerEventSenderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListenerEventSenders to fetch.
     */
    orderBy?: ListenerEventSenderOrderByWithRelationInput | ListenerEventSenderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListenerEventSenders.
     */
    cursor?: ListenerEventSenderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListenerEventSenders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListenerEventSenders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListenerEventSenders.
     */
    distinct?: ListenerEventSenderScalarFieldEnum | ListenerEventSenderScalarFieldEnum[]
  }

  /**
   * ListenerEventSender findFirstOrThrow
   */
  export type ListenerEventSenderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
    /**
     * Filter, which ListenerEventSender to fetch.
     */
    where?: ListenerEventSenderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListenerEventSenders to fetch.
     */
    orderBy?: ListenerEventSenderOrderByWithRelationInput | ListenerEventSenderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListenerEventSenders.
     */
    cursor?: ListenerEventSenderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListenerEventSenders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListenerEventSenders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListenerEventSenders.
     */
    distinct?: ListenerEventSenderScalarFieldEnum | ListenerEventSenderScalarFieldEnum[]
  }

  /**
   * ListenerEventSender findMany
   */
  export type ListenerEventSenderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
    /**
     * Filter, which ListenerEventSenders to fetch.
     */
    where?: ListenerEventSenderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListenerEventSenders to fetch.
     */
    orderBy?: ListenerEventSenderOrderByWithRelationInput | ListenerEventSenderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListenerEventSenders.
     */
    cursor?: ListenerEventSenderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListenerEventSenders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListenerEventSenders.
     */
    skip?: number
    distinct?: ListenerEventSenderScalarFieldEnum | ListenerEventSenderScalarFieldEnum[]
  }

  /**
   * ListenerEventSender create
   */
  export type ListenerEventSenderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
    /**
     * The data needed to create a ListenerEventSender.
     */
    data: XOR<ListenerEventSenderCreateInput, ListenerEventSenderUncheckedCreateInput>
  }

  /**
   * ListenerEventSender createMany
   */
  export type ListenerEventSenderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListenerEventSenders.
     */
    data: ListenerEventSenderCreateManyInput | ListenerEventSenderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListenerEventSender createManyAndReturn
   */
  export type ListenerEventSenderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * The data used to create many ListenerEventSenders.
     */
    data: ListenerEventSenderCreateManyInput | ListenerEventSenderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListenerEventSender update
   */
  export type ListenerEventSenderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
    /**
     * The data needed to update a ListenerEventSender.
     */
    data: XOR<ListenerEventSenderUpdateInput, ListenerEventSenderUncheckedUpdateInput>
    /**
     * Choose, which ListenerEventSender to update.
     */
    where: ListenerEventSenderWhereUniqueInput
  }

  /**
   * ListenerEventSender updateMany
   */
  export type ListenerEventSenderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListenerEventSenders.
     */
    data: XOR<ListenerEventSenderUpdateManyMutationInput, ListenerEventSenderUncheckedUpdateManyInput>
    /**
     * Filter which ListenerEventSenders to update
     */
    where?: ListenerEventSenderWhereInput
    /**
     * Limit how many ListenerEventSenders to update.
     */
    limit?: number
  }

  /**
   * ListenerEventSender updateManyAndReturn
   */
  export type ListenerEventSenderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * The data used to update ListenerEventSenders.
     */
    data: XOR<ListenerEventSenderUpdateManyMutationInput, ListenerEventSenderUncheckedUpdateManyInput>
    /**
     * Filter which ListenerEventSenders to update
     */
    where?: ListenerEventSenderWhereInput
    /**
     * Limit how many ListenerEventSenders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListenerEventSender upsert
   */
  export type ListenerEventSenderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
    /**
     * The filter to search for the ListenerEventSender to update in case it exists.
     */
    where: ListenerEventSenderWhereUniqueInput
    /**
     * In case the ListenerEventSender found by the `where` argument doesn't exist, create a new ListenerEventSender with this data.
     */
    create: XOR<ListenerEventSenderCreateInput, ListenerEventSenderUncheckedCreateInput>
    /**
     * In case the ListenerEventSender was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListenerEventSenderUpdateInput, ListenerEventSenderUncheckedUpdateInput>
  }

  /**
   * ListenerEventSender delete
   */
  export type ListenerEventSenderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
    /**
     * Filter which ListenerEventSender to delete.
     */
    where: ListenerEventSenderWhereUniqueInput
  }

  /**
   * ListenerEventSender deleteMany
   */
  export type ListenerEventSenderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListenerEventSenders to delete
     */
    where?: ListenerEventSenderWhereInput
    /**
     * Limit how many ListenerEventSenders to delete.
     */
    limit?: number
  }

  /**
   * ListenerEventSender.ListenerEvents
   */
  export type ListenerEventSender$ListenerEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEvent
     */
    select?: ListenerEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEvent
     */
    omit?: ListenerEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventInclude<ExtArgs> | null
    where?: ListenerEventWhereInput
    orderBy?: ListenerEventOrderByWithRelationInput | ListenerEventOrderByWithRelationInput[]
    cursor?: ListenerEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListenerEventScalarFieldEnum | ListenerEventScalarFieldEnum[]
  }

  /**
   * ListenerEventSender.DiscordChannelWebhook
   */
  export type ListenerEventSender$DiscordChannelWebhookArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscordChannelWebhook
     */
    select?: DiscordChannelWebhookSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscordChannelWebhook
     */
    omit?: DiscordChannelWebhookOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscordChannelWebhookInclude<ExtArgs> | null
    where?: DiscordChannelWebhookWhereInput
  }

  /**
   * ListenerEventSender without action
   */
  export type ListenerEventSenderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListenerEventSender
     */
    select?: ListenerEventSenderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListenerEventSender
     */
    omit?: ListenerEventSenderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListenerEventSenderInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    Id: string | null
    Username: string | null
    Password: string | null
    Email: string | null
    FirstName: string | null
    LastName: string | null
    FirstLoginCompleted: boolean | null
    IsOnline: boolean | null
    IsBanned: boolean | null
    BanReason: string | null
    BanExpiresAt: Date | null
    IsVerified: boolean | null
    LastLogin: Date | null
    InviteCodeId: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DiscordId: string | null
    DiscordUsername: string | null
    DiscordAvatar: string | null
    DiscordEmail: string | null
  }

  export type UserMaxAggregateOutputType = {
    Id: string | null
    Username: string | null
    Password: string | null
    Email: string | null
    FirstName: string | null
    LastName: string | null
    FirstLoginCompleted: boolean | null
    IsOnline: boolean | null
    IsBanned: boolean | null
    BanReason: string | null
    BanExpiresAt: Date | null
    IsVerified: boolean | null
    LastLogin: Date | null
    InviteCodeId: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DiscordId: string | null
    DiscordUsername: string | null
    DiscordAvatar: string | null
    DiscordEmail: string | null
  }

  export type UserCountAggregateOutputType = {
    Id: number
    Username: number
    Password: number
    Email: number
    FirstName: number
    LastName: number
    FirstLoginCompleted: number
    IsOnline: number
    IsBanned: number
    BanReason: number
    BanExpiresAt: number
    IsVerified: number
    LastLogin: number
    InviteCodeId: number
    CreatedAt: number
    UpdatedAt: number
    DiscordId: number
    DiscordUsername: number
    DiscordAvatar: number
    DiscordEmail: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    Id?: true
    Username?: true
    Password?: true
    Email?: true
    FirstName?: true
    LastName?: true
    FirstLoginCompleted?: true
    IsOnline?: true
    IsBanned?: true
    BanReason?: true
    BanExpiresAt?: true
    IsVerified?: true
    LastLogin?: true
    InviteCodeId?: true
    CreatedAt?: true
    UpdatedAt?: true
    DiscordId?: true
    DiscordUsername?: true
    DiscordAvatar?: true
    DiscordEmail?: true
  }

  export type UserMaxAggregateInputType = {
    Id?: true
    Username?: true
    Password?: true
    Email?: true
    FirstName?: true
    LastName?: true
    FirstLoginCompleted?: true
    IsOnline?: true
    IsBanned?: true
    BanReason?: true
    BanExpiresAt?: true
    IsVerified?: true
    LastLogin?: true
    InviteCodeId?: true
    CreatedAt?: true
    UpdatedAt?: true
    DiscordId?: true
    DiscordUsername?: true
    DiscordAvatar?: true
    DiscordEmail?: true
  }

  export type UserCountAggregateInputType = {
    Id?: true
    Username?: true
    Password?: true
    Email?: true
    FirstName?: true
    LastName?: true
    FirstLoginCompleted?: true
    IsOnline?: true
    IsBanned?: true
    BanReason?: true
    BanExpiresAt?: true
    IsVerified?: true
    LastLogin?: true
    InviteCodeId?: true
    CreatedAt?: true
    UpdatedAt?: true
    DiscordId?: true
    DiscordUsername?: true
    DiscordAvatar?: true
    DiscordEmail?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    Id: string
    Username: string
    Password: string | null
    Email: string | null
    FirstName: string | null
    LastName: string | null
    FirstLoginCompleted: boolean
    IsOnline: boolean
    IsBanned: boolean
    BanReason: string | null
    BanExpiresAt: Date | null
    IsVerified: boolean
    LastLogin: Date | null
    InviteCodeId: string | null
    CreatedAt: Date
    UpdatedAt: Date
    DiscordId: string | null
    DiscordUsername: string | null
    DiscordAvatar: string | null
    DiscordEmail: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Username?: boolean
    Password?: boolean
    Email?: boolean
    FirstName?: boolean
    LastName?: boolean
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: boolean
    BanExpiresAt?: boolean
    IsVerified?: boolean
    LastLogin?: boolean
    InviteCodeId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordId?: boolean
    DiscordUsername?: boolean
    DiscordAvatar?: boolean
    DiscordEmail?: boolean
    Roles?: boolean | User$RolesArgs<ExtArgs>
    PrivacySettings?: boolean | User$PrivacySettingsArgs<ExtArgs>
    Members?: boolean | User$MembersArgs<ExtArgs>
    InviteCode?: boolean | User$InviteCodeArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Username?: boolean
    Password?: boolean
    Email?: boolean
    FirstName?: boolean
    LastName?: boolean
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: boolean
    BanExpiresAt?: boolean
    IsVerified?: boolean
    LastLogin?: boolean
    InviteCodeId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordId?: boolean
    DiscordUsername?: boolean
    DiscordAvatar?: boolean
    DiscordEmail?: boolean
    InviteCode?: boolean | User$InviteCodeArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Username?: boolean
    Password?: boolean
    Email?: boolean
    FirstName?: boolean
    LastName?: boolean
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: boolean
    BanExpiresAt?: boolean
    IsVerified?: boolean
    LastLogin?: boolean
    InviteCodeId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordId?: boolean
    DiscordUsername?: boolean
    DiscordAvatar?: boolean
    DiscordEmail?: boolean
    InviteCode?: boolean | User$InviteCodeArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    Id?: boolean
    Username?: boolean
    Password?: boolean
    Email?: boolean
    FirstName?: boolean
    LastName?: boolean
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: boolean
    BanExpiresAt?: boolean
    IsVerified?: boolean
    LastLogin?: boolean
    InviteCodeId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DiscordId?: boolean
    DiscordUsername?: boolean
    DiscordAvatar?: boolean
    DiscordEmail?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Username" | "Password" | "Email" | "FirstName" | "LastName" | "FirstLoginCompleted" | "IsOnline" | "IsBanned" | "BanReason" | "BanExpiresAt" | "IsVerified" | "LastLogin" | "InviteCodeId" | "CreatedAt" | "UpdatedAt" | "DiscordId" | "DiscordUsername" | "DiscordAvatar" | "DiscordEmail", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Roles?: boolean | User$RolesArgs<ExtArgs>
    PrivacySettings?: boolean | User$PrivacySettingsArgs<ExtArgs>
    Members?: boolean | User$MembersArgs<ExtArgs>
    InviteCode?: boolean | User$InviteCodeArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InviteCode?: boolean | User$InviteCodeArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InviteCode?: boolean | User$InviteCodeArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      Roles: Prisma.$RolePayload<ExtArgs>[]
      PrivacySettings: Prisma.$UserPrivacySettingsPayload<ExtArgs>[]
      Members: Prisma.$MemberPayload<ExtArgs>[]
      InviteCode: Prisma.$InviteCodePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      Username: string
      Password: string | null
      Email: string | null
      FirstName: string | null
      LastName: string | null
      FirstLoginCompleted: boolean
      IsOnline: boolean
      IsBanned: boolean
      BanReason: string | null
      BanExpiresAt: Date | null
      IsVerified: boolean
      LastLogin: Date | null
      InviteCodeId: string | null
      CreatedAt: Date
      UpdatedAt: Date
      DiscordId: string | null
      DiscordUsername: string | null
      DiscordAvatar: string | null
      DiscordEmail: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `Id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `Id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Roles<T extends User$RolesArgs<ExtArgs> = {}>(args?: Subset<T, User$RolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PrivacySettings<T extends User$PrivacySettingsArgs<ExtArgs> = {}>(args?: Subset<T, User$PrivacySettingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Members<T extends User$MembersArgs<ExtArgs> = {}>(args?: Subset<T, User$MembersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    InviteCode<T extends User$InviteCodeArgs<ExtArgs> = {}>(args?: Subset<T, User$InviteCodeArgs<ExtArgs>>): Prisma__InviteCodeClient<$Result.GetResult<Prisma.$InviteCodePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly Id: FieldRef<"User", 'String'>
    readonly Username: FieldRef<"User", 'String'>
    readonly Password: FieldRef<"User", 'String'>
    readonly Email: FieldRef<"User", 'String'>
    readonly FirstName: FieldRef<"User", 'String'>
    readonly LastName: FieldRef<"User", 'String'>
    readonly FirstLoginCompleted: FieldRef<"User", 'Boolean'>
    readonly IsOnline: FieldRef<"User", 'Boolean'>
    readonly IsBanned: FieldRef<"User", 'Boolean'>
    readonly BanReason: FieldRef<"User", 'String'>
    readonly BanExpiresAt: FieldRef<"User", 'DateTime'>
    readonly IsVerified: FieldRef<"User", 'Boolean'>
    readonly LastLogin: FieldRef<"User", 'DateTime'>
    readonly InviteCodeId: FieldRef<"User", 'String'>
    readonly CreatedAt: FieldRef<"User", 'DateTime'>
    readonly UpdatedAt: FieldRef<"User", 'DateTime'>
    readonly DiscordId: FieldRef<"User", 'String'>
    readonly DiscordUsername: FieldRef<"User", 'String'>
    readonly DiscordAvatar: FieldRef<"User", 'String'>
    readonly DiscordEmail: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.Roles
   */
  export type User$RolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * User.PrivacySettings
   */
  export type User$PrivacySettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
    where?: UserPrivacySettingsWhereInput
    orderBy?: UserPrivacySettingsOrderByWithRelationInput | UserPrivacySettingsOrderByWithRelationInput[]
    cursor?: UserPrivacySettingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserPrivacySettingsScalarFieldEnum | UserPrivacySettingsScalarFieldEnum[]
  }

  /**
   * User.Members
   */
  export type User$MembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    where?: MemberWhereInput
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    cursor?: MemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * User.InviteCode
   */
  export type User$InviteCodeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InviteCode
     */
    select?: InviteCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InviteCode
     */
    omit?: InviteCodeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InviteCodeInclude<ExtArgs> | null
    where?: InviteCodeWhereInput
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserPrivacySettings
   */

  export type AggregateUserPrivacySettings = {
    _count: UserPrivacySettingsCountAggregateOutputType | null
    _min: UserPrivacySettingsMinAggregateOutputType | null
    _max: UserPrivacySettingsMaxAggregateOutputType | null
  }

  export type UserPrivacySettingsMinAggregateOutputType = {
    Id: string | null
    UserId: string | null
    ShowOnlineStatus: boolean | null
    ShowFirstName: boolean | null
    ShowLastName: boolean | null
    ShowLastNameInitial: boolean | null
    ShowLastLogin: boolean | null
    CreatedAt: Date | null
  }

  export type UserPrivacySettingsMaxAggregateOutputType = {
    Id: string | null
    UserId: string | null
    ShowOnlineStatus: boolean | null
    ShowFirstName: boolean | null
    ShowLastName: boolean | null
    ShowLastNameInitial: boolean | null
    ShowLastLogin: boolean | null
    CreatedAt: Date | null
  }

  export type UserPrivacySettingsCountAggregateOutputType = {
    Id: number
    UserId: number
    ShowOnlineStatus: number
    ShowFirstName: number
    ShowLastName: number
    ShowLastNameInitial: number
    ShowLastLogin: number
    CreatedAt: number
    _all: number
  }


  export type UserPrivacySettingsMinAggregateInputType = {
    Id?: true
    UserId?: true
    ShowOnlineStatus?: true
    ShowFirstName?: true
    ShowLastName?: true
    ShowLastNameInitial?: true
    ShowLastLogin?: true
    CreatedAt?: true
  }

  export type UserPrivacySettingsMaxAggregateInputType = {
    Id?: true
    UserId?: true
    ShowOnlineStatus?: true
    ShowFirstName?: true
    ShowLastName?: true
    ShowLastNameInitial?: true
    ShowLastLogin?: true
    CreatedAt?: true
  }

  export type UserPrivacySettingsCountAggregateInputType = {
    Id?: true
    UserId?: true
    ShowOnlineStatus?: true
    ShowFirstName?: true
    ShowLastName?: true
    ShowLastNameInitial?: true
    ShowLastLogin?: true
    CreatedAt?: true
    _all?: true
  }

  export type UserPrivacySettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserPrivacySettings to aggregate.
     */
    where?: UserPrivacySettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPrivacySettings to fetch.
     */
    orderBy?: UserPrivacySettingsOrderByWithRelationInput | UserPrivacySettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserPrivacySettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPrivacySettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPrivacySettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserPrivacySettings
    **/
    _count?: true | UserPrivacySettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserPrivacySettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserPrivacySettingsMaxAggregateInputType
  }

  export type GetUserPrivacySettingsAggregateType<T extends UserPrivacySettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateUserPrivacySettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserPrivacySettings[P]>
      : GetScalarType<T[P], AggregateUserPrivacySettings[P]>
  }




  export type UserPrivacySettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserPrivacySettingsWhereInput
    orderBy?: UserPrivacySettingsOrderByWithAggregationInput | UserPrivacySettingsOrderByWithAggregationInput[]
    by: UserPrivacySettingsScalarFieldEnum[] | UserPrivacySettingsScalarFieldEnum
    having?: UserPrivacySettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserPrivacySettingsCountAggregateInputType | true
    _min?: UserPrivacySettingsMinAggregateInputType
    _max?: UserPrivacySettingsMaxAggregateInputType
  }

  export type UserPrivacySettingsGroupByOutputType = {
    Id: string
    UserId: string
    ShowOnlineStatus: boolean
    ShowFirstName: boolean
    ShowLastName: boolean
    ShowLastNameInitial: boolean
    ShowLastLogin: boolean
    CreatedAt: Date
    _count: UserPrivacySettingsCountAggregateOutputType | null
    _min: UserPrivacySettingsMinAggregateOutputType | null
    _max: UserPrivacySettingsMaxAggregateOutputType | null
  }

  type GetUserPrivacySettingsGroupByPayload<T extends UserPrivacySettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserPrivacySettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserPrivacySettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserPrivacySettingsGroupByOutputType[P]>
            : GetScalarType<T[P], UserPrivacySettingsGroupByOutputType[P]>
        }
      >
    >


  export type UserPrivacySettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    UserId?: boolean
    ShowOnlineStatus?: boolean
    ShowFirstName?: boolean
    ShowLastName?: boolean
    ShowLastNameInitial?: boolean
    ShowLastLogin?: boolean
    CreatedAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userPrivacySettings"]>

  export type UserPrivacySettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    UserId?: boolean
    ShowOnlineStatus?: boolean
    ShowFirstName?: boolean
    ShowLastName?: boolean
    ShowLastNameInitial?: boolean
    ShowLastLogin?: boolean
    CreatedAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userPrivacySettings"]>

  export type UserPrivacySettingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    UserId?: boolean
    ShowOnlineStatus?: boolean
    ShowFirstName?: boolean
    ShowLastName?: boolean
    ShowLastNameInitial?: boolean
    ShowLastLogin?: boolean
    CreatedAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userPrivacySettings"]>

  export type UserPrivacySettingsSelectScalar = {
    Id?: boolean
    UserId?: boolean
    ShowOnlineStatus?: boolean
    ShowFirstName?: boolean
    ShowLastName?: boolean
    ShowLastNameInitial?: boolean
    ShowLastLogin?: boolean
    CreatedAt?: boolean
  }

  export type UserPrivacySettingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "UserId" | "ShowOnlineStatus" | "ShowFirstName" | "ShowLastName" | "ShowLastNameInitial" | "ShowLastLogin" | "CreatedAt", ExtArgs["result"]["userPrivacySettings"]>
  export type UserPrivacySettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserPrivacySettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserPrivacySettingsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserPrivacySettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserPrivacySettings"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      UserId: string
      ShowOnlineStatus: boolean
      ShowFirstName: boolean
      ShowLastName: boolean
      ShowLastNameInitial: boolean
      ShowLastLogin: boolean
      CreatedAt: Date
    }, ExtArgs["result"]["userPrivacySettings"]>
    composites: {}
  }

  type UserPrivacySettingsGetPayload<S extends boolean | null | undefined | UserPrivacySettingsDefaultArgs> = $Result.GetResult<Prisma.$UserPrivacySettingsPayload, S>

  type UserPrivacySettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserPrivacySettingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserPrivacySettingsCountAggregateInputType | true
    }

  export interface UserPrivacySettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserPrivacySettings'], meta: { name: 'UserPrivacySettings' } }
    /**
     * Find zero or one UserPrivacySettings that matches the filter.
     * @param {UserPrivacySettingsFindUniqueArgs} args - Arguments to find a UserPrivacySettings
     * @example
     * // Get one UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserPrivacySettingsFindUniqueArgs>(args: SelectSubset<T, UserPrivacySettingsFindUniqueArgs<ExtArgs>>): Prisma__UserPrivacySettingsClient<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserPrivacySettings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserPrivacySettingsFindUniqueOrThrowArgs} args - Arguments to find a UserPrivacySettings
     * @example
     * // Get one UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserPrivacySettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, UserPrivacySettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserPrivacySettingsClient<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserPrivacySettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPrivacySettingsFindFirstArgs} args - Arguments to find a UserPrivacySettings
     * @example
     * // Get one UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserPrivacySettingsFindFirstArgs>(args?: SelectSubset<T, UserPrivacySettingsFindFirstArgs<ExtArgs>>): Prisma__UserPrivacySettingsClient<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserPrivacySettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPrivacySettingsFindFirstOrThrowArgs} args - Arguments to find a UserPrivacySettings
     * @example
     * // Get one UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserPrivacySettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, UserPrivacySettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserPrivacySettingsClient<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserPrivacySettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPrivacySettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.findMany()
     * 
     * // Get first 10 UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const userPrivacySettingsWithIdOnly = await prisma.userPrivacySettings.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends UserPrivacySettingsFindManyArgs>(args?: SelectSubset<T, UserPrivacySettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserPrivacySettings.
     * @param {UserPrivacySettingsCreateArgs} args - Arguments to create a UserPrivacySettings.
     * @example
     * // Create one UserPrivacySettings
     * const UserPrivacySettings = await prisma.userPrivacySettings.create({
     *   data: {
     *     // ... data to create a UserPrivacySettings
     *   }
     * })
     * 
     */
    create<T extends UserPrivacySettingsCreateArgs>(args: SelectSubset<T, UserPrivacySettingsCreateArgs<ExtArgs>>): Prisma__UserPrivacySettingsClient<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserPrivacySettings.
     * @param {UserPrivacySettingsCreateManyArgs} args - Arguments to create many UserPrivacySettings.
     * @example
     * // Create many UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserPrivacySettingsCreateManyArgs>(args?: SelectSubset<T, UserPrivacySettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserPrivacySettings and returns the data saved in the database.
     * @param {UserPrivacySettingsCreateManyAndReturnArgs} args - Arguments to create many UserPrivacySettings.
     * @example
     * // Create many UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserPrivacySettings and only return the `Id`
     * const userPrivacySettingsWithIdOnly = await prisma.userPrivacySettings.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserPrivacySettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, UserPrivacySettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserPrivacySettings.
     * @param {UserPrivacySettingsDeleteArgs} args - Arguments to delete one UserPrivacySettings.
     * @example
     * // Delete one UserPrivacySettings
     * const UserPrivacySettings = await prisma.userPrivacySettings.delete({
     *   where: {
     *     // ... filter to delete one UserPrivacySettings
     *   }
     * })
     * 
     */
    delete<T extends UserPrivacySettingsDeleteArgs>(args: SelectSubset<T, UserPrivacySettingsDeleteArgs<ExtArgs>>): Prisma__UserPrivacySettingsClient<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserPrivacySettings.
     * @param {UserPrivacySettingsUpdateArgs} args - Arguments to update one UserPrivacySettings.
     * @example
     * // Update one UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserPrivacySettingsUpdateArgs>(args: SelectSubset<T, UserPrivacySettingsUpdateArgs<ExtArgs>>): Prisma__UserPrivacySettingsClient<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserPrivacySettings.
     * @param {UserPrivacySettingsDeleteManyArgs} args - Arguments to filter UserPrivacySettings to delete.
     * @example
     * // Delete a few UserPrivacySettings
     * const { count } = await prisma.userPrivacySettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserPrivacySettingsDeleteManyArgs>(args?: SelectSubset<T, UserPrivacySettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserPrivacySettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPrivacySettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserPrivacySettingsUpdateManyArgs>(args: SelectSubset<T, UserPrivacySettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserPrivacySettings and returns the data updated in the database.
     * @param {UserPrivacySettingsUpdateManyAndReturnArgs} args - Arguments to update many UserPrivacySettings.
     * @example
     * // Update many UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserPrivacySettings and only return the `Id`
     * const userPrivacySettingsWithIdOnly = await prisma.userPrivacySettings.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserPrivacySettingsUpdateManyAndReturnArgs>(args: SelectSubset<T, UserPrivacySettingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserPrivacySettings.
     * @param {UserPrivacySettingsUpsertArgs} args - Arguments to update or create a UserPrivacySettings.
     * @example
     * // Update or create a UserPrivacySettings
     * const userPrivacySettings = await prisma.userPrivacySettings.upsert({
     *   create: {
     *     // ... data to create a UserPrivacySettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserPrivacySettings we want to update
     *   }
     * })
     */
    upsert<T extends UserPrivacySettingsUpsertArgs>(args: SelectSubset<T, UserPrivacySettingsUpsertArgs<ExtArgs>>): Prisma__UserPrivacySettingsClient<$Result.GetResult<Prisma.$UserPrivacySettingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserPrivacySettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPrivacySettingsCountArgs} args - Arguments to filter UserPrivacySettings to count.
     * @example
     * // Count the number of UserPrivacySettings
     * const count = await prisma.userPrivacySettings.count({
     *   where: {
     *     // ... the filter for the UserPrivacySettings we want to count
     *   }
     * })
    **/
    count<T extends UserPrivacySettingsCountArgs>(
      args?: Subset<T, UserPrivacySettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserPrivacySettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserPrivacySettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPrivacySettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserPrivacySettingsAggregateArgs>(args: Subset<T, UserPrivacySettingsAggregateArgs>): Prisma.PrismaPromise<GetUserPrivacySettingsAggregateType<T>>

    /**
     * Group by UserPrivacySettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPrivacySettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserPrivacySettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserPrivacySettingsGroupByArgs['orderBy'] }
        : { orderBy?: UserPrivacySettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserPrivacySettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserPrivacySettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserPrivacySettings model
   */
  readonly fields: UserPrivacySettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserPrivacySettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserPrivacySettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserPrivacySettings model
   */
  interface UserPrivacySettingsFieldRefs {
    readonly Id: FieldRef<"UserPrivacySettings", 'String'>
    readonly UserId: FieldRef<"UserPrivacySettings", 'String'>
    readonly ShowOnlineStatus: FieldRef<"UserPrivacySettings", 'Boolean'>
    readonly ShowFirstName: FieldRef<"UserPrivacySettings", 'Boolean'>
    readonly ShowLastName: FieldRef<"UserPrivacySettings", 'Boolean'>
    readonly ShowLastNameInitial: FieldRef<"UserPrivacySettings", 'Boolean'>
    readonly ShowLastLogin: FieldRef<"UserPrivacySettings", 'Boolean'>
    readonly CreatedAt: FieldRef<"UserPrivacySettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserPrivacySettings findUnique
   */
  export type UserPrivacySettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserPrivacySettings to fetch.
     */
    where: UserPrivacySettingsWhereUniqueInput
  }

  /**
   * UserPrivacySettings findUniqueOrThrow
   */
  export type UserPrivacySettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserPrivacySettings to fetch.
     */
    where: UserPrivacySettingsWhereUniqueInput
  }

  /**
   * UserPrivacySettings findFirst
   */
  export type UserPrivacySettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserPrivacySettings to fetch.
     */
    where?: UserPrivacySettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPrivacySettings to fetch.
     */
    orderBy?: UserPrivacySettingsOrderByWithRelationInput | UserPrivacySettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserPrivacySettings.
     */
    cursor?: UserPrivacySettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPrivacySettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPrivacySettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserPrivacySettings.
     */
    distinct?: UserPrivacySettingsScalarFieldEnum | UserPrivacySettingsScalarFieldEnum[]
  }

  /**
   * UserPrivacySettings findFirstOrThrow
   */
  export type UserPrivacySettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserPrivacySettings to fetch.
     */
    where?: UserPrivacySettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPrivacySettings to fetch.
     */
    orderBy?: UserPrivacySettingsOrderByWithRelationInput | UserPrivacySettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserPrivacySettings.
     */
    cursor?: UserPrivacySettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPrivacySettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPrivacySettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserPrivacySettings.
     */
    distinct?: UserPrivacySettingsScalarFieldEnum | UserPrivacySettingsScalarFieldEnum[]
  }

  /**
   * UserPrivacySettings findMany
   */
  export type UserPrivacySettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserPrivacySettings to fetch.
     */
    where?: UserPrivacySettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPrivacySettings to fetch.
     */
    orderBy?: UserPrivacySettingsOrderByWithRelationInput | UserPrivacySettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserPrivacySettings.
     */
    cursor?: UserPrivacySettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPrivacySettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPrivacySettings.
     */
    skip?: number
    distinct?: UserPrivacySettingsScalarFieldEnum | UserPrivacySettingsScalarFieldEnum[]
  }

  /**
   * UserPrivacySettings create
   */
  export type UserPrivacySettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a UserPrivacySettings.
     */
    data: XOR<UserPrivacySettingsCreateInput, UserPrivacySettingsUncheckedCreateInput>
  }

  /**
   * UserPrivacySettings createMany
   */
  export type UserPrivacySettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserPrivacySettings.
     */
    data: UserPrivacySettingsCreateManyInput | UserPrivacySettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserPrivacySettings createManyAndReturn
   */
  export type UserPrivacySettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * The data used to create many UserPrivacySettings.
     */
    data: UserPrivacySettingsCreateManyInput | UserPrivacySettingsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserPrivacySettings update
   */
  export type UserPrivacySettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a UserPrivacySettings.
     */
    data: XOR<UserPrivacySettingsUpdateInput, UserPrivacySettingsUncheckedUpdateInput>
    /**
     * Choose, which UserPrivacySettings to update.
     */
    where: UserPrivacySettingsWhereUniqueInput
  }

  /**
   * UserPrivacySettings updateMany
   */
  export type UserPrivacySettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserPrivacySettings.
     */
    data: XOR<UserPrivacySettingsUpdateManyMutationInput, UserPrivacySettingsUncheckedUpdateManyInput>
    /**
     * Filter which UserPrivacySettings to update
     */
    where?: UserPrivacySettingsWhereInput
    /**
     * Limit how many UserPrivacySettings to update.
     */
    limit?: number
  }

  /**
   * UserPrivacySettings updateManyAndReturn
   */
  export type UserPrivacySettingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * The data used to update UserPrivacySettings.
     */
    data: XOR<UserPrivacySettingsUpdateManyMutationInput, UserPrivacySettingsUncheckedUpdateManyInput>
    /**
     * Filter which UserPrivacySettings to update
     */
    where?: UserPrivacySettingsWhereInput
    /**
     * Limit how many UserPrivacySettings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserPrivacySettings upsert
   */
  export type UserPrivacySettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the UserPrivacySettings to update in case it exists.
     */
    where: UserPrivacySettingsWhereUniqueInput
    /**
     * In case the UserPrivacySettings found by the `where` argument doesn't exist, create a new UserPrivacySettings with this data.
     */
    create: XOR<UserPrivacySettingsCreateInput, UserPrivacySettingsUncheckedCreateInput>
    /**
     * In case the UserPrivacySettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserPrivacySettingsUpdateInput, UserPrivacySettingsUncheckedUpdateInput>
  }

  /**
   * UserPrivacySettings delete
   */
  export type UserPrivacySettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
    /**
     * Filter which UserPrivacySettings to delete.
     */
    where: UserPrivacySettingsWhereUniqueInput
  }

  /**
   * UserPrivacySettings deleteMany
   */
  export type UserPrivacySettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserPrivacySettings to delete
     */
    where?: UserPrivacySettingsWhereInput
    /**
     * Limit how many UserPrivacySettings to delete.
     */
    limit?: number
  }

  /**
   * UserPrivacySettings without action
   */
  export type UserPrivacySettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPrivacySettings
     */
    select?: UserPrivacySettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPrivacySettings
     */
    omit?: UserPrivacySettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPrivacySettingsInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    Id: number | null
  }

  export type RoleSumAggregateOutputType = {
    Id: number | null
  }

  export type RoleMinAggregateOutputType = {
    Id: number | null
    Name: string | null
    Description: string | null
    Slug: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    VirtualAirlineRoleId: string | null
  }

  export type RoleMaxAggregateOutputType = {
    Id: number | null
    Name: string | null
    Description: string | null
    Slug: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    VirtualAirlineRoleId: string | null
  }

  export type RoleCountAggregateOutputType = {
    Id: number
    Name: number
    Description: number
    Slug: number
    CreatedAt: number
    UpdatedAt: number
    VirtualAirlineRoleId: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    Id?: true
  }

  export type RoleSumAggregateInputType = {
    Id?: true
  }

  export type RoleMinAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Slug?: true
    CreatedAt?: true
    UpdatedAt?: true
    VirtualAirlineRoleId?: true
  }

  export type RoleMaxAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Slug?: true
    CreatedAt?: true
    UpdatedAt?: true
    VirtualAirlineRoleId?: true
  }

  export type RoleCountAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Slug?: true
    CreatedAt?: true
    UpdatedAt?: true
    VirtualAirlineRoleId?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    Id: number
    Name: string
    Description: string | null
    Slug: string
    CreatedAt: Date
    UpdatedAt: Date
    VirtualAirlineRoleId: string | null
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    VirtualAirlineRoleId?: boolean
    Permissions?: boolean | Role$PermissionsArgs<ExtArgs>
    Users?: boolean | Role$UsersArgs<ExtArgs>
    VirtualAirlineRole?: boolean | Role$VirtualAirlineRoleArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    VirtualAirlineRoleId?: boolean
    VirtualAirlineRole?: boolean | Role$VirtualAirlineRoleArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    VirtualAirlineRoleId?: boolean
    VirtualAirlineRole?: boolean | Role$VirtualAirlineRoleArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    VirtualAirlineRoleId?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Name" | "Description" | "Slug" | "CreatedAt" | "UpdatedAt" | "VirtualAirlineRoleId", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Permissions?: boolean | Role$PermissionsArgs<ExtArgs>
    Users?: boolean | Role$UsersArgs<ExtArgs>
    VirtualAirlineRole?: boolean | Role$VirtualAirlineRoleArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    VirtualAirlineRole?: boolean | Role$VirtualAirlineRoleArgs<ExtArgs>
  }
  export type RoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    VirtualAirlineRole?: boolean | Role$VirtualAirlineRoleArgs<ExtArgs>
  }

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      Permissions: Prisma.$PermissionPayload<ExtArgs>[]
      Users: Prisma.$UserPayload<ExtArgs>[]
      VirtualAirlineRole: Prisma.$VirtualAirlineRolePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      Name: string
      Description: string | null
      Slug: string
      CreatedAt: Date
      UpdatedAt: Date
      VirtualAirlineRoleId: string | null
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `Id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RoleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `Id`
     * const roleWithIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Permissions<T extends Role$PermissionsArgs<ExtArgs> = {}>(args?: Subset<T, Role$PermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Users<T extends Role$UsersArgs<ExtArgs> = {}>(args?: Subset<T, Role$UsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    VirtualAirlineRole<T extends Role$VirtualAirlineRoleArgs<ExtArgs> = {}>(args?: Subset<T, Role$VirtualAirlineRoleArgs<ExtArgs>>): Prisma__VirtualAirlineRoleClient<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly Id: FieldRef<"Role", 'Int'>
    readonly Name: FieldRef<"Role", 'String'>
    readonly Description: FieldRef<"Role", 'String'>
    readonly Slug: FieldRef<"Role", 'String'>
    readonly CreatedAt: FieldRef<"Role", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Role", 'DateTime'>
    readonly VirtualAirlineRoleId: FieldRef<"Role", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role updateManyAndReturn
   */
  export type RoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.Permissions
   */
  export type Role$PermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    cursor?: PermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Role.Users
   */
  export type Role$UsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Role.VirtualAirlineRole
   */
  export type Role$VirtualAirlineRoleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    where?: VirtualAirlineRoleWhereInput
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model Permission
   */

  export type AggregatePermission = {
    _count: PermissionCountAggregateOutputType | null
    _avg: PermissionAvgAggregateOutputType | null
    _sum: PermissionSumAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  export type PermissionAvgAggregateOutputType = {
    Id: number | null
  }

  export type PermissionSumAggregateOutputType = {
    Id: number | null
  }

  export type PermissionMinAggregateOutputType = {
    Id: number | null
    Name: string | null
    Description: string | null
    Slug: string | null
    Entity: string | null
    Action: string | null
  }

  export type PermissionMaxAggregateOutputType = {
    Id: number | null
    Name: string | null
    Description: string | null
    Slug: string | null
    Entity: string | null
    Action: string | null
  }

  export type PermissionCountAggregateOutputType = {
    Id: number
    Name: number
    Description: number
    Slug: number
    Entity: number
    Action: number
    _all: number
  }


  export type PermissionAvgAggregateInputType = {
    Id?: true
  }

  export type PermissionSumAggregateInputType = {
    Id?: true
  }

  export type PermissionMinAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Slug?: true
    Entity?: true
    Action?: true
  }

  export type PermissionMaxAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Slug?: true
    Entity?: true
    Action?: true
  }

  export type PermissionCountAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Slug?: true
    Entity?: true
    Action?: true
    _all?: true
  }

  export type PermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permission to aggregate.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permissions
    **/
    _count?: true | PermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionMaxAggregateInputType
  }

  export type GetPermissionAggregateType<T extends PermissionAggregateArgs> = {
        [P in keyof T & keyof AggregatePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermission[P]>
      : GetScalarType<T[P], AggregatePermission[P]>
  }




  export type PermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithAggregationInput | PermissionOrderByWithAggregationInput[]
    by: PermissionScalarFieldEnum[] | PermissionScalarFieldEnum
    having?: PermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionCountAggregateInputType | true
    _avg?: PermissionAvgAggregateInputType
    _sum?: PermissionSumAggregateInputType
    _min?: PermissionMinAggregateInputType
    _max?: PermissionMaxAggregateInputType
  }

  export type PermissionGroupByOutputType = {
    Id: number
    Name: string
    Description: string | null
    Slug: string
    Entity: string
    Action: string
    _count: PermissionCountAggregateOutputType | null
    _avg: PermissionAvgAggregateOutputType | null
    _sum: PermissionSumAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  type GetPermissionGroupByPayload<T extends PermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionGroupByOutputType[P]>
        }
      >
    >


  export type PermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    Entity?: boolean
    Action?: boolean
    Roles?: boolean | Permission$RolesArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    Entity?: boolean
    Action?: boolean
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    Entity?: boolean
    Action?: boolean
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectScalar = {
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Slug?: boolean
    Entity?: boolean
    Action?: boolean
  }

  export type PermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Name" | "Description" | "Slug" | "Entity" | "Action", ExtArgs["result"]["permission"]>
  export type PermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Roles?: boolean | Permission$RolesArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permission"
    objects: {
      Roles: Prisma.$RolePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      Name: string
      Description: string | null
      Slug: string
      Entity: string
      Action: string
    }, ExtArgs["result"]["permission"]>
    composites: {}
  }

  type PermissionGetPayload<S extends boolean | null | undefined | PermissionDefaultArgs> = $Result.GetResult<Prisma.$PermissionPayload, S>

  type PermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissionCountAggregateInputType | true
    }

  export interface PermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permission'], meta: { name: 'Permission' } }
    /**
     * Find zero or one Permission that matches the filter.
     * @param {PermissionFindUniqueArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermissionFindUniqueArgs>(args: SelectSubset<T, PermissionFindUniqueArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermissionFindUniqueOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, PermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermissionFindFirstArgs>(args?: SelectSubset<T, PermissionFindFirstArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, PermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permission.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permission.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const permissionWithIdOnly = await prisma.permission.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends PermissionFindManyArgs>(args?: SelectSubset<T, PermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permission.
     * @param {PermissionCreateArgs} args - Arguments to create a Permission.
     * @example
     * // Create one Permission
     * const Permission = await prisma.permission.create({
     *   data: {
     *     // ... data to create a Permission
     *   }
     * })
     * 
     */
    create<T extends PermissionCreateArgs>(args: SelectSubset<T, PermissionCreateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {PermissionCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermissionCreateManyArgs>(args?: SelectSubset<T, PermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permissions and returns the data saved in the database.
     * @param {PermissionCreateManyAndReturnArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permissions and only return the `Id`
     * const permissionWithIdOnly = await prisma.permission.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, PermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permission.
     * @param {PermissionDeleteArgs} args - Arguments to delete one Permission.
     * @example
     * // Delete one Permission
     * const Permission = await prisma.permission.delete({
     *   where: {
     *     // ... filter to delete one Permission
     *   }
     * })
     * 
     */
    delete<T extends PermissionDeleteArgs>(args: SelectSubset<T, PermissionDeleteArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permission.
     * @param {PermissionUpdateArgs} args - Arguments to update one Permission.
     * @example
     * // Update one Permission
     * const permission = await prisma.permission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermissionUpdateArgs>(args: SelectSubset<T, PermissionUpdateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {PermissionDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermissionDeleteManyArgs>(args?: SelectSubset<T, PermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermissionUpdateManyArgs>(args: SelectSubset<T, PermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions and returns the data updated in the database.
     * @param {PermissionUpdateManyAndReturnArgs} args - Arguments to update many Permissions.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permissions and only return the `Id`
     * const permissionWithIdOnly = await prisma.permission.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, PermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permission.
     * @param {PermissionUpsertArgs} args - Arguments to update or create a Permission.
     * @example
     * // Update or create a Permission
     * const permission = await prisma.permission.upsert({
     *   create: {
     *     // ... data to create a Permission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permission we want to update
     *   }
     * })
     */
    upsert<T extends PermissionUpsertArgs>(args: SelectSubset<T, PermissionUpsertArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permission.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends PermissionCountArgs>(
      args?: Subset<T, PermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionAggregateArgs>(args: Subset<T, PermissionAggregateArgs>): Prisma.PrismaPromise<GetPermissionAggregateType<T>>

    /**
     * Group by Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermissionGroupByArgs['orderBy'] }
        : { orderBy?: PermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permission model
   */
  readonly fields: PermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Roles<T extends Permission$RolesArgs<ExtArgs> = {}>(args?: Subset<T, Permission$RolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permission model
   */
  interface PermissionFieldRefs {
    readonly Id: FieldRef<"Permission", 'Int'>
    readonly Name: FieldRef<"Permission", 'String'>
    readonly Description: FieldRef<"Permission", 'String'>
    readonly Slug: FieldRef<"Permission", 'String'>
    readonly Entity: FieldRef<"Permission", 'String'>
    readonly Action: FieldRef<"Permission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Permission findUnique
   */
  export type PermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findUniqueOrThrow
   */
  export type PermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findFirst
   */
  export type PermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findFirstOrThrow
   */
  export type PermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findMany
   */
  export type PermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permissions to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission create
   */
  export type PermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a Permission.
     */
    data: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
  }

  /**
   * Permission createMany
   */
  export type PermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permission createManyAndReturn
   */
  export type PermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permission update
   */
  export type PermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a Permission.
     */
    data: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
    /**
     * Choose, which Permission to update.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission updateMany
   */
  export type PermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to update.
     */
    limit?: number
  }

  /**
   * Permission updateManyAndReturn
   */
  export type PermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to update.
     */
    limit?: number
  }

  /**
   * Permission upsert
   */
  export type PermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the Permission to update in case it exists.
     */
    where: PermissionWhereUniqueInput
    /**
     * In case the Permission found by the `where` argument doesn't exist, create a new Permission with this data.
     */
    create: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
    /**
     * In case the Permission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
  }

  /**
   * Permission delete
   */
  export type PermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter which Permission to delete.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission deleteMany
   */
  export type PermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permissions to delete
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to delete.
     */
    limit?: number
  }

  /**
   * Permission.Roles
   */
  export type Permission$RolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Permission without action
   */
  export type PermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
  }


  /**
   * Model Livery
   */

  export type AggregateLivery = {
    _count: LiveryCountAggregateOutputType | null
    _avg: LiveryAvgAggregateOutputType | null
    _sum: LiverySumAggregateOutputType | null
    _min: LiveryMinAggregateOutputType | null
    _max: LiveryMaxAggregateOutputType | null
  }

  export type LiveryAvgAggregateOutputType = {
    DownloadCount: number | null
  }

  export type LiverySumAggregateOutputType = {
    DownloadCount: number | null
  }

  export type LiveryMinAggregateOutputType = {
    Id: string | null
    Name: string | null
    IsActive: boolean | null
    AircraftId: string | null
    DownloadCount: number | null
    Image: string | null
    ImageFileName: string | null
    CoverPhoto: string | null
    Url: string | null
    Description: string | null
    DownloadUrl: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type LiveryMaxAggregateOutputType = {
    Id: string | null
    Name: string | null
    IsActive: boolean | null
    AircraftId: string | null
    DownloadCount: number | null
    Image: string | null
    ImageFileName: string | null
    CoverPhoto: string | null
    Url: string | null
    Description: string | null
    DownloadUrl: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type LiveryCountAggregateOutputType = {
    Id: number
    Name: number
    IsActive: number
    AircraftId: number
    DownloadCount: number
    Image: number
    ImageFileName: number
    CoverPhoto: number
    Metadata: number
    Url: number
    Description: number
    DownloadUrl: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type LiveryAvgAggregateInputType = {
    DownloadCount?: true
  }

  export type LiverySumAggregateInputType = {
    DownloadCount?: true
  }

  export type LiveryMinAggregateInputType = {
    Id?: true
    Name?: true
    IsActive?: true
    AircraftId?: true
    DownloadCount?: true
    Image?: true
    ImageFileName?: true
    CoverPhoto?: true
    Url?: true
    Description?: true
    DownloadUrl?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type LiveryMaxAggregateInputType = {
    Id?: true
    Name?: true
    IsActive?: true
    AircraftId?: true
    DownloadCount?: true
    Image?: true
    ImageFileName?: true
    CoverPhoto?: true
    Url?: true
    Description?: true
    DownloadUrl?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type LiveryCountAggregateInputType = {
    Id?: true
    Name?: true
    IsActive?: true
    AircraftId?: true
    DownloadCount?: true
    Image?: true
    ImageFileName?: true
    CoverPhoto?: true
    Metadata?: true
    Url?: true
    Description?: true
    DownloadUrl?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type LiveryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Livery to aggregate.
     */
    where?: LiveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Liveries to fetch.
     */
    orderBy?: LiveryOrderByWithRelationInput | LiveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LiveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Liveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Liveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Liveries
    **/
    _count?: true | LiveryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LiveryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LiverySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LiveryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LiveryMaxAggregateInputType
  }

  export type GetLiveryAggregateType<T extends LiveryAggregateArgs> = {
        [P in keyof T & keyof AggregateLivery]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLivery[P]>
      : GetScalarType<T[P], AggregateLivery[P]>
  }




  export type LiveryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LiveryWhereInput
    orderBy?: LiveryOrderByWithAggregationInput | LiveryOrderByWithAggregationInput[]
    by: LiveryScalarFieldEnum[] | LiveryScalarFieldEnum
    having?: LiveryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LiveryCountAggregateInputType | true
    _avg?: LiveryAvgAggregateInputType
    _sum?: LiverySumAggregateInputType
    _min?: LiveryMinAggregateInputType
    _max?: LiveryMaxAggregateInputType
  }

  export type LiveryGroupByOutputType = {
    Id: string
    Name: string
    IsActive: boolean
    AircraftId: string | null
    DownloadCount: number
    Image: string
    ImageFileName: string | null
    CoverPhoto: string | null
    Metadata: JsonValue | null
    Url: string | null
    Description: string | null
    DownloadUrl: string | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: LiveryCountAggregateOutputType | null
    _avg: LiveryAvgAggregateOutputType | null
    _sum: LiverySumAggregateOutputType | null
    _min: LiveryMinAggregateOutputType | null
    _max: LiveryMaxAggregateOutputType | null
  }

  type GetLiveryGroupByPayload<T extends LiveryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LiveryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LiveryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LiveryGroupByOutputType[P]>
            : GetScalarType<T[P], LiveryGroupByOutputType[P]>
        }
      >
    >


  export type LiverySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    IsActive?: boolean
    AircraftId?: boolean
    DownloadCount?: boolean
    Image?: boolean
    ImageFileName?: boolean
    CoverPhoto?: boolean
    Metadata?: boolean
    Url?: boolean
    Description?: boolean
    DownloadUrl?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Aircraft?: boolean | Livery$AircraftArgs<ExtArgs>
    Images?: boolean | Livery$ImagesArgs<ExtArgs>
    Files?: boolean | Livery$FilesArgs<ExtArgs>
    _count?: boolean | LiveryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["livery"]>

  export type LiverySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    IsActive?: boolean
    AircraftId?: boolean
    DownloadCount?: boolean
    Image?: boolean
    ImageFileName?: boolean
    CoverPhoto?: boolean
    Metadata?: boolean
    Url?: boolean
    Description?: boolean
    DownloadUrl?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Aircraft?: boolean | Livery$AircraftArgs<ExtArgs>
  }, ExtArgs["result"]["livery"]>

  export type LiverySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    IsActive?: boolean
    AircraftId?: boolean
    DownloadCount?: boolean
    Image?: boolean
    ImageFileName?: boolean
    CoverPhoto?: boolean
    Metadata?: boolean
    Url?: boolean
    Description?: boolean
    DownloadUrl?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Aircraft?: boolean | Livery$AircraftArgs<ExtArgs>
  }, ExtArgs["result"]["livery"]>

  export type LiverySelectScalar = {
    Id?: boolean
    Name?: boolean
    IsActive?: boolean
    AircraftId?: boolean
    DownloadCount?: boolean
    Image?: boolean
    ImageFileName?: boolean
    CoverPhoto?: boolean
    Metadata?: boolean
    Url?: boolean
    Description?: boolean
    DownloadUrl?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type LiveryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Name" | "IsActive" | "AircraftId" | "DownloadCount" | "Image" | "ImageFileName" | "CoverPhoto" | "Metadata" | "Url" | "Description" | "DownloadUrl" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["livery"]>
  export type LiveryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Aircraft?: boolean | Livery$AircraftArgs<ExtArgs>
    Images?: boolean | Livery$ImagesArgs<ExtArgs>
    Files?: boolean | Livery$FilesArgs<ExtArgs>
    _count?: boolean | LiveryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LiveryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Aircraft?: boolean | Livery$AircraftArgs<ExtArgs>
  }
  export type LiveryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Aircraft?: boolean | Livery$AircraftArgs<ExtArgs>
  }

  export type $LiveryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Livery"
    objects: {
      Aircraft: Prisma.$AircraftPayload<ExtArgs> | null
      Images: Prisma.$LiveryImagePayload<ExtArgs>[]
      Files: Prisma.$LiveryFilePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      Name: string
      IsActive: boolean
      AircraftId: string | null
      DownloadCount: number
      Image: string
      ImageFileName: string | null
      CoverPhoto: string | null
      Metadata: Prisma.JsonValue | null
      Url: string | null
      Description: string | null
      DownloadUrl: string | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["livery"]>
    composites: {}
  }

  type LiveryGetPayload<S extends boolean | null | undefined | LiveryDefaultArgs> = $Result.GetResult<Prisma.$LiveryPayload, S>

  type LiveryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LiveryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LiveryCountAggregateInputType | true
    }

  export interface LiveryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Livery'], meta: { name: 'Livery' } }
    /**
     * Find zero or one Livery that matches the filter.
     * @param {LiveryFindUniqueArgs} args - Arguments to find a Livery
     * @example
     * // Get one Livery
     * const livery = await prisma.livery.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LiveryFindUniqueArgs>(args: SelectSubset<T, LiveryFindUniqueArgs<ExtArgs>>): Prisma__LiveryClient<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Livery that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LiveryFindUniqueOrThrowArgs} args - Arguments to find a Livery
     * @example
     * // Get one Livery
     * const livery = await prisma.livery.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LiveryFindUniqueOrThrowArgs>(args: SelectSubset<T, LiveryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LiveryClient<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Livery that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryFindFirstArgs} args - Arguments to find a Livery
     * @example
     * // Get one Livery
     * const livery = await prisma.livery.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LiveryFindFirstArgs>(args?: SelectSubset<T, LiveryFindFirstArgs<ExtArgs>>): Prisma__LiveryClient<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Livery that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryFindFirstOrThrowArgs} args - Arguments to find a Livery
     * @example
     * // Get one Livery
     * const livery = await prisma.livery.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LiveryFindFirstOrThrowArgs>(args?: SelectSubset<T, LiveryFindFirstOrThrowArgs<ExtArgs>>): Prisma__LiveryClient<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Liveries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Liveries
     * const liveries = await prisma.livery.findMany()
     * 
     * // Get first 10 Liveries
     * const liveries = await prisma.livery.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const liveryWithIdOnly = await prisma.livery.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends LiveryFindManyArgs>(args?: SelectSubset<T, LiveryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Livery.
     * @param {LiveryCreateArgs} args - Arguments to create a Livery.
     * @example
     * // Create one Livery
     * const Livery = await prisma.livery.create({
     *   data: {
     *     // ... data to create a Livery
     *   }
     * })
     * 
     */
    create<T extends LiveryCreateArgs>(args: SelectSubset<T, LiveryCreateArgs<ExtArgs>>): Prisma__LiveryClient<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Liveries.
     * @param {LiveryCreateManyArgs} args - Arguments to create many Liveries.
     * @example
     * // Create many Liveries
     * const livery = await prisma.livery.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LiveryCreateManyArgs>(args?: SelectSubset<T, LiveryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Liveries and returns the data saved in the database.
     * @param {LiveryCreateManyAndReturnArgs} args - Arguments to create many Liveries.
     * @example
     * // Create many Liveries
     * const livery = await prisma.livery.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Liveries and only return the `Id`
     * const liveryWithIdOnly = await prisma.livery.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LiveryCreateManyAndReturnArgs>(args?: SelectSubset<T, LiveryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Livery.
     * @param {LiveryDeleteArgs} args - Arguments to delete one Livery.
     * @example
     * // Delete one Livery
     * const Livery = await prisma.livery.delete({
     *   where: {
     *     // ... filter to delete one Livery
     *   }
     * })
     * 
     */
    delete<T extends LiveryDeleteArgs>(args: SelectSubset<T, LiveryDeleteArgs<ExtArgs>>): Prisma__LiveryClient<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Livery.
     * @param {LiveryUpdateArgs} args - Arguments to update one Livery.
     * @example
     * // Update one Livery
     * const livery = await prisma.livery.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LiveryUpdateArgs>(args: SelectSubset<T, LiveryUpdateArgs<ExtArgs>>): Prisma__LiveryClient<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Liveries.
     * @param {LiveryDeleteManyArgs} args - Arguments to filter Liveries to delete.
     * @example
     * // Delete a few Liveries
     * const { count } = await prisma.livery.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LiveryDeleteManyArgs>(args?: SelectSubset<T, LiveryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Liveries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Liveries
     * const livery = await prisma.livery.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LiveryUpdateManyArgs>(args: SelectSubset<T, LiveryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Liveries and returns the data updated in the database.
     * @param {LiveryUpdateManyAndReturnArgs} args - Arguments to update many Liveries.
     * @example
     * // Update many Liveries
     * const livery = await prisma.livery.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Liveries and only return the `Id`
     * const liveryWithIdOnly = await prisma.livery.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LiveryUpdateManyAndReturnArgs>(args: SelectSubset<T, LiveryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Livery.
     * @param {LiveryUpsertArgs} args - Arguments to update or create a Livery.
     * @example
     * // Update or create a Livery
     * const livery = await prisma.livery.upsert({
     *   create: {
     *     // ... data to create a Livery
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Livery we want to update
     *   }
     * })
     */
    upsert<T extends LiveryUpsertArgs>(args: SelectSubset<T, LiveryUpsertArgs<ExtArgs>>): Prisma__LiveryClient<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Liveries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryCountArgs} args - Arguments to filter Liveries to count.
     * @example
     * // Count the number of Liveries
     * const count = await prisma.livery.count({
     *   where: {
     *     // ... the filter for the Liveries we want to count
     *   }
     * })
    **/
    count<T extends LiveryCountArgs>(
      args?: Subset<T, LiveryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LiveryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Livery.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LiveryAggregateArgs>(args: Subset<T, LiveryAggregateArgs>): Prisma.PrismaPromise<GetLiveryAggregateType<T>>

    /**
     * Group by Livery.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LiveryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LiveryGroupByArgs['orderBy'] }
        : { orderBy?: LiveryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LiveryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLiveryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Livery model
   */
  readonly fields: LiveryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Livery.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LiveryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Aircraft<T extends Livery$AircraftArgs<ExtArgs> = {}>(args?: Subset<T, Livery$AircraftArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Images<T extends Livery$ImagesArgs<ExtArgs> = {}>(args?: Subset<T, Livery$ImagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Files<T extends Livery$FilesArgs<ExtArgs> = {}>(args?: Subset<T, Livery$FilesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Livery model
   */
  interface LiveryFieldRefs {
    readonly Id: FieldRef<"Livery", 'String'>
    readonly Name: FieldRef<"Livery", 'String'>
    readonly IsActive: FieldRef<"Livery", 'Boolean'>
    readonly AircraftId: FieldRef<"Livery", 'String'>
    readonly DownloadCount: FieldRef<"Livery", 'Int'>
    readonly Image: FieldRef<"Livery", 'String'>
    readonly ImageFileName: FieldRef<"Livery", 'String'>
    readonly CoverPhoto: FieldRef<"Livery", 'String'>
    readonly Metadata: FieldRef<"Livery", 'Json'>
    readonly Url: FieldRef<"Livery", 'String'>
    readonly Description: FieldRef<"Livery", 'String'>
    readonly DownloadUrl: FieldRef<"Livery", 'String'>
    readonly CreatedAt: FieldRef<"Livery", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Livery", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Livery findUnique
   */
  export type LiveryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
    /**
     * Filter, which Livery to fetch.
     */
    where: LiveryWhereUniqueInput
  }

  /**
   * Livery findUniqueOrThrow
   */
  export type LiveryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
    /**
     * Filter, which Livery to fetch.
     */
    where: LiveryWhereUniqueInput
  }

  /**
   * Livery findFirst
   */
  export type LiveryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
    /**
     * Filter, which Livery to fetch.
     */
    where?: LiveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Liveries to fetch.
     */
    orderBy?: LiveryOrderByWithRelationInput | LiveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Liveries.
     */
    cursor?: LiveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Liveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Liveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Liveries.
     */
    distinct?: LiveryScalarFieldEnum | LiveryScalarFieldEnum[]
  }

  /**
   * Livery findFirstOrThrow
   */
  export type LiveryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
    /**
     * Filter, which Livery to fetch.
     */
    where?: LiveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Liveries to fetch.
     */
    orderBy?: LiveryOrderByWithRelationInput | LiveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Liveries.
     */
    cursor?: LiveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Liveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Liveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Liveries.
     */
    distinct?: LiveryScalarFieldEnum | LiveryScalarFieldEnum[]
  }

  /**
   * Livery findMany
   */
  export type LiveryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
    /**
     * Filter, which Liveries to fetch.
     */
    where?: LiveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Liveries to fetch.
     */
    orderBy?: LiveryOrderByWithRelationInput | LiveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Liveries.
     */
    cursor?: LiveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Liveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Liveries.
     */
    skip?: number
    distinct?: LiveryScalarFieldEnum | LiveryScalarFieldEnum[]
  }

  /**
   * Livery create
   */
  export type LiveryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
    /**
     * The data needed to create a Livery.
     */
    data: XOR<LiveryCreateInput, LiveryUncheckedCreateInput>
  }

  /**
   * Livery createMany
   */
  export type LiveryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Liveries.
     */
    data: LiveryCreateManyInput | LiveryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Livery createManyAndReturn
   */
  export type LiveryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * The data used to create many Liveries.
     */
    data: LiveryCreateManyInput | LiveryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Livery update
   */
  export type LiveryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
    /**
     * The data needed to update a Livery.
     */
    data: XOR<LiveryUpdateInput, LiveryUncheckedUpdateInput>
    /**
     * Choose, which Livery to update.
     */
    where: LiveryWhereUniqueInput
  }

  /**
   * Livery updateMany
   */
  export type LiveryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Liveries.
     */
    data: XOR<LiveryUpdateManyMutationInput, LiveryUncheckedUpdateManyInput>
    /**
     * Filter which Liveries to update
     */
    where?: LiveryWhereInput
    /**
     * Limit how many Liveries to update.
     */
    limit?: number
  }

  /**
   * Livery updateManyAndReturn
   */
  export type LiveryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * The data used to update Liveries.
     */
    data: XOR<LiveryUpdateManyMutationInput, LiveryUncheckedUpdateManyInput>
    /**
     * Filter which Liveries to update
     */
    where?: LiveryWhereInput
    /**
     * Limit how many Liveries to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Livery upsert
   */
  export type LiveryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
    /**
     * The filter to search for the Livery to update in case it exists.
     */
    where: LiveryWhereUniqueInput
    /**
     * In case the Livery found by the `where` argument doesn't exist, create a new Livery with this data.
     */
    create: XOR<LiveryCreateInput, LiveryUncheckedCreateInput>
    /**
     * In case the Livery was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LiveryUpdateInput, LiveryUncheckedUpdateInput>
  }

  /**
   * Livery delete
   */
  export type LiveryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
    /**
     * Filter which Livery to delete.
     */
    where: LiveryWhereUniqueInput
  }

  /**
   * Livery deleteMany
   */
  export type LiveryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Liveries to delete
     */
    where?: LiveryWhereInput
    /**
     * Limit how many Liveries to delete.
     */
    limit?: number
  }

  /**
   * Livery.Aircraft
   */
  export type Livery$AircraftArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    where?: AircraftWhereInput
  }

  /**
   * Livery.Images
   */
  export type Livery$ImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
    where?: LiveryImageWhereInput
    orderBy?: LiveryImageOrderByWithRelationInput | LiveryImageOrderByWithRelationInput[]
    cursor?: LiveryImageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LiveryImageScalarFieldEnum | LiveryImageScalarFieldEnum[]
  }

  /**
   * Livery.Files
   */
  export type Livery$FilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
    where?: LiveryFileWhereInput
    orderBy?: LiveryFileOrderByWithRelationInput | LiveryFileOrderByWithRelationInput[]
    cursor?: LiveryFileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LiveryFileScalarFieldEnum | LiveryFileScalarFieldEnum[]
  }

  /**
   * Livery without action
   */
  export type LiveryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
  }


  /**
   * Model LiveryImage
   */

  export type AggregateLiveryImage = {
    _count: LiveryImageCountAggregateOutputType | null
    _avg: LiveryImageAvgAggregateOutputType | null
    _sum: LiveryImageSumAggregateOutputType | null
    _min: LiveryImageMinAggregateOutputType | null
    _max: LiveryImageMaxAggregateOutputType | null
  }

  export type LiveryImageAvgAggregateOutputType = {
    Size: number | null
  }

  export type LiveryImageSumAggregateOutputType = {
    Size: number | null
  }

  export type LiveryImageMinAggregateOutputType = {
    Id: string | null
    LiveryId: string | null
    Name: string | null
    Type: string | null
    Path: string | null
    Size: number | null
    MimeType: string | null
    FileName: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type LiveryImageMaxAggregateOutputType = {
    Id: string | null
    LiveryId: string | null
    Name: string | null
    Type: string | null
    Path: string | null
    Size: number | null
    MimeType: string | null
    FileName: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type LiveryImageCountAggregateOutputType = {
    Id: number
    LiveryId: number
    Name: number
    Type: number
    Path: number
    Size: number
    MimeType: number
    FileName: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type LiveryImageAvgAggregateInputType = {
    Size?: true
  }

  export type LiveryImageSumAggregateInputType = {
    Size?: true
  }

  export type LiveryImageMinAggregateInputType = {
    Id?: true
    LiveryId?: true
    Name?: true
    Type?: true
    Path?: true
    Size?: true
    MimeType?: true
    FileName?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type LiveryImageMaxAggregateInputType = {
    Id?: true
    LiveryId?: true
    Name?: true
    Type?: true
    Path?: true
    Size?: true
    MimeType?: true
    FileName?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type LiveryImageCountAggregateInputType = {
    Id?: true
    LiveryId?: true
    Name?: true
    Type?: true
    Path?: true
    Size?: true
    MimeType?: true
    FileName?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type LiveryImageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LiveryImage to aggregate.
     */
    where?: LiveryImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LiveryImages to fetch.
     */
    orderBy?: LiveryImageOrderByWithRelationInput | LiveryImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LiveryImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LiveryImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LiveryImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LiveryImages
    **/
    _count?: true | LiveryImageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LiveryImageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LiveryImageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LiveryImageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LiveryImageMaxAggregateInputType
  }

  export type GetLiveryImageAggregateType<T extends LiveryImageAggregateArgs> = {
        [P in keyof T & keyof AggregateLiveryImage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLiveryImage[P]>
      : GetScalarType<T[P], AggregateLiveryImage[P]>
  }




  export type LiveryImageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LiveryImageWhereInput
    orderBy?: LiveryImageOrderByWithAggregationInput | LiveryImageOrderByWithAggregationInput[]
    by: LiveryImageScalarFieldEnum[] | LiveryImageScalarFieldEnum
    having?: LiveryImageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LiveryImageCountAggregateInputType | true
    _avg?: LiveryImageAvgAggregateInputType
    _sum?: LiveryImageSumAggregateInputType
    _min?: LiveryImageMinAggregateInputType
    _max?: LiveryImageMaxAggregateInputType
  }

  export type LiveryImageGroupByOutputType = {
    Id: string
    LiveryId: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt: Date
    UpdatedAt: Date
    _count: LiveryImageCountAggregateOutputType | null
    _avg: LiveryImageAvgAggregateOutputType | null
    _sum: LiveryImageSumAggregateOutputType | null
    _min: LiveryImageMinAggregateOutputType | null
    _max: LiveryImageMaxAggregateOutputType | null
  }

  type GetLiveryImageGroupByPayload<T extends LiveryImageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LiveryImageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LiveryImageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LiveryImageGroupByOutputType[P]>
            : GetScalarType<T[P], LiveryImageGroupByOutputType[P]>
        }
      >
    >


  export type LiveryImageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    LiveryId?: boolean
    Name?: boolean
    Type?: boolean
    Path?: boolean
    Size?: boolean
    MimeType?: boolean
    FileName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["liveryImage"]>

  export type LiveryImageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    LiveryId?: boolean
    Name?: boolean
    Type?: boolean
    Path?: boolean
    Size?: boolean
    MimeType?: boolean
    FileName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["liveryImage"]>

  export type LiveryImageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    LiveryId?: boolean
    Name?: boolean
    Type?: boolean
    Path?: boolean
    Size?: boolean
    MimeType?: boolean
    FileName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["liveryImage"]>

  export type LiveryImageSelectScalar = {
    Id?: boolean
    LiveryId?: boolean
    Name?: boolean
    Type?: boolean
    Path?: boolean
    Size?: boolean
    MimeType?: boolean
    FileName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type LiveryImageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "LiveryId" | "Name" | "Type" | "Path" | "Size" | "MimeType" | "FileName" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["liveryImage"]>
  export type LiveryImageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }
  export type LiveryImageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }
  export type LiveryImageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }

  export type $LiveryImagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LiveryImage"
    objects: {
      Livery: Prisma.$LiveryPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      LiveryId: string
      Name: string
      Type: string
      Path: string
      Size: number
      MimeType: string
      FileName: string
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["liveryImage"]>
    composites: {}
  }

  type LiveryImageGetPayload<S extends boolean | null | undefined | LiveryImageDefaultArgs> = $Result.GetResult<Prisma.$LiveryImagePayload, S>

  type LiveryImageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LiveryImageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LiveryImageCountAggregateInputType | true
    }

  export interface LiveryImageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LiveryImage'], meta: { name: 'LiveryImage' } }
    /**
     * Find zero or one LiveryImage that matches the filter.
     * @param {LiveryImageFindUniqueArgs} args - Arguments to find a LiveryImage
     * @example
     * // Get one LiveryImage
     * const liveryImage = await prisma.liveryImage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LiveryImageFindUniqueArgs>(args: SelectSubset<T, LiveryImageFindUniqueArgs<ExtArgs>>): Prisma__LiveryImageClient<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LiveryImage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LiveryImageFindUniqueOrThrowArgs} args - Arguments to find a LiveryImage
     * @example
     * // Get one LiveryImage
     * const liveryImage = await prisma.liveryImage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LiveryImageFindUniqueOrThrowArgs>(args: SelectSubset<T, LiveryImageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LiveryImageClient<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LiveryImage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryImageFindFirstArgs} args - Arguments to find a LiveryImage
     * @example
     * // Get one LiveryImage
     * const liveryImage = await prisma.liveryImage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LiveryImageFindFirstArgs>(args?: SelectSubset<T, LiveryImageFindFirstArgs<ExtArgs>>): Prisma__LiveryImageClient<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LiveryImage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryImageFindFirstOrThrowArgs} args - Arguments to find a LiveryImage
     * @example
     * // Get one LiveryImage
     * const liveryImage = await prisma.liveryImage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LiveryImageFindFirstOrThrowArgs>(args?: SelectSubset<T, LiveryImageFindFirstOrThrowArgs<ExtArgs>>): Prisma__LiveryImageClient<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LiveryImages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryImageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LiveryImages
     * const liveryImages = await prisma.liveryImage.findMany()
     * 
     * // Get first 10 LiveryImages
     * const liveryImages = await prisma.liveryImage.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const liveryImageWithIdOnly = await prisma.liveryImage.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends LiveryImageFindManyArgs>(args?: SelectSubset<T, LiveryImageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LiveryImage.
     * @param {LiveryImageCreateArgs} args - Arguments to create a LiveryImage.
     * @example
     * // Create one LiveryImage
     * const LiveryImage = await prisma.liveryImage.create({
     *   data: {
     *     // ... data to create a LiveryImage
     *   }
     * })
     * 
     */
    create<T extends LiveryImageCreateArgs>(args: SelectSubset<T, LiveryImageCreateArgs<ExtArgs>>): Prisma__LiveryImageClient<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LiveryImages.
     * @param {LiveryImageCreateManyArgs} args - Arguments to create many LiveryImages.
     * @example
     * // Create many LiveryImages
     * const liveryImage = await prisma.liveryImage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LiveryImageCreateManyArgs>(args?: SelectSubset<T, LiveryImageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LiveryImages and returns the data saved in the database.
     * @param {LiveryImageCreateManyAndReturnArgs} args - Arguments to create many LiveryImages.
     * @example
     * // Create many LiveryImages
     * const liveryImage = await prisma.liveryImage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LiveryImages and only return the `Id`
     * const liveryImageWithIdOnly = await prisma.liveryImage.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LiveryImageCreateManyAndReturnArgs>(args?: SelectSubset<T, LiveryImageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LiveryImage.
     * @param {LiveryImageDeleteArgs} args - Arguments to delete one LiveryImage.
     * @example
     * // Delete one LiveryImage
     * const LiveryImage = await prisma.liveryImage.delete({
     *   where: {
     *     // ... filter to delete one LiveryImage
     *   }
     * })
     * 
     */
    delete<T extends LiveryImageDeleteArgs>(args: SelectSubset<T, LiveryImageDeleteArgs<ExtArgs>>): Prisma__LiveryImageClient<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LiveryImage.
     * @param {LiveryImageUpdateArgs} args - Arguments to update one LiveryImage.
     * @example
     * // Update one LiveryImage
     * const liveryImage = await prisma.liveryImage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LiveryImageUpdateArgs>(args: SelectSubset<T, LiveryImageUpdateArgs<ExtArgs>>): Prisma__LiveryImageClient<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LiveryImages.
     * @param {LiveryImageDeleteManyArgs} args - Arguments to filter LiveryImages to delete.
     * @example
     * // Delete a few LiveryImages
     * const { count } = await prisma.liveryImage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LiveryImageDeleteManyArgs>(args?: SelectSubset<T, LiveryImageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LiveryImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryImageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LiveryImages
     * const liveryImage = await prisma.liveryImage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LiveryImageUpdateManyArgs>(args: SelectSubset<T, LiveryImageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LiveryImages and returns the data updated in the database.
     * @param {LiveryImageUpdateManyAndReturnArgs} args - Arguments to update many LiveryImages.
     * @example
     * // Update many LiveryImages
     * const liveryImage = await prisma.liveryImage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LiveryImages and only return the `Id`
     * const liveryImageWithIdOnly = await prisma.liveryImage.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LiveryImageUpdateManyAndReturnArgs>(args: SelectSubset<T, LiveryImageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LiveryImage.
     * @param {LiveryImageUpsertArgs} args - Arguments to update or create a LiveryImage.
     * @example
     * // Update or create a LiveryImage
     * const liveryImage = await prisma.liveryImage.upsert({
     *   create: {
     *     // ... data to create a LiveryImage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LiveryImage we want to update
     *   }
     * })
     */
    upsert<T extends LiveryImageUpsertArgs>(args: SelectSubset<T, LiveryImageUpsertArgs<ExtArgs>>): Prisma__LiveryImageClient<$Result.GetResult<Prisma.$LiveryImagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LiveryImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryImageCountArgs} args - Arguments to filter LiveryImages to count.
     * @example
     * // Count the number of LiveryImages
     * const count = await prisma.liveryImage.count({
     *   where: {
     *     // ... the filter for the LiveryImages we want to count
     *   }
     * })
    **/
    count<T extends LiveryImageCountArgs>(
      args?: Subset<T, LiveryImageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LiveryImageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LiveryImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryImageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LiveryImageAggregateArgs>(args: Subset<T, LiveryImageAggregateArgs>): Prisma.PrismaPromise<GetLiveryImageAggregateType<T>>

    /**
     * Group by LiveryImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryImageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LiveryImageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LiveryImageGroupByArgs['orderBy'] }
        : { orderBy?: LiveryImageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LiveryImageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLiveryImageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LiveryImage model
   */
  readonly fields: LiveryImageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LiveryImage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LiveryImageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Livery<T extends LiveryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LiveryDefaultArgs<ExtArgs>>): Prisma__LiveryClient<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LiveryImage model
   */
  interface LiveryImageFieldRefs {
    readonly Id: FieldRef<"LiveryImage", 'String'>
    readonly LiveryId: FieldRef<"LiveryImage", 'String'>
    readonly Name: FieldRef<"LiveryImage", 'String'>
    readonly Type: FieldRef<"LiveryImage", 'String'>
    readonly Path: FieldRef<"LiveryImage", 'String'>
    readonly Size: FieldRef<"LiveryImage", 'Int'>
    readonly MimeType: FieldRef<"LiveryImage", 'String'>
    readonly FileName: FieldRef<"LiveryImage", 'String'>
    readonly CreatedAt: FieldRef<"LiveryImage", 'DateTime'>
    readonly UpdatedAt: FieldRef<"LiveryImage", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * LiveryImage findUnique
   */
  export type LiveryImageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
    /**
     * Filter, which LiveryImage to fetch.
     */
    where: LiveryImageWhereUniqueInput
  }

  /**
   * LiveryImage findUniqueOrThrow
   */
  export type LiveryImageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
    /**
     * Filter, which LiveryImage to fetch.
     */
    where: LiveryImageWhereUniqueInput
  }

  /**
   * LiveryImage findFirst
   */
  export type LiveryImageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
    /**
     * Filter, which LiveryImage to fetch.
     */
    where?: LiveryImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LiveryImages to fetch.
     */
    orderBy?: LiveryImageOrderByWithRelationInput | LiveryImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LiveryImages.
     */
    cursor?: LiveryImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LiveryImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LiveryImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LiveryImages.
     */
    distinct?: LiveryImageScalarFieldEnum | LiveryImageScalarFieldEnum[]
  }

  /**
   * LiveryImage findFirstOrThrow
   */
  export type LiveryImageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
    /**
     * Filter, which LiveryImage to fetch.
     */
    where?: LiveryImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LiveryImages to fetch.
     */
    orderBy?: LiveryImageOrderByWithRelationInput | LiveryImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LiveryImages.
     */
    cursor?: LiveryImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LiveryImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LiveryImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LiveryImages.
     */
    distinct?: LiveryImageScalarFieldEnum | LiveryImageScalarFieldEnum[]
  }

  /**
   * LiveryImage findMany
   */
  export type LiveryImageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
    /**
     * Filter, which LiveryImages to fetch.
     */
    where?: LiveryImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LiveryImages to fetch.
     */
    orderBy?: LiveryImageOrderByWithRelationInput | LiveryImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LiveryImages.
     */
    cursor?: LiveryImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LiveryImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LiveryImages.
     */
    skip?: number
    distinct?: LiveryImageScalarFieldEnum | LiveryImageScalarFieldEnum[]
  }

  /**
   * LiveryImage create
   */
  export type LiveryImageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
    /**
     * The data needed to create a LiveryImage.
     */
    data: XOR<LiveryImageCreateInput, LiveryImageUncheckedCreateInput>
  }

  /**
   * LiveryImage createMany
   */
  export type LiveryImageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LiveryImages.
     */
    data: LiveryImageCreateManyInput | LiveryImageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LiveryImage createManyAndReturn
   */
  export type LiveryImageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * The data used to create many LiveryImages.
     */
    data: LiveryImageCreateManyInput | LiveryImageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LiveryImage update
   */
  export type LiveryImageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
    /**
     * The data needed to update a LiveryImage.
     */
    data: XOR<LiveryImageUpdateInput, LiveryImageUncheckedUpdateInput>
    /**
     * Choose, which LiveryImage to update.
     */
    where: LiveryImageWhereUniqueInput
  }

  /**
   * LiveryImage updateMany
   */
  export type LiveryImageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LiveryImages.
     */
    data: XOR<LiveryImageUpdateManyMutationInput, LiveryImageUncheckedUpdateManyInput>
    /**
     * Filter which LiveryImages to update
     */
    where?: LiveryImageWhereInput
    /**
     * Limit how many LiveryImages to update.
     */
    limit?: number
  }

  /**
   * LiveryImage updateManyAndReturn
   */
  export type LiveryImageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * The data used to update LiveryImages.
     */
    data: XOR<LiveryImageUpdateManyMutationInput, LiveryImageUncheckedUpdateManyInput>
    /**
     * Filter which LiveryImages to update
     */
    where?: LiveryImageWhereInput
    /**
     * Limit how many LiveryImages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * LiveryImage upsert
   */
  export type LiveryImageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
    /**
     * The filter to search for the LiveryImage to update in case it exists.
     */
    where: LiveryImageWhereUniqueInput
    /**
     * In case the LiveryImage found by the `where` argument doesn't exist, create a new LiveryImage with this data.
     */
    create: XOR<LiveryImageCreateInput, LiveryImageUncheckedCreateInput>
    /**
     * In case the LiveryImage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LiveryImageUpdateInput, LiveryImageUncheckedUpdateInput>
  }

  /**
   * LiveryImage delete
   */
  export type LiveryImageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
    /**
     * Filter which LiveryImage to delete.
     */
    where: LiveryImageWhereUniqueInput
  }

  /**
   * LiveryImage deleteMany
   */
  export type LiveryImageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LiveryImages to delete
     */
    where?: LiveryImageWhereInput
    /**
     * Limit how many LiveryImages to delete.
     */
    limit?: number
  }

  /**
   * LiveryImage without action
   */
  export type LiveryImageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryImage
     */
    select?: LiveryImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryImage
     */
    omit?: LiveryImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryImageInclude<ExtArgs> | null
  }


  /**
   * Model LiveryFile
   */

  export type AggregateLiveryFile = {
    _count: LiveryFileCountAggregateOutputType | null
    _avg: LiveryFileAvgAggregateOutputType | null
    _sum: LiveryFileSumAggregateOutputType | null
    _min: LiveryFileMinAggregateOutputType | null
    _max: LiveryFileMaxAggregateOutputType | null
  }

  export type LiveryFileAvgAggregateOutputType = {
    Size: number | null
  }

  export type LiveryFileSumAggregateOutputType = {
    Size: number | null
  }

  export type LiveryFileMinAggregateOutputType = {
    Id: string | null
    LiveryId: string | null
    Name: string | null
    Type: string | null
    Path: string | null
    Size: number | null
    MimeType: string | null
    FileName: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type LiveryFileMaxAggregateOutputType = {
    Id: string | null
    LiveryId: string | null
    Name: string | null
    Type: string | null
    Path: string | null
    Size: number | null
    MimeType: string | null
    FileName: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type LiveryFileCountAggregateOutputType = {
    Id: number
    LiveryId: number
    Name: number
    Type: number
    Path: number
    Size: number
    MimeType: number
    FileName: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type LiveryFileAvgAggregateInputType = {
    Size?: true
  }

  export type LiveryFileSumAggregateInputType = {
    Size?: true
  }

  export type LiveryFileMinAggregateInputType = {
    Id?: true
    LiveryId?: true
    Name?: true
    Type?: true
    Path?: true
    Size?: true
    MimeType?: true
    FileName?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type LiveryFileMaxAggregateInputType = {
    Id?: true
    LiveryId?: true
    Name?: true
    Type?: true
    Path?: true
    Size?: true
    MimeType?: true
    FileName?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type LiveryFileCountAggregateInputType = {
    Id?: true
    LiveryId?: true
    Name?: true
    Type?: true
    Path?: true
    Size?: true
    MimeType?: true
    FileName?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type LiveryFileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LiveryFile to aggregate.
     */
    where?: LiveryFileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LiveryFiles to fetch.
     */
    orderBy?: LiveryFileOrderByWithRelationInput | LiveryFileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LiveryFileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LiveryFiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LiveryFiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LiveryFiles
    **/
    _count?: true | LiveryFileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LiveryFileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LiveryFileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LiveryFileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LiveryFileMaxAggregateInputType
  }

  export type GetLiveryFileAggregateType<T extends LiveryFileAggregateArgs> = {
        [P in keyof T & keyof AggregateLiveryFile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLiveryFile[P]>
      : GetScalarType<T[P], AggregateLiveryFile[P]>
  }




  export type LiveryFileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LiveryFileWhereInput
    orderBy?: LiveryFileOrderByWithAggregationInput | LiveryFileOrderByWithAggregationInput[]
    by: LiveryFileScalarFieldEnum[] | LiveryFileScalarFieldEnum
    having?: LiveryFileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LiveryFileCountAggregateInputType | true
    _avg?: LiveryFileAvgAggregateInputType
    _sum?: LiveryFileSumAggregateInputType
    _min?: LiveryFileMinAggregateInputType
    _max?: LiveryFileMaxAggregateInputType
  }

  export type LiveryFileGroupByOutputType = {
    Id: string
    LiveryId: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt: Date
    UpdatedAt: Date
    _count: LiveryFileCountAggregateOutputType | null
    _avg: LiveryFileAvgAggregateOutputType | null
    _sum: LiveryFileSumAggregateOutputType | null
    _min: LiveryFileMinAggregateOutputType | null
    _max: LiveryFileMaxAggregateOutputType | null
  }

  type GetLiveryFileGroupByPayload<T extends LiveryFileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LiveryFileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LiveryFileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LiveryFileGroupByOutputType[P]>
            : GetScalarType<T[P], LiveryFileGroupByOutputType[P]>
        }
      >
    >


  export type LiveryFileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    LiveryId?: boolean
    Name?: boolean
    Type?: boolean
    Path?: boolean
    Size?: boolean
    MimeType?: boolean
    FileName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["liveryFile"]>

  export type LiveryFileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    LiveryId?: boolean
    Name?: boolean
    Type?: boolean
    Path?: boolean
    Size?: boolean
    MimeType?: boolean
    FileName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["liveryFile"]>

  export type LiveryFileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    LiveryId?: boolean
    Name?: boolean
    Type?: boolean
    Path?: boolean
    Size?: boolean
    MimeType?: boolean
    FileName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["liveryFile"]>

  export type LiveryFileSelectScalar = {
    Id?: boolean
    LiveryId?: boolean
    Name?: boolean
    Type?: boolean
    Path?: boolean
    Size?: boolean
    MimeType?: boolean
    FileName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type LiveryFileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "LiveryId" | "Name" | "Type" | "Path" | "Size" | "MimeType" | "FileName" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["liveryFile"]>
  export type LiveryFileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }
  export type LiveryFileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }
  export type LiveryFileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Livery?: boolean | LiveryDefaultArgs<ExtArgs>
  }

  export type $LiveryFilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LiveryFile"
    objects: {
      Livery: Prisma.$LiveryPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      LiveryId: string
      Name: string
      Type: string
      Path: string
      Size: number
      MimeType: string
      FileName: string
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["liveryFile"]>
    composites: {}
  }

  type LiveryFileGetPayload<S extends boolean | null | undefined | LiveryFileDefaultArgs> = $Result.GetResult<Prisma.$LiveryFilePayload, S>

  type LiveryFileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LiveryFileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LiveryFileCountAggregateInputType | true
    }

  export interface LiveryFileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LiveryFile'], meta: { name: 'LiveryFile' } }
    /**
     * Find zero or one LiveryFile that matches the filter.
     * @param {LiveryFileFindUniqueArgs} args - Arguments to find a LiveryFile
     * @example
     * // Get one LiveryFile
     * const liveryFile = await prisma.liveryFile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LiveryFileFindUniqueArgs>(args: SelectSubset<T, LiveryFileFindUniqueArgs<ExtArgs>>): Prisma__LiveryFileClient<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LiveryFile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LiveryFileFindUniqueOrThrowArgs} args - Arguments to find a LiveryFile
     * @example
     * // Get one LiveryFile
     * const liveryFile = await prisma.liveryFile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LiveryFileFindUniqueOrThrowArgs>(args: SelectSubset<T, LiveryFileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LiveryFileClient<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LiveryFile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryFileFindFirstArgs} args - Arguments to find a LiveryFile
     * @example
     * // Get one LiveryFile
     * const liveryFile = await prisma.liveryFile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LiveryFileFindFirstArgs>(args?: SelectSubset<T, LiveryFileFindFirstArgs<ExtArgs>>): Prisma__LiveryFileClient<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LiveryFile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryFileFindFirstOrThrowArgs} args - Arguments to find a LiveryFile
     * @example
     * // Get one LiveryFile
     * const liveryFile = await prisma.liveryFile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LiveryFileFindFirstOrThrowArgs>(args?: SelectSubset<T, LiveryFileFindFirstOrThrowArgs<ExtArgs>>): Prisma__LiveryFileClient<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LiveryFiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryFileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LiveryFiles
     * const liveryFiles = await prisma.liveryFile.findMany()
     * 
     * // Get first 10 LiveryFiles
     * const liveryFiles = await prisma.liveryFile.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const liveryFileWithIdOnly = await prisma.liveryFile.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends LiveryFileFindManyArgs>(args?: SelectSubset<T, LiveryFileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LiveryFile.
     * @param {LiveryFileCreateArgs} args - Arguments to create a LiveryFile.
     * @example
     * // Create one LiveryFile
     * const LiveryFile = await prisma.liveryFile.create({
     *   data: {
     *     // ... data to create a LiveryFile
     *   }
     * })
     * 
     */
    create<T extends LiveryFileCreateArgs>(args: SelectSubset<T, LiveryFileCreateArgs<ExtArgs>>): Prisma__LiveryFileClient<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LiveryFiles.
     * @param {LiveryFileCreateManyArgs} args - Arguments to create many LiveryFiles.
     * @example
     * // Create many LiveryFiles
     * const liveryFile = await prisma.liveryFile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LiveryFileCreateManyArgs>(args?: SelectSubset<T, LiveryFileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LiveryFiles and returns the data saved in the database.
     * @param {LiveryFileCreateManyAndReturnArgs} args - Arguments to create many LiveryFiles.
     * @example
     * // Create many LiveryFiles
     * const liveryFile = await prisma.liveryFile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LiveryFiles and only return the `Id`
     * const liveryFileWithIdOnly = await prisma.liveryFile.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LiveryFileCreateManyAndReturnArgs>(args?: SelectSubset<T, LiveryFileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LiveryFile.
     * @param {LiveryFileDeleteArgs} args - Arguments to delete one LiveryFile.
     * @example
     * // Delete one LiveryFile
     * const LiveryFile = await prisma.liveryFile.delete({
     *   where: {
     *     // ... filter to delete one LiveryFile
     *   }
     * })
     * 
     */
    delete<T extends LiveryFileDeleteArgs>(args: SelectSubset<T, LiveryFileDeleteArgs<ExtArgs>>): Prisma__LiveryFileClient<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LiveryFile.
     * @param {LiveryFileUpdateArgs} args - Arguments to update one LiveryFile.
     * @example
     * // Update one LiveryFile
     * const liveryFile = await prisma.liveryFile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LiveryFileUpdateArgs>(args: SelectSubset<T, LiveryFileUpdateArgs<ExtArgs>>): Prisma__LiveryFileClient<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LiveryFiles.
     * @param {LiveryFileDeleteManyArgs} args - Arguments to filter LiveryFiles to delete.
     * @example
     * // Delete a few LiveryFiles
     * const { count } = await prisma.liveryFile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LiveryFileDeleteManyArgs>(args?: SelectSubset<T, LiveryFileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LiveryFiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryFileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LiveryFiles
     * const liveryFile = await prisma.liveryFile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LiveryFileUpdateManyArgs>(args: SelectSubset<T, LiveryFileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LiveryFiles and returns the data updated in the database.
     * @param {LiveryFileUpdateManyAndReturnArgs} args - Arguments to update many LiveryFiles.
     * @example
     * // Update many LiveryFiles
     * const liveryFile = await prisma.liveryFile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LiveryFiles and only return the `Id`
     * const liveryFileWithIdOnly = await prisma.liveryFile.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LiveryFileUpdateManyAndReturnArgs>(args: SelectSubset<T, LiveryFileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LiveryFile.
     * @param {LiveryFileUpsertArgs} args - Arguments to update or create a LiveryFile.
     * @example
     * // Update or create a LiveryFile
     * const liveryFile = await prisma.liveryFile.upsert({
     *   create: {
     *     // ... data to create a LiveryFile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LiveryFile we want to update
     *   }
     * })
     */
    upsert<T extends LiveryFileUpsertArgs>(args: SelectSubset<T, LiveryFileUpsertArgs<ExtArgs>>): Prisma__LiveryFileClient<$Result.GetResult<Prisma.$LiveryFilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LiveryFiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryFileCountArgs} args - Arguments to filter LiveryFiles to count.
     * @example
     * // Count the number of LiveryFiles
     * const count = await prisma.liveryFile.count({
     *   where: {
     *     // ... the filter for the LiveryFiles we want to count
     *   }
     * })
    **/
    count<T extends LiveryFileCountArgs>(
      args?: Subset<T, LiveryFileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LiveryFileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LiveryFile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryFileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LiveryFileAggregateArgs>(args: Subset<T, LiveryFileAggregateArgs>): Prisma.PrismaPromise<GetLiveryFileAggregateType<T>>

    /**
     * Group by LiveryFile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LiveryFileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LiveryFileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LiveryFileGroupByArgs['orderBy'] }
        : { orderBy?: LiveryFileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LiveryFileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLiveryFileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LiveryFile model
   */
  readonly fields: LiveryFileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LiveryFile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LiveryFileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Livery<T extends LiveryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LiveryDefaultArgs<ExtArgs>>): Prisma__LiveryClient<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LiveryFile model
   */
  interface LiveryFileFieldRefs {
    readonly Id: FieldRef<"LiveryFile", 'String'>
    readonly LiveryId: FieldRef<"LiveryFile", 'String'>
    readonly Name: FieldRef<"LiveryFile", 'String'>
    readonly Type: FieldRef<"LiveryFile", 'String'>
    readonly Path: FieldRef<"LiveryFile", 'String'>
    readonly Size: FieldRef<"LiveryFile", 'Int'>
    readonly MimeType: FieldRef<"LiveryFile", 'String'>
    readonly FileName: FieldRef<"LiveryFile", 'String'>
    readonly CreatedAt: FieldRef<"LiveryFile", 'DateTime'>
    readonly UpdatedAt: FieldRef<"LiveryFile", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * LiveryFile findUnique
   */
  export type LiveryFileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
    /**
     * Filter, which LiveryFile to fetch.
     */
    where: LiveryFileWhereUniqueInput
  }

  /**
   * LiveryFile findUniqueOrThrow
   */
  export type LiveryFileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
    /**
     * Filter, which LiveryFile to fetch.
     */
    where: LiveryFileWhereUniqueInput
  }

  /**
   * LiveryFile findFirst
   */
  export type LiveryFileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
    /**
     * Filter, which LiveryFile to fetch.
     */
    where?: LiveryFileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LiveryFiles to fetch.
     */
    orderBy?: LiveryFileOrderByWithRelationInput | LiveryFileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LiveryFiles.
     */
    cursor?: LiveryFileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LiveryFiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LiveryFiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LiveryFiles.
     */
    distinct?: LiveryFileScalarFieldEnum | LiveryFileScalarFieldEnum[]
  }

  /**
   * LiveryFile findFirstOrThrow
   */
  export type LiveryFileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
    /**
     * Filter, which LiveryFile to fetch.
     */
    where?: LiveryFileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LiveryFiles to fetch.
     */
    orderBy?: LiveryFileOrderByWithRelationInput | LiveryFileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LiveryFiles.
     */
    cursor?: LiveryFileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LiveryFiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LiveryFiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LiveryFiles.
     */
    distinct?: LiveryFileScalarFieldEnum | LiveryFileScalarFieldEnum[]
  }

  /**
   * LiveryFile findMany
   */
  export type LiveryFileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
    /**
     * Filter, which LiveryFiles to fetch.
     */
    where?: LiveryFileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LiveryFiles to fetch.
     */
    orderBy?: LiveryFileOrderByWithRelationInput | LiveryFileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LiveryFiles.
     */
    cursor?: LiveryFileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LiveryFiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LiveryFiles.
     */
    skip?: number
    distinct?: LiveryFileScalarFieldEnum | LiveryFileScalarFieldEnum[]
  }

  /**
   * LiveryFile create
   */
  export type LiveryFileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
    /**
     * The data needed to create a LiveryFile.
     */
    data: XOR<LiveryFileCreateInput, LiveryFileUncheckedCreateInput>
  }

  /**
   * LiveryFile createMany
   */
  export type LiveryFileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LiveryFiles.
     */
    data: LiveryFileCreateManyInput | LiveryFileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LiveryFile createManyAndReturn
   */
  export type LiveryFileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * The data used to create many LiveryFiles.
     */
    data: LiveryFileCreateManyInput | LiveryFileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LiveryFile update
   */
  export type LiveryFileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
    /**
     * The data needed to update a LiveryFile.
     */
    data: XOR<LiveryFileUpdateInput, LiveryFileUncheckedUpdateInput>
    /**
     * Choose, which LiveryFile to update.
     */
    where: LiveryFileWhereUniqueInput
  }

  /**
   * LiveryFile updateMany
   */
  export type LiveryFileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LiveryFiles.
     */
    data: XOR<LiveryFileUpdateManyMutationInput, LiveryFileUncheckedUpdateManyInput>
    /**
     * Filter which LiveryFiles to update
     */
    where?: LiveryFileWhereInput
    /**
     * Limit how many LiveryFiles to update.
     */
    limit?: number
  }

  /**
   * LiveryFile updateManyAndReturn
   */
  export type LiveryFileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * The data used to update LiveryFiles.
     */
    data: XOR<LiveryFileUpdateManyMutationInput, LiveryFileUncheckedUpdateManyInput>
    /**
     * Filter which LiveryFiles to update
     */
    where?: LiveryFileWhereInput
    /**
     * Limit how many LiveryFiles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * LiveryFile upsert
   */
  export type LiveryFileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
    /**
     * The filter to search for the LiveryFile to update in case it exists.
     */
    where: LiveryFileWhereUniqueInput
    /**
     * In case the LiveryFile found by the `where` argument doesn't exist, create a new LiveryFile with this data.
     */
    create: XOR<LiveryFileCreateInput, LiveryFileUncheckedCreateInput>
    /**
     * In case the LiveryFile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LiveryFileUpdateInput, LiveryFileUncheckedUpdateInput>
  }

  /**
   * LiveryFile delete
   */
  export type LiveryFileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
    /**
     * Filter which LiveryFile to delete.
     */
    where: LiveryFileWhereUniqueInput
  }

  /**
   * LiveryFile deleteMany
   */
  export type LiveryFileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LiveryFiles to delete
     */
    where?: LiveryFileWhereInput
    /**
     * Limit how many LiveryFiles to delete.
     */
    limit?: number
  }

  /**
   * LiveryFile without action
   */
  export type LiveryFileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LiveryFile
     */
    select?: LiveryFileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LiveryFile
     */
    omit?: LiveryFileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryFileInclude<ExtArgs> | null
  }


  /**
   * Model VirtualAirline
   */

  export type AggregateVirtualAirline = {
    _count: VirtualAirlineCountAggregateOutputType | null
    _avg: VirtualAirlineAvgAggregateOutputType | null
    _sum: VirtualAirlineSumAggregateOutputType | null
    _min: VirtualAirlineMinAggregateOutputType | null
    _max: VirtualAirlineMaxAggregateOutputType | null
  }

  export type VirtualAirlineAvgAggregateOutputType = {
    ComputedMemberCount: number | null
    ComputedAircraftsCount: number | null
    ComputedNumberOfFlights30Days: number | null
    ComputedNumberOfFlightHours30Days: number | null
    Reputation: Decimal | null
    DifficultyLevel: number | null
    Level: number | null
    LevelXP: number | null
    TotalContractsCompleted: number | null
    TotalContractsEarnedCredits: number | null
  }

  export type VirtualAirlineSumAggregateOutputType = {
    ComputedMemberCount: number | null
    ComputedAircraftsCount: number | null
    ComputedNumberOfFlights30Days: number | null
    ComputedNumberOfFlightHours30Days: number | null
    Reputation: Decimal | null
    DifficultyLevel: number | null
    Level: number | null
    LevelXP: number | null
    TotalContractsCompleted: number | null
    TotalContractsEarnedCredits: number | null
  }

  export type VirtualAirlineMinAggregateOutputType = {
    Id: string | null
    ApiKey: string | null
    IsPrimary: boolean | null
    Identifier: string | null
    Name: string | null
    Description: string | null
    WorldId: string | null
    LastDividendsDistribution: Date | null
    LastComputationDate: Date | null
    ComputedMemberCount: number | null
    ComputedAircraftsCount: number | null
    ComputedNumberOfFlights30Days: number | null
    ComputedNumberOfFlightHours30Days: number | null
    ComputedMostUsedAirports: string | null
    LastConnection: Date | null
    LastReportDate: Date | null
    Reputation: Decimal | null
    CreationDate: Date | null
    DifficultyLevel: number | null
    Level: number | null
    LevelXP: number | null
    TotalContractsCompleted: number | null
    TotalContractsEarnedCredits: number | null
    LastRefresh: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type VirtualAirlineMaxAggregateOutputType = {
    Id: string | null
    ApiKey: string | null
    IsPrimary: boolean | null
    Identifier: string | null
    Name: string | null
    Description: string | null
    WorldId: string | null
    LastDividendsDistribution: Date | null
    LastComputationDate: Date | null
    ComputedMemberCount: number | null
    ComputedAircraftsCount: number | null
    ComputedNumberOfFlights30Days: number | null
    ComputedNumberOfFlightHours30Days: number | null
    ComputedMostUsedAirports: string | null
    LastConnection: Date | null
    LastReportDate: Date | null
    Reputation: Decimal | null
    CreationDate: Date | null
    DifficultyLevel: number | null
    Level: number | null
    LevelXP: number | null
    TotalContractsCompleted: number | null
    TotalContractsEarnedCredits: number | null
    LastRefresh: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type VirtualAirlineCountAggregateOutputType = {
    Id: number
    ApiKey: number
    IsPrimary: number
    Identifier: number
    Name: number
    Description: number
    WorldId: number
    LastDividendsDistribution: number
    LastComputationDate: number
    ComputedMemberCount: number
    ComputedAircraftsCount: number
    ComputedNumberOfFlights30Days: number
    ComputedNumberOfFlightHours30Days: number
    ComputedMostUsedAirports: number
    LastConnection: number
    LastReportDate: number
    Reputation: number
    CreationDate: number
    DifficultyLevel: number
    Level: number
    LevelXP: number
    TotalContractsCompleted: number
    TotalContractsEarnedCredits: number
    LastRefresh: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type VirtualAirlineAvgAggregateInputType = {
    ComputedMemberCount?: true
    ComputedAircraftsCount?: true
    ComputedNumberOfFlights30Days?: true
    ComputedNumberOfFlightHours30Days?: true
    Reputation?: true
    DifficultyLevel?: true
    Level?: true
    LevelXP?: true
    TotalContractsCompleted?: true
    TotalContractsEarnedCredits?: true
  }

  export type VirtualAirlineSumAggregateInputType = {
    ComputedMemberCount?: true
    ComputedAircraftsCount?: true
    ComputedNumberOfFlights30Days?: true
    ComputedNumberOfFlightHours30Days?: true
    Reputation?: true
    DifficultyLevel?: true
    Level?: true
    LevelXP?: true
    TotalContractsCompleted?: true
    TotalContractsEarnedCredits?: true
  }

  export type VirtualAirlineMinAggregateInputType = {
    Id?: true
    ApiKey?: true
    IsPrimary?: true
    Identifier?: true
    Name?: true
    Description?: true
    WorldId?: true
    LastDividendsDistribution?: true
    LastComputationDate?: true
    ComputedMemberCount?: true
    ComputedAircraftsCount?: true
    ComputedNumberOfFlights30Days?: true
    ComputedNumberOfFlightHours30Days?: true
    ComputedMostUsedAirports?: true
    LastConnection?: true
    LastReportDate?: true
    Reputation?: true
    CreationDate?: true
    DifficultyLevel?: true
    Level?: true
    LevelXP?: true
    TotalContractsCompleted?: true
    TotalContractsEarnedCredits?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type VirtualAirlineMaxAggregateInputType = {
    Id?: true
    ApiKey?: true
    IsPrimary?: true
    Identifier?: true
    Name?: true
    Description?: true
    WorldId?: true
    LastDividendsDistribution?: true
    LastComputationDate?: true
    ComputedMemberCount?: true
    ComputedAircraftsCount?: true
    ComputedNumberOfFlights30Days?: true
    ComputedNumberOfFlightHours30Days?: true
    ComputedMostUsedAirports?: true
    LastConnection?: true
    LastReportDate?: true
    Reputation?: true
    CreationDate?: true
    DifficultyLevel?: true
    Level?: true
    LevelXP?: true
    TotalContractsCompleted?: true
    TotalContractsEarnedCredits?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type VirtualAirlineCountAggregateInputType = {
    Id?: true
    ApiKey?: true
    IsPrimary?: true
    Identifier?: true
    Name?: true
    Description?: true
    WorldId?: true
    LastDividendsDistribution?: true
    LastComputationDate?: true
    ComputedMemberCount?: true
    ComputedAircraftsCount?: true
    ComputedNumberOfFlights30Days?: true
    ComputedNumberOfFlightHours30Days?: true
    ComputedMostUsedAirports?: true
    LastConnection?: true
    LastReportDate?: true
    Reputation?: true
    CreationDate?: true
    DifficultyLevel?: true
    Level?: true
    LevelXP?: true
    TotalContractsCompleted?: true
    TotalContractsEarnedCredits?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type VirtualAirlineAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VirtualAirline to aggregate.
     */
    where?: VirtualAirlineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualAirlines to fetch.
     */
    orderBy?: VirtualAirlineOrderByWithRelationInput | VirtualAirlineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VirtualAirlineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualAirlines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualAirlines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VirtualAirlines
    **/
    _count?: true | VirtualAirlineCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VirtualAirlineAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VirtualAirlineSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VirtualAirlineMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VirtualAirlineMaxAggregateInputType
  }

  export type GetVirtualAirlineAggregateType<T extends VirtualAirlineAggregateArgs> = {
        [P in keyof T & keyof AggregateVirtualAirline]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVirtualAirline[P]>
      : GetScalarType<T[P], AggregateVirtualAirline[P]>
  }




  export type VirtualAirlineGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VirtualAirlineWhereInput
    orderBy?: VirtualAirlineOrderByWithAggregationInput | VirtualAirlineOrderByWithAggregationInput[]
    by: VirtualAirlineScalarFieldEnum[] | VirtualAirlineScalarFieldEnum
    having?: VirtualAirlineScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VirtualAirlineCountAggregateInputType | true
    _avg?: VirtualAirlineAvgAggregateInputType
    _sum?: VirtualAirlineSumAggregateInputType
    _min?: VirtualAirlineMinAggregateInputType
    _max?: VirtualAirlineMaxAggregateInputType
  }

  export type VirtualAirlineGroupByOutputType = {
    Id: string
    ApiKey: string
    IsPrimary: boolean
    Identifier: string | null
    Name: string | null
    Description: string | null
    WorldId: string | null
    LastDividendsDistribution: Date | null
    LastComputationDate: Date | null
    ComputedMemberCount: number | null
    ComputedAircraftsCount: number | null
    ComputedNumberOfFlights30Days: number | null
    ComputedNumberOfFlightHours30Days: number | null
    ComputedMostUsedAirports: string | null
    LastConnection: Date | null
    LastReportDate: Date | null
    Reputation: Decimal | null
    CreationDate: Date | null
    DifficultyLevel: number | null
    Level: number | null
    LevelXP: number | null
    TotalContractsCompleted: number | null
    TotalContractsEarnedCredits: number | null
    LastRefresh: Date | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: VirtualAirlineCountAggregateOutputType | null
    _avg: VirtualAirlineAvgAggregateOutputType | null
    _sum: VirtualAirlineSumAggregateOutputType | null
    _min: VirtualAirlineMinAggregateOutputType | null
    _max: VirtualAirlineMaxAggregateOutputType | null
  }

  type GetVirtualAirlineGroupByPayload<T extends VirtualAirlineGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VirtualAirlineGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VirtualAirlineGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VirtualAirlineGroupByOutputType[P]>
            : GetScalarType<T[P], VirtualAirlineGroupByOutputType[P]>
        }
      >
    >


  export type VirtualAirlineSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ApiKey?: boolean
    IsPrimary?: boolean
    Identifier?: boolean
    Name?: boolean
    Description?: boolean
    WorldId?: boolean
    LastDividendsDistribution?: boolean
    LastComputationDate?: boolean
    ComputedMemberCount?: boolean
    ComputedAircraftsCount?: boolean
    ComputedNumberOfFlights30Days?: boolean
    ComputedNumberOfFlightHours30Days?: boolean
    ComputedMostUsedAirports?: boolean
    LastConnection?: boolean
    LastReportDate?: boolean
    Reputation?: boolean
    CreationDate?: boolean
    DifficultyLevel?: boolean
    Level?: boolean
    LevelXP?: boolean
    TotalContractsCompleted?: boolean
    TotalContractsEarnedCredits?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    World?: boolean | VirtualAirline$WorldArgs<ExtArgs>
    VARoles?: boolean | VirtualAirline$VARolesArgs<ExtArgs>
    Members?: boolean | VirtualAirline$MembersArgs<ExtArgs>
    Fleet?: boolean | VirtualAirline$FleetArgs<ExtArgs>
    Flights?: boolean | VirtualAirline$FlightsArgs<ExtArgs>
    _count?: boolean | VirtualAirlineCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["virtualAirline"]>

  export type VirtualAirlineSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ApiKey?: boolean
    IsPrimary?: boolean
    Identifier?: boolean
    Name?: boolean
    Description?: boolean
    WorldId?: boolean
    LastDividendsDistribution?: boolean
    LastComputationDate?: boolean
    ComputedMemberCount?: boolean
    ComputedAircraftsCount?: boolean
    ComputedNumberOfFlights30Days?: boolean
    ComputedNumberOfFlightHours30Days?: boolean
    ComputedMostUsedAirports?: boolean
    LastConnection?: boolean
    LastReportDate?: boolean
    Reputation?: boolean
    CreationDate?: boolean
    DifficultyLevel?: boolean
    Level?: boolean
    LevelXP?: boolean
    TotalContractsCompleted?: boolean
    TotalContractsEarnedCredits?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    World?: boolean | VirtualAirline$WorldArgs<ExtArgs>
  }, ExtArgs["result"]["virtualAirline"]>

  export type VirtualAirlineSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ApiKey?: boolean
    IsPrimary?: boolean
    Identifier?: boolean
    Name?: boolean
    Description?: boolean
    WorldId?: boolean
    LastDividendsDistribution?: boolean
    LastComputationDate?: boolean
    ComputedMemberCount?: boolean
    ComputedAircraftsCount?: boolean
    ComputedNumberOfFlights30Days?: boolean
    ComputedNumberOfFlightHours30Days?: boolean
    ComputedMostUsedAirports?: boolean
    LastConnection?: boolean
    LastReportDate?: boolean
    Reputation?: boolean
    CreationDate?: boolean
    DifficultyLevel?: boolean
    Level?: boolean
    LevelXP?: boolean
    TotalContractsCompleted?: boolean
    TotalContractsEarnedCredits?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    World?: boolean | VirtualAirline$WorldArgs<ExtArgs>
  }, ExtArgs["result"]["virtualAirline"]>

  export type VirtualAirlineSelectScalar = {
    Id?: boolean
    ApiKey?: boolean
    IsPrimary?: boolean
    Identifier?: boolean
    Name?: boolean
    Description?: boolean
    WorldId?: boolean
    LastDividendsDistribution?: boolean
    LastComputationDate?: boolean
    ComputedMemberCount?: boolean
    ComputedAircraftsCount?: boolean
    ComputedNumberOfFlights30Days?: boolean
    ComputedNumberOfFlightHours30Days?: boolean
    ComputedMostUsedAirports?: boolean
    LastConnection?: boolean
    LastReportDate?: boolean
    Reputation?: boolean
    CreationDate?: boolean
    DifficultyLevel?: boolean
    Level?: boolean
    LevelXP?: boolean
    TotalContractsCompleted?: boolean
    TotalContractsEarnedCredits?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type VirtualAirlineOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "ApiKey" | "IsPrimary" | "Identifier" | "Name" | "Description" | "WorldId" | "LastDividendsDistribution" | "LastComputationDate" | "ComputedMemberCount" | "ComputedAircraftsCount" | "ComputedNumberOfFlights30Days" | "ComputedNumberOfFlightHours30Days" | "ComputedMostUsedAirports" | "LastConnection" | "LastReportDate" | "Reputation" | "CreationDate" | "DifficultyLevel" | "Level" | "LevelXP" | "TotalContractsCompleted" | "TotalContractsEarnedCredits" | "LastRefresh" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["virtualAirline"]>
  export type VirtualAirlineInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    World?: boolean | VirtualAirline$WorldArgs<ExtArgs>
    VARoles?: boolean | VirtualAirline$VARolesArgs<ExtArgs>
    Members?: boolean | VirtualAirline$MembersArgs<ExtArgs>
    Fleet?: boolean | VirtualAirline$FleetArgs<ExtArgs>
    Flights?: boolean | VirtualAirline$FlightsArgs<ExtArgs>
    _count?: boolean | VirtualAirlineCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VirtualAirlineIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    World?: boolean | VirtualAirline$WorldArgs<ExtArgs>
  }
  export type VirtualAirlineIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    World?: boolean | VirtualAirline$WorldArgs<ExtArgs>
  }

  export type $VirtualAirlinePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VirtualAirline"
    objects: {
      World: Prisma.$WorldPayload<ExtArgs> | null
      VARoles: Prisma.$VirtualAirlineRolePayload<ExtArgs>[]
      Members: Prisma.$MemberPayload<ExtArgs>[]
      Fleet: Prisma.$AircraftPayload<ExtArgs>[]
      Flights: Prisma.$FlightPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      ApiKey: string
      IsPrimary: boolean
      Identifier: string | null
      Name: string | null
      Description: string | null
      WorldId: string | null
      LastDividendsDistribution: Date | null
      LastComputationDate: Date | null
      ComputedMemberCount: number | null
      ComputedAircraftsCount: number | null
      ComputedNumberOfFlights30Days: number | null
      ComputedNumberOfFlightHours30Days: number | null
      ComputedMostUsedAirports: string | null
      LastConnection: Date | null
      LastReportDate: Date | null
      Reputation: Prisma.Decimal | null
      CreationDate: Date | null
      DifficultyLevel: number | null
      Level: number | null
      LevelXP: number | null
      TotalContractsCompleted: number | null
      TotalContractsEarnedCredits: number | null
      LastRefresh: Date | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["virtualAirline"]>
    composites: {}
  }

  type VirtualAirlineGetPayload<S extends boolean | null | undefined | VirtualAirlineDefaultArgs> = $Result.GetResult<Prisma.$VirtualAirlinePayload, S>

  type VirtualAirlineCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VirtualAirlineFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VirtualAirlineCountAggregateInputType | true
    }

  export interface VirtualAirlineDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VirtualAirline'], meta: { name: 'VirtualAirline' } }
    /**
     * Find zero or one VirtualAirline that matches the filter.
     * @param {VirtualAirlineFindUniqueArgs} args - Arguments to find a VirtualAirline
     * @example
     * // Get one VirtualAirline
     * const virtualAirline = await prisma.virtualAirline.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VirtualAirlineFindUniqueArgs>(args: SelectSubset<T, VirtualAirlineFindUniqueArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VirtualAirline that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VirtualAirlineFindUniqueOrThrowArgs} args - Arguments to find a VirtualAirline
     * @example
     * // Get one VirtualAirline
     * const virtualAirline = await prisma.virtualAirline.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VirtualAirlineFindUniqueOrThrowArgs>(args: SelectSubset<T, VirtualAirlineFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VirtualAirline that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineFindFirstArgs} args - Arguments to find a VirtualAirline
     * @example
     * // Get one VirtualAirline
     * const virtualAirline = await prisma.virtualAirline.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VirtualAirlineFindFirstArgs>(args?: SelectSubset<T, VirtualAirlineFindFirstArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VirtualAirline that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineFindFirstOrThrowArgs} args - Arguments to find a VirtualAirline
     * @example
     * // Get one VirtualAirline
     * const virtualAirline = await prisma.virtualAirline.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VirtualAirlineFindFirstOrThrowArgs>(args?: SelectSubset<T, VirtualAirlineFindFirstOrThrowArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VirtualAirlines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VirtualAirlines
     * const virtualAirlines = await prisma.virtualAirline.findMany()
     * 
     * // Get first 10 VirtualAirlines
     * const virtualAirlines = await prisma.virtualAirline.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const virtualAirlineWithIdOnly = await prisma.virtualAirline.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends VirtualAirlineFindManyArgs>(args?: SelectSubset<T, VirtualAirlineFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VirtualAirline.
     * @param {VirtualAirlineCreateArgs} args - Arguments to create a VirtualAirline.
     * @example
     * // Create one VirtualAirline
     * const VirtualAirline = await prisma.virtualAirline.create({
     *   data: {
     *     // ... data to create a VirtualAirline
     *   }
     * })
     * 
     */
    create<T extends VirtualAirlineCreateArgs>(args: SelectSubset<T, VirtualAirlineCreateArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VirtualAirlines.
     * @param {VirtualAirlineCreateManyArgs} args - Arguments to create many VirtualAirlines.
     * @example
     * // Create many VirtualAirlines
     * const virtualAirline = await prisma.virtualAirline.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VirtualAirlineCreateManyArgs>(args?: SelectSubset<T, VirtualAirlineCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VirtualAirlines and returns the data saved in the database.
     * @param {VirtualAirlineCreateManyAndReturnArgs} args - Arguments to create many VirtualAirlines.
     * @example
     * // Create many VirtualAirlines
     * const virtualAirline = await prisma.virtualAirline.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VirtualAirlines and only return the `Id`
     * const virtualAirlineWithIdOnly = await prisma.virtualAirline.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VirtualAirlineCreateManyAndReturnArgs>(args?: SelectSubset<T, VirtualAirlineCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VirtualAirline.
     * @param {VirtualAirlineDeleteArgs} args - Arguments to delete one VirtualAirline.
     * @example
     * // Delete one VirtualAirline
     * const VirtualAirline = await prisma.virtualAirline.delete({
     *   where: {
     *     // ... filter to delete one VirtualAirline
     *   }
     * })
     * 
     */
    delete<T extends VirtualAirlineDeleteArgs>(args: SelectSubset<T, VirtualAirlineDeleteArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VirtualAirline.
     * @param {VirtualAirlineUpdateArgs} args - Arguments to update one VirtualAirline.
     * @example
     * // Update one VirtualAirline
     * const virtualAirline = await prisma.virtualAirline.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VirtualAirlineUpdateArgs>(args: SelectSubset<T, VirtualAirlineUpdateArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VirtualAirlines.
     * @param {VirtualAirlineDeleteManyArgs} args - Arguments to filter VirtualAirlines to delete.
     * @example
     * // Delete a few VirtualAirlines
     * const { count } = await prisma.virtualAirline.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VirtualAirlineDeleteManyArgs>(args?: SelectSubset<T, VirtualAirlineDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VirtualAirlines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VirtualAirlines
     * const virtualAirline = await prisma.virtualAirline.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VirtualAirlineUpdateManyArgs>(args: SelectSubset<T, VirtualAirlineUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VirtualAirlines and returns the data updated in the database.
     * @param {VirtualAirlineUpdateManyAndReturnArgs} args - Arguments to update many VirtualAirlines.
     * @example
     * // Update many VirtualAirlines
     * const virtualAirline = await prisma.virtualAirline.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VirtualAirlines and only return the `Id`
     * const virtualAirlineWithIdOnly = await prisma.virtualAirline.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VirtualAirlineUpdateManyAndReturnArgs>(args: SelectSubset<T, VirtualAirlineUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VirtualAirline.
     * @param {VirtualAirlineUpsertArgs} args - Arguments to update or create a VirtualAirline.
     * @example
     * // Update or create a VirtualAirline
     * const virtualAirline = await prisma.virtualAirline.upsert({
     *   create: {
     *     // ... data to create a VirtualAirline
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VirtualAirline we want to update
     *   }
     * })
     */
    upsert<T extends VirtualAirlineUpsertArgs>(args: SelectSubset<T, VirtualAirlineUpsertArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VirtualAirlines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineCountArgs} args - Arguments to filter VirtualAirlines to count.
     * @example
     * // Count the number of VirtualAirlines
     * const count = await prisma.virtualAirline.count({
     *   where: {
     *     // ... the filter for the VirtualAirlines we want to count
     *   }
     * })
    **/
    count<T extends VirtualAirlineCountArgs>(
      args?: Subset<T, VirtualAirlineCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VirtualAirlineCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VirtualAirline.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VirtualAirlineAggregateArgs>(args: Subset<T, VirtualAirlineAggregateArgs>): Prisma.PrismaPromise<GetVirtualAirlineAggregateType<T>>

    /**
     * Group by VirtualAirline.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VirtualAirlineGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VirtualAirlineGroupByArgs['orderBy'] }
        : { orderBy?: VirtualAirlineGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VirtualAirlineGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVirtualAirlineGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VirtualAirline model
   */
  readonly fields: VirtualAirlineFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VirtualAirline.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VirtualAirlineClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    World<T extends VirtualAirline$WorldArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirline$WorldArgs<ExtArgs>>): Prisma__WorldClient<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    VARoles<T extends VirtualAirline$VARolesArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirline$VARolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Members<T extends VirtualAirline$MembersArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirline$MembersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Fleet<T extends VirtualAirline$FleetArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirline$FleetArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Flights<T extends VirtualAirline$FlightsArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirline$FlightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VirtualAirline model
   */
  interface VirtualAirlineFieldRefs {
    readonly Id: FieldRef<"VirtualAirline", 'String'>
    readonly ApiKey: FieldRef<"VirtualAirline", 'String'>
    readonly IsPrimary: FieldRef<"VirtualAirline", 'Boolean'>
    readonly Identifier: FieldRef<"VirtualAirline", 'String'>
    readonly Name: FieldRef<"VirtualAirline", 'String'>
    readonly Description: FieldRef<"VirtualAirline", 'String'>
    readonly WorldId: FieldRef<"VirtualAirline", 'String'>
    readonly LastDividendsDistribution: FieldRef<"VirtualAirline", 'DateTime'>
    readonly LastComputationDate: FieldRef<"VirtualAirline", 'DateTime'>
    readonly ComputedMemberCount: FieldRef<"VirtualAirline", 'Int'>
    readonly ComputedAircraftsCount: FieldRef<"VirtualAirline", 'Int'>
    readonly ComputedNumberOfFlights30Days: FieldRef<"VirtualAirline", 'Int'>
    readonly ComputedNumberOfFlightHours30Days: FieldRef<"VirtualAirline", 'Int'>
    readonly ComputedMostUsedAirports: FieldRef<"VirtualAirline", 'String'>
    readonly LastConnection: FieldRef<"VirtualAirline", 'DateTime'>
    readonly LastReportDate: FieldRef<"VirtualAirline", 'DateTime'>
    readonly Reputation: FieldRef<"VirtualAirline", 'Decimal'>
    readonly CreationDate: FieldRef<"VirtualAirline", 'DateTime'>
    readonly DifficultyLevel: FieldRef<"VirtualAirline", 'Int'>
    readonly Level: FieldRef<"VirtualAirline", 'Int'>
    readonly LevelXP: FieldRef<"VirtualAirline", 'Int'>
    readonly TotalContractsCompleted: FieldRef<"VirtualAirline", 'Int'>
    readonly TotalContractsEarnedCredits: FieldRef<"VirtualAirline", 'Int'>
    readonly LastRefresh: FieldRef<"VirtualAirline", 'DateTime'>
    readonly CreatedAt: FieldRef<"VirtualAirline", 'DateTime'>
    readonly UpdatedAt: FieldRef<"VirtualAirline", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VirtualAirline findUnique
   */
  export type VirtualAirlineFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    /**
     * Filter, which VirtualAirline to fetch.
     */
    where: VirtualAirlineWhereUniqueInput
  }

  /**
   * VirtualAirline findUniqueOrThrow
   */
  export type VirtualAirlineFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    /**
     * Filter, which VirtualAirline to fetch.
     */
    where: VirtualAirlineWhereUniqueInput
  }

  /**
   * VirtualAirline findFirst
   */
  export type VirtualAirlineFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    /**
     * Filter, which VirtualAirline to fetch.
     */
    where?: VirtualAirlineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualAirlines to fetch.
     */
    orderBy?: VirtualAirlineOrderByWithRelationInput | VirtualAirlineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VirtualAirlines.
     */
    cursor?: VirtualAirlineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualAirlines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualAirlines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VirtualAirlines.
     */
    distinct?: VirtualAirlineScalarFieldEnum | VirtualAirlineScalarFieldEnum[]
  }

  /**
   * VirtualAirline findFirstOrThrow
   */
  export type VirtualAirlineFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    /**
     * Filter, which VirtualAirline to fetch.
     */
    where?: VirtualAirlineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualAirlines to fetch.
     */
    orderBy?: VirtualAirlineOrderByWithRelationInput | VirtualAirlineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VirtualAirlines.
     */
    cursor?: VirtualAirlineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualAirlines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualAirlines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VirtualAirlines.
     */
    distinct?: VirtualAirlineScalarFieldEnum | VirtualAirlineScalarFieldEnum[]
  }

  /**
   * VirtualAirline findMany
   */
  export type VirtualAirlineFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    /**
     * Filter, which VirtualAirlines to fetch.
     */
    where?: VirtualAirlineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualAirlines to fetch.
     */
    orderBy?: VirtualAirlineOrderByWithRelationInput | VirtualAirlineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VirtualAirlines.
     */
    cursor?: VirtualAirlineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualAirlines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualAirlines.
     */
    skip?: number
    distinct?: VirtualAirlineScalarFieldEnum | VirtualAirlineScalarFieldEnum[]
  }

  /**
   * VirtualAirline create
   */
  export type VirtualAirlineCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    /**
     * The data needed to create a VirtualAirline.
     */
    data: XOR<VirtualAirlineCreateInput, VirtualAirlineUncheckedCreateInput>
  }

  /**
   * VirtualAirline createMany
   */
  export type VirtualAirlineCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VirtualAirlines.
     */
    data: VirtualAirlineCreateManyInput | VirtualAirlineCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VirtualAirline createManyAndReturn
   */
  export type VirtualAirlineCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * The data used to create many VirtualAirlines.
     */
    data: VirtualAirlineCreateManyInput | VirtualAirlineCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VirtualAirline update
   */
  export type VirtualAirlineUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    /**
     * The data needed to update a VirtualAirline.
     */
    data: XOR<VirtualAirlineUpdateInput, VirtualAirlineUncheckedUpdateInput>
    /**
     * Choose, which VirtualAirline to update.
     */
    where: VirtualAirlineWhereUniqueInput
  }

  /**
   * VirtualAirline updateMany
   */
  export type VirtualAirlineUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VirtualAirlines.
     */
    data: XOR<VirtualAirlineUpdateManyMutationInput, VirtualAirlineUncheckedUpdateManyInput>
    /**
     * Filter which VirtualAirlines to update
     */
    where?: VirtualAirlineWhereInput
    /**
     * Limit how many VirtualAirlines to update.
     */
    limit?: number
  }

  /**
   * VirtualAirline updateManyAndReturn
   */
  export type VirtualAirlineUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * The data used to update VirtualAirlines.
     */
    data: XOR<VirtualAirlineUpdateManyMutationInput, VirtualAirlineUncheckedUpdateManyInput>
    /**
     * Filter which VirtualAirlines to update
     */
    where?: VirtualAirlineWhereInput
    /**
     * Limit how many VirtualAirlines to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * VirtualAirline upsert
   */
  export type VirtualAirlineUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    /**
     * The filter to search for the VirtualAirline to update in case it exists.
     */
    where: VirtualAirlineWhereUniqueInput
    /**
     * In case the VirtualAirline found by the `where` argument doesn't exist, create a new VirtualAirline with this data.
     */
    create: XOR<VirtualAirlineCreateInput, VirtualAirlineUncheckedCreateInput>
    /**
     * In case the VirtualAirline was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VirtualAirlineUpdateInput, VirtualAirlineUncheckedUpdateInput>
  }

  /**
   * VirtualAirline delete
   */
  export type VirtualAirlineDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    /**
     * Filter which VirtualAirline to delete.
     */
    where: VirtualAirlineWhereUniqueInput
  }

  /**
   * VirtualAirline deleteMany
   */
  export type VirtualAirlineDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VirtualAirlines to delete
     */
    where?: VirtualAirlineWhereInput
    /**
     * Limit how many VirtualAirlines to delete.
     */
    limit?: number
  }

  /**
   * VirtualAirline.World
   */
  export type VirtualAirline$WorldArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
    where?: WorldWhereInput
  }

  /**
   * VirtualAirline.VARoles
   */
  export type VirtualAirline$VARolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    where?: VirtualAirlineRoleWhereInput
    orderBy?: VirtualAirlineRoleOrderByWithRelationInput | VirtualAirlineRoleOrderByWithRelationInput[]
    cursor?: VirtualAirlineRoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VirtualAirlineRoleScalarFieldEnum | VirtualAirlineRoleScalarFieldEnum[]
  }

  /**
   * VirtualAirline.Members
   */
  export type VirtualAirline$MembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    where?: MemberWhereInput
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    cursor?: MemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * VirtualAirline.Fleet
   */
  export type VirtualAirline$FleetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    where?: AircraftWhereInput
    orderBy?: AircraftOrderByWithRelationInput | AircraftOrderByWithRelationInput[]
    cursor?: AircraftWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AircraftScalarFieldEnum | AircraftScalarFieldEnum[]
  }

  /**
   * VirtualAirline.Flights
   */
  export type VirtualAirline$FlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    where?: FlightWhereInput
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    cursor?: FlightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * VirtualAirline without action
   */
  export type VirtualAirlineDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
  }


  /**
   * Model VirtualAirlineRole
   */

  export type AggregateVirtualAirlineRole = {
    _count: VirtualAirlineRoleCountAggregateOutputType | null
    _avg: VirtualAirlineRoleAvgAggregateOutputType | null
    _sum: VirtualAirlineRoleSumAggregateOutputType | null
    _min: VirtualAirlineRoleMinAggregateOutputType | null
    _max: VirtualAirlineRoleMaxAggregateOutputType | null
  }

  export type VirtualAirlineRoleAvgAggregateOutputType = {
    Permission: number | null
    PayPercent: Decimal | null
    PayWeekly: Decimal | null
    PayPerFlightHour: Decimal | null
  }

  export type VirtualAirlineRoleSumAggregateOutputType = {
    Permission: number | null
    PayPercent: Decimal | null
    PayWeekly: Decimal | null
    PayPerFlightHour: Decimal | null
  }

  export type VirtualAirlineRoleMinAggregateOutputType = {
    Id: string | null
    VAId: string | null
    Name: string | null
    Permission: number | null
    IsDefaultNewRole: boolean | null
    Color: string | null
    PayPercent: Decimal | null
    IsHidden: boolean | null
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean | null
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean | null
    PayWeekly: Decimal | null
    PayPerFlightHour: Decimal | null
    LastRefresh: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type VirtualAirlineRoleMaxAggregateOutputType = {
    Id: string | null
    VAId: string | null
    Name: string | null
    Permission: number | null
    IsDefaultNewRole: boolean | null
    Color: string | null
    PayPercent: Decimal | null
    IsHidden: boolean | null
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean | null
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean | null
    PayWeekly: Decimal | null
    PayPerFlightHour: Decimal | null
    LastRefresh: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type VirtualAirlineRoleCountAggregateOutputType = {
    Id: number
    VAId: number
    Name: number
    Permission: number
    IsDefaultNewRole: number
    Color: number
    PayPercent: number
    IsHidden: number
    RestrictLoadingVAJobsIntoNonVAAircraft: number
    RestrictLoadingNonVAJobsIntoVAAircraft: number
    PayWeekly: number
    PayPerFlightHour: number
    LastRefresh: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type VirtualAirlineRoleAvgAggregateInputType = {
    Permission?: true
    PayPercent?: true
    PayWeekly?: true
    PayPerFlightHour?: true
  }

  export type VirtualAirlineRoleSumAggregateInputType = {
    Permission?: true
    PayPercent?: true
    PayWeekly?: true
    PayPerFlightHour?: true
  }

  export type VirtualAirlineRoleMinAggregateInputType = {
    Id?: true
    VAId?: true
    Name?: true
    Permission?: true
    IsDefaultNewRole?: true
    Color?: true
    PayPercent?: true
    IsHidden?: true
    RestrictLoadingVAJobsIntoNonVAAircraft?: true
    RestrictLoadingNonVAJobsIntoVAAircraft?: true
    PayWeekly?: true
    PayPerFlightHour?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type VirtualAirlineRoleMaxAggregateInputType = {
    Id?: true
    VAId?: true
    Name?: true
    Permission?: true
    IsDefaultNewRole?: true
    Color?: true
    PayPercent?: true
    IsHidden?: true
    RestrictLoadingVAJobsIntoNonVAAircraft?: true
    RestrictLoadingNonVAJobsIntoVAAircraft?: true
    PayWeekly?: true
    PayPerFlightHour?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type VirtualAirlineRoleCountAggregateInputType = {
    Id?: true
    VAId?: true
    Name?: true
    Permission?: true
    IsDefaultNewRole?: true
    Color?: true
    PayPercent?: true
    IsHidden?: true
    RestrictLoadingVAJobsIntoNonVAAircraft?: true
    RestrictLoadingNonVAJobsIntoVAAircraft?: true
    PayWeekly?: true
    PayPerFlightHour?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type VirtualAirlineRoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VirtualAirlineRole to aggregate.
     */
    where?: VirtualAirlineRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualAirlineRoles to fetch.
     */
    orderBy?: VirtualAirlineRoleOrderByWithRelationInput | VirtualAirlineRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VirtualAirlineRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualAirlineRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualAirlineRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VirtualAirlineRoles
    **/
    _count?: true | VirtualAirlineRoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VirtualAirlineRoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VirtualAirlineRoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VirtualAirlineRoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VirtualAirlineRoleMaxAggregateInputType
  }

  export type GetVirtualAirlineRoleAggregateType<T extends VirtualAirlineRoleAggregateArgs> = {
        [P in keyof T & keyof AggregateVirtualAirlineRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVirtualAirlineRole[P]>
      : GetScalarType<T[P], AggregateVirtualAirlineRole[P]>
  }




  export type VirtualAirlineRoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VirtualAirlineRoleWhereInput
    orderBy?: VirtualAirlineRoleOrderByWithAggregationInput | VirtualAirlineRoleOrderByWithAggregationInput[]
    by: VirtualAirlineRoleScalarFieldEnum[] | VirtualAirlineRoleScalarFieldEnum
    having?: VirtualAirlineRoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VirtualAirlineRoleCountAggregateInputType | true
    _avg?: VirtualAirlineRoleAvgAggregateInputType
    _sum?: VirtualAirlineRoleSumAggregateInputType
    _min?: VirtualAirlineRoleMinAggregateInputType
    _max?: VirtualAirlineRoleMaxAggregateInputType
  }

  export type VirtualAirlineRoleGroupByOutputType = {
    Id: string
    VAId: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal
    PayPerFlightHour: Decimal
    LastRefresh: Date | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: VirtualAirlineRoleCountAggregateOutputType | null
    _avg: VirtualAirlineRoleAvgAggregateOutputType | null
    _sum: VirtualAirlineRoleSumAggregateOutputType | null
    _min: VirtualAirlineRoleMinAggregateOutputType | null
    _max: VirtualAirlineRoleMaxAggregateOutputType | null
  }

  type GetVirtualAirlineRoleGroupByPayload<T extends VirtualAirlineRoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VirtualAirlineRoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VirtualAirlineRoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VirtualAirlineRoleGroupByOutputType[P]>
            : GetScalarType<T[P], VirtualAirlineRoleGroupByOutputType[P]>
        }
      >
    >


  export type VirtualAirlineRoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    VAId?: boolean
    Name?: boolean
    Permission?: boolean
    IsDefaultNewRole?: boolean
    Color?: boolean
    PayPercent?: boolean
    IsHidden?: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: boolean
    PayWeekly?: boolean
    PayPerFlightHour?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Role?: boolean | VirtualAirlineRole$RoleArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    Members?: boolean | VirtualAirlineRole$MembersArgs<ExtArgs>
    _count?: boolean | VirtualAirlineRoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["virtualAirlineRole"]>

  export type VirtualAirlineRoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    VAId?: boolean
    Name?: boolean
    Permission?: boolean
    IsDefaultNewRole?: boolean
    Color?: boolean
    PayPercent?: boolean
    IsHidden?: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: boolean
    PayWeekly?: boolean
    PayPerFlightHour?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["virtualAirlineRole"]>

  export type VirtualAirlineRoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    VAId?: boolean
    Name?: boolean
    Permission?: boolean
    IsDefaultNewRole?: boolean
    Color?: boolean
    PayPercent?: boolean
    IsHidden?: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: boolean
    PayWeekly?: boolean
    PayPerFlightHour?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["virtualAirlineRole"]>

  export type VirtualAirlineRoleSelectScalar = {
    Id?: boolean
    VAId?: boolean
    Name?: boolean
    Permission?: boolean
    IsDefaultNewRole?: boolean
    Color?: boolean
    PayPercent?: boolean
    IsHidden?: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: boolean
    PayWeekly?: boolean
    PayPerFlightHour?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type VirtualAirlineRoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "VAId" | "Name" | "Permission" | "IsDefaultNewRole" | "Color" | "PayPercent" | "IsHidden" | "RestrictLoadingVAJobsIntoNonVAAircraft" | "RestrictLoadingNonVAJobsIntoVAAircraft" | "PayWeekly" | "PayPerFlightHour" | "LastRefresh" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["virtualAirlineRole"]>
  export type VirtualAirlineRoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Role?: boolean | VirtualAirlineRole$RoleArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    Members?: boolean | VirtualAirlineRole$MembersArgs<ExtArgs>
    _count?: boolean | VirtualAirlineRoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VirtualAirlineRoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
  }
  export type VirtualAirlineRoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
  }

  export type $VirtualAirlineRolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VirtualAirlineRole"
    objects: {
      Role: Prisma.$RolePayload<ExtArgs> | null
      VirtualAirline: Prisma.$VirtualAirlinePayload<ExtArgs>
      Members: Prisma.$MemberPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      VAId: string
      Name: string
      Permission: number
      IsDefaultNewRole: boolean
      Color: string
      PayPercent: Prisma.Decimal
      IsHidden: boolean
      RestrictLoadingVAJobsIntoNonVAAircraft: boolean
      RestrictLoadingNonVAJobsIntoVAAircraft: boolean
      PayWeekly: Prisma.Decimal
      PayPerFlightHour: Prisma.Decimal
      LastRefresh: Date | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["virtualAirlineRole"]>
    composites: {}
  }

  type VirtualAirlineRoleGetPayload<S extends boolean | null | undefined | VirtualAirlineRoleDefaultArgs> = $Result.GetResult<Prisma.$VirtualAirlineRolePayload, S>

  type VirtualAirlineRoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VirtualAirlineRoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VirtualAirlineRoleCountAggregateInputType | true
    }

  export interface VirtualAirlineRoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VirtualAirlineRole'], meta: { name: 'VirtualAirlineRole' } }
    /**
     * Find zero or one VirtualAirlineRole that matches the filter.
     * @param {VirtualAirlineRoleFindUniqueArgs} args - Arguments to find a VirtualAirlineRole
     * @example
     * // Get one VirtualAirlineRole
     * const virtualAirlineRole = await prisma.virtualAirlineRole.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VirtualAirlineRoleFindUniqueArgs>(args: SelectSubset<T, VirtualAirlineRoleFindUniqueArgs<ExtArgs>>): Prisma__VirtualAirlineRoleClient<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VirtualAirlineRole that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VirtualAirlineRoleFindUniqueOrThrowArgs} args - Arguments to find a VirtualAirlineRole
     * @example
     * // Get one VirtualAirlineRole
     * const virtualAirlineRole = await prisma.virtualAirlineRole.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VirtualAirlineRoleFindUniqueOrThrowArgs>(args: SelectSubset<T, VirtualAirlineRoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VirtualAirlineRoleClient<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VirtualAirlineRole that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineRoleFindFirstArgs} args - Arguments to find a VirtualAirlineRole
     * @example
     * // Get one VirtualAirlineRole
     * const virtualAirlineRole = await prisma.virtualAirlineRole.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VirtualAirlineRoleFindFirstArgs>(args?: SelectSubset<T, VirtualAirlineRoleFindFirstArgs<ExtArgs>>): Prisma__VirtualAirlineRoleClient<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VirtualAirlineRole that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineRoleFindFirstOrThrowArgs} args - Arguments to find a VirtualAirlineRole
     * @example
     * // Get one VirtualAirlineRole
     * const virtualAirlineRole = await prisma.virtualAirlineRole.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VirtualAirlineRoleFindFirstOrThrowArgs>(args?: SelectSubset<T, VirtualAirlineRoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__VirtualAirlineRoleClient<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VirtualAirlineRoles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineRoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VirtualAirlineRoles
     * const virtualAirlineRoles = await prisma.virtualAirlineRole.findMany()
     * 
     * // Get first 10 VirtualAirlineRoles
     * const virtualAirlineRoles = await prisma.virtualAirlineRole.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const virtualAirlineRoleWithIdOnly = await prisma.virtualAirlineRole.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends VirtualAirlineRoleFindManyArgs>(args?: SelectSubset<T, VirtualAirlineRoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VirtualAirlineRole.
     * @param {VirtualAirlineRoleCreateArgs} args - Arguments to create a VirtualAirlineRole.
     * @example
     * // Create one VirtualAirlineRole
     * const VirtualAirlineRole = await prisma.virtualAirlineRole.create({
     *   data: {
     *     // ... data to create a VirtualAirlineRole
     *   }
     * })
     * 
     */
    create<T extends VirtualAirlineRoleCreateArgs>(args: SelectSubset<T, VirtualAirlineRoleCreateArgs<ExtArgs>>): Prisma__VirtualAirlineRoleClient<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VirtualAirlineRoles.
     * @param {VirtualAirlineRoleCreateManyArgs} args - Arguments to create many VirtualAirlineRoles.
     * @example
     * // Create many VirtualAirlineRoles
     * const virtualAirlineRole = await prisma.virtualAirlineRole.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VirtualAirlineRoleCreateManyArgs>(args?: SelectSubset<T, VirtualAirlineRoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VirtualAirlineRoles and returns the data saved in the database.
     * @param {VirtualAirlineRoleCreateManyAndReturnArgs} args - Arguments to create many VirtualAirlineRoles.
     * @example
     * // Create many VirtualAirlineRoles
     * const virtualAirlineRole = await prisma.virtualAirlineRole.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VirtualAirlineRoles and only return the `Id`
     * const virtualAirlineRoleWithIdOnly = await prisma.virtualAirlineRole.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VirtualAirlineRoleCreateManyAndReturnArgs>(args?: SelectSubset<T, VirtualAirlineRoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VirtualAirlineRole.
     * @param {VirtualAirlineRoleDeleteArgs} args - Arguments to delete one VirtualAirlineRole.
     * @example
     * // Delete one VirtualAirlineRole
     * const VirtualAirlineRole = await prisma.virtualAirlineRole.delete({
     *   where: {
     *     // ... filter to delete one VirtualAirlineRole
     *   }
     * })
     * 
     */
    delete<T extends VirtualAirlineRoleDeleteArgs>(args: SelectSubset<T, VirtualAirlineRoleDeleteArgs<ExtArgs>>): Prisma__VirtualAirlineRoleClient<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VirtualAirlineRole.
     * @param {VirtualAirlineRoleUpdateArgs} args - Arguments to update one VirtualAirlineRole.
     * @example
     * // Update one VirtualAirlineRole
     * const virtualAirlineRole = await prisma.virtualAirlineRole.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VirtualAirlineRoleUpdateArgs>(args: SelectSubset<T, VirtualAirlineRoleUpdateArgs<ExtArgs>>): Prisma__VirtualAirlineRoleClient<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VirtualAirlineRoles.
     * @param {VirtualAirlineRoleDeleteManyArgs} args - Arguments to filter VirtualAirlineRoles to delete.
     * @example
     * // Delete a few VirtualAirlineRoles
     * const { count } = await prisma.virtualAirlineRole.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VirtualAirlineRoleDeleteManyArgs>(args?: SelectSubset<T, VirtualAirlineRoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VirtualAirlineRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineRoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VirtualAirlineRoles
     * const virtualAirlineRole = await prisma.virtualAirlineRole.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VirtualAirlineRoleUpdateManyArgs>(args: SelectSubset<T, VirtualAirlineRoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VirtualAirlineRoles and returns the data updated in the database.
     * @param {VirtualAirlineRoleUpdateManyAndReturnArgs} args - Arguments to update many VirtualAirlineRoles.
     * @example
     * // Update many VirtualAirlineRoles
     * const virtualAirlineRole = await prisma.virtualAirlineRole.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VirtualAirlineRoles and only return the `Id`
     * const virtualAirlineRoleWithIdOnly = await prisma.virtualAirlineRole.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VirtualAirlineRoleUpdateManyAndReturnArgs>(args: SelectSubset<T, VirtualAirlineRoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VirtualAirlineRole.
     * @param {VirtualAirlineRoleUpsertArgs} args - Arguments to update or create a VirtualAirlineRole.
     * @example
     * // Update or create a VirtualAirlineRole
     * const virtualAirlineRole = await prisma.virtualAirlineRole.upsert({
     *   create: {
     *     // ... data to create a VirtualAirlineRole
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VirtualAirlineRole we want to update
     *   }
     * })
     */
    upsert<T extends VirtualAirlineRoleUpsertArgs>(args: SelectSubset<T, VirtualAirlineRoleUpsertArgs<ExtArgs>>): Prisma__VirtualAirlineRoleClient<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VirtualAirlineRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineRoleCountArgs} args - Arguments to filter VirtualAirlineRoles to count.
     * @example
     * // Count the number of VirtualAirlineRoles
     * const count = await prisma.virtualAirlineRole.count({
     *   where: {
     *     // ... the filter for the VirtualAirlineRoles we want to count
     *   }
     * })
    **/
    count<T extends VirtualAirlineRoleCountArgs>(
      args?: Subset<T, VirtualAirlineRoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VirtualAirlineRoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VirtualAirlineRole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineRoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VirtualAirlineRoleAggregateArgs>(args: Subset<T, VirtualAirlineRoleAggregateArgs>): Prisma.PrismaPromise<GetVirtualAirlineRoleAggregateType<T>>

    /**
     * Group by VirtualAirlineRole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualAirlineRoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VirtualAirlineRoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VirtualAirlineRoleGroupByArgs['orderBy'] }
        : { orderBy?: VirtualAirlineRoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VirtualAirlineRoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVirtualAirlineRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VirtualAirlineRole model
   */
  readonly fields: VirtualAirlineRoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VirtualAirlineRole.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VirtualAirlineRoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Role<T extends VirtualAirlineRole$RoleArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirlineRole$RoleArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    VirtualAirline<T extends VirtualAirlineDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirlineDefaultArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Members<T extends VirtualAirlineRole$MembersArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirlineRole$MembersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VirtualAirlineRole model
   */
  interface VirtualAirlineRoleFieldRefs {
    readonly Id: FieldRef<"VirtualAirlineRole", 'String'>
    readonly VAId: FieldRef<"VirtualAirlineRole", 'String'>
    readonly Name: FieldRef<"VirtualAirlineRole", 'String'>
    readonly Permission: FieldRef<"VirtualAirlineRole", 'Int'>
    readonly IsDefaultNewRole: FieldRef<"VirtualAirlineRole", 'Boolean'>
    readonly Color: FieldRef<"VirtualAirlineRole", 'String'>
    readonly PayPercent: FieldRef<"VirtualAirlineRole", 'Decimal'>
    readonly IsHidden: FieldRef<"VirtualAirlineRole", 'Boolean'>
    readonly RestrictLoadingVAJobsIntoNonVAAircraft: FieldRef<"VirtualAirlineRole", 'Boolean'>
    readonly RestrictLoadingNonVAJobsIntoVAAircraft: FieldRef<"VirtualAirlineRole", 'Boolean'>
    readonly PayWeekly: FieldRef<"VirtualAirlineRole", 'Decimal'>
    readonly PayPerFlightHour: FieldRef<"VirtualAirlineRole", 'Decimal'>
    readonly LastRefresh: FieldRef<"VirtualAirlineRole", 'DateTime'>
    readonly CreatedAt: FieldRef<"VirtualAirlineRole", 'DateTime'>
    readonly UpdatedAt: FieldRef<"VirtualAirlineRole", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VirtualAirlineRole findUnique
   */
  export type VirtualAirlineRoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    /**
     * Filter, which VirtualAirlineRole to fetch.
     */
    where: VirtualAirlineRoleWhereUniqueInput
  }

  /**
   * VirtualAirlineRole findUniqueOrThrow
   */
  export type VirtualAirlineRoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    /**
     * Filter, which VirtualAirlineRole to fetch.
     */
    where: VirtualAirlineRoleWhereUniqueInput
  }

  /**
   * VirtualAirlineRole findFirst
   */
  export type VirtualAirlineRoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    /**
     * Filter, which VirtualAirlineRole to fetch.
     */
    where?: VirtualAirlineRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualAirlineRoles to fetch.
     */
    orderBy?: VirtualAirlineRoleOrderByWithRelationInput | VirtualAirlineRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VirtualAirlineRoles.
     */
    cursor?: VirtualAirlineRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualAirlineRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualAirlineRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VirtualAirlineRoles.
     */
    distinct?: VirtualAirlineRoleScalarFieldEnum | VirtualAirlineRoleScalarFieldEnum[]
  }

  /**
   * VirtualAirlineRole findFirstOrThrow
   */
  export type VirtualAirlineRoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    /**
     * Filter, which VirtualAirlineRole to fetch.
     */
    where?: VirtualAirlineRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualAirlineRoles to fetch.
     */
    orderBy?: VirtualAirlineRoleOrderByWithRelationInput | VirtualAirlineRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VirtualAirlineRoles.
     */
    cursor?: VirtualAirlineRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualAirlineRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualAirlineRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VirtualAirlineRoles.
     */
    distinct?: VirtualAirlineRoleScalarFieldEnum | VirtualAirlineRoleScalarFieldEnum[]
  }

  /**
   * VirtualAirlineRole findMany
   */
  export type VirtualAirlineRoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    /**
     * Filter, which VirtualAirlineRoles to fetch.
     */
    where?: VirtualAirlineRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualAirlineRoles to fetch.
     */
    orderBy?: VirtualAirlineRoleOrderByWithRelationInput | VirtualAirlineRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VirtualAirlineRoles.
     */
    cursor?: VirtualAirlineRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualAirlineRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualAirlineRoles.
     */
    skip?: number
    distinct?: VirtualAirlineRoleScalarFieldEnum | VirtualAirlineRoleScalarFieldEnum[]
  }

  /**
   * VirtualAirlineRole create
   */
  export type VirtualAirlineRoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    /**
     * The data needed to create a VirtualAirlineRole.
     */
    data: XOR<VirtualAirlineRoleCreateInput, VirtualAirlineRoleUncheckedCreateInput>
  }

  /**
   * VirtualAirlineRole createMany
   */
  export type VirtualAirlineRoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VirtualAirlineRoles.
     */
    data: VirtualAirlineRoleCreateManyInput | VirtualAirlineRoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VirtualAirlineRole createManyAndReturn
   */
  export type VirtualAirlineRoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * The data used to create many VirtualAirlineRoles.
     */
    data: VirtualAirlineRoleCreateManyInput | VirtualAirlineRoleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VirtualAirlineRole update
   */
  export type VirtualAirlineRoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    /**
     * The data needed to update a VirtualAirlineRole.
     */
    data: XOR<VirtualAirlineRoleUpdateInput, VirtualAirlineRoleUncheckedUpdateInput>
    /**
     * Choose, which VirtualAirlineRole to update.
     */
    where: VirtualAirlineRoleWhereUniqueInput
  }

  /**
   * VirtualAirlineRole updateMany
   */
  export type VirtualAirlineRoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VirtualAirlineRoles.
     */
    data: XOR<VirtualAirlineRoleUpdateManyMutationInput, VirtualAirlineRoleUncheckedUpdateManyInput>
    /**
     * Filter which VirtualAirlineRoles to update
     */
    where?: VirtualAirlineRoleWhereInput
    /**
     * Limit how many VirtualAirlineRoles to update.
     */
    limit?: number
  }

  /**
   * VirtualAirlineRole updateManyAndReturn
   */
  export type VirtualAirlineRoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * The data used to update VirtualAirlineRoles.
     */
    data: XOR<VirtualAirlineRoleUpdateManyMutationInput, VirtualAirlineRoleUncheckedUpdateManyInput>
    /**
     * Filter which VirtualAirlineRoles to update
     */
    where?: VirtualAirlineRoleWhereInput
    /**
     * Limit how many VirtualAirlineRoles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * VirtualAirlineRole upsert
   */
  export type VirtualAirlineRoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    /**
     * The filter to search for the VirtualAirlineRole to update in case it exists.
     */
    where: VirtualAirlineRoleWhereUniqueInput
    /**
     * In case the VirtualAirlineRole found by the `where` argument doesn't exist, create a new VirtualAirlineRole with this data.
     */
    create: XOR<VirtualAirlineRoleCreateInput, VirtualAirlineRoleUncheckedCreateInput>
    /**
     * In case the VirtualAirlineRole was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VirtualAirlineRoleUpdateInput, VirtualAirlineRoleUncheckedUpdateInput>
  }

  /**
   * VirtualAirlineRole delete
   */
  export type VirtualAirlineRoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
    /**
     * Filter which VirtualAirlineRole to delete.
     */
    where: VirtualAirlineRoleWhereUniqueInput
  }

  /**
   * VirtualAirlineRole deleteMany
   */
  export type VirtualAirlineRoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VirtualAirlineRoles to delete
     */
    where?: VirtualAirlineRoleWhereInput
    /**
     * Limit how many VirtualAirlineRoles to delete.
     */
    limit?: number
  }

  /**
   * VirtualAirlineRole.Role
   */
  export type VirtualAirlineRole$RoleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
  }

  /**
   * VirtualAirlineRole.Members
   */
  export type VirtualAirlineRole$MembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    where?: MemberWhereInput
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    cursor?: MemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * VirtualAirlineRole without action
   */
  export type VirtualAirlineRoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirlineRole
     */
    select?: VirtualAirlineRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirlineRole
     */
    omit?: VirtualAirlineRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineRoleInclude<ExtArgs> | null
  }


  /**
   * Model World
   */

  export type AggregateWorld = {
    _count: WorldCountAggregateOutputType | null
    _min: WorldMinAggregateOutputType | null
    _max: WorldMaxAggregateOutputType | null
  }

  export type WorldMinAggregateOutputType = {
    Id: string | null
    Name: string | null
    Slug: string | null
    Description: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type WorldMaxAggregateOutputType = {
    Id: string | null
    Name: string | null
    Slug: string | null
    Description: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type WorldCountAggregateOutputType = {
    Id: number
    Name: number
    Slug: number
    Description: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type WorldMinAggregateInputType = {
    Id?: true
    Name?: true
    Slug?: true
    Description?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type WorldMaxAggregateInputType = {
    Id?: true
    Name?: true
    Slug?: true
    Description?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type WorldCountAggregateInputType = {
    Id?: true
    Name?: true
    Slug?: true
    Description?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type WorldAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which World to aggregate.
     */
    where?: WorldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Worlds to fetch.
     */
    orderBy?: WorldOrderByWithRelationInput | WorldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WorldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Worlds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Worlds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Worlds
    **/
    _count?: true | WorldCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorldMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorldMaxAggregateInputType
  }

  export type GetWorldAggregateType<T extends WorldAggregateArgs> = {
        [P in keyof T & keyof AggregateWorld]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorld[P]>
      : GetScalarType<T[P], AggregateWorld[P]>
  }




  export type WorldGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WorldWhereInput
    orderBy?: WorldOrderByWithAggregationInput | WorldOrderByWithAggregationInput[]
    by: WorldScalarFieldEnum[] | WorldScalarFieldEnum
    having?: WorldScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorldCountAggregateInputType | true
    _min?: WorldMinAggregateInputType
    _max?: WorldMaxAggregateInputType
  }

  export type WorldGroupByOutputType = {
    Id: string
    Name: string
    Slug: string
    Description: string | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: WorldCountAggregateOutputType | null
    _min: WorldMinAggregateOutputType | null
    _max: WorldMaxAggregateOutputType | null
  }

  type GetWorldGroupByPayload<T extends WorldGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WorldGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WorldGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WorldGroupByOutputType[P]>
            : GetScalarType<T[P], WorldGroupByOutputType[P]>
        }
      >
    >


  export type WorldSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Slug?: boolean
    Description?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    VirtualAirlines?: boolean | World$VirtualAirlinesArgs<ExtArgs>
    Companies?: boolean | World$CompaniesArgs<ExtArgs>
    _count?: boolean | WorldCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["world"]>

  export type WorldSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Slug?: boolean
    Description?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["world"]>

  export type WorldSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Slug?: boolean
    Description?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["world"]>

  export type WorldSelectScalar = {
    Id?: boolean
    Name?: boolean
    Slug?: boolean
    Description?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type WorldOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Name" | "Slug" | "Description" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["world"]>
  export type WorldInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    VirtualAirlines?: boolean | World$VirtualAirlinesArgs<ExtArgs>
    Companies?: boolean | World$CompaniesArgs<ExtArgs>
    _count?: boolean | WorldCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type WorldIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type WorldIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $WorldPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "World"
    objects: {
      VirtualAirlines: Prisma.$VirtualAirlinePayload<ExtArgs>[]
      Companies: Prisma.$CompanyPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      Name: string
      Slug: string
      Description: string | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["world"]>
    composites: {}
  }

  type WorldGetPayload<S extends boolean | null | undefined | WorldDefaultArgs> = $Result.GetResult<Prisma.$WorldPayload, S>

  type WorldCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<WorldFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WorldCountAggregateInputType | true
    }

  export interface WorldDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['World'], meta: { name: 'World' } }
    /**
     * Find zero or one World that matches the filter.
     * @param {WorldFindUniqueArgs} args - Arguments to find a World
     * @example
     * // Get one World
     * const world = await prisma.world.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WorldFindUniqueArgs>(args: SelectSubset<T, WorldFindUniqueArgs<ExtArgs>>): Prisma__WorldClient<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one World that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {WorldFindUniqueOrThrowArgs} args - Arguments to find a World
     * @example
     * // Get one World
     * const world = await prisma.world.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WorldFindUniqueOrThrowArgs>(args: SelectSubset<T, WorldFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WorldClient<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first World that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorldFindFirstArgs} args - Arguments to find a World
     * @example
     * // Get one World
     * const world = await prisma.world.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WorldFindFirstArgs>(args?: SelectSubset<T, WorldFindFirstArgs<ExtArgs>>): Prisma__WorldClient<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first World that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorldFindFirstOrThrowArgs} args - Arguments to find a World
     * @example
     * // Get one World
     * const world = await prisma.world.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WorldFindFirstOrThrowArgs>(args?: SelectSubset<T, WorldFindFirstOrThrowArgs<ExtArgs>>): Prisma__WorldClient<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Worlds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorldFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Worlds
     * const worlds = await prisma.world.findMany()
     * 
     * // Get first 10 Worlds
     * const worlds = await prisma.world.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const worldWithIdOnly = await prisma.world.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends WorldFindManyArgs>(args?: SelectSubset<T, WorldFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a World.
     * @param {WorldCreateArgs} args - Arguments to create a World.
     * @example
     * // Create one World
     * const World = await prisma.world.create({
     *   data: {
     *     // ... data to create a World
     *   }
     * })
     * 
     */
    create<T extends WorldCreateArgs>(args: SelectSubset<T, WorldCreateArgs<ExtArgs>>): Prisma__WorldClient<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Worlds.
     * @param {WorldCreateManyArgs} args - Arguments to create many Worlds.
     * @example
     * // Create many Worlds
     * const world = await prisma.world.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WorldCreateManyArgs>(args?: SelectSubset<T, WorldCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Worlds and returns the data saved in the database.
     * @param {WorldCreateManyAndReturnArgs} args - Arguments to create many Worlds.
     * @example
     * // Create many Worlds
     * const world = await prisma.world.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Worlds and only return the `Id`
     * const worldWithIdOnly = await prisma.world.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WorldCreateManyAndReturnArgs>(args?: SelectSubset<T, WorldCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a World.
     * @param {WorldDeleteArgs} args - Arguments to delete one World.
     * @example
     * // Delete one World
     * const World = await prisma.world.delete({
     *   where: {
     *     // ... filter to delete one World
     *   }
     * })
     * 
     */
    delete<T extends WorldDeleteArgs>(args: SelectSubset<T, WorldDeleteArgs<ExtArgs>>): Prisma__WorldClient<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one World.
     * @param {WorldUpdateArgs} args - Arguments to update one World.
     * @example
     * // Update one World
     * const world = await prisma.world.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WorldUpdateArgs>(args: SelectSubset<T, WorldUpdateArgs<ExtArgs>>): Prisma__WorldClient<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Worlds.
     * @param {WorldDeleteManyArgs} args - Arguments to filter Worlds to delete.
     * @example
     * // Delete a few Worlds
     * const { count } = await prisma.world.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WorldDeleteManyArgs>(args?: SelectSubset<T, WorldDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Worlds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorldUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Worlds
     * const world = await prisma.world.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WorldUpdateManyArgs>(args: SelectSubset<T, WorldUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Worlds and returns the data updated in the database.
     * @param {WorldUpdateManyAndReturnArgs} args - Arguments to update many Worlds.
     * @example
     * // Update many Worlds
     * const world = await prisma.world.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Worlds and only return the `Id`
     * const worldWithIdOnly = await prisma.world.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends WorldUpdateManyAndReturnArgs>(args: SelectSubset<T, WorldUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one World.
     * @param {WorldUpsertArgs} args - Arguments to update or create a World.
     * @example
     * // Update or create a World
     * const world = await prisma.world.upsert({
     *   create: {
     *     // ... data to create a World
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the World we want to update
     *   }
     * })
     */
    upsert<T extends WorldUpsertArgs>(args: SelectSubset<T, WorldUpsertArgs<ExtArgs>>): Prisma__WorldClient<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Worlds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorldCountArgs} args - Arguments to filter Worlds to count.
     * @example
     * // Count the number of Worlds
     * const count = await prisma.world.count({
     *   where: {
     *     // ... the filter for the Worlds we want to count
     *   }
     * })
    **/
    count<T extends WorldCountArgs>(
      args?: Subset<T, WorldCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorldCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a World.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorldAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorldAggregateArgs>(args: Subset<T, WorldAggregateArgs>): Prisma.PrismaPromise<GetWorldAggregateType<T>>

    /**
     * Group by World.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorldGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorldGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorldGroupByArgs['orderBy'] }
        : { orderBy?: WorldGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorldGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorldGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the World model
   */
  readonly fields: WorldFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for World.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WorldClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    VirtualAirlines<T extends World$VirtualAirlinesArgs<ExtArgs> = {}>(args?: Subset<T, World$VirtualAirlinesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Companies<T extends World$CompaniesArgs<ExtArgs> = {}>(args?: Subset<T, World$CompaniesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the World model
   */
  interface WorldFieldRefs {
    readonly Id: FieldRef<"World", 'String'>
    readonly Name: FieldRef<"World", 'String'>
    readonly Slug: FieldRef<"World", 'String'>
    readonly Description: FieldRef<"World", 'String'>
    readonly CreatedAt: FieldRef<"World", 'DateTime'>
    readonly UpdatedAt: FieldRef<"World", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * World findUnique
   */
  export type WorldFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
    /**
     * Filter, which World to fetch.
     */
    where: WorldWhereUniqueInput
  }

  /**
   * World findUniqueOrThrow
   */
  export type WorldFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
    /**
     * Filter, which World to fetch.
     */
    where: WorldWhereUniqueInput
  }

  /**
   * World findFirst
   */
  export type WorldFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
    /**
     * Filter, which World to fetch.
     */
    where?: WorldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Worlds to fetch.
     */
    orderBy?: WorldOrderByWithRelationInput | WorldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Worlds.
     */
    cursor?: WorldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Worlds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Worlds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Worlds.
     */
    distinct?: WorldScalarFieldEnum | WorldScalarFieldEnum[]
  }

  /**
   * World findFirstOrThrow
   */
  export type WorldFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
    /**
     * Filter, which World to fetch.
     */
    where?: WorldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Worlds to fetch.
     */
    orderBy?: WorldOrderByWithRelationInput | WorldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Worlds.
     */
    cursor?: WorldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Worlds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Worlds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Worlds.
     */
    distinct?: WorldScalarFieldEnum | WorldScalarFieldEnum[]
  }

  /**
   * World findMany
   */
  export type WorldFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
    /**
     * Filter, which Worlds to fetch.
     */
    where?: WorldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Worlds to fetch.
     */
    orderBy?: WorldOrderByWithRelationInput | WorldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Worlds.
     */
    cursor?: WorldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Worlds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Worlds.
     */
    skip?: number
    distinct?: WorldScalarFieldEnum | WorldScalarFieldEnum[]
  }

  /**
   * World create
   */
  export type WorldCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
    /**
     * The data needed to create a World.
     */
    data: XOR<WorldCreateInput, WorldUncheckedCreateInput>
  }

  /**
   * World createMany
   */
  export type WorldCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Worlds.
     */
    data: WorldCreateManyInput | WorldCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * World createManyAndReturn
   */
  export type WorldCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * The data used to create many Worlds.
     */
    data: WorldCreateManyInput | WorldCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * World update
   */
  export type WorldUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
    /**
     * The data needed to update a World.
     */
    data: XOR<WorldUpdateInput, WorldUncheckedUpdateInput>
    /**
     * Choose, which World to update.
     */
    where: WorldWhereUniqueInput
  }

  /**
   * World updateMany
   */
  export type WorldUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Worlds.
     */
    data: XOR<WorldUpdateManyMutationInput, WorldUncheckedUpdateManyInput>
    /**
     * Filter which Worlds to update
     */
    where?: WorldWhereInput
    /**
     * Limit how many Worlds to update.
     */
    limit?: number
  }

  /**
   * World updateManyAndReturn
   */
  export type WorldUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * The data used to update Worlds.
     */
    data: XOR<WorldUpdateManyMutationInput, WorldUncheckedUpdateManyInput>
    /**
     * Filter which Worlds to update
     */
    where?: WorldWhereInput
    /**
     * Limit how many Worlds to update.
     */
    limit?: number
  }

  /**
   * World upsert
   */
  export type WorldUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
    /**
     * The filter to search for the World to update in case it exists.
     */
    where: WorldWhereUniqueInput
    /**
     * In case the World found by the `where` argument doesn't exist, create a new World with this data.
     */
    create: XOR<WorldCreateInput, WorldUncheckedCreateInput>
    /**
     * In case the World was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WorldUpdateInput, WorldUncheckedUpdateInput>
  }

  /**
   * World delete
   */
  export type WorldDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
    /**
     * Filter which World to delete.
     */
    where: WorldWhereUniqueInput
  }

  /**
   * World deleteMany
   */
  export type WorldDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Worlds to delete
     */
    where?: WorldWhereInput
    /**
     * Limit how many Worlds to delete.
     */
    limit?: number
  }

  /**
   * World.VirtualAirlines
   */
  export type World$VirtualAirlinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    where?: VirtualAirlineWhereInput
    orderBy?: VirtualAirlineOrderByWithRelationInput | VirtualAirlineOrderByWithRelationInput[]
    cursor?: VirtualAirlineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VirtualAirlineScalarFieldEnum | VirtualAirlineScalarFieldEnum[]
  }

  /**
   * World.Companies
   */
  export type World$CompaniesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    cursor?: CompanyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * World without action
   */
  export type WorldDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the World
     */
    select?: WorldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the World
     */
    omit?: WorldOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorldInclude<ExtArgs> | null
  }


  /**
   * Model Member
   */

  export type AggregateMember = {
    _count: MemberCountAggregateOutputType | null
    _avg: MemberAvgAggregateOutputType | null
    _sum: MemberSumAggregateOutputType | null
    _min: MemberMinAggregateOutputType | null
    _max: MemberMaxAggregateOutputType | null
  }

  export type MemberAvgAggregateOutputType = {
    TotalCargosTransportedLbs: number | null
    TotalPAXsTransported: number | null
    TotalEarnedCredits: Decimal | null
    TotalSpentCredits: Decimal | null
    NumberOfFlights: number | null
    FlightHours: Decimal | null
    ReputationImpact: Decimal | null
  }

  export type MemberSumAggregateOutputType = {
    TotalCargosTransportedLbs: number | null
    TotalPAXsTransported: number | null
    TotalEarnedCredits: Decimal | null
    TotalSpentCredits: Decimal | null
    NumberOfFlights: number | null
    FlightHours: Decimal | null
    ReputationImpact: Decimal | null
  }

  export type MemberMinAggregateOutputType = {
    Id: string | null
    IsActive: boolean | null
    DeactivatedAt: Date | null
    VAId: string | null
    VARoleId: string | null
    TotalCargosTransportedLbs: number | null
    TotalPAXsTransported: number | null
    TotalEarnedCredits: Decimal | null
    TotalSpentCredits: Decimal | null
    NumberOfFlights: number | null
    FlightHours: Decimal | null
    Color: string | null
    ReputationImpact: Decimal | null
    LastVAFlightDate: Date | null
    LastRefresh: Date | null
    UserId: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    CompanyId: string | null
  }

  export type MemberMaxAggregateOutputType = {
    Id: string | null
    IsActive: boolean | null
    DeactivatedAt: Date | null
    VAId: string | null
    VARoleId: string | null
    TotalCargosTransportedLbs: number | null
    TotalPAXsTransported: number | null
    TotalEarnedCredits: Decimal | null
    TotalSpentCredits: Decimal | null
    NumberOfFlights: number | null
    FlightHours: Decimal | null
    Color: string | null
    ReputationImpact: Decimal | null
    LastVAFlightDate: Date | null
    LastRefresh: Date | null
    UserId: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    CompanyId: string | null
  }

  export type MemberCountAggregateOutputType = {
    Id: number
    IsActive: number
    DeactivatedAt: number
    VAId: number
    VARoleId: number
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: number
    TotalSpentCredits: number
    NumberOfFlights: number
    FlightHours: number
    Color: number
    ReputationImpact: number
    LastVAFlightDate: number
    LastRefresh: number
    UserId: number
    CreatedAt: number
    UpdatedAt: number
    CompanyId: number
    _all: number
  }


  export type MemberAvgAggregateInputType = {
    TotalCargosTransportedLbs?: true
    TotalPAXsTransported?: true
    TotalEarnedCredits?: true
    TotalSpentCredits?: true
    NumberOfFlights?: true
    FlightHours?: true
    ReputationImpact?: true
  }

  export type MemberSumAggregateInputType = {
    TotalCargosTransportedLbs?: true
    TotalPAXsTransported?: true
    TotalEarnedCredits?: true
    TotalSpentCredits?: true
    NumberOfFlights?: true
    FlightHours?: true
    ReputationImpact?: true
  }

  export type MemberMinAggregateInputType = {
    Id?: true
    IsActive?: true
    DeactivatedAt?: true
    VAId?: true
    VARoleId?: true
    TotalCargosTransportedLbs?: true
    TotalPAXsTransported?: true
    TotalEarnedCredits?: true
    TotalSpentCredits?: true
    NumberOfFlights?: true
    FlightHours?: true
    Color?: true
    ReputationImpact?: true
    LastVAFlightDate?: true
    LastRefresh?: true
    UserId?: true
    CreatedAt?: true
    UpdatedAt?: true
    CompanyId?: true
  }

  export type MemberMaxAggregateInputType = {
    Id?: true
    IsActive?: true
    DeactivatedAt?: true
    VAId?: true
    VARoleId?: true
    TotalCargosTransportedLbs?: true
    TotalPAXsTransported?: true
    TotalEarnedCredits?: true
    TotalSpentCredits?: true
    NumberOfFlights?: true
    FlightHours?: true
    Color?: true
    ReputationImpact?: true
    LastVAFlightDate?: true
    LastRefresh?: true
    UserId?: true
    CreatedAt?: true
    UpdatedAt?: true
    CompanyId?: true
  }

  export type MemberCountAggregateInputType = {
    Id?: true
    IsActive?: true
    DeactivatedAt?: true
    VAId?: true
    VARoleId?: true
    TotalCargosTransportedLbs?: true
    TotalPAXsTransported?: true
    TotalEarnedCredits?: true
    TotalSpentCredits?: true
    NumberOfFlights?: true
    FlightHours?: true
    Color?: true
    ReputationImpact?: true
    LastVAFlightDate?: true
    LastRefresh?: true
    UserId?: true
    CreatedAt?: true
    UpdatedAt?: true
    CompanyId?: true
    _all?: true
  }

  export type MemberAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Member to aggregate.
     */
    where?: MemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Members to fetch.
     */
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Members
    **/
    _count?: true | MemberCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MemberAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MemberSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MemberMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MemberMaxAggregateInputType
  }

  export type GetMemberAggregateType<T extends MemberAggregateArgs> = {
        [P in keyof T & keyof AggregateMember]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMember[P]>
      : GetScalarType<T[P], AggregateMember[P]>
  }




  export type MemberGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MemberWhereInput
    orderBy?: MemberOrderByWithAggregationInput | MemberOrderByWithAggregationInput[]
    by: MemberScalarFieldEnum[] | MemberScalarFieldEnum
    having?: MemberScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MemberCountAggregateInputType | true
    _avg?: MemberAvgAggregateInputType
    _sum?: MemberSumAggregateInputType
    _min?: MemberMinAggregateInputType
    _max?: MemberMaxAggregateInputType
  }

  export type MemberGroupByOutputType = {
    Id: string
    IsActive: boolean
    DeactivatedAt: Date | null
    VAId: string
    VARoleId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal
    TotalSpentCredits: Decimal
    NumberOfFlights: number
    FlightHours: Decimal
    Color: string
    ReputationImpact: Decimal
    LastVAFlightDate: Date | null
    LastRefresh: Date | null
    UserId: string | null
    CreatedAt: Date
    UpdatedAt: Date
    CompanyId: string
    _count: MemberCountAggregateOutputType | null
    _avg: MemberAvgAggregateOutputType | null
    _sum: MemberSumAggregateOutputType | null
    _min: MemberMinAggregateOutputType | null
    _max: MemberMaxAggregateOutputType | null
  }

  type GetMemberGroupByPayload<T extends MemberGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MemberGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MemberGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MemberGroupByOutputType[P]>
            : GetScalarType<T[P], MemberGroupByOutputType[P]>
        }
      >
    >


  export type MemberSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    IsActive?: boolean
    DeactivatedAt?: boolean
    VAId?: boolean
    VARoleId?: boolean
    TotalCargosTransportedLbs?: boolean
    TotalPAXsTransported?: boolean
    TotalEarnedCredits?: boolean
    TotalSpentCredits?: boolean
    NumberOfFlights?: boolean
    FlightHours?: boolean
    Color?: boolean
    ReputationImpact?: boolean
    LastVAFlightDate?: boolean
    LastRefresh?: boolean
    UserId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    CompanyId?: boolean
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    VARole?: boolean | VirtualAirlineRoleDefaultArgs<ExtArgs>
    Flights?: boolean | Member$FlightsArgs<ExtArgs>
    User?: boolean | Member$UserArgs<ExtArgs>
    FlightRoutes?: boolean | Member$FlightRoutesArgs<ExtArgs>
    _count?: boolean | MemberCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["member"]>

  export type MemberSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    IsActive?: boolean
    DeactivatedAt?: boolean
    VAId?: boolean
    VARoleId?: boolean
    TotalCargosTransportedLbs?: boolean
    TotalPAXsTransported?: boolean
    TotalEarnedCredits?: boolean
    TotalSpentCredits?: boolean
    NumberOfFlights?: boolean
    FlightHours?: boolean
    Color?: boolean
    ReputationImpact?: boolean
    LastVAFlightDate?: boolean
    LastRefresh?: boolean
    UserId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    CompanyId?: boolean
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    VARole?: boolean | VirtualAirlineRoleDefaultArgs<ExtArgs>
    User?: boolean | Member$UserArgs<ExtArgs>
  }, ExtArgs["result"]["member"]>

  export type MemberSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    IsActive?: boolean
    DeactivatedAt?: boolean
    VAId?: boolean
    VARoleId?: boolean
    TotalCargosTransportedLbs?: boolean
    TotalPAXsTransported?: boolean
    TotalEarnedCredits?: boolean
    TotalSpentCredits?: boolean
    NumberOfFlights?: boolean
    FlightHours?: boolean
    Color?: boolean
    ReputationImpact?: boolean
    LastVAFlightDate?: boolean
    LastRefresh?: boolean
    UserId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    CompanyId?: boolean
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    VARole?: boolean | VirtualAirlineRoleDefaultArgs<ExtArgs>
    User?: boolean | Member$UserArgs<ExtArgs>
  }, ExtArgs["result"]["member"]>

  export type MemberSelectScalar = {
    Id?: boolean
    IsActive?: boolean
    DeactivatedAt?: boolean
    VAId?: boolean
    VARoleId?: boolean
    TotalCargosTransportedLbs?: boolean
    TotalPAXsTransported?: boolean
    TotalEarnedCredits?: boolean
    TotalSpentCredits?: boolean
    NumberOfFlights?: boolean
    FlightHours?: boolean
    Color?: boolean
    ReputationImpact?: boolean
    LastVAFlightDate?: boolean
    LastRefresh?: boolean
    UserId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    CompanyId?: boolean
  }

  export type MemberOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "IsActive" | "DeactivatedAt" | "VAId" | "VARoleId" | "TotalCargosTransportedLbs" | "TotalPAXsTransported" | "TotalEarnedCredits" | "TotalSpentCredits" | "NumberOfFlights" | "FlightHours" | "Color" | "ReputationImpact" | "LastVAFlightDate" | "LastRefresh" | "UserId" | "CreatedAt" | "UpdatedAt" | "CompanyId", ExtArgs["result"]["member"]>
  export type MemberInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    VARole?: boolean | VirtualAirlineRoleDefaultArgs<ExtArgs>
    Flights?: boolean | Member$FlightsArgs<ExtArgs>
    User?: boolean | Member$UserArgs<ExtArgs>
    FlightRoutes?: boolean | Member$FlightRoutesArgs<ExtArgs>
    _count?: boolean | MemberCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MemberIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    VARole?: boolean | VirtualAirlineRoleDefaultArgs<ExtArgs>
    User?: boolean | Member$UserArgs<ExtArgs>
  }
  export type MemberIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    VARole?: boolean | VirtualAirlineRoleDefaultArgs<ExtArgs>
    User?: boolean | Member$UserArgs<ExtArgs>
  }

  export type $MemberPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Member"
    objects: {
      Company: Prisma.$CompanyPayload<ExtArgs>
      VirtualAirline: Prisma.$VirtualAirlinePayload<ExtArgs>
      VARole: Prisma.$VirtualAirlineRolePayload<ExtArgs>
      Flights: Prisma.$FlightPayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs> | null
      FlightRoutes: Prisma.$FlightRoutePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      IsActive: boolean
      DeactivatedAt: Date | null
      VAId: string
      VARoleId: string
      TotalCargosTransportedLbs: number
      TotalPAXsTransported: number
      TotalEarnedCredits: Prisma.Decimal
      TotalSpentCredits: Prisma.Decimal
      NumberOfFlights: number
      FlightHours: Prisma.Decimal
      Color: string
      ReputationImpact: Prisma.Decimal
      LastVAFlightDate: Date | null
      LastRefresh: Date | null
      UserId: string | null
      CreatedAt: Date
      UpdatedAt: Date
      CompanyId: string
    }, ExtArgs["result"]["member"]>
    composites: {}
  }

  type MemberGetPayload<S extends boolean | null | undefined | MemberDefaultArgs> = $Result.GetResult<Prisma.$MemberPayload, S>

  type MemberCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MemberFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MemberCountAggregateInputType | true
    }

  export interface MemberDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Member'], meta: { name: 'Member' } }
    /**
     * Find zero or one Member that matches the filter.
     * @param {MemberFindUniqueArgs} args - Arguments to find a Member
     * @example
     * // Get one Member
     * const member = await prisma.member.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MemberFindUniqueArgs>(args: SelectSubset<T, MemberFindUniqueArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Member that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MemberFindUniqueOrThrowArgs} args - Arguments to find a Member
     * @example
     * // Get one Member
     * const member = await prisma.member.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MemberFindUniqueOrThrowArgs>(args: SelectSubset<T, MemberFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Member that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberFindFirstArgs} args - Arguments to find a Member
     * @example
     * // Get one Member
     * const member = await prisma.member.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MemberFindFirstArgs>(args?: SelectSubset<T, MemberFindFirstArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Member that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberFindFirstOrThrowArgs} args - Arguments to find a Member
     * @example
     * // Get one Member
     * const member = await prisma.member.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MemberFindFirstOrThrowArgs>(args?: SelectSubset<T, MemberFindFirstOrThrowArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Members
     * const members = await prisma.member.findMany()
     * 
     * // Get first 10 Members
     * const members = await prisma.member.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const memberWithIdOnly = await prisma.member.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends MemberFindManyArgs>(args?: SelectSubset<T, MemberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Member.
     * @param {MemberCreateArgs} args - Arguments to create a Member.
     * @example
     * // Create one Member
     * const Member = await prisma.member.create({
     *   data: {
     *     // ... data to create a Member
     *   }
     * })
     * 
     */
    create<T extends MemberCreateArgs>(args: SelectSubset<T, MemberCreateArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Members.
     * @param {MemberCreateManyArgs} args - Arguments to create many Members.
     * @example
     * // Create many Members
     * const member = await prisma.member.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MemberCreateManyArgs>(args?: SelectSubset<T, MemberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Members and returns the data saved in the database.
     * @param {MemberCreateManyAndReturnArgs} args - Arguments to create many Members.
     * @example
     * // Create many Members
     * const member = await prisma.member.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Members and only return the `Id`
     * const memberWithIdOnly = await prisma.member.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MemberCreateManyAndReturnArgs>(args?: SelectSubset<T, MemberCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Member.
     * @param {MemberDeleteArgs} args - Arguments to delete one Member.
     * @example
     * // Delete one Member
     * const Member = await prisma.member.delete({
     *   where: {
     *     // ... filter to delete one Member
     *   }
     * })
     * 
     */
    delete<T extends MemberDeleteArgs>(args: SelectSubset<T, MemberDeleteArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Member.
     * @param {MemberUpdateArgs} args - Arguments to update one Member.
     * @example
     * // Update one Member
     * const member = await prisma.member.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MemberUpdateArgs>(args: SelectSubset<T, MemberUpdateArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Members.
     * @param {MemberDeleteManyArgs} args - Arguments to filter Members to delete.
     * @example
     * // Delete a few Members
     * const { count } = await prisma.member.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MemberDeleteManyArgs>(args?: SelectSubset<T, MemberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Members
     * const member = await prisma.member.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MemberUpdateManyArgs>(args: SelectSubset<T, MemberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Members and returns the data updated in the database.
     * @param {MemberUpdateManyAndReturnArgs} args - Arguments to update many Members.
     * @example
     * // Update many Members
     * const member = await prisma.member.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Members and only return the `Id`
     * const memberWithIdOnly = await prisma.member.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MemberUpdateManyAndReturnArgs>(args: SelectSubset<T, MemberUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Member.
     * @param {MemberUpsertArgs} args - Arguments to update or create a Member.
     * @example
     * // Update or create a Member
     * const member = await prisma.member.upsert({
     *   create: {
     *     // ... data to create a Member
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Member we want to update
     *   }
     * })
     */
    upsert<T extends MemberUpsertArgs>(args: SelectSubset<T, MemberUpsertArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberCountArgs} args - Arguments to filter Members to count.
     * @example
     * // Count the number of Members
     * const count = await prisma.member.count({
     *   where: {
     *     // ... the filter for the Members we want to count
     *   }
     * })
    **/
    count<T extends MemberCountArgs>(
      args?: Subset<T, MemberCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MemberCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Member.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MemberAggregateArgs>(args: Subset<T, MemberAggregateArgs>): Prisma.PrismaPromise<GetMemberAggregateType<T>>

    /**
     * Group by Member.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MemberGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MemberGroupByArgs['orderBy'] }
        : { orderBy?: MemberGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MemberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMemberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Member model
   */
  readonly fields: MemberFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Member.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MemberClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    VirtualAirline<T extends VirtualAirlineDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirlineDefaultArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    VARole<T extends VirtualAirlineRoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirlineRoleDefaultArgs<ExtArgs>>): Prisma__VirtualAirlineRoleClient<$Result.GetResult<Prisma.$VirtualAirlineRolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Flights<T extends Member$FlightsArgs<ExtArgs> = {}>(args?: Subset<T, Member$FlightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends Member$UserArgs<ExtArgs> = {}>(args?: Subset<T, Member$UserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    FlightRoutes<T extends Member$FlightRoutesArgs<ExtArgs> = {}>(args?: Subset<T, Member$FlightRoutesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Member model
   */
  interface MemberFieldRefs {
    readonly Id: FieldRef<"Member", 'String'>
    readonly IsActive: FieldRef<"Member", 'Boolean'>
    readonly DeactivatedAt: FieldRef<"Member", 'DateTime'>
    readonly VAId: FieldRef<"Member", 'String'>
    readonly VARoleId: FieldRef<"Member", 'String'>
    readonly TotalCargosTransportedLbs: FieldRef<"Member", 'Int'>
    readonly TotalPAXsTransported: FieldRef<"Member", 'Int'>
    readonly TotalEarnedCredits: FieldRef<"Member", 'Decimal'>
    readonly TotalSpentCredits: FieldRef<"Member", 'Decimal'>
    readonly NumberOfFlights: FieldRef<"Member", 'Int'>
    readonly FlightHours: FieldRef<"Member", 'Decimal'>
    readonly Color: FieldRef<"Member", 'String'>
    readonly ReputationImpact: FieldRef<"Member", 'Decimal'>
    readonly LastVAFlightDate: FieldRef<"Member", 'DateTime'>
    readonly LastRefresh: FieldRef<"Member", 'DateTime'>
    readonly UserId: FieldRef<"Member", 'String'>
    readonly CreatedAt: FieldRef<"Member", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Member", 'DateTime'>
    readonly CompanyId: FieldRef<"Member", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Member findUnique
   */
  export type MemberFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter, which Member to fetch.
     */
    where: MemberWhereUniqueInput
  }

  /**
   * Member findUniqueOrThrow
   */
  export type MemberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter, which Member to fetch.
     */
    where: MemberWhereUniqueInput
  }

  /**
   * Member findFirst
   */
  export type MemberFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter, which Member to fetch.
     */
    where?: MemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Members to fetch.
     */
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Members.
     */
    cursor?: MemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Members.
     */
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * Member findFirstOrThrow
   */
  export type MemberFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter, which Member to fetch.
     */
    where?: MemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Members to fetch.
     */
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Members.
     */
    cursor?: MemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Members.
     */
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * Member findMany
   */
  export type MemberFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter, which Members to fetch.
     */
    where?: MemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Members to fetch.
     */
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Members.
     */
    cursor?: MemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Members.
     */
    skip?: number
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * Member create
   */
  export type MemberCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * The data needed to create a Member.
     */
    data: XOR<MemberCreateInput, MemberUncheckedCreateInput>
  }

  /**
   * Member createMany
   */
  export type MemberCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Members.
     */
    data: MemberCreateManyInput | MemberCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Member createManyAndReturn
   */
  export type MemberCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * The data used to create many Members.
     */
    data: MemberCreateManyInput | MemberCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Member update
   */
  export type MemberUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * The data needed to update a Member.
     */
    data: XOR<MemberUpdateInput, MemberUncheckedUpdateInput>
    /**
     * Choose, which Member to update.
     */
    where: MemberWhereUniqueInput
  }

  /**
   * Member updateMany
   */
  export type MemberUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Members.
     */
    data: XOR<MemberUpdateManyMutationInput, MemberUncheckedUpdateManyInput>
    /**
     * Filter which Members to update
     */
    where?: MemberWhereInput
    /**
     * Limit how many Members to update.
     */
    limit?: number
  }

  /**
   * Member updateManyAndReturn
   */
  export type MemberUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * The data used to update Members.
     */
    data: XOR<MemberUpdateManyMutationInput, MemberUncheckedUpdateManyInput>
    /**
     * Filter which Members to update
     */
    where?: MemberWhereInput
    /**
     * Limit how many Members to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Member upsert
   */
  export type MemberUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * The filter to search for the Member to update in case it exists.
     */
    where: MemberWhereUniqueInput
    /**
     * In case the Member found by the `where` argument doesn't exist, create a new Member with this data.
     */
    create: XOR<MemberCreateInput, MemberUncheckedCreateInput>
    /**
     * In case the Member was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MemberUpdateInput, MemberUncheckedUpdateInput>
  }

  /**
   * Member delete
   */
  export type MemberDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter which Member to delete.
     */
    where: MemberWhereUniqueInput
  }

  /**
   * Member deleteMany
   */
  export type MemberDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Members to delete
     */
    where?: MemberWhereInput
    /**
     * Limit how many Members to delete.
     */
    limit?: number
  }

  /**
   * Member.Flights
   */
  export type Member$FlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    where?: FlightWhereInput
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    cursor?: FlightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * Member.User
   */
  export type Member$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Member.FlightRoutes
   */
  export type Member$FlightRoutesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    where?: FlightRouteWhereInput
    orderBy?: FlightRouteOrderByWithRelationInput | FlightRouteOrderByWithRelationInput[]
    cursor?: FlightRouteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlightRouteScalarFieldEnum | FlightRouteScalarFieldEnum[]
  }

  /**
   * Member without action
   */
  export type MemberDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
  }


  /**
   * Model Company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyAvgAggregateOutputType = {
    Level: number | null
    LevelXP: number | null
    Reputation: Decimal | null
    DifficultyLevel: number | null
  }

  export type CompanySumAggregateOutputType = {
    Level: number | null
    LevelXP: number | null
    Reputation: Decimal | null
    DifficultyLevel: number | null
  }

  export type CompanyMinAggregateOutputType = {
    Id: string | null
    Name: string | null
    AirlineCode: string | null
    CreationDate: Date | null
    Level: number | null
    LevelXP: number | null
    Reputation: Decimal | null
    Paused: boolean | null
    LastConnection: Date | null
    LastReportDate: Date | null
    DifficultyLevel: number | null
    WorldId: string | null
    LastRefresh: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type CompanyMaxAggregateOutputType = {
    Id: string | null
    Name: string | null
    AirlineCode: string | null
    CreationDate: Date | null
    Level: number | null
    LevelXP: number | null
    Reputation: Decimal | null
    Paused: boolean | null
    LastConnection: Date | null
    LastReportDate: Date | null
    DifficultyLevel: number | null
    WorldId: string | null
    LastRefresh: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type CompanyCountAggregateOutputType = {
    Id: number
    Name: number
    AirlineCode: number
    CreationDate: number
    Level: number
    LevelXP: number
    Reputation: number
    Paused: number
    LastConnection: number
    LastReportDate: number
    DifficultyLevel: number
    WorldId: number
    LastRefresh: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type CompanyAvgAggregateInputType = {
    Level?: true
    LevelXP?: true
    Reputation?: true
    DifficultyLevel?: true
  }

  export type CompanySumAggregateInputType = {
    Level?: true
    LevelXP?: true
    Reputation?: true
    DifficultyLevel?: true
  }

  export type CompanyMinAggregateInputType = {
    Id?: true
    Name?: true
    AirlineCode?: true
    CreationDate?: true
    Level?: true
    LevelXP?: true
    Reputation?: true
    Paused?: true
    LastConnection?: true
    LastReportDate?: true
    DifficultyLevel?: true
    WorldId?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type CompanyMaxAggregateInputType = {
    Id?: true
    Name?: true
    AirlineCode?: true
    CreationDate?: true
    Level?: true
    LevelXP?: true
    Reputation?: true
    Paused?: true
    LastConnection?: true
    LastReportDate?: true
    DifficultyLevel?: true
    WorldId?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type CompanyCountAggregateInputType = {
    Id?: true
    Name?: true
    AirlineCode?: true
    CreationDate?: true
    Level?: true
    LevelXP?: true
    Reputation?: true
    Paused?: true
    LastConnection?: true
    LastReportDate?: true
    DifficultyLevel?: true
    WorldId?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Company to aggregate.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type CompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithAggregationInput | CompanyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: CompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _avg?: CompanyAvgAggregateInputType
    _sum?: CompanySumAggregateInputType
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date
    Level: number
    LevelXP: number
    Reputation: Decimal
    Paused: boolean
    LastConnection: Date | null
    LastReportDate: Date | null
    DifficultyLevel: number
    WorldId: string
    LastRefresh: Date | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends CompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type CompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    AirlineCode?: boolean
    CreationDate?: boolean
    Level?: boolean
    LevelXP?: boolean
    Reputation?: boolean
    Paused?: boolean
    LastConnection?: boolean
    LastReportDate?: boolean
    DifficultyLevel?: boolean
    WorldId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    World?: boolean | WorldDefaultArgs<ExtArgs>
    Flights?: boolean | Company$FlightsArgs<ExtArgs>
    Owner?: boolean | Company$OwnerArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>

  export type CompanySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    AirlineCode?: boolean
    CreationDate?: boolean
    Level?: boolean
    LevelXP?: boolean
    Reputation?: boolean
    Paused?: boolean
    LastConnection?: boolean
    LastReportDate?: boolean
    DifficultyLevel?: boolean
    WorldId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    World?: boolean | WorldDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>

  export type CompanySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    AirlineCode?: boolean
    CreationDate?: boolean
    Level?: boolean
    LevelXP?: boolean
    Reputation?: boolean
    Paused?: boolean
    LastConnection?: boolean
    LastReportDate?: boolean
    DifficultyLevel?: boolean
    WorldId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    World?: boolean | WorldDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>

  export type CompanySelectScalar = {
    Id?: boolean
    Name?: boolean
    AirlineCode?: boolean
    CreationDate?: boolean
    Level?: boolean
    LevelXP?: boolean
    Reputation?: boolean
    Paused?: boolean
    LastConnection?: boolean
    LastReportDate?: boolean
    DifficultyLevel?: boolean
    WorldId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type CompanyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Name" | "AirlineCode" | "CreationDate" | "Level" | "LevelXP" | "Reputation" | "Paused" | "LastConnection" | "LastReportDate" | "DifficultyLevel" | "WorldId" | "LastRefresh" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["company"]>
  export type CompanyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    World?: boolean | WorldDefaultArgs<ExtArgs>
    Flights?: boolean | Company$FlightsArgs<ExtArgs>
    Owner?: boolean | Company$OwnerArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CompanyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    World?: boolean | WorldDefaultArgs<ExtArgs>
  }
  export type CompanyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    World?: boolean | WorldDefaultArgs<ExtArgs>
  }

  export type $CompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Company"
    objects: {
      World: Prisma.$WorldPayload<ExtArgs>
      Flights: Prisma.$FlightPayload<ExtArgs>[]
      Owner: Prisma.$MemberPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      Name: string
      AirlineCode: string
      CreationDate: Date
      Level: number
      LevelXP: number
      Reputation: Prisma.Decimal
      Paused: boolean
      LastConnection: Date | null
      LastReportDate: Date | null
      DifficultyLevel: number
      WorldId: string
      LastRefresh: Date | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type CompanyGetPayload<S extends boolean | null | undefined | CompanyDefaultArgs> = $Result.GetResult<Prisma.$CompanyPayload, S>

  type CompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CompanyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface CompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Company'], meta: { name: 'Company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {CompanyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyFindUniqueArgs>(args: SelectSubset<T, CompanyFindUniqueArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CompanyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyFindFirstArgs>(args?: SelectSubset<T, CompanyFindFirstArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends CompanyFindManyArgs>(args?: SelectSubset<T, CompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Company.
     * @param {CompanyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends CompanyCreateArgs>(args: SelectSubset<T, CompanyCreateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Companies.
     * @param {CompanyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyCreateManyArgs>(args?: SelectSubset<T, CompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Companies and returns the data saved in the database.
     * @param {CompanyCreateManyAndReturnArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Companies and only return the `Id`
     * const companyWithIdOnly = await prisma.company.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CompanyCreateManyAndReturnArgs>(args?: SelectSubset<T, CompanyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Company.
     * @param {CompanyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends CompanyDeleteArgs>(args: SelectSubset<T, CompanyDeleteArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Company.
     * @param {CompanyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyUpdateArgs>(args: SelectSubset<T, CompanyUpdateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Companies.
     * @param {CompanyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyDeleteManyArgs>(args?: SelectSubset<T, CompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyUpdateManyArgs>(args: SelectSubset<T, CompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies and returns the data updated in the database.
     * @param {CompanyUpdateManyAndReturnArgs} args - Arguments to update many Companies.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Companies and only return the `Id`
     * const companyWithIdOnly = await prisma.company.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CompanyUpdateManyAndReturnArgs>(args: SelectSubset<T, CompanyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Company.
     * @param {CompanyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends CompanyUpsertArgs>(args: SelectSubset<T, CompanyUpsertArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends CompanyCountArgs>(
      args?: Subset<T, CompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyGroupByArgs['orderBy'] }
        : { orderBy?: CompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Company model
   */
  readonly fields: CompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    World<T extends WorldDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WorldDefaultArgs<ExtArgs>>): Prisma__WorldClient<$Result.GetResult<Prisma.$WorldPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Flights<T extends Company$FlightsArgs<ExtArgs> = {}>(args?: Subset<T, Company$FlightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Owner<T extends Company$OwnerArgs<ExtArgs> = {}>(args?: Subset<T, Company$OwnerArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Company model
   */
  interface CompanyFieldRefs {
    readonly Id: FieldRef<"Company", 'String'>
    readonly Name: FieldRef<"Company", 'String'>
    readonly AirlineCode: FieldRef<"Company", 'String'>
    readonly CreationDate: FieldRef<"Company", 'DateTime'>
    readonly Level: FieldRef<"Company", 'Int'>
    readonly LevelXP: FieldRef<"Company", 'Int'>
    readonly Reputation: FieldRef<"Company", 'Decimal'>
    readonly Paused: FieldRef<"Company", 'Boolean'>
    readonly LastConnection: FieldRef<"Company", 'DateTime'>
    readonly LastReportDate: FieldRef<"Company", 'DateTime'>
    readonly DifficultyLevel: FieldRef<"Company", 'Int'>
    readonly WorldId: FieldRef<"Company", 'String'>
    readonly LastRefresh: FieldRef<"Company", 'DateTime'>
    readonly CreatedAt: FieldRef<"Company", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Company", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Company findUnique
   */
  export type CompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findUniqueOrThrow
   */
  export type CompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findFirst
   */
  export type CompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findFirstOrThrow
   */
  export type CompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findMany
   */
  export type CompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Companies to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company create
   */
  export type CompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to create a Company.
     */
    data: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
  }

  /**
   * Company createMany
   */
  export type CompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Company createManyAndReturn
   */
  export type CompanyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Company update
   */
  export type CompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to update a Company.
     */
    data: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
    /**
     * Choose, which Company to update.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company updateMany
   */
  export type CompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Companies.
     */
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyInput>
    /**
     * Filter which Companies to update
     */
    where?: CompanyWhereInput
    /**
     * Limit how many Companies to update.
     */
    limit?: number
  }

  /**
   * Company updateManyAndReturn
   */
  export type CompanyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * The data used to update Companies.
     */
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyInput>
    /**
     * Filter which Companies to update
     */
    where?: CompanyWhereInput
    /**
     * Limit how many Companies to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Company upsert
   */
  export type CompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The filter to search for the Company to update in case it exists.
     */
    where: CompanyWhereUniqueInput
    /**
     * In case the Company found by the `where` argument doesn't exist, create a new Company with this data.
     */
    create: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
    /**
     * In case the Company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
  }

  /**
   * Company delete
   */
  export type CompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter which Company to delete.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company deleteMany
   */
  export type CompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Companies to delete
     */
    where?: CompanyWhereInput
    /**
     * Limit how many Companies to delete.
     */
    limit?: number
  }

  /**
   * Company.Flights
   */
  export type Company$FlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    where?: FlightWhereInput
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    cursor?: FlightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * Company.Owner
   */
  export type Company$OwnerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    where?: MemberWhereInput
  }

  /**
   * Company without action
   */
  export type CompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
  }


  /**
   * Model Aircraft
   */

  export type AggregateAircraft = {
    _count: AircraftCountAggregateOutputType | null
    _avg: AircraftAvgAggregateOutputType | null
    _sum: AircraftSumAggregateOutputType | null
    _min: AircraftMinAggregateOutputType | null
    _max: AircraftMaxAggregateOutputType | null
  }

  export type AircraftAvgAggregateOutputType = {
    AircraftStatusId: number | null
  }

  export type AircraftSumAggregateOutputType = {
    AircraftStatusId: number | null
  }

  export type AircraftMinAggregateOutputType = {
    Id: string | null
    Identifier: string | null
    DisplayName: string | null
    AircraftStatusId: number | null
    AircraftClassId: string | null
    VirtualAirlineId: string | null
    CurrentAirportId: string | null
    LastRefresh: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AircraftMaxAggregateOutputType = {
    Id: string | null
    Identifier: string | null
    DisplayName: string | null
    AircraftStatusId: number | null
    AircraftClassId: string | null
    VirtualAirlineId: string | null
    CurrentAirportId: string | null
    LastRefresh: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AircraftCountAggregateOutputType = {
    Id: number
    Identifier: number
    DisplayName: number
    AircraftStatusId: number
    AircraftClassId: number
    VirtualAirlineId: number
    CurrentAirportId: number
    LastRefresh: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type AircraftAvgAggregateInputType = {
    AircraftStatusId?: true
  }

  export type AircraftSumAggregateInputType = {
    AircraftStatusId?: true
  }

  export type AircraftMinAggregateInputType = {
    Id?: true
    Identifier?: true
    DisplayName?: true
    AircraftStatusId?: true
    AircraftClassId?: true
    VirtualAirlineId?: true
    CurrentAirportId?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AircraftMaxAggregateInputType = {
    Id?: true
    Identifier?: true
    DisplayName?: true
    AircraftStatusId?: true
    AircraftClassId?: true
    VirtualAirlineId?: true
    CurrentAirportId?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AircraftCountAggregateInputType = {
    Id?: true
    Identifier?: true
    DisplayName?: true
    AircraftStatusId?: true
    AircraftClassId?: true
    VirtualAirlineId?: true
    CurrentAirportId?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type AircraftAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Aircraft to aggregate.
     */
    where?: AircraftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Aircraft to fetch.
     */
    orderBy?: AircraftOrderByWithRelationInput | AircraftOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AircraftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Aircraft from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Aircraft.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Aircraft
    **/
    _count?: true | AircraftCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AircraftAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AircraftSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AircraftMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AircraftMaxAggregateInputType
  }

  export type GetAircraftAggregateType<T extends AircraftAggregateArgs> = {
        [P in keyof T & keyof AggregateAircraft]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAircraft[P]>
      : GetScalarType<T[P], AggregateAircraft[P]>
  }




  export type AircraftGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AircraftWhereInput
    orderBy?: AircraftOrderByWithAggregationInput | AircraftOrderByWithAggregationInput[]
    by: AircraftScalarFieldEnum[] | AircraftScalarFieldEnum
    having?: AircraftScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AircraftCountAggregateInputType | true
    _avg?: AircraftAvgAggregateInputType
    _sum?: AircraftSumAggregateInputType
    _min?: AircraftMinAggregateInputType
    _max?: AircraftMaxAggregateInputType
  }

  export type AircraftGroupByOutputType = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    AircraftClassId: string
    VirtualAirlineId: string
    CurrentAirportId: string | null
    LastRefresh: Date | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: AircraftCountAggregateOutputType | null
    _avg: AircraftAvgAggregateOutputType | null
    _sum: AircraftSumAggregateOutputType | null
    _min: AircraftMinAggregateOutputType | null
    _max: AircraftMaxAggregateOutputType | null
  }

  type GetAircraftGroupByPayload<T extends AircraftGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AircraftGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AircraftGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AircraftGroupByOutputType[P]>
            : GetScalarType<T[P], AircraftGroupByOutputType[P]>
        }
      >
    >


  export type AircraftSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Identifier?: boolean
    DisplayName?: boolean
    AircraftStatusId?: boolean
    AircraftClassId?: boolean
    VirtualAirlineId?: boolean
    CurrentAirportId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    AircraftClass?: boolean | AircraftClassDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    AircraftStatus?: boolean | AircraftStatusDefaultArgs<ExtArgs>
    CurrentAirport?: boolean | Aircraft$CurrentAirportArgs<ExtArgs>
    AircraftMaintenance?: boolean | Aircraft$AircraftMaintenanceArgs<ExtArgs>
    Flights?: boolean | Aircraft$FlightsArgs<ExtArgs>
    Liveries?: boolean | Aircraft$LiveriesArgs<ExtArgs>
    _count?: boolean | AircraftCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aircraft"]>

  export type AircraftSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Identifier?: boolean
    DisplayName?: boolean
    AircraftStatusId?: boolean
    AircraftClassId?: boolean
    VirtualAirlineId?: boolean
    CurrentAirportId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    AircraftClass?: boolean | AircraftClassDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    AircraftStatus?: boolean | AircraftStatusDefaultArgs<ExtArgs>
    CurrentAirport?: boolean | Aircraft$CurrentAirportArgs<ExtArgs>
  }, ExtArgs["result"]["aircraft"]>

  export type AircraftSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Identifier?: boolean
    DisplayName?: boolean
    AircraftStatusId?: boolean
    AircraftClassId?: boolean
    VirtualAirlineId?: boolean
    CurrentAirportId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    AircraftClass?: boolean | AircraftClassDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    AircraftStatus?: boolean | AircraftStatusDefaultArgs<ExtArgs>
    CurrentAirport?: boolean | Aircraft$CurrentAirportArgs<ExtArgs>
  }, ExtArgs["result"]["aircraft"]>

  export type AircraftSelectScalar = {
    Id?: boolean
    Identifier?: boolean
    DisplayName?: boolean
    AircraftStatusId?: boolean
    AircraftClassId?: boolean
    VirtualAirlineId?: boolean
    CurrentAirportId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type AircraftOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Identifier" | "DisplayName" | "AircraftStatusId" | "AircraftClassId" | "VirtualAirlineId" | "CurrentAirportId" | "LastRefresh" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["aircraft"]>
  export type AircraftInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AircraftClass?: boolean | AircraftClassDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    AircraftStatus?: boolean | AircraftStatusDefaultArgs<ExtArgs>
    CurrentAirport?: boolean | Aircraft$CurrentAirportArgs<ExtArgs>
    AircraftMaintenance?: boolean | Aircraft$AircraftMaintenanceArgs<ExtArgs>
    Flights?: boolean | Aircraft$FlightsArgs<ExtArgs>
    Liveries?: boolean | Aircraft$LiveriesArgs<ExtArgs>
    _count?: boolean | AircraftCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AircraftIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AircraftClass?: boolean | AircraftClassDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    AircraftStatus?: boolean | AircraftStatusDefaultArgs<ExtArgs>
    CurrentAirport?: boolean | Aircraft$CurrentAirportArgs<ExtArgs>
  }
  export type AircraftIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AircraftClass?: boolean | AircraftClassDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | VirtualAirlineDefaultArgs<ExtArgs>
    AircraftStatus?: boolean | AircraftStatusDefaultArgs<ExtArgs>
    CurrentAirport?: boolean | Aircraft$CurrentAirportArgs<ExtArgs>
  }

  export type $AircraftPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Aircraft"
    objects: {
      AircraftClass: Prisma.$AircraftClassPayload<ExtArgs>
      VirtualAirline: Prisma.$VirtualAirlinePayload<ExtArgs>
      AircraftStatus: Prisma.$AircraftStatusPayload<ExtArgs>
      CurrentAirport: Prisma.$AirportPayload<ExtArgs> | null
      AircraftMaintenance: Prisma.$AircraftMaintenancePayload<ExtArgs>[]
      Flights: Prisma.$FlightPayload<ExtArgs>[]
      Liveries: Prisma.$LiveryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      Identifier: string
      DisplayName: string
      AircraftStatusId: number
      AircraftClassId: string
      VirtualAirlineId: string
      CurrentAirportId: string | null
      LastRefresh: Date | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["aircraft"]>
    composites: {}
  }

  type AircraftGetPayload<S extends boolean | null | undefined | AircraftDefaultArgs> = $Result.GetResult<Prisma.$AircraftPayload, S>

  type AircraftCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AircraftFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AircraftCountAggregateInputType | true
    }

  export interface AircraftDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Aircraft'], meta: { name: 'Aircraft' } }
    /**
     * Find zero or one Aircraft that matches the filter.
     * @param {AircraftFindUniqueArgs} args - Arguments to find a Aircraft
     * @example
     * // Get one Aircraft
     * const aircraft = await prisma.aircraft.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AircraftFindUniqueArgs>(args: SelectSubset<T, AircraftFindUniqueArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Aircraft that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AircraftFindUniqueOrThrowArgs} args - Arguments to find a Aircraft
     * @example
     * // Get one Aircraft
     * const aircraft = await prisma.aircraft.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AircraftFindUniqueOrThrowArgs>(args: SelectSubset<T, AircraftFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Aircraft that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftFindFirstArgs} args - Arguments to find a Aircraft
     * @example
     * // Get one Aircraft
     * const aircraft = await prisma.aircraft.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AircraftFindFirstArgs>(args?: SelectSubset<T, AircraftFindFirstArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Aircraft that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftFindFirstOrThrowArgs} args - Arguments to find a Aircraft
     * @example
     * // Get one Aircraft
     * const aircraft = await prisma.aircraft.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AircraftFindFirstOrThrowArgs>(args?: SelectSubset<T, AircraftFindFirstOrThrowArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Aircraft that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Aircraft
     * const aircraft = await prisma.aircraft.findMany()
     * 
     * // Get first 10 Aircraft
     * const aircraft = await prisma.aircraft.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const aircraftWithIdOnly = await prisma.aircraft.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends AircraftFindManyArgs>(args?: SelectSubset<T, AircraftFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Aircraft.
     * @param {AircraftCreateArgs} args - Arguments to create a Aircraft.
     * @example
     * // Create one Aircraft
     * const Aircraft = await prisma.aircraft.create({
     *   data: {
     *     // ... data to create a Aircraft
     *   }
     * })
     * 
     */
    create<T extends AircraftCreateArgs>(args: SelectSubset<T, AircraftCreateArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Aircraft.
     * @param {AircraftCreateManyArgs} args - Arguments to create many Aircraft.
     * @example
     * // Create many Aircraft
     * const aircraft = await prisma.aircraft.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AircraftCreateManyArgs>(args?: SelectSubset<T, AircraftCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Aircraft and returns the data saved in the database.
     * @param {AircraftCreateManyAndReturnArgs} args - Arguments to create many Aircraft.
     * @example
     * // Create many Aircraft
     * const aircraft = await prisma.aircraft.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Aircraft and only return the `Id`
     * const aircraftWithIdOnly = await prisma.aircraft.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AircraftCreateManyAndReturnArgs>(args?: SelectSubset<T, AircraftCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Aircraft.
     * @param {AircraftDeleteArgs} args - Arguments to delete one Aircraft.
     * @example
     * // Delete one Aircraft
     * const Aircraft = await prisma.aircraft.delete({
     *   where: {
     *     // ... filter to delete one Aircraft
     *   }
     * })
     * 
     */
    delete<T extends AircraftDeleteArgs>(args: SelectSubset<T, AircraftDeleteArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Aircraft.
     * @param {AircraftUpdateArgs} args - Arguments to update one Aircraft.
     * @example
     * // Update one Aircraft
     * const aircraft = await prisma.aircraft.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AircraftUpdateArgs>(args: SelectSubset<T, AircraftUpdateArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Aircraft.
     * @param {AircraftDeleteManyArgs} args - Arguments to filter Aircraft to delete.
     * @example
     * // Delete a few Aircraft
     * const { count } = await prisma.aircraft.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AircraftDeleteManyArgs>(args?: SelectSubset<T, AircraftDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Aircraft.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Aircraft
     * const aircraft = await prisma.aircraft.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AircraftUpdateManyArgs>(args: SelectSubset<T, AircraftUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Aircraft and returns the data updated in the database.
     * @param {AircraftUpdateManyAndReturnArgs} args - Arguments to update many Aircraft.
     * @example
     * // Update many Aircraft
     * const aircraft = await prisma.aircraft.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Aircraft and only return the `Id`
     * const aircraftWithIdOnly = await prisma.aircraft.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AircraftUpdateManyAndReturnArgs>(args: SelectSubset<T, AircraftUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Aircraft.
     * @param {AircraftUpsertArgs} args - Arguments to update or create a Aircraft.
     * @example
     * // Update or create a Aircraft
     * const aircraft = await prisma.aircraft.upsert({
     *   create: {
     *     // ... data to create a Aircraft
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Aircraft we want to update
     *   }
     * })
     */
    upsert<T extends AircraftUpsertArgs>(args: SelectSubset<T, AircraftUpsertArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Aircraft.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftCountArgs} args - Arguments to filter Aircraft to count.
     * @example
     * // Count the number of Aircraft
     * const count = await prisma.aircraft.count({
     *   where: {
     *     // ... the filter for the Aircraft we want to count
     *   }
     * })
    **/
    count<T extends AircraftCountArgs>(
      args?: Subset<T, AircraftCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AircraftCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Aircraft.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AircraftAggregateArgs>(args: Subset<T, AircraftAggregateArgs>): Prisma.PrismaPromise<GetAircraftAggregateType<T>>

    /**
     * Group by Aircraft.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AircraftGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AircraftGroupByArgs['orderBy'] }
        : { orderBy?: AircraftGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AircraftGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAircraftGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Aircraft model
   */
  readonly fields: AircraftFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Aircraft.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AircraftClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    AircraftClass<T extends AircraftClassDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AircraftClassDefaultArgs<ExtArgs>>): Prisma__AircraftClassClient<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    VirtualAirline<T extends VirtualAirlineDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VirtualAirlineDefaultArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    AircraftStatus<T extends AircraftStatusDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AircraftStatusDefaultArgs<ExtArgs>>): Prisma__AircraftStatusClient<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    CurrentAirport<T extends Aircraft$CurrentAirportArgs<ExtArgs> = {}>(args?: Subset<T, Aircraft$CurrentAirportArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    AircraftMaintenance<T extends Aircraft$AircraftMaintenanceArgs<ExtArgs> = {}>(args?: Subset<T, Aircraft$AircraftMaintenanceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Flights<T extends Aircraft$FlightsArgs<ExtArgs> = {}>(args?: Subset<T, Aircraft$FlightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Liveries<T extends Aircraft$LiveriesArgs<ExtArgs> = {}>(args?: Subset<T, Aircraft$LiveriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LiveryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Aircraft model
   */
  interface AircraftFieldRefs {
    readonly Id: FieldRef<"Aircraft", 'String'>
    readonly Identifier: FieldRef<"Aircraft", 'String'>
    readonly DisplayName: FieldRef<"Aircraft", 'String'>
    readonly AircraftStatusId: FieldRef<"Aircraft", 'Int'>
    readonly AircraftClassId: FieldRef<"Aircraft", 'String'>
    readonly VirtualAirlineId: FieldRef<"Aircraft", 'String'>
    readonly CurrentAirportId: FieldRef<"Aircraft", 'String'>
    readonly LastRefresh: FieldRef<"Aircraft", 'DateTime'>
    readonly CreatedAt: FieldRef<"Aircraft", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Aircraft", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Aircraft findUnique
   */
  export type AircraftFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    /**
     * Filter, which Aircraft to fetch.
     */
    where: AircraftWhereUniqueInput
  }

  /**
   * Aircraft findUniqueOrThrow
   */
  export type AircraftFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    /**
     * Filter, which Aircraft to fetch.
     */
    where: AircraftWhereUniqueInput
  }

  /**
   * Aircraft findFirst
   */
  export type AircraftFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    /**
     * Filter, which Aircraft to fetch.
     */
    where?: AircraftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Aircraft to fetch.
     */
    orderBy?: AircraftOrderByWithRelationInput | AircraftOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Aircraft.
     */
    cursor?: AircraftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Aircraft from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Aircraft.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Aircraft.
     */
    distinct?: AircraftScalarFieldEnum | AircraftScalarFieldEnum[]
  }

  /**
   * Aircraft findFirstOrThrow
   */
  export type AircraftFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    /**
     * Filter, which Aircraft to fetch.
     */
    where?: AircraftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Aircraft to fetch.
     */
    orderBy?: AircraftOrderByWithRelationInput | AircraftOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Aircraft.
     */
    cursor?: AircraftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Aircraft from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Aircraft.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Aircraft.
     */
    distinct?: AircraftScalarFieldEnum | AircraftScalarFieldEnum[]
  }

  /**
   * Aircraft findMany
   */
  export type AircraftFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    /**
     * Filter, which Aircraft to fetch.
     */
    where?: AircraftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Aircraft to fetch.
     */
    orderBy?: AircraftOrderByWithRelationInput | AircraftOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Aircraft.
     */
    cursor?: AircraftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Aircraft from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Aircraft.
     */
    skip?: number
    distinct?: AircraftScalarFieldEnum | AircraftScalarFieldEnum[]
  }

  /**
   * Aircraft create
   */
  export type AircraftCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    /**
     * The data needed to create a Aircraft.
     */
    data: XOR<AircraftCreateInput, AircraftUncheckedCreateInput>
  }

  /**
   * Aircraft createMany
   */
  export type AircraftCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Aircraft.
     */
    data: AircraftCreateManyInput | AircraftCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Aircraft createManyAndReturn
   */
  export type AircraftCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * The data used to create many Aircraft.
     */
    data: AircraftCreateManyInput | AircraftCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Aircraft update
   */
  export type AircraftUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    /**
     * The data needed to update a Aircraft.
     */
    data: XOR<AircraftUpdateInput, AircraftUncheckedUpdateInput>
    /**
     * Choose, which Aircraft to update.
     */
    where: AircraftWhereUniqueInput
  }

  /**
   * Aircraft updateMany
   */
  export type AircraftUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Aircraft.
     */
    data: XOR<AircraftUpdateManyMutationInput, AircraftUncheckedUpdateManyInput>
    /**
     * Filter which Aircraft to update
     */
    where?: AircraftWhereInput
    /**
     * Limit how many Aircraft to update.
     */
    limit?: number
  }

  /**
   * Aircraft updateManyAndReturn
   */
  export type AircraftUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * The data used to update Aircraft.
     */
    data: XOR<AircraftUpdateManyMutationInput, AircraftUncheckedUpdateManyInput>
    /**
     * Filter which Aircraft to update
     */
    where?: AircraftWhereInput
    /**
     * Limit how many Aircraft to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Aircraft upsert
   */
  export type AircraftUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    /**
     * The filter to search for the Aircraft to update in case it exists.
     */
    where: AircraftWhereUniqueInput
    /**
     * In case the Aircraft found by the `where` argument doesn't exist, create a new Aircraft with this data.
     */
    create: XOR<AircraftCreateInput, AircraftUncheckedCreateInput>
    /**
     * In case the Aircraft was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AircraftUpdateInput, AircraftUncheckedUpdateInput>
  }

  /**
   * Aircraft delete
   */
  export type AircraftDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    /**
     * Filter which Aircraft to delete.
     */
    where: AircraftWhereUniqueInput
  }

  /**
   * Aircraft deleteMany
   */
  export type AircraftDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Aircraft to delete
     */
    where?: AircraftWhereInput
    /**
     * Limit how many Aircraft to delete.
     */
    limit?: number
  }

  /**
   * Aircraft.CurrentAirport
   */
  export type Aircraft$CurrentAirportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    where?: AirportWhereInput
  }

  /**
   * Aircraft.AircraftMaintenance
   */
  export type Aircraft$AircraftMaintenanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
    where?: AircraftMaintenanceWhereInput
    orderBy?: AircraftMaintenanceOrderByWithRelationInput | AircraftMaintenanceOrderByWithRelationInput[]
    cursor?: AircraftMaintenanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AircraftMaintenanceScalarFieldEnum | AircraftMaintenanceScalarFieldEnum[]
  }

  /**
   * Aircraft.Flights
   */
  export type Aircraft$FlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    where?: FlightWhereInput
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    cursor?: FlightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * Aircraft.Liveries
   */
  export type Aircraft$LiveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Livery
     */
    select?: LiverySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Livery
     */
    omit?: LiveryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LiveryInclude<ExtArgs> | null
    where?: LiveryWhereInput
    orderBy?: LiveryOrderByWithRelationInput | LiveryOrderByWithRelationInput[]
    cursor?: LiveryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LiveryScalarFieldEnum | LiveryScalarFieldEnum[]
  }

  /**
   * Aircraft without action
   */
  export type AircraftDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
  }


  /**
   * Model AircraftClass
   */

  export type AggregateAircraftClass = {
    _count: AircraftClassCountAggregateOutputType | null
    _min: AircraftClassMinAggregateOutputType | null
    _max: AircraftClassMaxAggregateOutputType | null
  }

  export type AircraftClassMinAggregateOutputType = {
    Id: string | null
    ShortName: string | null
    Name: string | null
  }

  export type AircraftClassMaxAggregateOutputType = {
    Id: string | null
    ShortName: string | null
    Name: string | null
  }

  export type AircraftClassCountAggregateOutputType = {
    Id: number
    ShortName: number
    Name: number
    _all: number
  }


  export type AircraftClassMinAggregateInputType = {
    Id?: true
    ShortName?: true
    Name?: true
  }

  export type AircraftClassMaxAggregateInputType = {
    Id?: true
    ShortName?: true
    Name?: true
  }

  export type AircraftClassCountAggregateInputType = {
    Id?: true
    ShortName?: true
    Name?: true
    _all?: true
  }

  export type AircraftClassAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AircraftClass to aggregate.
     */
    where?: AircraftClassWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftClasses to fetch.
     */
    orderBy?: AircraftClassOrderByWithRelationInput | AircraftClassOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AircraftClassWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftClasses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftClasses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AircraftClasses
    **/
    _count?: true | AircraftClassCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AircraftClassMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AircraftClassMaxAggregateInputType
  }

  export type GetAircraftClassAggregateType<T extends AircraftClassAggregateArgs> = {
        [P in keyof T & keyof AggregateAircraftClass]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAircraftClass[P]>
      : GetScalarType<T[P], AggregateAircraftClass[P]>
  }




  export type AircraftClassGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AircraftClassWhereInput
    orderBy?: AircraftClassOrderByWithAggregationInput | AircraftClassOrderByWithAggregationInput[]
    by: AircraftClassScalarFieldEnum[] | AircraftClassScalarFieldEnum
    having?: AircraftClassScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AircraftClassCountAggregateInputType | true
    _min?: AircraftClassMinAggregateInputType
    _max?: AircraftClassMaxAggregateInputType
  }

  export type AircraftClassGroupByOutputType = {
    Id: string
    ShortName: string
    Name: string
    _count: AircraftClassCountAggregateOutputType | null
    _min: AircraftClassMinAggregateOutputType | null
    _max: AircraftClassMaxAggregateOutputType | null
  }

  type GetAircraftClassGroupByPayload<T extends AircraftClassGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AircraftClassGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AircraftClassGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AircraftClassGroupByOutputType[P]>
            : GetScalarType<T[P], AircraftClassGroupByOutputType[P]>
        }
      >
    >


  export type AircraftClassSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ShortName?: boolean
    Name?: boolean
    Aircrafts?: boolean | AircraftClass$AircraftsArgs<ExtArgs>
    _count?: boolean | AircraftClassCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aircraftClass"]>

  export type AircraftClassSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ShortName?: boolean
    Name?: boolean
  }, ExtArgs["result"]["aircraftClass"]>

  export type AircraftClassSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ShortName?: boolean
    Name?: boolean
  }, ExtArgs["result"]["aircraftClass"]>

  export type AircraftClassSelectScalar = {
    Id?: boolean
    ShortName?: boolean
    Name?: boolean
  }

  export type AircraftClassOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "ShortName" | "Name", ExtArgs["result"]["aircraftClass"]>
  export type AircraftClassInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Aircrafts?: boolean | AircraftClass$AircraftsArgs<ExtArgs>
    _count?: boolean | AircraftClassCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AircraftClassIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AircraftClassIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AircraftClassPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AircraftClass"
    objects: {
      Aircrafts: Prisma.$AircraftPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      ShortName: string
      Name: string
    }, ExtArgs["result"]["aircraftClass"]>
    composites: {}
  }

  type AircraftClassGetPayload<S extends boolean | null | undefined | AircraftClassDefaultArgs> = $Result.GetResult<Prisma.$AircraftClassPayload, S>

  type AircraftClassCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AircraftClassFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AircraftClassCountAggregateInputType | true
    }

  export interface AircraftClassDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AircraftClass'], meta: { name: 'AircraftClass' } }
    /**
     * Find zero or one AircraftClass that matches the filter.
     * @param {AircraftClassFindUniqueArgs} args - Arguments to find a AircraftClass
     * @example
     * // Get one AircraftClass
     * const aircraftClass = await prisma.aircraftClass.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AircraftClassFindUniqueArgs>(args: SelectSubset<T, AircraftClassFindUniqueArgs<ExtArgs>>): Prisma__AircraftClassClient<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AircraftClass that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AircraftClassFindUniqueOrThrowArgs} args - Arguments to find a AircraftClass
     * @example
     * // Get one AircraftClass
     * const aircraftClass = await prisma.aircraftClass.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AircraftClassFindUniqueOrThrowArgs>(args: SelectSubset<T, AircraftClassFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AircraftClassClient<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AircraftClass that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftClassFindFirstArgs} args - Arguments to find a AircraftClass
     * @example
     * // Get one AircraftClass
     * const aircraftClass = await prisma.aircraftClass.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AircraftClassFindFirstArgs>(args?: SelectSubset<T, AircraftClassFindFirstArgs<ExtArgs>>): Prisma__AircraftClassClient<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AircraftClass that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftClassFindFirstOrThrowArgs} args - Arguments to find a AircraftClass
     * @example
     * // Get one AircraftClass
     * const aircraftClass = await prisma.aircraftClass.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AircraftClassFindFirstOrThrowArgs>(args?: SelectSubset<T, AircraftClassFindFirstOrThrowArgs<ExtArgs>>): Prisma__AircraftClassClient<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AircraftClasses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftClassFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AircraftClasses
     * const aircraftClasses = await prisma.aircraftClass.findMany()
     * 
     * // Get first 10 AircraftClasses
     * const aircraftClasses = await prisma.aircraftClass.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const aircraftClassWithIdOnly = await prisma.aircraftClass.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends AircraftClassFindManyArgs>(args?: SelectSubset<T, AircraftClassFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AircraftClass.
     * @param {AircraftClassCreateArgs} args - Arguments to create a AircraftClass.
     * @example
     * // Create one AircraftClass
     * const AircraftClass = await prisma.aircraftClass.create({
     *   data: {
     *     // ... data to create a AircraftClass
     *   }
     * })
     * 
     */
    create<T extends AircraftClassCreateArgs>(args: SelectSubset<T, AircraftClassCreateArgs<ExtArgs>>): Prisma__AircraftClassClient<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AircraftClasses.
     * @param {AircraftClassCreateManyArgs} args - Arguments to create many AircraftClasses.
     * @example
     * // Create many AircraftClasses
     * const aircraftClass = await prisma.aircraftClass.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AircraftClassCreateManyArgs>(args?: SelectSubset<T, AircraftClassCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AircraftClasses and returns the data saved in the database.
     * @param {AircraftClassCreateManyAndReturnArgs} args - Arguments to create many AircraftClasses.
     * @example
     * // Create many AircraftClasses
     * const aircraftClass = await prisma.aircraftClass.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AircraftClasses and only return the `Id`
     * const aircraftClassWithIdOnly = await prisma.aircraftClass.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AircraftClassCreateManyAndReturnArgs>(args?: SelectSubset<T, AircraftClassCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AircraftClass.
     * @param {AircraftClassDeleteArgs} args - Arguments to delete one AircraftClass.
     * @example
     * // Delete one AircraftClass
     * const AircraftClass = await prisma.aircraftClass.delete({
     *   where: {
     *     // ... filter to delete one AircraftClass
     *   }
     * })
     * 
     */
    delete<T extends AircraftClassDeleteArgs>(args: SelectSubset<T, AircraftClassDeleteArgs<ExtArgs>>): Prisma__AircraftClassClient<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AircraftClass.
     * @param {AircraftClassUpdateArgs} args - Arguments to update one AircraftClass.
     * @example
     * // Update one AircraftClass
     * const aircraftClass = await prisma.aircraftClass.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AircraftClassUpdateArgs>(args: SelectSubset<T, AircraftClassUpdateArgs<ExtArgs>>): Prisma__AircraftClassClient<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AircraftClasses.
     * @param {AircraftClassDeleteManyArgs} args - Arguments to filter AircraftClasses to delete.
     * @example
     * // Delete a few AircraftClasses
     * const { count } = await prisma.aircraftClass.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AircraftClassDeleteManyArgs>(args?: SelectSubset<T, AircraftClassDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AircraftClasses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftClassUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AircraftClasses
     * const aircraftClass = await prisma.aircraftClass.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AircraftClassUpdateManyArgs>(args: SelectSubset<T, AircraftClassUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AircraftClasses and returns the data updated in the database.
     * @param {AircraftClassUpdateManyAndReturnArgs} args - Arguments to update many AircraftClasses.
     * @example
     * // Update many AircraftClasses
     * const aircraftClass = await prisma.aircraftClass.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AircraftClasses and only return the `Id`
     * const aircraftClassWithIdOnly = await prisma.aircraftClass.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AircraftClassUpdateManyAndReturnArgs>(args: SelectSubset<T, AircraftClassUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AircraftClass.
     * @param {AircraftClassUpsertArgs} args - Arguments to update or create a AircraftClass.
     * @example
     * // Update or create a AircraftClass
     * const aircraftClass = await prisma.aircraftClass.upsert({
     *   create: {
     *     // ... data to create a AircraftClass
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AircraftClass we want to update
     *   }
     * })
     */
    upsert<T extends AircraftClassUpsertArgs>(args: SelectSubset<T, AircraftClassUpsertArgs<ExtArgs>>): Prisma__AircraftClassClient<$Result.GetResult<Prisma.$AircraftClassPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AircraftClasses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftClassCountArgs} args - Arguments to filter AircraftClasses to count.
     * @example
     * // Count the number of AircraftClasses
     * const count = await prisma.aircraftClass.count({
     *   where: {
     *     // ... the filter for the AircraftClasses we want to count
     *   }
     * })
    **/
    count<T extends AircraftClassCountArgs>(
      args?: Subset<T, AircraftClassCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AircraftClassCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AircraftClass.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftClassAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AircraftClassAggregateArgs>(args: Subset<T, AircraftClassAggregateArgs>): Prisma.PrismaPromise<GetAircraftClassAggregateType<T>>

    /**
     * Group by AircraftClass.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftClassGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AircraftClassGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AircraftClassGroupByArgs['orderBy'] }
        : { orderBy?: AircraftClassGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AircraftClassGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAircraftClassGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AircraftClass model
   */
  readonly fields: AircraftClassFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AircraftClass.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AircraftClassClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Aircrafts<T extends AircraftClass$AircraftsArgs<ExtArgs> = {}>(args?: Subset<T, AircraftClass$AircraftsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AircraftClass model
   */
  interface AircraftClassFieldRefs {
    readonly Id: FieldRef<"AircraftClass", 'String'>
    readonly ShortName: FieldRef<"AircraftClass", 'String'>
    readonly Name: FieldRef<"AircraftClass", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AircraftClass findUnique
   */
  export type AircraftClassFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftClassInclude<ExtArgs> | null
    /**
     * Filter, which AircraftClass to fetch.
     */
    where: AircraftClassWhereUniqueInput
  }

  /**
   * AircraftClass findUniqueOrThrow
   */
  export type AircraftClassFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftClassInclude<ExtArgs> | null
    /**
     * Filter, which AircraftClass to fetch.
     */
    where: AircraftClassWhereUniqueInput
  }

  /**
   * AircraftClass findFirst
   */
  export type AircraftClassFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftClassInclude<ExtArgs> | null
    /**
     * Filter, which AircraftClass to fetch.
     */
    where?: AircraftClassWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftClasses to fetch.
     */
    orderBy?: AircraftClassOrderByWithRelationInput | AircraftClassOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AircraftClasses.
     */
    cursor?: AircraftClassWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftClasses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftClasses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AircraftClasses.
     */
    distinct?: AircraftClassScalarFieldEnum | AircraftClassScalarFieldEnum[]
  }

  /**
   * AircraftClass findFirstOrThrow
   */
  export type AircraftClassFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftClassInclude<ExtArgs> | null
    /**
     * Filter, which AircraftClass to fetch.
     */
    where?: AircraftClassWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftClasses to fetch.
     */
    orderBy?: AircraftClassOrderByWithRelationInput | AircraftClassOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AircraftClasses.
     */
    cursor?: AircraftClassWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftClasses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftClasses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AircraftClasses.
     */
    distinct?: AircraftClassScalarFieldEnum | AircraftClassScalarFieldEnum[]
  }

  /**
   * AircraftClass findMany
   */
  export type AircraftClassFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftClassInclude<ExtArgs> | null
    /**
     * Filter, which AircraftClasses to fetch.
     */
    where?: AircraftClassWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftClasses to fetch.
     */
    orderBy?: AircraftClassOrderByWithRelationInput | AircraftClassOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AircraftClasses.
     */
    cursor?: AircraftClassWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftClasses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftClasses.
     */
    skip?: number
    distinct?: AircraftClassScalarFieldEnum | AircraftClassScalarFieldEnum[]
  }

  /**
   * AircraftClass create
   */
  export type AircraftClassCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftClassInclude<ExtArgs> | null
    /**
     * The data needed to create a AircraftClass.
     */
    data: XOR<AircraftClassCreateInput, AircraftClassUncheckedCreateInput>
  }

  /**
   * AircraftClass createMany
   */
  export type AircraftClassCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AircraftClasses.
     */
    data: AircraftClassCreateManyInput | AircraftClassCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AircraftClass createManyAndReturn
   */
  export type AircraftClassCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * The data used to create many AircraftClasses.
     */
    data: AircraftClassCreateManyInput | AircraftClassCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AircraftClass update
   */
  export type AircraftClassUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftClassInclude<ExtArgs> | null
    /**
     * The data needed to update a AircraftClass.
     */
    data: XOR<AircraftClassUpdateInput, AircraftClassUncheckedUpdateInput>
    /**
     * Choose, which AircraftClass to update.
     */
    where: AircraftClassWhereUniqueInput
  }

  /**
   * AircraftClass updateMany
   */
  export type AircraftClassUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AircraftClasses.
     */
    data: XOR<AircraftClassUpdateManyMutationInput, AircraftClassUncheckedUpdateManyInput>
    /**
     * Filter which AircraftClasses to update
     */
    where?: AircraftClassWhereInput
    /**
     * Limit how many AircraftClasses to update.
     */
    limit?: number
  }

  /**
   * AircraftClass updateManyAndReturn
   */
  export type AircraftClassUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * The data used to update AircraftClasses.
     */
    data: XOR<AircraftClassUpdateManyMutationInput, AircraftClassUncheckedUpdateManyInput>
    /**
     * Filter which AircraftClasses to update
     */
    where?: AircraftClassWhereInput
    /**
     * Limit how many AircraftClasses to update.
     */
    limit?: number
  }

  /**
   * AircraftClass upsert
   */
  export type AircraftClassUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftClassInclude<ExtArgs> | null
    /**
     * The filter to search for the AircraftClass to update in case it exists.
     */
    where: AircraftClassWhereUniqueInput
    /**
     * In case the AircraftClass found by the `where` argument doesn't exist, create a new AircraftClass with this data.
     */
    create: XOR<AircraftClassCreateInput, AircraftClassUncheckedCreateInput>
    /**
     * In case the AircraftClass was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AircraftClassUpdateInput, AircraftClassUncheckedUpdateInput>
  }

  /**
   * AircraftClass delete
   */
  export type AircraftClassDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftClassInclude<ExtArgs> | null
    /**
     * Filter which AircraftClass to delete.
     */
    where: AircraftClassWhereUniqueInput
  }

  /**
   * AircraftClass deleteMany
   */
  export type AircraftClassDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AircraftClasses to delete
     */
    where?: AircraftClassWhereInput
    /**
     * Limit how many AircraftClasses to delete.
     */
    limit?: number
  }

  /**
   * AircraftClass.Aircrafts
   */
  export type AircraftClass$AircraftsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    where?: AircraftWhereInput
    orderBy?: AircraftOrderByWithRelationInput | AircraftOrderByWithRelationInput[]
    cursor?: AircraftWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AircraftScalarFieldEnum | AircraftScalarFieldEnum[]
  }

  /**
   * AircraftClass without action
   */
  export type AircraftClassDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftClass
     */
    select?: AircraftClassSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftClass
     */
    omit?: AircraftClassOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftClassInclude<ExtArgs> | null
  }


  /**
   * Model AircraftMaintenance
   */

  export type AggregateAircraftMaintenance = {
    _count: AircraftMaintenanceCountAggregateOutputType | null
    _avg: AircraftMaintenanceAvgAggregateOutputType | null
    _sum: AircraftMaintenanceSumAggregateOutputType | null
    _min: AircraftMaintenanceMinAggregateOutputType | null
    _max: AircraftMaintenanceMaxAggregateOutputType | null
  }

  export type AircraftMaintenanceAvgAggregateOutputType = {
    EcoSeats: number | null
    BusSeats: number | null
    FirstClassSeats: number | null
    AirframeRepairCondition: Decimal | null
    RemainingMaintenanceWorkHours: Decimal | null
    Amount: Decimal | null
  }

  export type AircraftMaintenanceSumAggregateOutputType = {
    EcoSeats: number | null
    BusSeats: number | null
    FirstClassSeats: number | null
    AirframeRepairCondition: Decimal | null
    RemainingMaintenanceWorkHours: Decimal | null
    Amount: Decimal | null
  }

  export type AircraftMaintenanceMinAggregateOutputType = {
    Id: string | null
    AircraftId: string | null
    AnnualCheckup: boolean | null
    Inspection100Hours: boolean | null
    FailuresRepair: boolean | null
    AirframeRepair: boolean | null
    AirframeReplace: boolean | null
    EcoSeats: number | null
    BusSeats: number | null
    FirstClassSeats: number | null
    AirframeRepairCondition: Decimal | null
    MaintenanceFBOId: string | null
    RemainingMaintenanceWorkHours: Decimal | null
    Amount: Decimal | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AircraftMaintenanceMaxAggregateOutputType = {
    Id: string | null
    AircraftId: string | null
    AnnualCheckup: boolean | null
    Inspection100Hours: boolean | null
    FailuresRepair: boolean | null
    AirframeRepair: boolean | null
    AirframeReplace: boolean | null
    EcoSeats: number | null
    BusSeats: number | null
    FirstClassSeats: number | null
    AirframeRepairCondition: Decimal | null
    MaintenanceFBOId: string | null
    RemainingMaintenanceWorkHours: Decimal | null
    Amount: Decimal | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AircraftMaintenanceCountAggregateOutputType = {
    Id: number
    AircraftId: number
    AnnualCheckup: number
    Inspection100Hours: number
    FailuresRepair: number
    AirframeRepair: number
    AirframeReplace: number
    EcoSeats: number
    BusSeats: number
    FirstClassSeats: number
    AirframeRepairCondition: number
    MaintenanceFBOId: number
    RemainingMaintenanceWorkHours: number
    Amount: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type AircraftMaintenanceAvgAggregateInputType = {
    EcoSeats?: true
    BusSeats?: true
    FirstClassSeats?: true
    AirframeRepairCondition?: true
    RemainingMaintenanceWorkHours?: true
    Amount?: true
  }

  export type AircraftMaintenanceSumAggregateInputType = {
    EcoSeats?: true
    BusSeats?: true
    FirstClassSeats?: true
    AirframeRepairCondition?: true
    RemainingMaintenanceWorkHours?: true
    Amount?: true
  }

  export type AircraftMaintenanceMinAggregateInputType = {
    Id?: true
    AircraftId?: true
    AnnualCheckup?: true
    Inspection100Hours?: true
    FailuresRepair?: true
    AirframeRepair?: true
    AirframeReplace?: true
    EcoSeats?: true
    BusSeats?: true
    FirstClassSeats?: true
    AirframeRepairCondition?: true
    MaintenanceFBOId?: true
    RemainingMaintenanceWorkHours?: true
    Amount?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AircraftMaintenanceMaxAggregateInputType = {
    Id?: true
    AircraftId?: true
    AnnualCheckup?: true
    Inspection100Hours?: true
    FailuresRepair?: true
    AirframeRepair?: true
    AirframeReplace?: true
    EcoSeats?: true
    BusSeats?: true
    FirstClassSeats?: true
    AirframeRepairCondition?: true
    MaintenanceFBOId?: true
    RemainingMaintenanceWorkHours?: true
    Amount?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AircraftMaintenanceCountAggregateInputType = {
    Id?: true
    AircraftId?: true
    AnnualCheckup?: true
    Inspection100Hours?: true
    FailuresRepair?: true
    AirframeRepair?: true
    AirframeReplace?: true
    EcoSeats?: true
    BusSeats?: true
    FirstClassSeats?: true
    AirframeRepairCondition?: true
    MaintenanceFBOId?: true
    RemainingMaintenanceWorkHours?: true
    Amount?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type AircraftMaintenanceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AircraftMaintenance to aggregate.
     */
    where?: AircraftMaintenanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftMaintenances to fetch.
     */
    orderBy?: AircraftMaintenanceOrderByWithRelationInput | AircraftMaintenanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AircraftMaintenanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftMaintenances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftMaintenances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AircraftMaintenances
    **/
    _count?: true | AircraftMaintenanceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AircraftMaintenanceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AircraftMaintenanceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AircraftMaintenanceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AircraftMaintenanceMaxAggregateInputType
  }

  export type GetAircraftMaintenanceAggregateType<T extends AircraftMaintenanceAggregateArgs> = {
        [P in keyof T & keyof AggregateAircraftMaintenance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAircraftMaintenance[P]>
      : GetScalarType<T[P], AggregateAircraftMaintenance[P]>
  }




  export type AircraftMaintenanceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AircraftMaintenanceWhereInput
    orderBy?: AircraftMaintenanceOrderByWithAggregationInput | AircraftMaintenanceOrderByWithAggregationInput[]
    by: AircraftMaintenanceScalarFieldEnum[] | AircraftMaintenanceScalarFieldEnum
    having?: AircraftMaintenanceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AircraftMaintenanceCountAggregateInputType | true
    _avg?: AircraftMaintenanceAvgAggregateInputType
    _sum?: AircraftMaintenanceSumAggregateInputType
    _min?: AircraftMaintenanceMinAggregateInputType
    _max?: AircraftMaintenanceMaxAggregateInputType
  }

  export type AircraftMaintenanceGroupByOutputType = {
    Id: string
    AircraftId: string
    AnnualCheckup: boolean
    Inspection100Hours: boolean
    FailuresRepair: boolean
    AirframeRepair: boolean
    AirframeReplace: boolean
    EcoSeats: number
    BusSeats: number
    FirstClassSeats: number
    AirframeRepairCondition: Decimal
    MaintenanceFBOId: string
    RemainingMaintenanceWorkHours: Decimal
    Amount: Decimal
    CreatedAt: Date
    UpdatedAt: Date
    _count: AircraftMaintenanceCountAggregateOutputType | null
    _avg: AircraftMaintenanceAvgAggregateOutputType | null
    _sum: AircraftMaintenanceSumAggregateOutputType | null
    _min: AircraftMaintenanceMinAggregateOutputType | null
    _max: AircraftMaintenanceMaxAggregateOutputType | null
  }

  type GetAircraftMaintenanceGroupByPayload<T extends AircraftMaintenanceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AircraftMaintenanceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AircraftMaintenanceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AircraftMaintenanceGroupByOutputType[P]>
            : GetScalarType<T[P], AircraftMaintenanceGroupByOutputType[P]>
        }
      >
    >


  export type AircraftMaintenanceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    AircraftId?: boolean
    AnnualCheckup?: boolean
    Inspection100Hours?: boolean
    FailuresRepair?: boolean
    AirframeRepair?: boolean
    AirframeReplace?: boolean
    EcoSeats?: boolean
    BusSeats?: boolean
    FirstClassSeats?: boolean
    AirframeRepairCondition?: boolean
    MaintenanceFBOId?: boolean
    RemainingMaintenanceWorkHours?: boolean
    Amount?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Aircraft?: boolean | AircraftDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aircraftMaintenance"]>

  export type AircraftMaintenanceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    AircraftId?: boolean
    AnnualCheckup?: boolean
    Inspection100Hours?: boolean
    FailuresRepair?: boolean
    AirframeRepair?: boolean
    AirframeReplace?: boolean
    EcoSeats?: boolean
    BusSeats?: boolean
    FirstClassSeats?: boolean
    AirframeRepairCondition?: boolean
    MaintenanceFBOId?: boolean
    RemainingMaintenanceWorkHours?: boolean
    Amount?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Aircraft?: boolean | AircraftDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aircraftMaintenance"]>

  export type AircraftMaintenanceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    AircraftId?: boolean
    AnnualCheckup?: boolean
    Inspection100Hours?: boolean
    FailuresRepair?: boolean
    AirframeRepair?: boolean
    AirframeReplace?: boolean
    EcoSeats?: boolean
    BusSeats?: boolean
    FirstClassSeats?: boolean
    AirframeRepairCondition?: boolean
    MaintenanceFBOId?: boolean
    RemainingMaintenanceWorkHours?: boolean
    Amount?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Aircraft?: boolean | AircraftDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aircraftMaintenance"]>

  export type AircraftMaintenanceSelectScalar = {
    Id?: boolean
    AircraftId?: boolean
    AnnualCheckup?: boolean
    Inspection100Hours?: boolean
    FailuresRepair?: boolean
    AirframeRepair?: boolean
    AirframeReplace?: boolean
    EcoSeats?: boolean
    BusSeats?: boolean
    FirstClassSeats?: boolean
    AirframeRepairCondition?: boolean
    MaintenanceFBOId?: boolean
    RemainingMaintenanceWorkHours?: boolean
    Amount?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type AircraftMaintenanceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "AircraftId" | "AnnualCheckup" | "Inspection100Hours" | "FailuresRepair" | "AirframeRepair" | "AirframeReplace" | "EcoSeats" | "BusSeats" | "FirstClassSeats" | "AirframeRepairCondition" | "MaintenanceFBOId" | "RemainingMaintenanceWorkHours" | "Amount" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["aircraftMaintenance"]>
  export type AircraftMaintenanceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Aircraft?: boolean | AircraftDefaultArgs<ExtArgs>
  }
  export type AircraftMaintenanceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Aircraft?: boolean | AircraftDefaultArgs<ExtArgs>
  }
  export type AircraftMaintenanceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Aircraft?: boolean | AircraftDefaultArgs<ExtArgs>
  }

  export type $AircraftMaintenancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AircraftMaintenance"
    objects: {
      Aircraft: Prisma.$AircraftPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      AircraftId: string
      AnnualCheckup: boolean
      Inspection100Hours: boolean
      FailuresRepair: boolean
      AirframeRepair: boolean
      AirframeReplace: boolean
      EcoSeats: number
      BusSeats: number
      FirstClassSeats: number
      AirframeRepairCondition: Prisma.Decimal
      MaintenanceFBOId: string
      RemainingMaintenanceWorkHours: Prisma.Decimal
      Amount: Prisma.Decimal
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["aircraftMaintenance"]>
    composites: {}
  }

  type AircraftMaintenanceGetPayload<S extends boolean | null | undefined | AircraftMaintenanceDefaultArgs> = $Result.GetResult<Prisma.$AircraftMaintenancePayload, S>

  type AircraftMaintenanceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AircraftMaintenanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AircraftMaintenanceCountAggregateInputType | true
    }

  export interface AircraftMaintenanceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AircraftMaintenance'], meta: { name: 'AircraftMaintenance' } }
    /**
     * Find zero or one AircraftMaintenance that matches the filter.
     * @param {AircraftMaintenanceFindUniqueArgs} args - Arguments to find a AircraftMaintenance
     * @example
     * // Get one AircraftMaintenance
     * const aircraftMaintenance = await prisma.aircraftMaintenance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AircraftMaintenanceFindUniqueArgs>(args: SelectSubset<T, AircraftMaintenanceFindUniqueArgs<ExtArgs>>): Prisma__AircraftMaintenanceClient<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AircraftMaintenance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AircraftMaintenanceFindUniqueOrThrowArgs} args - Arguments to find a AircraftMaintenance
     * @example
     * // Get one AircraftMaintenance
     * const aircraftMaintenance = await prisma.aircraftMaintenance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AircraftMaintenanceFindUniqueOrThrowArgs>(args: SelectSubset<T, AircraftMaintenanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AircraftMaintenanceClient<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AircraftMaintenance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftMaintenanceFindFirstArgs} args - Arguments to find a AircraftMaintenance
     * @example
     * // Get one AircraftMaintenance
     * const aircraftMaintenance = await prisma.aircraftMaintenance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AircraftMaintenanceFindFirstArgs>(args?: SelectSubset<T, AircraftMaintenanceFindFirstArgs<ExtArgs>>): Prisma__AircraftMaintenanceClient<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AircraftMaintenance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftMaintenanceFindFirstOrThrowArgs} args - Arguments to find a AircraftMaintenance
     * @example
     * // Get one AircraftMaintenance
     * const aircraftMaintenance = await prisma.aircraftMaintenance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AircraftMaintenanceFindFirstOrThrowArgs>(args?: SelectSubset<T, AircraftMaintenanceFindFirstOrThrowArgs<ExtArgs>>): Prisma__AircraftMaintenanceClient<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AircraftMaintenances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftMaintenanceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AircraftMaintenances
     * const aircraftMaintenances = await prisma.aircraftMaintenance.findMany()
     * 
     * // Get first 10 AircraftMaintenances
     * const aircraftMaintenances = await prisma.aircraftMaintenance.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const aircraftMaintenanceWithIdOnly = await prisma.aircraftMaintenance.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends AircraftMaintenanceFindManyArgs>(args?: SelectSubset<T, AircraftMaintenanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AircraftMaintenance.
     * @param {AircraftMaintenanceCreateArgs} args - Arguments to create a AircraftMaintenance.
     * @example
     * // Create one AircraftMaintenance
     * const AircraftMaintenance = await prisma.aircraftMaintenance.create({
     *   data: {
     *     // ... data to create a AircraftMaintenance
     *   }
     * })
     * 
     */
    create<T extends AircraftMaintenanceCreateArgs>(args: SelectSubset<T, AircraftMaintenanceCreateArgs<ExtArgs>>): Prisma__AircraftMaintenanceClient<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AircraftMaintenances.
     * @param {AircraftMaintenanceCreateManyArgs} args - Arguments to create many AircraftMaintenances.
     * @example
     * // Create many AircraftMaintenances
     * const aircraftMaintenance = await prisma.aircraftMaintenance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AircraftMaintenanceCreateManyArgs>(args?: SelectSubset<T, AircraftMaintenanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AircraftMaintenances and returns the data saved in the database.
     * @param {AircraftMaintenanceCreateManyAndReturnArgs} args - Arguments to create many AircraftMaintenances.
     * @example
     * // Create many AircraftMaintenances
     * const aircraftMaintenance = await prisma.aircraftMaintenance.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AircraftMaintenances and only return the `Id`
     * const aircraftMaintenanceWithIdOnly = await prisma.aircraftMaintenance.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AircraftMaintenanceCreateManyAndReturnArgs>(args?: SelectSubset<T, AircraftMaintenanceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AircraftMaintenance.
     * @param {AircraftMaintenanceDeleteArgs} args - Arguments to delete one AircraftMaintenance.
     * @example
     * // Delete one AircraftMaintenance
     * const AircraftMaintenance = await prisma.aircraftMaintenance.delete({
     *   where: {
     *     // ... filter to delete one AircraftMaintenance
     *   }
     * })
     * 
     */
    delete<T extends AircraftMaintenanceDeleteArgs>(args: SelectSubset<T, AircraftMaintenanceDeleteArgs<ExtArgs>>): Prisma__AircraftMaintenanceClient<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AircraftMaintenance.
     * @param {AircraftMaintenanceUpdateArgs} args - Arguments to update one AircraftMaintenance.
     * @example
     * // Update one AircraftMaintenance
     * const aircraftMaintenance = await prisma.aircraftMaintenance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AircraftMaintenanceUpdateArgs>(args: SelectSubset<T, AircraftMaintenanceUpdateArgs<ExtArgs>>): Prisma__AircraftMaintenanceClient<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AircraftMaintenances.
     * @param {AircraftMaintenanceDeleteManyArgs} args - Arguments to filter AircraftMaintenances to delete.
     * @example
     * // Delete a few AircraftMaintenances
     * const { count } = await prisma.aircraftMaintenance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AircraftMaintenanceDeleteManyArgs>(args?: SelectSubset<T, AircraftMaintenanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AircraftMaintenances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftMaintenanceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AircraftMaintenances
     * const aircraftMaintenance = await prisma.aircraftMaintenance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AircraftMaintenanceUpdateManyArgs>(args: SelectSubset<T, AircraftMaintenanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AircraftMaintenances and returns the data updated in the database.
     * @param {AircraftMaintenanceUpdateManyAndReturnArgs} args - Arguments to update many AircraftMaintenances.
     * @example
     * // Update many AircraftMaintenances
     * const aircraftMaintenance = await prisma.aircraftMaintenance.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AircraftMaintenances and only return the `Id`
     * const aircraftMaintenanceWithIdOnly = await prisma.aircraftMaintenance.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AircraftMaintenanceUpdateManyAndReturnArgs>(args: SelectSubset<T, AircraftMaintenanceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AircraftMaintenance.
     * @param {AircraftMaintenanceUpsertArgs} args - Arguments to update or create a AircraftMaintenance.
     * @example
     * // Update or create a AircraftMaintenance
     * const aircraftMaintenance = await prisma.aircraftMaintenance.upsert({
     *   create: {
     *     // ... data to create a AircraftMaintenance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AircraftMaintenance we want to update
     *   }
     * })
     */
    upsert<T extends AircraftMaintenanceUpsertArgs>(args: SelectSubset<T, AircraftMaintenanceUpsertArgs<ExtArgs>>): Prisma__AircraftMaintenanceClient<$Result.GetResult<Prisma.$AircraftMaintenancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AircraftMaintenances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftMaintenanceCountArgs} args - Arguments to filter AircraftMaintenances to count.
     * @example
     * // Count the number of AircraftMaintenances
     * const count = await prisma.aircraftMaintenance.count({
     *   where: {
     *     // ... the filter for the AircraftMaintenances we want to count
     *   }
     * })
    **/
    count<T extends AircraftMaintenanceCountArgs>(
      args?: Subset<T, AircraftMaintenanceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AircraftMaintenanceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AircraftMaintenance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftMaintenanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AircraftMaintenanceAggregateArgs>(args: Subset<T, AircraftMaintenanceAggregateArgs>): Prisma.PrismaPromise<GetAircraftMaintenanceAggregateType<T>>

    /**
     * Group by AircraftMaintenance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftMaintenanceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AircraftMaintenanceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AircraftMaintenanceGroupByArgs['orderBy'] }
        : { orderBy?: AircraftMaintenanceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AircraftMaintenanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAircraftMaintenanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AircraftMaintenance model
   */
  readonly fields: AircraftMaintenanceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AircraftMaintenance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AircraftMaintenanceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Aircraft<T extends AircraftDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AircraftDefaultArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AircraftMaintenance model
   */
  interface AircraftMaintenanceFieldRefs {
    readonly Id: FieldRef<"AircraftMaintenance", 'String'>
    readonly AircraftId: FieldRef<"AircraftMaintenance", 'String'>
    readonly AnnualCheckup: FieldRef<"AircraftMaintenance", 'Boolean'>
    readonly Inspection100Hours: FieldRef<"AircraftMaintenance", 'Boolean'>
    readonly FailuresRepair: FieldRef<"AircraftMaintenance", 'Boolean'>
    readonly AirframeRepair: FieldRef<"AircraftMaintenance", 'Boolean'>
    readonly AirframeReplace: FieldRef<"AircraftMaintenance", 'Boolean'>
    readonly EcoSeats: FieldRef<"AircraftMaintenance", 'Int'>
    readonly BusSeats: FieldRef<"AircraftMaintenance", 'Int'>
    readonly FirstClassSeats: FieldRef<"AircraftMaintenance", 'Int'>
    readonly AirframeRepairCondition: FieldRef<"AircraftMaintenance", 'Decimal'>
    readonly MaintenanceFBOId: FieldRef<"AircraftMaintenance", 'String'>
    readonly RemainingMaintenanceWorkHours: FieldRef<"AircraftMaintenance", 'Decimal'>
    readonly Amount: FieldRef<"AircraftMaintenance", 'Decimal'>
    readonly CreatedAt: FieldRef<"AircraftMaintenance", 'DateTime'>
    readonly UpdatedAt: FieldRef<"AircraftMaintenance", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AircraftMaintenance findUnique
   */
  export type AircraftMaintenanceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
    /**
     * Filter, which AircraftMaintenance to fetch.
     */
    where: AircraftMaintenanceWhereUniqueInput
  }

  /**
   * AircraftMaintenance findUniqueOrThrow
   */
  export type AircraftMaintenanceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
    /**
     * Filter, which AircraftMaintenance to fetch.
     */
    where: AircraftMaintenanceWhereUniqueInput
  }

  /**
   * AircraftMaintenance findFirst
   */
  export type AircraftMaintenanceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
    /**
     * Filter, which AircraftMaintenance to fetch.
     */
    where?: AircraftMaintenanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftMaintenances to fetch.
     */
    orderBy?: AircraftMaintenanceOrderByWithRelationInput | AircraftMaintenanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AircraftMaintenances.
     */
    cursor?: AircraftMaintenanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftMaintenances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftMaintenances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AircraftMaintenances.
     */
    distinct?: AircraftMaintenanceScalarFieldEnum | AircraftMaintenanceScalarFieldEnum[]
  }

  /**
   * AircraftMaintenance findFirstOrThrow
   */
  export type AircraftMaintenanceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
    /**
     * Filter, which AircraftMaintenance to fetch.
     */
    where?: AircraftMaintenanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftMaintenances to fetch.
     */
    orderBy?: AircraftMaintenanceOrderByWithRelationInput | AircraftMaintenanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AircraftMaintenances.
     */
    cursor?: AircraftMaintenanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftMaintenances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftMaintenances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AircraftMaintenances.
     */
    distinct?: AircraftMaintenanceScalarFieldEnum | AircraftMaintenanceScalarFieldEnum[]
  }

  /**
   * AircraftMaintenance findMany
   */
  export type AircraftMaintenanceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
    /**
     * Filter, which AircraftMaintenances to fetch.
     */
    where?: AircraftMaintenanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftMaintenances to fetch.
     */
    orderBy?: AircraftMaintenanceOrderByWithRelationInput | AircraftMaintenanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AircraftMaintenances.
     */
    cursor?: AircraftMaintenanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftMaintenances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftMaintenances.
     */
    skip?: number
    distinct?: AircraftMaintenanceScalarFieldEnum | AircraftMaintenanceScalarFieldEnum[]
  }

  /**
   * AircraftMaintenance create
   */
  export type AircraftMaintenanceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
    /**
     * The data needed to create a AircraftMaintenance.
     */
    data: XOR<AircraftMaintenanceCreateInput, AircraftMaintenanceUncheckedCreateInput>
  }

  /**
   * AircraftMaintenance createMany
   */
  export type AircraftMaintenanceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AircraftMaintenances.
     */
    data: AircraftMaintenanceCreateManyInput | AircraftMaintenanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AircraftMaintenance createManyAndReturn
   */
  export type AircraftMaintenanceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * The data used to create many AircraftMaintenances.
     */
    data: AircraftMaintenanceCreateManyInput | AircraftMaintenanceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AircraftMaintenance update
   */
  export type AircraftMaintenanceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
    /**
     * The data needed to update a AircraftMaintenance.
     */
    data: XOR<AircraftMaintenanceUpdateInput, AircraftMaintenanceUncheckedUpdateInput>
    /**
     * Choose, which AircraftMaintenance to update.
     */
    where: AircraftMaintenanceWhereUniqueInput
  }

  /**
   * AircraftMaintenance updateMany
   */
  export type AircraftMaintenanceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AircraftMaintenances.
     */
    data: XOR<AircraftMaintenanceUpdateManyMutationInput, AircraftMaintenanceUncheckedUpdateManyInput>
    /**
     * Filter which AircraftMaintenances to update
     */
    where?: AircraftMaintenanceWhereInput
    /**
     * Limit how many AircraftMaintenances to update.
     */
    limit?: number
  }

  /**
   * AircraftMaintenance updateManyAndReturn
   */
  export type AircraftMaintenanceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * The data used to update AircraftMaintenances.
     */
    data: XOR<AircraftMaintenanceUpdateManyMutationInput, AircraftMaintenanceUncheckedUpdateManyInput>
    /**
     * Filter which AircraftMaintenances to update
     */
    where?: AircraftMaintenanceWhereInput
    /**
     * Limit how many AircraftMaintenances to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AircraftMaintenance upsert
   */
  export type AircraftMaintenanceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
    /**
     * The filter to search for the AircraftMaintenance to update in case it exists.
     */
    where: AircraftMaintenanceWhereUniqueInput
    /**
     * In case the AircraftMaintenance found by the `where` argument doesn't exist, create a new AircraftMaintenance with this data.
     */
    create: XOR<AircraftMaintenanceCreateInput, AircraftMaintenanceUncheckedCreateInput>
    /**
     * In case the AircraftMaintenance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AircraftMaintenanceUpdateInput, AircraftMaintenanceUncheckedUpdateInput>
  }

  /**
   * AircraftMaintenance delete
   */
  export type AircraftMaintenanceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
    /**
     * Filter which AircraftMaintenance to delete.
     */
    where: AircraftMaintenanceWhereUniqueInput
  }

  /**
   * AircraftMaintenance deleteMany
   */
  export type AircraftMaintenanceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AircraftMaintenances to delete
     */
    where?: AircraftMaintenanceWhereInput
    /**
     * Limit how many AircraftMaintenances to delete.
     */
    limit?: number
  }

  /**
   * AircraftMaintenance without action
   */
  export type AircraftMaintenanceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftMaintenance
     */
    select?: AircraftMaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftMaintenance
     */
    omit?: AircraftMaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftMaintenanceInclude<ExtArgs> | null
  }


  /**
   * Model AircraftStatus
   */

  export type AggregateAircraftStatus = {
    _count: AircraftStatusCountAggregateOutputType | null
    _avg: AircraftStatusAvgAggregateOutputType | null
    _sum: AircraftStatusSumAggregateOutputType | null
    _min: AircraftStatusMinAggregateOutputType | null
    _max: AircraftStatusMaxAggregateOutputType | null
  }

  export type AircraftStatusAvgAggregateOutputType = {
    Id: number | null
  }

  export type AircraftStatusSumAggregateOutputType = {
    Id: number | null
  }

  export type AircraftStatusMinAggregateOutputType = {
    Id: number | null
    Name: string | null
  }

  export type AircraftStatusMaxAggregateOutputType = {
    Id: number | null
    Name: string | null
  }

  export type AircraftStatusCountAggregateOutputType = {
    Id: number
    Name: number
    _all: number
  }


  export type AircraftStatusAvgAggregateInputType = {
    Id?: true
  }

  export type AircraftStatusSumAggregateInputType = {
    Id?: true
  }

  export type AircraftStatusMinAggregateInputType = {
    Id?: true
    Name?: true
  }

  export type AircraftStatusMaxAggregateInputType = {
    Id?: true
    Name?: true
  }

  export type AircraftStatusCountAggregateInputType = {
    Id?: true
    Name?: true
    _all?: true
  }

  export type AircraftStatusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AircraftStatus to aggregate.
     */
    where?: AircraftStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftStatuses to fetch.
     */
    orderBy?: AircraftStatusOrderByWithRelationInput | AircraftStatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AircraftStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftStatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftStatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AircraftStatuses
    **/
    _count?: true | AircraftStatusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AircraftStatusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AircraftStatusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AircraftStatusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AircraftStatusMaxAggregateInputType
  }

  export type GetAircraftStatusAggregateType<T extends AircraftStatusAggregateArgs> = {
        [P in keyof T & keyof AggregateAircraftStatus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAircraftStatus[P]>
      : GetScalarType<T[P], AggregateAircraftStatus[P]>
  }




  export type AircraftStatusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AircraftStatusWhereInput
    orderBy?: AircraftStatusOrderByWithAggregationInput | AircraftStatusOrderByWithAggregationInput[]
    by: AircraftStatusScalarFieldEnum[] | AircraftStatusScalarFieldEnum
    having?: AircraftStatusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AircraftStatusCountAggregateInputType | true
    _avg?: AircraftStatusAvgAggregateInputType
    _sum?: AircraftStatusSumAggregateInputType
    _min?: AircraftStatusMinAggregateInputType
    _max?: AircraftStatusMaxAggregateInputType
  }

  export type AircraftStatusGroupByOutputType = {
    Id: number
    Name: string
    _count: AircraftStatusCountAggregateOutputType | null
    _avg: AircraftStatusAvgAggregateOutputType | null
    _sum: AircraftStatusSumAggregateOutputType | null
    _min: AircraftStatusMinAggregateOutputType | null
    _max: AircraftStatusMaxAggregateOutputType | null
  }

  type GetAircraftStatusGroupByPayload<T extends AircraftStatusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AircraftStatusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AircraftStatusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AircraftStatusGroupByOutputType[P]>
            : GetScalarType<T[P], AircraftStatusGroupByOutputType[P]>
        }
      >
    >


  export type AircraftStatusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
    Aircrafts?: boolean | AircraftStatus$AircraftsArgs<ExtArgs>
    _count?: boolean | AircraftStatusCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aircraftStatus"]>

  export type AircraftStatusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
  }, ExtArgs["result"]["aircraftStatus"]>

  export type AircraftStatusSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Name?: boolean
  }, ExtArgs["result"]["aircraftStatus"]>

  export type AircraftStatusSelectScalar = {
    Id?: boolean
    Name?: boolean
  }

  export type AircraftStatusOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "Name", ExtArgs["result"]["aircraftStatus"]>
  export type AircraftStatusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Aircrafts?: boolean | AircraftStatus$AircraftsArgs<ExtArgs>
    _count?: boolean | AircraftStatusCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AircraftStatusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AircraftStatusIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AircraftStatusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AircraftStatus"
    objects: {
      Aircrafts: Prisma.$AircraftPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      Name: string
    }, ExtArgs["result"]["aircraftStatus"]>
    composites: {}
  }

  type AircraftStatusGetPayload<S extends boolean | null | undefined | AircraftStatusDefaultArgs> = $Result.GetResult<Prisma.$AircraftStatusPayload, S>

  type AircraftStatusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AircraftStatusFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AircraftStatusCountAggregateInputType | true
    }

  export interface AircraftStatusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AircraftStatus'], meta: { name: 'AircraftStatus' } }
    /**
     * Find zero or one AircraftStatus that matches the filter.
     * @param {AircraftStatusFindUniqueArgs} args - Arguments to find a AircraftStatus
     * @example
     * // Get one AircraftStatus
     * const aircraftStatus = await prisma.aircraftStatus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AircraftStatusFindUniqueArgs>(args: SelectSubset<T, AircraftStatusFindUniqueArgs<ExtArgs>>): Prisma__AircraftStatusClient<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AircraftStatus that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AircraftStatusFindUniqueOrThrowArgs} args - Arguments to find a AircraftStatus
     * @example
     * // Get one AircraftStatus
     * const aircraftStatus = await prisma.aircraftStatus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AircraftStatusFindUniqueOrThrowArgs>(args: SelectSubset<T, AircraftStatusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AircraftStatusClient<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AircraftStatus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftStatusFindFirstArgs} args - Arguments to find a AircraftStatus
     * @example
     * // Get one AircraftStatus
     * const aircraftStatus = await prisma.aircraftStatus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AircraftStatusFindFirstArgs>(args?: SelectSubset<T, AircraftStatusFindFirstArgs<ExtArgs>>): Prisma__AircraftStatusClient<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AircraftStatus that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftStatusFindFirstOrThrowArgs} args - Arguments to find a AircraftStatus
     * @example
     * // Get one AircraftStatus
     * const aircraftStatus = await prisma.aircraftStatus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AircraftStatusFindFirstOrThrowArgs>(args?: SelectSubset<T, AircraftStatusFindFirstOrThrowArgs<ExtArgs>>): Prisma__AircraftStatusClient<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AircraftStatuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftStatusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AircraftStatuses
     * const aircraftStatuses = await prisma.aircraftStatus.findMany()
     * 
     * // Get first 10 AircraftStatuses
     * const aircraftStatuses = await prisma.aircraftStatus.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const aircraftStatusWithIdOnly = await prisma.aircraftStatus.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends AircraftStatusFindManyArgs>(args?: SelectSubset<T, AircraftStatusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AircraftStatus.
     * @param {AircraftStatusCreateArgs} args - Arguments to create a AircraftStatus.
     * @example
     * // Create one AircraftStatus
     * const AircraftStatus = await prisma.aircraftStatus.create({
     *   data: {
     *     // ... data to create a AircraftStatus
     *   }
     * })
     * 
     */
    create<T extends AircraftStatusCreateArgs>(args: SelectSubset<T, AircraftStatusCreateArgs<ExtArgs>>): Prisma__AircraftStatusClient<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AircraftStatuses.
     * @param {AircraftStatusCreateManyArgs} args - Arguments to create many AircraftStatuses.
     * @example
     * // Create many AircraftStatuses
     * const aircraftStatus = await prisma.aircraftStatus.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AircraftStatusCreateManyArgs>(args?: SelectSubset<T, AircraftStatusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AircraftStatuses and returns the data saved in the database.
     * @param {AircraftStatusCreateManyAndReturnArgs} args - Arguments to create many AircraftStatuses.
     * @example
     * // Create many AircraftStatuses
     * const aircraftStatus = await prisma.aircraftStatus.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AircraftStatuses and only return the `Id`
     * const aircraftStatusWithIdOnly = await prisma.aircraftStatus.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AircraftStatusCreateManyAndReturnArgs>(args?: SelectSubset<T, AircraftStatusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AircraftStatus.
     * @param {AircraftStatusDeleteArgs} args - Arguments to delete one AircraftStatus.
     * @example
     * // Delete one AircraftStatus
     * const AircraftStatus = await prisma.aircraftStatus.delete({
     *   where: {
     *     // ... filter to delete one AircraftStatus
     *   }
     * })
     * 
     */
    delete<T extends AircraftStatusDeleteArgs>(args: SelectSubset<T, AircraftStatusDeleteArgs<ExtArgs>>): Prisma__AircraftStatusClient<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AircraftStatus.
     * @param {AircraftStatusUpdateArgs} args - Arguments to update one AircraftStatus.
     * @example
     * // Update one AircraftStatus
     * const aircraftStatus = await prisma.aircraftStatus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AircraftStatusUpdateArgs>(args: SelectSubset<T, AircraftStatusUpdateArgs<ExtArgs>>): Prisma__AircraftStatusClient<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AircraftStatuses.
     * @param {AircraftStatusDeleteManyArgs} args - Arguments to filter AircraftStatuses to delete.
     * @example
     * // Delete a few AircraftStatuses
     * const { count } = await prisma.aircraftStatus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AircraftStatusDeleteManyArgs>(args?: SelectSubset<T, AircraftStatusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AircraftStatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftStatusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AircraftStatuses
     * const aircraftStatus = await prisma.aircraftStatus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AircraftStatusUpdateManyArgs>(args: SelectSubset<T, AircraftStatusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AircraftStatuses and returns the data updated in the database.
     * @param {AircraftStatusUpdateManyAndReturnArgs} args - Arguments to update many AircraftStatuses.
     * @example
     * // Update many AircraftStatuses
     * const aircraftStatus = await prisma.aircraftStatus.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AircraftStatuses and only return the `Id`
     * const aircraftStatusWithIdOnly = await prisma.aircraftStatus.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AircraftStatusUpdateManyAndReturnArgs>(args: SelectSubset<T, AircraftStatusUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AircraftStatus.
     * @param {AircraftStatusUpsertArgs} args - Arguments to update or create a AircraftStatus.
     * @example
     * // Update or create a AircraftStatus
     * const aircraftStatus = await prisma.aircraftStatus.upsert({
     *   create: {
     *     // ... data to create a AircraftStatus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AircraftStatus we want to update
     *   }
     * })
     */
    upsert<T extends AircraftStatusUpsertArgs>(args: SelectSubset<T, AircraftStatusUpsertArgs<ExtArgs>>): Prisma__AircraftStatusClient<$Result.GetResult<Prisma.$AircraftStatusPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AircraftStatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftStatusCountArgs} args - Arguments to filter AircraftStatuses to count.
     * @example
     * // Count the number of AircraftStatuses
     * const count = await prisma.aircraftStatus.count({
     *   where: {
     *     // ... the filter for the AircraftStatuses we want to count
     *   }
     * })
    **/
    count<T extends AircraftStatusCountArgs>(
      args?: Subset<T, AircraftStatusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AircraftStatusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AircraftStatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftStatusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AircraftStatusAggregateArgs>(args: Subset<T, AircraftStatusAggregateArgs>): Prisma.PrismaPromise<GetAircraftStatusAggregateType<T>>

    /**
     * Group by AircraftStatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AircraftStatusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AircraftStatusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AircraftStatusGroupByArgs['orderBy'] }
        : { orderBy?: AircraftStatusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AircraftStatusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAircraftStatusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AircraftStatus model
   */
  readonly fields: AircraftStatusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AircraftStatus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AircraftStatusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Aircrafts<T extends AircraftStatus$AircraftsArgs<ExtArgs> = {}>(args?: Subset<T, AircraftStatus$AircraftsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AircraftStatus model
   */
  interface AircraftStatusFieldRefs {
    readonly Id: FieldRef<"AircraftStatus", 'Int'>
    readonly Name: FieldRef<"AircraftStatus", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AircraftStatus findUnique
   */
  export type AircraftStatusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftStatusInclude<ExtArgs> | null
    /**
     * Filter, which AircraftStatus to fetch.
     */
    where: AircraftStatusWhereUniqueInput
  }

  /**
   * AircraftStatus findUniqueOrThrow
   */
  export type AircraftStatusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftStatusInclude<ExtArgs> | null
    /**
     * Filter, which AircraftStatus to fetch.
     */
    where: AircraftStatusWhereUniqueInput
  }

  /**
   * AircraftStatus findFirst
   */
  export type AircraftStatusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftStatusInclude<ExtArgs> | null
    /**
     * Filter, which AircraftStatus to fetch.
     */
    where?: AircraftStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftStatuses to fetch.
     */
    orderBy?: AircraftStatusOrderByWithRelationInput | AircraftStatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AircraftStatuses.
     */
    cursor?: AircraftStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftStatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftStatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AircraftStatuses.
     */
    distinct?: AircraftStatusScalarFieldEnum | AircraftStatusScalarFieldEnum[]
  }

  /**
   * AircraftStatus findFirstOrThrow
   */
  export type AircraftStatusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftStatusInclude<ExtArgs> | null
    /**
     * Filter, which AircraftStatus to fetch.
     */
    where?: AircraftStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftStatuses to fetch.
     */
    orderBy?: AircraftStatusOrderByWithRelationInput | AircraftStatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AircraftStatuses.
     */
    cursor?: AircraftStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftStatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftStatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AircraftStatuses.
     */
    distinct?: AircraftStatusScalarFieldEnum | AircraftStatusScalarFieldEnum[]
  }

  /**
   * AircraftStatus findMany
   */
  export type AircraftStatusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftStatusInclude<ExtArgs> | null
    /**
     * Filter, which AircraftStatuses to fetch.
     */
    where?: AircraftStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AircraftStatuses to fetch.
     */
    orderBy?: AircraftStatusOrderByWithRelationInput | AircraftStatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AircraftStatuses.
     */
    cursor?: AircraftStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AircraftStatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AircraftStatuses.
     */
    skip?: number
    distinct?: AircraftStatusScalarFieldEnum | AircraftStatusScalarFieldEnum[]
  }

  /**
   * AircraftStatus create
   */
  export type AircraftStatusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftStatusInclude<ExtArgs> | null
    /**
     * The data needed to create a AircraftStatus.
     */
    data: XOR<AircraftStatusCreateInput, AircraftStatusUncheckedCreateInput>
  }

  /**
   * AircraftStatus createMany
   */
  export type AircraftStatusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AircraftStatuses.
     */
    data: AircraftStatusCreateManyInput | AircraftStatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AircraftStatus createManyAndReturn
   */
  export type AircraftStatusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * The data used to create many AircraftStatuses.
     */
    data: AircraftStatusCreateManyInput | AircraftStatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AircraftStatus update
   */
  export type AircraftStatusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftStatusInclude<ExtArgs> | null
    /**
     * The data needed to update a AircraftStatus.
     */
    data: XOR<AircraftStatusUpdateInput, AircraftStatusUncheckedUpdateInput>
    /**
     * Choose, which AircraftStatus to update.
     */
    where: AircraftStatusWhereUniqueInput
  }

  /**
   * AircraftStatus updateMany
   */
  export type AircraftStatusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AircraftStatuses.
     */
    data: XOR<AircraftStatusUpdateManyMutationInput, AircraftStatusUncheckedUpdateManyInput>
    /**
     * Filter which AircraftStatuses to update
     */
    where?: AircraftStatusWhereInput
    /**
     * Limit how many AircraftStatuses to update.
     */
    limit?: number
  }

  /**
   * AircraftStatus updateManyAndReturn
   */
  export type AircraftStatusUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * The data used to update AircraftStatuses.
     */
    data: XOR<AircraftStatusUpdateManyMutationInput, AircraftStatusUncheckedUpdateManyInput>
    /**
     * Filter which AircraftStatuses to update
     */
    where?: AircraftStatusWhereInput
    /**
     * Limit how many AircraftStatuses to update.
     */
    limit?: number
  }

  /**
   * AircraftStatus upsert
   */
  export type AircraftStatusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftStatusInclude<ExtArgs> | null
    /**
     * The filter to search for the AircraftStatus to update in case it exists.
     */
    where: AircraftStatusWhereUniqueInput
    /**
     * In case the AircraftStatus found by the `where` argument doesn't exist, create a new AircraftStatus with this data.
     */
    create: XOR<AircraftStatusCreateInput, AircraftStatusUncheckedCreateInput>
    /**
     * In case the AircraftStatus was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AircraftStatusUpdateInput, AircraftStatusUncheckedUpdateInput>
  }

  /**
   * AircraftStatus delete
   */
  export type AircraftStatusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftStatusInclude<ExtArgs> | null
    /**
     * Filter which AircraftStatus to delete.
     */
    where: AircraftStatusWhereUniqueInput
  }

  /**
   * AircraftStatus deleteMany
   */
  export type AircraftStatusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AircraftStatuses to delete
     */
    where?: AircraftStatusWhereInput
    /**
     * Limit how many AircraftStatuses to delete.
     */
    limit?: number
  }

  /**
   * AircraftStatus.Aircrafts
   */
  export type AircraftStatus$AircraftsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    where?: AircraftWhereInput
    orderBy?: AircraftOrderByWithRelationInput | AircraftOrderByWithRelationInput[]
    cursor?: AircraftWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AircraftScalarFieldEnum | AircraftScalarFieldEnum[]
  }

  /**
   * AircraftStatus without action
   */
  export type AircraftStatusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AircraftStatus
     */
    select?: AircraftStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AircraftStatus
     */
    omit?: AircraftStatusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftStatusInclude<ExtArgs> | null
  }


  /**
   * Model Airport
   */

  export type AggregateAirport = {
    _count: AirportCountAggregateOutputType | null
    _avg: AirportAvgAggregateOutputType | null
    _sum: AirportSumAggregateOutputType | null
    _min: AirportMinAggregateOutputType | null
    _max: AirportMaxAggregateOutputType | null
  }

  export type AirportAvgAggregateOutputType = {
    Size: number | null
    Latitude: Decimal | null
    Longitude: Decimal | null
  }

  export type AirportSumAggregateOutputType = {
    Size: number | null
    Latitude: Decimal | null
    Longitude: Decimal | null
  }

  export type AirportMinAggregateOutputType = {
    Id: string | null
    ICAO: string | null
    IATA: string | null
    Description: string | null
    Name: string | null
    Size: number | null
    City: string | null
    State: string | null
    CountryCode: string | null
    CountryName: string | null
    CountryEmoji: string | null
    Latitude: Decimal | null
    Longitude: Decimal | null
    HomeWebSiteUrl: string | null
    WikiUrl: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AirportMaxAggregateOutputType = {
    Id: string | null
    ICAO: string | null
    IATA: string | null
    Description: string | null
    Name: string | null
    Size: number | null
    City: string | null
    State: string | null
    CountryCode: string | null
    CountryName: string | null
    CountryEmoji: string | null
    Latitude: Decimal | null
    Longitude: Decimal | null
    HomeWebSiteUrl: string | null
    WikiUrl: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AirportCountAggregateOutputType = {
    Id: number
    ICAO: number
    IATA: number
    Description: number
    Name: number
    Size: number
    City: number
    State: number
    CountryCode: number
    CountryName: number
    CountryEmoji: number
    Latitude: number
    Longitude: number
    HomeWebSiteUrl: number
    WikiUrl: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type AirportAvgAggregateInputType = {
    Size?: true
    Latitude?: true
    Longitude?: true
  }

  export type AirportSumAggregateInputType = {
    Size?: true
    Latitude?: true
    Longitude?: true
  }

  export type AirportMinAggregateInputType = {
    Id?: true
    ICAO?: true
    IATA?: true
    Description?: true
    Name?: true
    Size?: true
    City?: true
    State?: true
    CountryCode?: true
    CountryName?: true
    CountryEmoji?: true
    Latitude?: true
    Longitude?: true
    HomeWebSiteUrl?: true
    WikiUrl?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AirportMaxAggregateInputType = {
    Id?: true
    ICAO?: true
    IATA?: true
    Description?: true
    Name?: true
    Size?: true
    City?: true
    State?: true
    CountryCode?: true
    CountryName?: true
    CountryEmoji?: true
    Latitude?: true
    Longitude?: true
    HomeWebSiteUrl?: true
    WikiUrl?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AirportCountAggregateInputType = {
    Id?: true
    ICAO?: true
    IATA?: true
    Description?: true
    Name?: true
    Size?: true
    City?: true
    State?: true
    CountryCode?: true
    CountryName?: true
    CountryEmoji?: true
    Latitude?: true
    Longitude?: true
    HomeWebSiteUrl?: true
    WikiUrl?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type AirportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Airport to aggregate.
     */
    where?: AirportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Airports to fetch.
     */
    orderBy?: AirportOrderByWithRelationInput | AirportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AirportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Airports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Airports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Airports
    **/
    _count?: true | AirportCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AirportAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AirportSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AirportMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AirportMaxAggregateInputType
  }

  export type GetAirportAggregateType<T extends AirportAggregateArgs> = {
        [P in keyof T & keyof AggregateAirport]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAirport[P]>
      : GetScalarType<T[P], AggregateAirport[P]>
  }




  export type AirportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AirportWhereInput
    orderBy?: AirportOrderByWithAggregationInput | AirportOrderByWithAggregationInput[]
    by: AirportScalarFieldEnum[] | AirportScalarFieldEnum
    having?: AirportScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AirportCountAggregateInputType | true
    _avg?: AirportAvgAggregateInputType
    _sum?: AirportSumAggregateInputType
    _min?: AirportMinAggregateInputType
    _max?: AirportMaxAggregateInputType
  }

  export type AirportGroupByOutputType = {
    Id: string
    ICAO: string
    IATA: string | null
    Description: string | null
    Name: string
    Size: number
    City: string | null
    State: string | null
    CountryCode: string | null
    CountryName: string | null
    CountryEmoji: string | null
    Latitude: Decimal
    Longitude: Decimal
    HomeWebSiteUrl: string | null
    WikiUrl: string | null
    CreatedAt: Date
    UpdatedAt: Date
    _count: AirportCountAggregateOutputType | null
    _avg: AirportAvgAggregateOutputType | null
    _sum: AirportSumAggregateOutputType | null
    _min: AirportMinAggregateOutputType | null
    _max: AirportMaxAggregateOutputType | null
  }

  type GetAirportGroupByPayload<T extends AirportGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AirportGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AirportGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AirportGroupByOutputType[P]>
            : GetScalarType<T[P], AirportGroupByOutputType[P]>
        }
      >
    >


  export type AirportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ICAO?: boolean
    IATA?: boolean
    Description?: boolean
    Name?: boolean
    Size?: boolean
    City?: boolean
    State?: boolean
    CountryCode?: boolean
    CountryName?: boolean
    CountryEmoji?: boolean
    Latitude?: boolean
    Longitude?: boolean
    HomeWebSiteUrl?: boolean
    WikiUrl?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    AircraftAtAirport?: boolean | Airport$AircraftAtAirportArgs<ExtArgs>
    DepartingFlights?: boolean | Airport$DepartingFlightsArgs<ExtArgs>
    ArrivingFlights?: boolean | Airport$ArrivingFlightsArgs<ExtArgs>
    ArrivingAlternateFlights?: boolean | Airport$ArrivingAlternateFlightsArgs<ExtArgs>
    ArrivingActualFlights?: boolean | Airport$ArrivingActualFlightsArgs<ExtArgs>
    _count?: boolean | AirportCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["airport"]>

  export type AirportSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ICAO?: boolean
    IATA?: boolean
    Description?: boolean
    Name?: boolean
    Size?: boolean
    City?: boolean
    State?: boolean
    CountryCode?: boolean
    CountryName?: boolean
    CountryEmoji?: boolean
    Latitude?: boolean
    Longitude?: boolean
    HomeWebSiteUrl?: boolean
    WikiUrl?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["airport"]>

  export type AirportSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    ICAO?: boolean
    IATA?: boolean
    Description?: boolean
    Name?: boolean
    Size?: boolean
    City?: boolean
    State?: boolean
    CountryCode?: boolean
    CountryName?: boolean
    CountryEmoji?: boolean
    Latitude?: boolean
    Longitude?: boolean
    HomeWebSiteUrl?: boolean
    WikiUrl?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["airport"]>

  export type AirportSelectScalar = {
    Id?: boolean
    ICAO?: boolean
    IATA?: boolean
    Description?: boolean
    Name?: boolean
    Size?: boolean
    City?: boolean
    State?: boolean
    CountryCode?: boolean
    CountryName?: boolean
    CountryEmoji?: boolean
    Latitude?: boolean
    Longitude?: boolean
    HomeWebSiteUrl?: boolean
    WikiUrl?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type AirportOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "ICAO" | "IATA" | "Description" | "Name" | "Size" | "City" | "State" | "CountryCode" | "CountryName" | "CountryEmoji" | "Latitude" | "Longitude" | "HomeWebSiteUrl" | "WikiUrl" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["airport"]>
  export type AirportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AircraftAtAirport?: boolean | Airport$AircraftAtAirportArgs<ExtArgs>
    DepartingFlights?: boolean | Airport$DepartingFlightsArgs<ExtArgs>
    ArrivingFlights?: boolean | Airport$ArrivingFlightsArgs<ExtArgs>
    ArrivingAlternateFlights?: boolean | Airport$ArrivingAlternateFlightsArgs<ExtArgs>
    ArrivingActualFlights?: boolean | Airport$ArrivingActualFlightsArgs<ExtArgs>
    _count?: boolean | AirportCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AirportIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AirportIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AirportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Airport"
    objects: {
      AircraftAtAirport: Prisma.$AircraftPayload<ExtArgs>[]
      DepartingFlights: Prisma.$FlightPayload<ExtArgs>[]
      ArrivingFlights: Prisma.$FlightPayload<ExtArgs>[]
      ArrivingAlternateFlights: Prisma.$FlightPayload<ExtArgs>[]
      ArrivingActualFlights: Prisma.$FlightPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      ICAO: string
      IATA: string | null
      Description: string | null
      Name: string
      Size: number
      City: string | null
      State: string | null
      CountryCode: string | null
      CountryName: string | null
      CountryEmoji: string | null
      Latitude: Prisma.Decimal
      Longitude: Prisma.Decimal
      HomeWebSiteUrl: string | null
      WikiUrl: string | null
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["airport"]>
    composites: {}
  }

  type AirportGetPayload<S extends boolean | null | undefined | AirportDefaultArgs> = $Result.GetResult<Prisma.$AirportPayload, S>

  type AirportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AirportFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AirportCountAggregateInputType | true
    }

  export interface AirportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Airport'], meta: { name: 'Airport' } }
    /**
     * Find zero or one Airport that matches the filter.
     * @param {AirportFindUniqueArgs} args - Arguments to find a Airport
     * @example
     * // Get one Airport
     * const airport = await prisma.airport.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AirportFindUniqueArgs>(args: SelectSubset<T, AirportFindUniqueArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Airport that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AirportFindUniqueOrThrowArgs} args - Arguments to find a Airport
     * @example
     * // Get one Airport
     * const airport = await prisma.airport.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AirportFindUniqueOrThrowArgs>(args: SelectSubset<T, AirportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Airport that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AirportFindFirstArgs} args - Arguments to find a Airport
     * @example
     * // Get one Airport
     * const airport = await prisma.airport.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AirportFindFirstArgs>(args?: SelectSubset<T, AirportFindFirstArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Airport that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AirportFindFirstOrThrowArgs} args - Arguments to find a Airport
     * @example
     * // Get one Airport
     * const airport = await prisma.airport.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AirportFindFirstOrThrowArgs>(args?: SelectSubset<T, AirportFindFirstOrThrowArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Airports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AirportFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Airports
     * const airports = await prisma.airport.findMany()
     * 
     * // Get first 10 Airports
     * const airports = await prisma.airport.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const airportWithIdOnly = await prisma.airport.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends AirportFindManyArgs>(args?: SelectSubset<T, AirportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Airport.
     * @param {AirportCreateArgs} args - Arguments to create a Airport.
     * @example
     * // Create one Airport
     * const Airport = await prisma.airport.create({
     *   data: {
     *     // ... data to create a Airport
     *   }
     * })
     * 
     */
    create<T extends AirportCreateArgs>(args: SelectSubset<T, AirportCreateArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Airports.
     * @param {AirportCreateManyArgs} args - Arguments to create many Airports.
     * @example
     * // Create many Airports
     * const airport = await prisma.airport.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AirportCreateManyArgs>(args?: SelectSubset<T, AirportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Airports and returns the data saved in the database.
     * @param {AirportCreateManyAndReturnArgs} args - Arguments to create many Airports.
     * @example
     * // Create many Airports
     * const airport = await prisma.airport.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Airports and only return the `Id`
     * const airportWithIdOnly = await prisma.airport.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AirportCreateManyAndReturnArgs>(args?: SelectSubset<T, AirportCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Airport.
     * @param {AirportDeleteArgs} args - Arguments to delete one Airport.
     * @example
     * // Delete one Airport
     * const Airport = await prisma.airport.delete({
     *   where: {
     *     // ... filter to delete one Airport
     *   }
     * })
     * 
     */
    delete<T extends AirportDeleteArgs>(args: SelectSubset<T, AirportDeleteArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Airport.
     * @param {AirportUpdateArgs} args - Arguments to update one Airport.
     * @example
     * // Update one Airport
     * const airport = await prisma.airport.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AirportUpdateArgs>(args: SelectSubset<T, AirportUpdateArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Airports.
     * @param {AirportDeleteManyArgs} args - Arguments to filter Airports to delete.
     * @example
     * // Delete a few Airports
     * const { count } = await prisma.airport.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AirportDeleteManyArgs>(args?: SelectSubset<T, AirportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Airports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AirportUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Airports
     * const airport = await prisma.airport.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AirportUpdateManyArgs>(args: SelectSubset<T, AirportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Airports and returns the data updated in the database.
     * @param {AirportUpdateManyAndReturnArgs} args - Arguments to update many Airports.
     * @example
     * // Update many Airports
     * const airport = await prisma.airport.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Airports and only return the `Id`
     * const airportWithIdOnly = await prisma.airport.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AirportUpdateManyAndReturnArgs>(args: SelectSubset<T, AirportUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Airport.
     * @param {AirportUpsertArgs} args - Arguments to update or create a Airport.
     * @example
     * // Update or create a Airport
     * const airport = await prisma.airport.upsert({
     *   create: {
     *     // ... data to create a Airport
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Airport we want to update
     *   }
     * })
     */
    upsert<T extends AirportUpsertArgs>(args: SelectSubset<T, AirportUpsertArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Airports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AirportCountArgs} args - Arguments to filter Airports to count.
     * @example
     * // Count the number of Airports
     * const count = await prisma.airport.count({
     *   where: {
     *     // ... the filter for the Airports we want to count
     *   }
     * })
    **/
    count<T extends AirportCountArgs>(
      args?: Subset<T, AirportCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AirportCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Airport.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AirportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AirportAggregateArgs>(args: Subset<T, AirportAggregateArgs>): Prisma.PrismaPromise<GetAirportAggregateType<T>>

    /**
     * Group by Airport.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AirportGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AirportGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AirportGroupByArgs['orderBy'] }
        : { orderBy?: AirportGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AirportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAirportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Airport model
   */
  readonly fields: AirportFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Airport.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AirportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    AircraftAtAirport<T extends Airport$AircraftAtAirportArgs<ExtArgs> = {}>(args?: Subset<T, Airport$AircraftAtAirportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    DepartingFlights<T extends Airport$DepartingFlightsArgs<ExtArgs> = {}>(args?: Subset<T, Airport$DepartingFlightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ArrivingFlights<T extends Airport$ArrivingFlightsArgs<ExtArgs> = {}>(args?: Subset<T, Airport$ArrivingFlightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ArrivingAlternateFlights<T extends Airport$ArrivingAlternateFlightsArgs<ExtArgs> = {}>(args?: Subset<T, Airport$ArrivingAlternateFlightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ArrivingActualFlights<T extends Airport$ArrivingActualFlightsArgs<ExtArgs> = {}>(args?: Subset<T, Airport$ArrivingActualFlightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Airport model
   */
  interface AirportFieldRefs {
    readonly Id: FieldRef<"Airport", 'String'>
    readonly ICAO: FieldRef<"Airport", 'String'>
    readonly IATA: FieldRef<"Airport", 'String'>
    readonly Description: FieldRef<"Airport", 'String'>
    readonly Name: FieldRef<"Airport", 'String'>
    readonly Size: FieldRef<"Airport", 'Int'>
    readonly City: FieldRef<"Airport", 'String'>
    readonly State: FieldRef<"Airport", 'String'>
    readonly CountryCode: FieldRef<"Airport", 'String'>
    readonly CountryName: FieldRef<"Airport", 'String'>
    readonly CountryEmoji: FieldRef<"Airport", 'String'>
    readonly Latitude: FieldRef<"Airport", 'Decimal'>
    readonly Longitude: FieldRef<"Airport", 'Decimal'>
    readonly HomeWebSiteUrl: FieldRef<"Airport", 'String'>
    readonly WikiUrl: FieldRef<"Airport", 'String'>
    readonly CreatedAt: FieldRef<"Airport", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Airport", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Airport findUnique
   */
  export type AirportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    /**
     * Filter, which Airport to fetch.
     */
    where: AirportWhereUniqueInput
  }

  /**
   * Airport findUniqueOrThrow
   */
  export type AirportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    /**
     * Filter, which Airport to fetch.
     */
    where: AirportWhereUniqueInput
  }

  /**
   * Airport findFirst
   */
  export type AirportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    /**
     * Filter, which Airport to fetch.
     */
    where?: AirportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Airports to fetch.
     */
    orderBy?: AirportOrderByWithRelationInput | AirportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Airports.
     */
    cursor?: AirportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Airports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Airports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Airports.
     */
    distinct?: AirportScalarFieldEnum | AirportScalarFieldEnum[]
  }

  /**
   * Airport findFirstOrThrow
   */
  export type AirportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    /**
     * Filter, which Airport to fetch.
     */
    where?: AirportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Airports to fetch.
     */
    orderBy?: AirportOrderByWithRelationInput | AirportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Airports.
     */
    cursor?: AirportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Airports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Airports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Airports.
     */
    distinct?: AirportScalarFieldEnum | AirportScalarFieldEnum[]
  }

  /**
   * Airport findMany
   */
  export type AirportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    /**
     * Filter, which Airports to fetch.
     */
    where?: AirportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Airports to fetch.
     */
    orderBy?: AirportOrderByWithRelationInput | AirportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Airports.
     */
    cursor?: AirportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Airports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Airports.
     */
    skip?: number
    distinct?: AirportScalarFieldEnum | AirportScalarFieldEnum[]
  }

  /**
   * Airport create
   */
  export type AirportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    /**
     * The data needed to create a Airport.
     */
    data: XOR<AirportCreateInput, AirportUncheckedCreateInput>
  }

  /**
   * Airport createMany
   */
  export type AirportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Airports.
     */
    data: AirportCreateManyInput | AirportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Airport createManyAndReturn
   */
  export type AirportCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * The data used to create many Airports.
     */
    data: AirportCreateManyInput | AirportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Airport update
   */
  export type AirportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    /**
     * The data needed to update a Airport.
     */
    data: XOR<AirportUpdateInput, AirportUncheckedUpdateInput>
    /**
     * Choose, which Airport to update.
     */
    where: AirportWhereUniqueInput
  }

  /**
   * Airport updateMany
   */
  export type AirportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Airports.
     */
    data: XOR<AirportUpdateManyMutationInput, AirportUncheckedUpdateManyInput>
    /**
     * Filter which Airports to update
     */
    where?: AirportWhereInput
    /**
     * Limit how many Airports to update.
     */
    limit?: number
  }

  /**
   * Airport updateManyAndReturn
   */
  export type AirportUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * The data used to update Airports.
     */
    data: XOR<AirportUpdateManyMutationInput, AirportUncheckedUpdateManyInput>
    /**
     * Filter which Airports to update
     */
    where?: AirportWhereInput
    /**
     * Limit how many Airports to update.
     */
    limit?: number
  }

  /**
   * Airport upsert
   */
  export type AirportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    /**
     * The filter to search for the Airport to update in case it exists.
     */
    where: AirportWhereUniqueInput
    /**
     * In case the Airport found by the `where` argument doesn't exist, create a new Airport with this data.
     */
    create: XOR<AirportCreateInput, AirportUncheckedCreateInput>
    /**
     * In case the Airport was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AirportUpdateInput, AirportUncheckedUpdateInput>
  }

  /**
   * Airport delete
   */
  export type AirportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    /**
     * Filter which Airport to delete.
     */
    where: AirportWhereUniqueInput
  }

  /**
   * Airport deleteMany
   */
  export type AirportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Airports to delete
     */
    where?: AirportWhereInput
    /**
     * Limit how many Airports to delete.
     */
    limit?: number
  }

  /**
   * Airport.AircraftAtAirport
   */
  export type Airport$AircraftAtAirportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    where?: AircraftWhereInput
    orderBy?: AircraftOrderByWithRelationInput | AircraftOrderByWithRelationInput[]
    cursor?: AircraftWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AircraftScalarFieldEnum | AircraftScalarFieldEnum[]
  }

  /**
   * Airport.DepartingFlights
   */
  export type Airport$DepartingFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    where?: FlightWhereInput
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    cursor?: FlightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * Airport.ArrivingFlights
   */
  export type Airport$ArrivingFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    where?: FlightWhereInput
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    cursor?: FlightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * Airport.ArrivingAlternateFlights
   */
  export type Airport$ArrivingAlternateFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    where?: FlightWhereInput
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    cursor?: FlightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * Airport.ArrivingActualFlights
   */
  export type Airport$ArrivingActualFlightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    where?: FlightWhereInput
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    cursor?: FlightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * Airport without action
   */
  export type AirportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
  }


  /**
   * Model Flight
   */

  export type AggregateFlight = {
    _count: FlightCountAggregateOutputType | null
    _avg: FlightAvgAggregateOutputType | null
    _sum: FlightSumAggregateOutputType | null
    _min: FlightMinAggregateOutputType | null
    _max: FlightMaxAggregateOutputType | null
  }

  export type FlightAvgAggregateOutputType = {
    Category: number | null
    IntendedFlightLevel: number | null
    Passengers: number | null
    Cargo: number | null
    AddedFuelQty: Decimal | null
    VerticalSpeedAtTouchdownMpS: Decimal | null
    MaxGForce: Decimal | null
    MinGForce: Decimal | null
    MaxBank: Decimal | null
    MaxPitch: Decimal | null
    XPFlight: number | null
    XPFlightBonus: Decimal | null
    XPMissions: number | null
    CargosTotalWeight: Decimal | null
    PAXCount: number | null
    AircraftCurrentFOB: Decimal | null
    AircraftCurrentAltitude: Decimal | null
    ActualCruiseAltitude: Decimal | null
    ActualConsumptionAtCruiseLevelInLbsPerHour: Decimal | null
    ActualTotalFuelConsumptionInLbs: Decimal | null
    ActualConsumptionAtCruiseLevelInGalPerHour: Decimal | null
    ActualTASAtCruiseLevel: Decimal | null
    ActualCruiseTimeInMinutes: Decimal | null
    ActualPressureAltitude: Decimal | null
    RegisterState: number | null
    TimeOffset: Decimal | null
    StartLatitude: Decimal | null
    StartLongitude: Decimal | null
    StartHeading: Decimal | null
    Score: Decimal | null
  }

  export type FlightSumAggregateOutputType = {
    Category: number | null
    IntendedFlightLevel: number | null
    Passengers: number | null
    Cargo: number | null
    AddedFuelQty: Decimal | null
    VerticalSpeedAtTouchdownMpS: Decimal | null
    MaxGForce: Decimal | null
    MinGForce: Decimal | null
    MaxBank: Decimal | null
    MaxPitch: Decimal | null
    XPFlight: number | null
    XPFlightBonus: Decimal | null
    XPMissions: number | null
    CargosTotalWeight: Decimal | null
    PAXCount: number | null
    AircraftCurrentFOB: Decimal | null
    AircraftCurrentAltitude: Decimal | null
    ActualCruiseAltitude: Decimal | null
    ActualConsumptionAtCruiseLevelInLbsPerHour: Decimal | null
    ActualTotalFuelConsumptionInLbs: Decimal | null
    ActualConsumptionAtCruiseLevelInGalPerHour: Decimal | null
    ActualTASAtCruiseLevel: Decimal | null
    ActualCruiseTimeInMinutes: Decimal | null
    ActualPressureAltitude: Decimal | null
    RegisterState: number | null
    TimeOffset: Decimal | null
    StartLatitude: Decimal | null
    StartLongitude: Decimal | null
    StartHeading: Decimal | null
    Score: Decimal | null
  }

  export type FlightMinAggregateOutputType = {
    Id: string | null
    AircraftId: string | null
    CompanyId: string | null
    Registered: boolean | null
    Category: number | null
    ResultComments: string | null
    StartTime: Date | null
    EndTime: Date | null
    EngineOnTime: Date | null
    EngineOffTime: Date | null
    AirborneTime: Date | null
    LandedTime: Date | null
    IntendedFlightLevel: number | null
    Passengers: number | null
    Cargo: number | null
    AddedFuelQty: Decimal | null
    IsAI: boolean | null
    VerticalSpeedAtTouchdownMpS: Decimal | null
    MaxGForce: Decimal | null
    MinGForce: Decimal | null
    MaxBank: Decimal | null
    MaxPitch: Decimal | null
    HasStalled: boolean | null
    HasOverspeeded: boolean | null
    XPFlight: number | null
    XPFlightBonus: Decimal | null
    XPMissions: number | null
    CargosTotalWeight: Decimal | null
    PAXCount: number | null
    AircraftCurrentFOB: Decimal | null
    AircraftCurrentAltitude: Decimal | null
    ActualCruiseAltitude: Decimal | null
    ActualConsumptionAtCruiseLevelInLbsPerHour: Decimal | null
    ActualTotalFuelConsumptionInLbs: Decimal | null
    ActualConsumptionAtCruiseLevelInGalPerHour: Decimal | null
    ActualTASAtCruiseLevel: Decimal | null
    ActualCruiseTimeInMinutes: Decimal | null
    ActualPressureAltitude: Decimal | null
    RegisterState: number | null
    WrongFuelDetected: boolean | null
    WrongWeightDetected: boolean | null
    TimeOffset: Decimal | null
    StartLatitude: Decimal | null
    StartLongitude: Decimal | null
    StartHeading: Decimal | null
    UseFreelanceRouteSchedule: boolean | null
    RestCrewAfterWarp: boolean | null
    Score: Decimal | null
    CanResumeOrAbort: boolean | null
    EngineOnRealTime: Date | null
    EngineOffRealTime: Date | null
    LandedRealTime: Date | null
    AirborneRealTime: Date | null
    DepartureAirportId: string | null
    ArrivalIntendedAirportId: string | null
    ArrivalAlternateAirportId: string | null
    ArrivalActualAirportId: string | null
    VAId: string | null
    MemberId: string | null
    LastRefresh: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    FlightStatus: $Enums.FlightStatus | null
  }

  export type FlightMaxAggregateOutputType = {
    Id: string | null
    AircraftId: string | null
    CompanyId: string | null
    Registered: boolean | null
    Category: number | null
    ResultComments: string | null
    StartTime: Date | null
    EndTime: Date | null
    EngineOnTime: Date | null
    EngineOffTime: Date | null
    AirborneTime: Date | null
    LandedTime: Date | null
    IntendedFlightLevel: number | null
    Passengers: number | null
    Cargo: number | null
    AddedFuelQty: Decimal | null
    IsAI: boolean | null
    VerticalSpeedAtTouchdownMpS: Decimal | null
    MaxGForce: Decimal | null
    MinGForce: Decimal | null
    MaxBank: Decimal | null
    MaxPitch: Decimal | null
    HasStalled: boolean | null
    HasOverspeeded: boolean | null
    XPFlight: number | null
    XPFlightBonus: Decimal | null
    XPMissions: number | null
    CargosTotalWeight: Decimal | null
    PAXCount: number | null
    AircraftCurrentFOB: Decimal | null
    AircraftCurrentAltitude: Decimal | null
    ActualCruiseAltitude: Decimal | null
    ActualConsumptionAtCruiseLevelInLbsPerHour: Decimal | null
    ActualTotalFuelConsumptionInLbs: Decimal | null
    ActualConsumptionAtCruiseLevelInGalPerHour: Decimal | null
    ActualTASAtCruiseLevel: Decimal | null
    ActualCruiseTimeInMinutes: Decimal | null
    ActualPressureAltitude: Decimal | null
    RegisterState: number | null
    WrongFuelDetected: boolean | null
    WrongWeightDetected: boolean | null
    TimeOffset: Decimal | null
    StartLatitude: Decimal | null
    StartLongitude: Decimal | null
    StartHeading: Decimal | null
    UseFreelanceRouteSchedule: boolean | null
    RestCrewAfterWarp: boolean | null
    Score: Decimal | null
    CanResumeOrAbort: boolean | null
    EngineOnRealTime: Date | null
    EngineOffRealTime: Date | null
    LandedRealTime: Date | null
    AirborneRealTime: Date | null
    DepartureAirportId: string | null
    ArrivalIntendedAirportId: string | null
    ArrivalAlternateAirportId: string | null
    ArrivalActualAirportId: string | null
    VAId: string | null
    MemberId: string | null
    LastRefresh: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    FlightStatus: $Enums.FlightStatus | null
  }

  export type FlightCountAggregateOutputType = {
    Id: number
    AircraftId: number
    CompanyId: number
    Registered: number
    Category: number
    ResultComments: number
    StartTime: number
    EndTime: number
    EngineOnTime: number
    EngineOffTime: number
    AirborneTime: number
    LandedTime: number
    IntendedFlightLevel: number
    Passengers: number
    Cargo: number
    AddedFuelQty: number
    IsAI: number
    VerticalSpeedAtTouchdownMpS: number
    MaxGForce: number
    MinGForce: number
    MaxBank: number
    MaxPitch: number
    HasStalled: number
    HasOverspeeded: number
    XPFlight: number
    XPFlightBonus: number
    XPMissions: number
    CargosTotalWeight: number
    PAXCount: number
    AircraftCurrentFOB: number
    AircraftCurrentAltitude: number
    ActualCruiseAltitude: number
    ActualConsumptionAtCruiseLevelInLbsPerHour: number
    ActualTotalFuelConsumptionInLbs: number
    ActualConsumptionAtCruiseLevelInGalPerHour: number
    ActualTASAtCruiseLevel: number
    ActualCruiseTimeInMinutes: number
    ActualPressureAltitude: number
    RegisterState: number
    WrongFuelDetected: number
    WrongWeightDetected: number
    TimeOffset: number
    StartLatitude: number
    StartLongitude: number
    StartHeading: number
    UseFreelanceRouteSchedule: number
    RestCrewAfterWarp: number
    Score: number
    CanResumeOrAbort: number
    EngineOnRealTime: number
    EngineOffRealTime: number
    LandedRealTime: number
    AirborneRealTime: number
    DepartureAirportId: number
    ArrivalIntendedAirportId: number
    ArrivalAlternateAirportId: number
    ArrivalActualAirportId: number
    VAId: number
    MemberId: number
    LastRefresh: number
    CreatedAt: number
    UpdatedAt: number
    FlightStatus: number
    _all: number
  }


  export type FlightAvgAggregateInputType = {
    Category?: true
    IntendedFlightLevel?: true
    Passengers?: true
    Cargo?: true
    AddedFuelQty?: true
    VerticalSpeedAtTouchdownMpS?: true
    MaxGForce?: true
    MinGForce?: true
    MaxBank?: true
    MaxPitch?: true
    XPFlight?: true
    XPFlightBonus?: true
    XPMissions?: true
    CargosTotalWeight?: true
    PAXCount?: true
    AircraftCurrentFOB?: true
    AircraftCurrentAltitude?: true
    ActualCruiseAltitude?: true
    ActualConsumptionAtCruiseLevelInLbsPerHour?: true
    ActualTotalFuelConsumptionInLbs?: true
    ActualConsumptionAtCruiseLevelInGalPerHour?: true
    ActualTASAtCruiseLevel?: true
    ActualCruiseTimeInMinutes?: true
    ActualPressureAltitude?: true
    RegisterState?: true
    TimeOffset?: true
    StartLatitude?: true
    StartLongitude?: true
    StartHeading?: true
    Score?: true
  }

  export type FlightSumAggregateInputType = {
    Category?: true
    IntendedFlightLevel?: true
    Passengers?: true
    Cargo?: true
    AddedFuelQty?: true
    VerticalSpeedAtTouchdownMpS?: true
    MaxGForce?: true
    MinGForce?: true
    MaxBank?: true
    MaxPitch?: true
    XPFlight?: true
    XPFlightBonus?: true
    XPMissions?: true
    CargosTotalWeight?: true
    PAXCount?: true
    AircraftCurrentFOB?: true
    AircraftCurrentAltitude?: true
    ActualCruiseAltitude?: true
    ActualConsumptionAtCruiseLevelInLbsPerHour?: true
    ActualTotalFuelConsumptionInLbs?: true
    ActualConsumptionAtCruiseLevelInGalPerHour?: true
    ActualTASAtCruiseLevel?: true
    ActualCruiseTimeInMinutes?: true
    ActualPressureAltitude?: true
    RegisterState?: true
    TimeOffset?: true
    StartLatitude?: true
    StartLongitude?: true
    StartHeading?: true
    Score?: true
  }

  export type FlightMinAggregateInputType = {
    Id?: true
    AircraftId?: true
    CompanyId?: true
    Registered?: true
    Category?: true
    ResultComments?: true
    StartTime?: true
    EndTime?: true
    EngineOnTime?: true
    EngineOffTime?: true
    AirborneTime?: true
    LandedTime?: true
    IntendedFlightLevel?: true
    Passengers?: true
    Cargo?: true
    AddedFuelQty?: true
    IsAI?: true
    VerticalSpeedAtTouchdownMpS?: true
    MaxGForce?: true
    MinGForce?: true
    MaxBank?: true
    MaxPitch?: true
    HasStalled?: true
    HasOverspeeded?: true
    XPFlight?: true
    XPFlightBonus?: true
    XPMissions?: true
    CargosTotalWeight?: true
    PAXCount?: true
    AircraftCurrentFOB?: true
    AircraftCurrentAltitude?: true
    ActualCruiseAltitude?: true
    ActualConsumptionAtCruiseLevelInLbsPerHour?: true
    ActualTotalFuelConsumptionInLbs?: true
    ActualConsumptionAtCruiseLevelInGalPerHour?: true
    ActualTASAtCruiseLevel?: true
    ActualCruiseTimeInMinutes?: true
    ActualPressureAltitude?: true
    RegisterState?: true
    WrongFuelDetected?: true
    WrongWeightDetected?: true
    TimeOffset?: true
    StartLatitude?: true
    StartLongitude?: true
    StartHeading?: true
    UseFreelanceRouteSchedule?: true
    RestCrewAfterWarp?: true
    Score?: true
    CanResumeOrAbort?: true
    EngineOnRealTime?: true
    EngineOffRealTime?: true
    LandedRealTime?: true
    AirborneRealTime?: true
    DepartureAirportId?: true
    ArrivalIntendedAirportId?: true
    ArrivalAlternateAirportId?: true
    ArrivalActualAirportId?: true
    VAId?: true
    MemberId?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
    FlightStatus?: true
  }

  export type FlightMaxAggregateInputType = {
    Id?: true
    AircraftId?: true
    CompanyId?: true
    Registered?: true
    Category?: true
    ResultComments?: true
    StartTime?: true
    EndTime?: true
    EngineOnTime?: true
    EngineOffTime?: true
    AirborneTime?: true
    LandedTime?: true
    IntendedFlightLevel?: true
    Passengers?: true
    Cargo?: true
    AddedFuelQty?: true
    IsAI?: true
    VerticalSpeedAtTouchdownMpS?: true
    MaxGForce?: true
    MinGForce?: true
    MaxBank?: true
    MaxPitch?: true
    HasStalled?: true
    HasOverspeeded?: true
    XPFlight?: true
    XPFlightBonus?: true
    XPMissions?: true
    CargosTotalWeight?: true
    PAXCount?: true
    AircraftCurrentFOB?: true
    AircraftCurrentAltitude?: true
    ActualCruiseAltitude?: true
    ActualConsumptionAtCruiseLevelInLbsPerHour?: true
    ActualTotalFuelConsumptionInLbs?: true
    ActualConsumptionAtCruiseLevelInGalPerHour?: true
    ActualTASAtCruiseLevel?: true
    ActualCruiseTimeInMinutes?: true
    ActualPressureAltitude?: true
    RegisterState?: true
    WrongFuelDetected?: true
    WrongWeightDetected?: true
    TimeOffset?: true
    StartLatitude?: true
    StartLongitude?: true
    StartHeading?: true
    UseFreelanceRouteSchedule?: true
    RestCrewAfterWarp?: true
    Score?: true
    CanResumeOrAbort?: true
    EngineOnRealTime?: true
    EngineOffRealTime?: true
    LandedRealTime?: true
    AirborneRealTime?: true
    DepartureAirportId?: true
    ArrivalIntendedAirportId?: true
    ArrivalAlternateAirportId?: true
    ArrivalActualAirportId?: true
    VAId?: true
    MemberId?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
    FlightStatus?: true
  }

  export type FlightCountAggregateInputType = {
    Id?: true
    AircraftId?: true
    CompanyId?: true
    Registered?: true
    Category?: true
    ResultComments?: true
    StartTime?: true
    EndTime?: true
    EngineOnTime?: true
    EngineOffTime?: true
    AirborneTime?: true
    LandedTime?: true
    IntendedFlightLevel?: true
    Passengers?: true
    Cargo?: true
    AddedFuelQty?: true
    IsAI?: true
    VerticalSpeedAtTouchdownMpS?: true
    MaxGForce?: true
    MinGForce?: true
    MaxBank?: true
    MaxPitch?: true
    HasStalled?: true
    HasOverspeeded?: true
    XPFlight?: true
    XPFlightBonus?: true
    XPMissions?: true
    CargosTotalWeight?: true
    PAXCount?: true
    AircraftCurrentFOB?: true
    AircraftCurrentAltitude?: true
    ActualCruiseAltitude?: true
    ActualConsumptionAtCruiseLevelInLbsPerHour?: true
    ActualTotalFuelConsumptionInLbs?: true
    ActualConsumptionAtCruiseLevelInGalPerHour?: true
    ActualTASAtCruiseLevel?: true
    ActualCruiseTimeInMinutes?: true
    ActualPressureAltitude?: true
    RegisterState?: true
    WrongFuelDetected?: true
    WrongWeightDetected?: true
    TimeOffset?: true
    StartLatitude?: true
    StartLongitude?: true
    StartHeading?: true
    UseFreelanceRouteSchedule?: true
    RestCrewAfterWarp?: true
    Score?: true
    CanResumeOrAbort?: true
    EngineOnRealTime?: true
    EngineOffRealTime?: true
    LandedRealTime?: true
    AirborneRealTime?: true
    DepartureAirportId?: true
    ArrivalIntendedAirportId?: true
    ArrivalAlternateAirportId?: true
    ArrivalActualAirportId?: true
    VAId?: true
    MemberId?: true
    LastRefresh?: true
    CreatedAt?: true
    UpdatedAt?: true
    FlightStatus?: true
    _all?: true
  }

  export type FlightAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Flight to aggregate.
     */
    where?: FlightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Flights to fetch.
     */
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FlightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Flights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Flights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Flights
    **/
    _count?: true | FlightCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FlightAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FlightSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FlightMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FlightMaxAggregateInputType
  }

  export type GetFlightAggregateType<T extends FlightAggregateArgs> = {
        [P in keyof T & keyof AggregateFlight]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFlight[P]>
      : GetScalarType<T[P], AggregateFlight[P]>
  }




  export type FlightGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightWhereInput
    orderBy?: FlightOrderByWithAggregationInput | FlightOrderByWithAggregationInput[]
    by: FlightScalarFieldEnum[] | FlightScalarFieldEnum
    having?: FlightScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FlightCountAggregateInputType | true
    _avg?: FlightAvgAggregateInputType
    _sum?: FlightSumAggregateInputType
    _min?: FlightMinAggregateInputType
    _max?: FlightMaxAggregateInputType
  }

  export type FlightGroupByOutputType = {
    Id: string
    AircraftId: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime: Date | null
    EndTime: Date | null
    EngineOnTime: Date | null
    EngineOffTime: Date | null
    AirborneTime: Date | null
    LandedTime: Date | null
    IntendedFlightLevel: number | null
    Passengers: number | null
    Cargo: number | null
    AddedFuelQty: Decimal | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS: Decimal | null
    MaxGForce: Decimal | null
    MinGForce: Decimal | null
    MaxBank: Decimal | null
    MaxPitch: Decimal | null
    HasStalled: boolean
    HasOverspeeded: boolean
    XPFlight: number | null
    XPFlightBonus: Decimal | null
    XPMissions: number | null
    CargosTotalWeight: Decimal | null
    PAXCount: number | null
    AircraftCurrentFOB: Decimal | null
    AircraftCurrentAltitude: Decimal | null
    ActualCruiseAltitude: Decimal | null
    ActualConsumptionAtCruiseLevelInLbsPerHour: Decimal | null
    ActualTotalFuelConsumptionInLbs: Decimal | null
    ActualConsumptionAtCruiseLevelInGalPerHour: Decimal | null
    ActualTASAtCruiseLevel: Decimal | null
    ActualCruiseTimeInMinutes: Decimal | null
    ActualPressureAltitude: Decimal | null
    RegisterState: number | null
    WrongFuelDetected: boolean
    WrongWeightDetected: boolean
    TimeOffset: Decimal | null
    StartLatitude: Decimal | null
    StartLongitude: Decimal | null
    StartHeading: Decimal | null
    UseFreelanceRouteSchedule: boolean
    RestCrewAfterWarp: boolean
    Score: Decimal | null
    CanResumeOrAbort: boolean
    EngineOnRealTime: Date | null
    EngineOffRealTime: Date | null
    LandedRealTime: Date | null
    AirborneRealTime: Date | null
    DepartureAirportId: string | null
    ArrivalIntendedAirportId: string | null
    ArrivalAlternateAirportId: string | null
    ArrivalActualAirportId: string | null
    VAId: string | null
    MemberId: string | null
    LastRefresh: Date | null
    CreatedAt: Date
    UpdatedAt: Date
    FlightStatus: $Enums.FlightStatus
    _count: FlightCountAggregateOutputType | null
    _avg: FlightAvgAggregateOutputType | null
    _sum: FlightSumAggregateOutputType | null
    _min: FlightMinAggregateOutputType | null
    _max: FlightMaxAggregateOutputType | null
  }

  type GetFlightGroupByPayload<T extends FlightGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FlightGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FlightGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FlightGroupByOutputType[P]>
            : GetScalarType<T[P], FlightGroupByOutputType[P]>
        }
      >
    >


  export type FlightSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    AircraftId?: boolean
    CompanyId?: boolean
    Registered?: boolean
    Category?: boolean
    ResultComments?: boolean
    StartTime?: boolean
    EndTime?: boolean
    EngineOnTime?: boolean
    EngineOffTime?: boolean
    AirborneTime?: boolean
    LandedTime?: boolean
    IntendedFlightLevel?: boolean
    Passengers?: boolean
    Cargo?: boolean
    AddedFuelQty?: boolean
    IsAI?: boolean
    VerticalSpeedAtTouchdownMpS?: boolean
    MaxGForce?: boolean
    MinGForce?: boolean
    MaxBank?: boolean
    MaxPitch?: boolean
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: boolean
    XPFlightBonus?: boolean
    XPMissions?: boolean
    CargosTotalWeight?: boolean
    PAXCount?: boolean
    AircraftCurrentFOB?: boolean
    AircraftCurrentAltitude?: boolean
    ActualCruiseAltitude?: boolean
    ActualConsumptionAtCruiseLevelInLbsPerHour?: boolean
    ActualTotalFuelConsumptionInLbs?: boolean
    ActualConsumptionAtCruiseLevelInGalPerHour?: boolean
    ActualTASAtCruiseLevel?: boolean
    ActualCruiseTimeInMinutes?: boolean
    ActualPressureAltitude?: boolean
    RegisterState?: boolean
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: boolean
    StartLatitude?: boolean
    StartLongitude?: boolean
    StartHeading?: boolean
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: boolean
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: boolean
    EngineOffRealTime?: boolean
    LandedRealTime?: boolean
    AirborneRealTime?: boolean
    DepartureAirportId?: boolean
    ArrivalIntendedAirportId?: boolean
    ArrivalAlternateAirportId?: boolean
    ArrivalActualAirportId?: boolean
    VAId?: boolean
    MemberId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    FlightStatus?: boolean
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | Flight$VirtualAirlineArgs<ExtArgs>
    Aircraft?: boolean | Flight$AircraftArgs<ExtArgs>
    FlightRoute?: boolean | Flight$FlightRouteArgs<ExtArgs>
    DepartureAirport?: boolean | Flight$DepartureAirportArgs<ExtArgs>
    ArrivalIntendedAirport?: boolean | Flight$ArrivalIntendedAirportArgs<ExtArgs>
    ArrivalAlternateAirport?: boolean | Flight$ArrivalAlternateAirportArgs<ExtArgs>
    ArrivalActualAirport?: boolean | Flight$ArrivalActualAirportArgs<ExtArgs>
    Member?: boolean | Flight$MemberArgs<ExtArgs>
    _count?: boolean | FlightCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["flight"]>

  export type FlightSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    AircraftId?: boolean
    CompanyId?: boolean
    Registered?: boolean
    Category?: boolean
    ResultComments?: boolean
    StartTime?: boolean
    EndTime?: boolean
    EngineOnTime?: boolean
    EngineOffTime?: boolean
    AirborneTime?: boolean
    LandedTime?: boolean
    IntendedFlightLevel?: boolean
    Passengers?: boolean
    Cargo?: boolean
    AddedFuelQty?: boolean
    IsAI?: boolean
    VerticalSpeedAtTouchdownMpS?: boolean
    MaxGForce?: boolean
    MinGForce?: boolean
    MaxBank?: boolean
    MaxPitch?: boolean
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: boolean
    XPFlightBonus?: boolean
    XPMissions?: boolean
    CargosTotalWeight?: boolean
    PAXCount?: boolean
    AircraftCurrentFOB?: boolean
    AircraftCurrentAltitude?: boolean
    ActualCruiseAltitude?: boolean
    ActualConsumptionAtCruiseLevelInLbsPerHour?: boolean
    ActualTotalFuelConsumptionInLbs?: boolean
    ActualConsumptionAtCruiseLevelInGalPerHour?: boolean
    ActualTASAtCruiseLevel?: boolean
    ActualCruiseTimeInMinutes?: boolean
    ActualPressureAltitude?: boolean
    RegisterState?: boolean
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: boolean
    StartLatitude?: boolean
    StartLongitude?: boolean
    StartHeading?: boolean
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: boolean
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: boolean
    EngineOffRealTime?: boolean
    LandedRealTime?: boolean
    AirborneRealTime?: boolean
    DepartureAirportId?: boolean
    ArrivalIntendedAirportId?: boolean
    ArrivalAlternateAirportId?: boolean
    ArrivalActualAirportId?: boolean
    VAId?: boolean
    MemberId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    FlightStatus?: boolean
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | Flight$VirtualAirlineArgs<ExtArgs>
    Aircraft?: boolean | Flight$AircraftArgs<ExtArgs>
    DepartureAirport?: boolean | Flight$DepartureAirportArgs<ExtArgs>
    ArrivalIntendedAirport?: boolean | Flight$ArrivalIntendedAirportArgs<ExtArgs>
    ArrivalAlternateAirport?: boolean | Flight$ArrivalAlternateAirportArgs<ExtArgs>
    ArrivalActualAirport?: boolean | Flight$ArrivalActualAirportArgs<ExtArgs>
    Member?: boolean | Flight$MemberArgs<ExtArgs>
  }, ExtArgs["result"]["flight"]>

  export type FlightSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    AircraftId?: boolean
    CompanyId?: boolean
    Registered?: boolean
    Category?: boolean
    ResultComments?: boolean
    StartTime?: boolean
    EndTime?: boolean
    EngineOnTime?: boolean
    EngineOffTime?: boolean
    AirborneTime?: boolean
    LandedTime?: boolean
    IntendedFlightLevel?: boolean
    Passengers?: boolean
    Cargo?: boolean
    AddedFuelQty?: boolean
    IsAI?: boolean
    VerticalSpeedAtTouchdownMpS?: boolean
    MaxGForce?: boolean
    MinGForce?: boolean
    MaxBank?: boolean
    MaxPitch?: boolean
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: boolean
    XPFlightBonus?: boolean
    XPMissions?: boolean
    CargosTotalWeight?: boolean
    PAXCount?: boolean
    AircraftCurrentFOB?: boolean
    AircraftCurrentAltitude?: boolean
    ActualCruiseAltitude?: boolean
    ActualConsumptionAtCruiseLevelInLbsPerHour?: boolean
    ActualTotalFuelConsumptionInLbs?: boolean
    ActualConsumptionAtCruiseLevelInGalPerHour?: boolean
    ActualTASAtCruiseLevel?: boolean
    ActualCruiseTimeInMinutes?: boolean
    ActualPressureAltitude?: boolean
    RegisterState?: boolean
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: boolean
    StartLatitude?: boolean
    StartLongitude?: boolean
    StartHeading?: boolean
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: boolean
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: boolean
    EngineOffRealTime?: boolean
    LandedRealTime?: boolean
    AirborneRealTime?: boolean
    DepartureAirportId?: boolean
    ArrivalIntendedAirportId?: boolean
    ArrivalAlternateAirportId?: boolean
    ArrivalActualAirportId?: boolean
    VAId?: boolean
    MemberId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    FlightStatus?: boolean
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | Flight$VirtualAirlineArgs<ExtArgs>
    Aircraft?: boolean | Flight$AircraftArgs<ExtArgs>
    DepartureAirport?: boolean | Flight$DepartureAirportArgs<ExtArgs>
    ArrivalIntendedAirport?: boolean | Flight$ArrivalIntendedAirportArgs<ExtArgs>
    ArrivalAlternateAirport?: boolean | Flight$ArrivalAlternateAirportArgs<ExtArgs>
    ArrivalActualAirport?: boolean | Flight$ArrivalActualAirportArgs<ExtArgs>
    Member?: boolean | Flight$MemberArgs<ExtArgs>
  }, ExtArgs["result"]["flight"]>

  export type FlightSelectScalar = {
    Id?: boolean
    AircraftId?: boolean
    CompanyId?: boolean
    Registered?: boolean
    Category?: boolean
    ResultComments?: boolean
    StartTime?: boolean
    EndTime?: boolean
    EngineOnTime?: boolean
    EngineOffTime?: boolean
    AirborneTime?: boolean
    LandedTime?: boolean
    IntendedFlightLevel?: boolean
    Passengers?: boolean
    Cargo?: boolean
    AddedFuelQty?: boolean
    IsAI?: boolean
    VerticalSpeedAtTouchdownMpS?: boolean
    MaxGForce?: boolean
    MinGForce?: boolean
    MaxBank?: boolean
    MaxPitch?: boolean
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: boolean
    XPFlightBonus?: boolean
    XPMissions?: boolean
    CargosTotalWeight?: boolean
    PAXCount?: boolean
    AircraftCurrentFOB?: boolean
    AircraftCurrentAltitude?: boolean
    ActualCruiseAltitude?: boolean
    ActualConsumptionAtCruiseLevelInLbsPerHour?: boolean
    ActualTotalFuelConsumptionInLbs?: boolean
    ActualConsumptionAtCruiseLevelInGalPerHour?: boolean
    ActualTASAtCruiseLevel?: boolean
    ActualCruiseTimeInMinutes?: boolean
    ActualPressureAltitude?: boolean
    RegisterState?: boolean
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: boolean
    StartLatitude?: boolean
    StartLongitude?: boolean
    StartHeading?: boolean
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: boolean
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: boolean
    EngineOffRealTime?: boolean
    LandedRealTime?: boolean
    AirborneRealTime?: boolean
    DepartureAirportId?: boolean
    ArrivalIntendedAirportId?: boolean
    ArrivalAlternateAirportId?: boolean
    ArrivalActualAirportId?: boolean
    VAId?: boolean
    MemberId?: boolean
    LastRefresh?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    FlightStatus?: boolean
  }

  export type FlightOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "AircraftId" | "CompanyId" | "Registered" | "Category" | "ResultComments" | "StartTime" | "EndTime" | "EngineOnTime" | "EngineOffTime" | "AirborneTime" | "LandedTime" | "IntendedFlightLevel" | "Passengers" | "Cargo" | "AddedFuelQty" | "IsAI" | "VerticalSpeedAtTouchdownMpS" | "MaxGForce" | "MinGForce" | "MaxBank" | "MaxPitch" | "HasStalled" | "HasOverspeeded" | "XPFlight" | "XPFlightBonus" | "XPMissions" | "CargosTotalWeight" | "PAXCount" | "AircraftCurrentFOB" | "AircraftCurrentAltitude" | "ActualCruiseAltitude" | "ActualConsumptionAtCruiseLevelInLbsPerHour" | "ActualTotalFuelConsumptionInLbs" | "ActualConsumptionAtCruiseLevelInGalPerHour" | "ActualTASAtCruiseLevel" | "ActualCruiseTimeInMinutes" | "ActualPressureAltitude" | "RegisterState" | "WrongFuelDetected" | "WrongWeightDetected" | "TimeOffset" | "StartLatitude" | "StartLongitude" | "StartHeading" | "UseFreelanceRouteSchedule" | "RestCrewAfterWarp" | "Score" | "CanResumeOrAbort" | "EngineOnRealTime" | "EngineOffRealTime" | "LandedRealTime" | "AirborneRealTime" | "DepartureAirportId" | "ArrivalIntendedAirportId" | "ArrivalAlternateAirportId" | "ArrivalActualAirportId" | "VAId" | "MemberId" | "LastRefresh" | "CreatedAt" | "UpdatedAt" | "FlightStatus", ExtArgs["result"]["flight"]>
  export type FlightInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | Flight$VirtualAirlineArgs<ExtArgs>
    Aircraft?: boolean | Flight$AircraftArgs<ExtArgs>
    FlightRoute?: boolean | Flight$FlightRouteArgs<ExtArgs>
    DepartureAirport?: boolean | Flight$DepartureAirportArgs<ExtArgs>
    ArrivalIntendedAirport?: boolean | Flight$ArrivalIntendedAirportArgs<ExtArgs>
    ArrivalAlternateAirport?: boolean | Flight$ArrivalAlternateAirportArgs<ExtArgs>
    ArrivalActualAirport?: boolean | Flight$ArrivalActualAirportArgs<ExtArgs>
    Member?: boolean | Flight$MemberArgs<ExtArgs>
    _count?: boolean | FlightCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FlightIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | Flight$VirtualAirlineArgs<ExtArgs>
    Aircraft?: boolean | Flight$AircraftArgs<ExtArgs>
    DepartureAirport?: boolean | Flight$DepartureAirportArgs<ExtArgs>
    ArrivalIntendedAirport?: boolean | Flight$ArrivalIntendedAirportArgs<ExtArgs>
    ArrivalAlternateAirport?: boolean | Flight$ArrivalAlternateAirportArgs<ExtArgs>
    ArrivalActualAirport?: boolean | Flight$ArrivalActualAirportArgs<ExtArgs>
    Member?: boolean | Flight$MemberArgs<ExtArgs>
  }
  export type FlightIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Company?: boolean | CompanyDefaultArgs<ExtArgs>
    VirtualAirline?: boolean | Flight$VirtualAirlineArgs<ExtArgs>
    Aircraft?: boolean | Flight$AircraftArgs<ExtArgs>
    DepartureAirport?: boolean | Flight$DepartureAirportArgs<ExtArgs>
    ArrivalIntendedAirport?: boolean | Flight$ArrivalIntendedAirportArgs<ExtArgs>
    ArrivalAlternateAirport?: boolean | Flight$ArrivalAlternateAirportArgs<ExtArgs>
    ArrivalActualAirport?: boolean | Flight$ArrivalActualAirportArgs<ExtArgs>
    Member?: boolean | Flight$MemberArgs<ExtArgs>
  }

  export type $FlightPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Flight"
    objects: {
      Company: Prisma.$CompanyPayload<ExtArgs>
      VirtualAirline: Prisma.$VirtualAirlinePayload<ExtArgs> | null
      Aircraft: Prisma.$AircraftPayload<ExtArgs> | null
      FlightRoute: Prisma.$FlightRoutePayload<ExtArgs>[]
      DepartureAirport: Prisma.$AirportPayload<ExtArgs> | null
      ArrivalIntendedAirport: Prisma.$AirportPayload<ExtArgs> | null
      ArrivalAlternateAirport: Prisma.$AirportPayload<ExtArgs> | null
      ArrivalActualAirport: Prisma.$AirportPayload<ExtArgs> | null
      Member: Prisma.$MemberPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      AircraftId: string | null
      CompanyId: string
      Registered: boolean
      Category: number
      ResultComments: string
      StartTime: Date | null
      EndTime: Date | null
      EngineOnTime: Date | null
      EngineOffTime: Date | null
      AirborneTime: Date | null
      LandedTime: Date | null
      IntendedFlightLevel: number | null
      Passengers: number | null
      Cargo: number | null
      AddedFuelQty: Prisma.Decimal | null
      IsAI: boolean
      VerticalSpeedAtTouchdownMpS: Prisma.Decimal | null
      MaxGForce: Prisma.Decimal | null
      MinGForce: Prisma.Decimal | null
      MaxBank: Prisma.Decimal | null
      MaxPitch: Prisma.Decimal | null
      HasStalled: boolean
      HasOverspeeded: boolean
      XPFlight: number | null
      XPFlightBonus: Prisma.Decimal | null
      XPMissions: number | null
      CargosTotalWeight: Prisma.Decimal | null
      PAXCount: number | null
      AircraftCurrentFOB: Prisma.Decimal | null
      AircraftCurrentAltitude: Prisma.Decimal | null
      ActualCruiseAltitude: Prisma.Decimal | null
      ActualConsumptionAtCruiseLevelInLbsPerHour: Prisma.Decimal | null
      ActualTotalFuelConsumptionInLbs: Prisma.Decimal | null
      ActualConsumptionAtCruiseLevelInGalPerHour: Prisma.Decimal | null
      ActualTASAtCruiseLevel: Prisma.Decimal | null
      ActualCruiseTimeInMinutes: Prisma.Decimal | null
      ActualPressureAltitude: Prisma.Decimal | null
      RegisterState: number | null
      WrongFuelDetected: boolean
      WrongWeightDetected: boolean
      TimeOffset: Prisma.Decimal | null
      StartLatitude: Prisma.Decimal | null
      StartLongitude: Prisma.Decimal | null
      StartHeading: Prisma.Decimal | null
      UseFreelanceRouteSchedule: boolean
      RestCrewAfterWarp: boolean
      Score: Prisma.Decimal | null
      CanResumeOrAbort: boolean
      EngineOnRealTime: Date | null
      EngineOffRealTime: Date | null
      LandedRealTime: Date | null
      AirborneRealTime: Date | null
      DepartureAirportId: string | null
      ArrivalIntendedAirportId: string | null
      ArrivalAlternateAirportId: string | null
      ArrivalActualAirportId: string | null
      VAId: string | null
      MemberId: string | null
      LastRefresh: Date | null
      CreatedAt: Date
      UpdatedAt: Date
      FlightStatus: $Enums.FlightStatus
    }, ExtArgs["result"]["flight"]>
    composites: {}
  }

  type FlightGetPayload<S extends boolean | null | undefined | FlightDefaultArgs> = $Result.GetResult<Prisma.$FlightPayload, S>

  type FlightCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FlightFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FlightCountAggregateInputType | true
    }

  export interface FlightDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Flight'], meta: { name: 'Flight' } }
    /**
     * Find zero or one Flight that matches the filter.
     * @param {FlightFindUniqueArgs} args - Arguments to find a Flight
     * @example
     * // Get one Flight
     * const flight = await prisma.flight.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FlightFindUniqueArgs>(args: SelectSubset<T, FlightFindUniqueArgs<ExtArgs>>): Prisma__FlightClient<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Flight that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FlightFindUniqueOrThrowArgs} args - Arguments to find a Flight
     * @example
     * // Get one Flight
     * const flight = await prisma.flight.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FlightFindUniqueOrThrowArgs>(args: SelectSubset<T, FlightFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FlightClient<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Flight that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightFindFirstArgs} args - Arguments to find a Flight
     * @example
     * // Get one Flight
     * const flight = await prisma.flight.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FlightFindFirstArgs>(args?: SelectSubset<T, FlightFindFirstArgs<ExtArgs>>): Prisma__FlightClient<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Flight that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightFindFirstOrThrowArgs} args - Arguments to find a Flight
     * @example
     * // Get one Flight
     * const flight = await prisma.flight.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FlightFindFirstOrThrowArgs>(args?: SelectSubset<T, FlightFindFirstOrThrowArgs<ExtArgs>>): Prisma__FlightClient<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Flights that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Flights
     * const flights = await prisma.flight.findMany()
     * 
     * // Get first 10 Flights
     * const flights = await prisma.flight.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const flightWithIdOnly = await prisma.flight.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends FlightFindManyArgs>(args?: SelectSubset<T, FlightFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Flight.
     * @param {FlightCreateArgs} args - Arguments to create a Flight.
     * @example
     * // Create one Flight
     * const Flight = await prisma.flight.create({
     *   data: {
     *     // ... data to create a Flight
     *   }
     * })
     * 
     */
    create<T extends FlightCreateArgs>(args: SelectSubset<T, FlightCreateArgs<ExtArgs>>): Prisma__FlightClient<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Flights.
     * @param {FlightCreateManyArgs} args - Arguments to create many Flights.
     * @example
     * // Create many Flights
     * const flight = await prisma.flight.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FlightCreateManyArgs>(args?: SelectSubset<T, FlightCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Flights and returns the data saved in the database.
     * @param {FlightCreateManyAndReturnArgs} args - Arguments to create many Flights.
     * @example
     * // Create many Flights
     * const flight = await prisma.flight.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Flights and only return the `Id`
     * const flightWithIdOnly = await prisma.flight.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FlightCreateManyAndReturnArgs>(args?: SelectSubset<T, FlightCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Flight.
     * @param {FlightDeleteArgs} args - Arguments to delete one Flight.
     * @example
     * // Delete one Flight
     * const Flight = await prisma.flight.delete({
     *   where: {
     *     // ... filter to delete one Flight
     *   }
     * })
     * 
     */
    delete<T extends FlightDeleteArgs>(args: SelectSubset<T, FlightDeleteArgs<ExtArgs>>): Prisma__FlightClient<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Flight.
     * @param {FlightUpdateArgs} args - Arguments to update one Flight.
     * @example
     * // Update one Flight
     * const flight = await prisma.flight.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FlightUpdateArgs>(args: SelectSubset<T, FlightUpdateArgs<ExtArgs>>): Prisma__FlightClient<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Flights.
     * @param {FlightDeleteManyArgs} args - Arguments to filter Flights to delete.
     * @example
     * // Delete a few Flights
     * const { count } = await prisma.flight.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FlightDeleteManyArgs>(args?: SelectSubset<T, FlightDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Flights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Flights
     * const flight = await prisma.flight.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FlightUpdateManyArgs>(args: SelectSubset<T, FlightUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Flights and returns the data updated in the database.
     * @param {FlightUpdateManyAndReturnArgs} args - Arguments to update many Flights.
     * @example
     * // Update many Flights
     * const flight = await prisma.flight.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Flights and only return the `Id`
     * const flightWithIdOnly = await prisma.flight.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FlightUpdateManyAndReturnArgs>(args: SelectSubset<T, FlightUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Flight.
     * @param {FlightUpsertArgs} args - Arguments to update or create a Flight.
     * @example
     * // Update or create a Flight
     * const flight = await prisma.flight.upsert({
     *   create: {
     *     // ... data to create a Flight
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Flight we want to update
     *   }
     * })
     */
    upsert<T extends FlightUpsertArgs>(args: SelectSubset<T, FlightUpsertArgs<ExtArgs>>): Prisma__FlightClient<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Flights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightCountArgs} args - Arguments to filter Flights to count.
     * @example
     * // Count the number of Flights
     * const count = await prisma.flight.count({
     *   where: {
     *     // ... the filter for the Flights we want to count
     *   }
     * })
    **/
    count<T extends FlightCountArgs>(
      args?: Subset<T, FlightCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FlightCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Flight.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FlightAggregateArgs>(args: Subset<T, FlightAggregateArgs>): Prisma.PrismaPromise<GetFlightAggregateType<T>>

    /**
     * Group by Flight.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FlightGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FlightGroupByArgs['orderBy'] }
        : { orderBy?: FlightGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FlightGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFlightGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Flight model
   */
  readonly fields: FlightFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Flight.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FlightClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    VirtualAirline<T extends Flight$VirtualAirlineArgs<ExtArgs> = {}>(args?: Subset<T, Flight$VirtualAirlineArgs<ExtArgs>>): Prisma__VirtualAirlineClient<$Result.GetResult<Prisma.$VirtualAirlinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Aircraft<T extends Flight$AircraftArgs<ExtArgs> = {}>(args?: Subset<T, Flight$AircraftArgs<ExtArgs>>): Prisma__AircraftClient<$Result.GetResult<Prisma.$AircraftPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    FlightRoute<T extends Flight$FlightRouteArgs<ExtArgs> = {}>(args?: Subset<T, Flight$FlightRouteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    DepartureAirport<T extends Flight$DepartureAirportArgs<ExtArgs> = {}>(args?: Subset<T, Flight$DepartureAirportArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ArrivalIntendedAirport<T extends Flight$ArrivalIntendedAirportArgs<ExtArgs> = {}>(args?: Subset<T, Flight$ArrivalIntendedAirportArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ArrivalAlternateAirport<T extends Flight$ArrivalAlternateAirportArgs<ExtArgs> = {}>(args?: Subset<T, Flight$ArrivalAlternateAirportArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ArrivalActualAirport<T extends Flight$ArrivalActualAirportArgs<ExtArgs> = {}>(args?: Subset<T, Flight$ArrivalActualAirportArgs<ExtArgs>>): Prisma__AirportClient<$Result.GetResult<Prisma.$AirportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Member<T extends Flight$MemberArgs<ExtArgs> = {}>(args?: Subset<T, Flight$MemberArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Flight model
   */
  interface FlightFieldRefs {
    readonly Id: FieldRef<"Flight", 'String'>
    readonly AircraftId: FieldRef<"Flight", 'String'>
    readonly CompanyId: FieldRef<"Flight", 'String'>
    readonly Registered: FieldRef<"Flight", 'Boolean'>
    readonly Category: FieldRef<"Flight", 'Int'>
    readonly ResultComments: FieldRef<"Flight", 'String'>
    readonly StartTime: FieldRef<"Flight", 'DateTime'>
    readonly EndTime: FieldRef<"Flight", 'DateTime'>
    readonly EngineOnTime: FieldRef<"Flight", 'DateTime'>
    readonly EngineOffTime: FieldRef<"Flight", 'DateTime'>
    readonly AirborneTime: FieldRef<"Flight", 'DateTime'>
    readonly LandedTime: FieldRef<"Flight", 'DateTime'>
    readonly IntendedFlightLevel: FieldRef<"Flight", 'Int'>
    readonly Passengers: FieldRef<"Flight", 'Int'>
    readonly Cargo: FieldRef<"Flight", 'Int'>
    readonly AddedFuelQty: FieldRef<"Flight", 'Decimal'>
    readonly IsAI: FieldRef<"Flight", 'Boolean'>
    readonly VerticalSpeedAtTouchdownMpS: FieldRef<"Flight", 'Decimal'>
    readonly MaxGForce: FieldRef<"Flight", 'Decimal'>
    readonly MinGForce: FieldRef<"Flight", 'Decimal'>
    readonly MaxBank: FieldRef<"Flight", 'Decimal'>
    readonly MaxPitch: FieldRef<"Flight", 'Decimal'>
    readonly HasStalled: FieldRef<"Flight", 'Boolean'>
    readonly HasOverspeeded: FieldRef<"Flight", 'Boolean'>
    readonly XPFlight: FieldRef<"Flight", 'Int'>
    readonly XPFlightBonus: FieldRef<"Flight", 'Decimal'>
    readonly XPMissions: FieldRef<"Flight", 'Int'>
    readonly CargosTotalWeight: FieldRef<"Flight", 'Decimal'>
    readonly PAXCount: FieldRef<"Flight", 'Int'>
    readonly AircraftCurrentFOB: FieldRef<"Flight", 'Decimal'>
    readonly AircraftCurrentAltitude: FieldRef<"Flight", 'Decimal'>
    readonly ActualCruiseAltitude: FieldRef<"Flight", 'Decimal'>
    readonly ActualConsumptionAtCruiseLevelInLbsPerHour: FieldRef<"Flight", 'Decimal'>
    readonly ActualTotalFuelConsumptionInLbs: FieldRef<"Flight", 'Decimal'>
    readonly ActualConsumptionAtCruiseLevelInGalPerHour: FieldRef<"Flight", 'Decimal'>
    readonly ActualTASAtCruiseLevel: FieldRef<"Flight", 'Decimal'>
    readonly ActualCruiseTimeInMinutes: FieldRef<"Flight", 'Decimal'>
    readonly ActualPressureAltitude: FieldRef<"Flight", 'Decimal'>
    readonly RegisterState: FieldRef<"Flight", 'Int'>
    readonly WrongFuelDetected: FieldRef<"Flight", 'Boolean'>
    readonly WrongWeightDetected: FieldRef<"Flight", 'Boolean'>
    readonly TimeOffset: FieldRef<"Flight", 'Decimal'>
    readonly StartLatitude: FieldRef<"Flight", 'Decimal'>
    readonly StartLongitude: FieldRef<"Flight", 'Decimal'>
    readonly StartHeading: FieldRef<"Flight", 'Decimal'>
    readonly UseFreelanceRouteSchedule: FieldRef<"Flight", 'Boolean'>
    readonly RestCrewAfterWarp: FieldRef<"Flight", 'Boolean'>
    readonly Score: FieldRef<"Flight", 'Decimal'>
    readonly CanResumeOrAbort: FieldRef<"Flight", 'Boolean'>
    readonly EngineOnRealTime: FieldRef<"Flight", 'DateTime'>
    readonly EngineOffRealTime: FieldRef<"Flight", 'DateTime'>
    readonly LandedRealTime: FieldRef<"Flight", 'DateTime'>
    readonly AirborneRealTime: FieldRef<"Flight", 'DateTime'>
    readonly DepartureAirportId: FieldRef<"Flight", 'String'>
    readonly ArrivalIntendedAirportId: FieldRef<"Flight", 'String'>
    readonly ArrivalAlternateAirportId: FieldRef<"Flight", 'String'>
    readonly ArrivalActualAirportId: FieldRef<"Flight", 'String'>
    readonly VAId: FieldRef<"Flight", 'String'>
    readonly MemberId: FieldRef<"Flight", 'String'>
    readonly LastRefresh: FieldRef<"Flight", 'DateTime'>
    readonly CreatedAt: FieldRef<"Flight", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Flight", 'DateTime'>
    readonly FlightStatus: FieldRef<"Flight", 'FlightStatus'>
  }
    

  // Custom InputTypes
  /**
   * Flight findUnique
   */
  export type FlightFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    /**
     * Filter, which Flight to fetch.
     */
    where: FlightWhereUniqueInput
  }

  /**
   * Flight findUniqueOrThrow
   */
  export type FlightFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    /**
     * Filter, which Flight to fetch.
     */
    where: FlightWhereUniqueInput
  }

  /**
   * Flight findFirst
   */
  export type FlightFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    /**
     * Filter, which Flight to fetch.
     */
    where?: FlightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Flights to fetch.
     */
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Flights.
     */
    cursor?: FlightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Flights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Flights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Flights.
     */
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * Flight findFirstOrThrow
   */
  export type FlightFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    /**
     * Filter, which Flight to fetch.
     */
    where?: FlightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Flights to fetch.
     */
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Flights.
     */
    cursor?: FlightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Flights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Flights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Flights.
     */
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * Flight findMany
   */
  export type FlightFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    /**
     * Filter, which Flights to fetch.
     */
    where?: FlightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Flights to fetch.
     */
    orderBy?: FlightOrderByWithRelationInput | FlightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Flights.
     */
    cursor?: FlightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Flights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Flights.
     */
    skip?: number
    distinct?: FlightScalarFieldEnum | FlightScalarFieldEnum[]
  }

  /**
   * Flight create
   */
  export type FlightCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    /**
     * The data needed to create a Flight.
     */
    data: XOR<FlightCreateInput, FlightUncheckedCreateInput>
  }

  /**
   * Flight createMany
   */
  export type FlightCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Flights.
     */
    data: FlightCreateManyInput | FlightCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Flight createManyAndReturn
   */
  export type FlightCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * The data used to create many Flights.
     */
    data: FlightCreateManyInput | FlightCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Flight update
   */
  export type FlightUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    /**
     * The data needed to update a Flight.
     */
    data: XOR<FlightUpdateInput, FlightUncheckedUpdateInput>
    /**
     * Choose, which Flight to update.
     */
    where: FlightWhereUniqueInput
  }

  /**
   * Flight updateMany
   */
  export type FlightUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Flights.
     */
    data: XOR<FlightUpdateManyMutationInput, FlightUncheckedUpdateManyInput>
    /**
     * Filter which Flights to update
     */
    where?: FlightWhereInput
    /**
     * Limit how many Flights to update.
     */
    limit?: number
  }

  /**
   * Flight updateManyAndReturn
   */
  export type FlightUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * The data used to update Flights.
     */
    data: XOR<FlightUpdateManyMutationInput, FlightUncheckedUpdateManyInput>
    /**
     * Filter which Flights to update
     */
    where?: FlightWhereInput
    /**
     * Limit how many Flights to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Flight upsert
   */
  export type FlightUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    /**
     * The filter to search for the Flight to update in case it exists.
     */
    where: FlightWhereUniqueInput
    /**
     * In case the Flight found by the `where` argument doesn't exist, create a new Flight with this data.
     */
    create: XOR<FlightCreateInput, FlightUncheckedCreateInput>
    /**
     * In case the Flight was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FlightUpdateInput, FlightUncheckedUpdateInput>
  }

  /**
   * Flight delete
   */
  export type FlightDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    /**
     * Filter which Flight to delete.
     */
    where: FlightWhereUniqueInput
  }

  /**
   * Flight deleteMany
   */
  export type FlightDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Flights to delete
     */
    where?: FlightWhereInput
    /**
     * Limit how many Flights to delete.
     */
    limit?: number
  }

  /**
   * Flight.VirtualAirline
   */
  export type Flight$VirtualAirlineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualAirline
     */
    select?: VirtualAirlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualAirline
     */
    omit?: VirtualAirlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualAirlineInclude<ExtArgs> | null
    where?: VirtualAirlineWhereInput
  }

  /**
   * Flight.Aircraft
   */
  export type Flight$AircraftArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aircraft
     */
    select?: AircraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Aircraft
     */
    omit?: AircraftOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AircraftInclude<ExtArgs> | null
    where?: AircraftWhereInput
  }

  /**
   * Flight.FlightRoute
   */
  export type Flight$FlightRouteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    where?: FlightRouteWhereInput
    orderBy?: FlightRouteOrderByWithRelationInput | FlightRouteOrderByWithRelationInput[]
    cursor?: FlightRouteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlightRouteScalarFieldEnum | FlightRouteScalarFieldEnum[]
  }

  /**
   * Flight.DepartureAirport
   */
  export type Flight$DepartureAirportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    where?: AirportWhereInput
  }

  /**
   * Flight.ArrivalIntendedAirport
   */
  export type Flight$ArrivalIntendedAirportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    where?: AirportWhereInput
  }

  /**
   * Flight.ArrivalAlternateAirport
   */
  export type Flight$ArrivalAlternateAirportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    where?: AirportWhereInput
  }

  /**
   * Flight.ArrivalActualAirport
   */
  export type Flight$ArrivalActualAirportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Airport
     */
    select?: AirportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Airport
     */
    omit?: AirportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AirportInclude<ExtArgs> | null
    where?: AirportWhereInput
  }

  /**
   * Flight.Member
   */
  export type Flight$MemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    where?: MemberWhereInput
  }

  /**
   * Flight without action
   */
  export type FlightDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
  }


  /**
   * Model FlightRoute
   */

  export type AggregateFlightRoute = {
    _count: FlightRouteCountAggregateOutputType | null
    _min: FlightRouteMinAggregateOutputType | null
    _max: FlightRouteMaxAggregateOutputType | null
  }

  export type FlightRouteMinAggregateOutputType = {
    Id: string | null
    FlightId: string | null
    MemberId: string | null
    Route: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type FlightRouteMaxAggregateOutputType = {
    Id: string | null
    FlightId: string | null
    MemberId: string | null
    Route: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type FlightRouteCountAggregateOutputType = {
    Id: number
    FlightId: number
    MemberId: number
    Route: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type FlightRouteMinAggregateInputType = {
    Id?: true
    FlightId?: true
    MemberId?: true
    Route?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type FlightRouteMaxAggregateInputType = {
    Id?: true
    FlightId?: true
    MemberId?: true
    Route?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type FlightRouteCountAggregateInputType = {
    Id?: true
    FlightId?: true
    MemberId?: true
    Route?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type FlightRouteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FlightRoute to aggregate.
     */
    where?: FlightRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlightRoutes to fetch.
     */
    orderBy?: FlightRouteOrderByWithRelationInput | FlightRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FlightRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlightRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlightRoutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FlightRoutes
    **/
    _count?: true | FlightRouteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FlightRouteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FlightRouteMaxAggregateInputType
  }

  export type GetFlightRouteAggregateType<T extends FlightRouteAggregateArgs> = {
        [P in keyof T & keyof AggregateFlightRoute]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFlightRoute[P]>
      : GetScalarType<T[P], AggregateFlightRoute[P]>
  }




  export type FlightRouteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlightRouteWhereInput
    orderBy?: FlightRouteOrderByWithAggregationInput | FlightRouteOrderByWithAggregationInput[]
    by: FlightRouteScalarFieldEnum[] | FlightRouteScalarFieldEnum
    having?: FlightRouteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FlightRouteCountAggregateInputType | true
    _min?: FlightRouteMinAggregateInputType
    _max?: FlightRouteMaxAggregateInputType
  }

  export type FlightRouteGroupByOutputType = {
    Id: string
    FlightId: string | null
    MemberId: string
    Route: string
    CreatedAt: Date
    UpdatedAt: Date
    _count: FlightRouteCountAggregateOutputType | null
    _min: FlightRouteMinAggregateOutputType | null
    _max: FlightRouteMaxAggregateOutputType | null
  }

  type GetFlightRouteGroupByPayload<T extends FlightRouteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FlightRouteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FlightRouteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FlightRouteGroupByOutputType[P]>
            : GetScalarType<T[P], FlightRouteGroupByOutputType[P]>
        }
      >
    >


  export type FlightRouteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    FlightId?: boolean
    MemberId?: boolean
    Route?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Flight?: boolean | FlightRoute$FlightArgs<ExtArgs>
    Member?: boolean | MemberDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["flightRoute"]>

  export type FlightRouteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    FlightId?: boolean
    MemberId?: boolean
    Route?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Flight?: boolean | FlightRoute$FlightArgs<ExtArgs>
    Member?: boolean | MemberDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["flightRoute"]>

  export type FlightRouteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    FlightId?: boolean
    MemberId?: boolean
    Route?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Flight?: boolean | FlightRoute$FlightArgs<ExtArgs>
    Member?: boolean | MemberDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["flightRoute"]>

  export type FlightRouteSelectScalar = {
    Id?: boolean
    FlightId?: boolean
    MemberId?: boolean
    Route?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type FlightRouteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "FlightId" | "MemberId" | "Route" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["flightRoute"]>
  export type FlightRouteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Flight?: boolean | FlightRoute$FlightArgs<ExtArgs>
    Member?: boolean | MemberDefaultArgs<ExtArgs>
  }
  export type FlightRouteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Flight?: boolean | FlightRoute$FlightArgs<ExtArgs>
    Member?: boolean | MemberDefaultArgs<ExtArgs>
  }
  export type FlightRouteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Flight?: boolean | FlightRoute$FlightArgs<ExtArgs>
    Member?: boolean | MemberDefaultArgs<ExtArgs>
  }

  export type $FlightRoutePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FlightRoute"
    objects: {
      Flight: Prisma.$FlightPayload<ExtArgs> | null
      Member: Prisma.$MemberPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      FlightId: string | null
      MemberId: string
      Route: string
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["flightRoute"]>
    composites: {}
  }

  type FlightRouteGetPayload<S extends boolean | null | undefined | FlightRouteDefaultArgs> = $Result.GetResult<Prisma.$FlightRoutePayload, S>

  type FlightRouteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FlightRouteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FlightRouteCountAggregateInputType | true
    }

  export interface FlightRouteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FlightRoute'], meta: { name: 'FlightRoute' } }
    /**
     * Find zero or one FlightRoute that matches the filter.
     * @param {FlightRouteFindUniqueArgs} args - Arguments to find a FlightRoute
     * @example
     * // Get one FlightRoute
     * const flightRoute = await prisma.flightRoute.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FlightRouteFindUniqueArgs>(args: SelectSubset<T, FlightRouteFindUniqueArgs<ExtArgs>>): Prisma__FlightRouteClient<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FlightRoute that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FlightRouteFindUniqueOrThrowArgs} args - Arguments to find a FlightRoute
     * @example
     * // Get one FlightRoute
     * const flightRoute = await prisma.flightRoute.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FlightRouteFindUniqueOrThrowArgs>(args: SelectSubset<T, FlightRouteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FlightRouteClient<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FlightRoute that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightRouteFindFirstArgs} args - Arguments to find a FlightRoute
     * @example
     * // Get one FlightRoute
     * const flightRoute = await prisma.flightRoute.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FlightRouteFindFirstArgs>(args?: SelectSubset<T, FlightRouteFindFirstArgs<ExtArgs>>): Prisma__FlightRouteClient<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FlightRoute that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightRouteFindFirstOrThrowArgs} args - Arguments to find a FlightRoute
     * @example
     * // Get one FlightRoute
     * const flightRoute = await prisma.flightRoute.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FlightRouteFindFirstOrThrowArgs>(args?: SelectSubset<T, FlightRouteFindFirstOrThrowArgs<ExtArgs>>): Prisma__FlightRouteClient<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FlightRoutes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightRouteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FlightRoutes
     * const flightRoutes = await prisma.flightRoute.findMany()
     * 
     * // Get first 10 FlightRoutes
     * const flightRoutes = await prisma.flightRoute.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const flightRouteWithIdOnly = await prisma.flightRoute.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends FlightRouteFindManyArgs>(args?: SelectSubset<T, FlightRouteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FlightRoute.
     * @param {FlightRouteCreateArgs} args - Arguments to create a FlightRoute.
     * @example
     * // Create one FlightRoute
     * const FlightRoute = await prisma.flightRoute.create({
     *   data: {
     *     // ... data to create a FlightRoute
     *   }
     * })
     * 
     */
    create<T extends FlightRouteCreateArgs>(args: SelectSubset<T, FlightRouteCreateArgs<ExtArgs>>): Prisma__FlightRouteClient<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FlightRoutes.
     * @param {FlightRouteCreateManyArgs} args - Arguments to create many FlightRoutes.
     * @example
     * // Create many FlightRoutes
     * const flightRoute = await prisma.flightRoute.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FlightRouteCreateManyArgs>(args?: SelectSubset<T, FlightRouteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FlightRoutes and returns the data saved in the database.
     * @param {FlightRouteCreateManyAndReturnArgs} args - Arguments to create many FlightRoutes.
     * @example
     * // Create many FlightRoutes
     * const flightRoute = await prisma.flightRoute.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FlightRoutes and only return the `Id`
     * const flightRouteWithIdOnly = await prisma.flightRoute.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FlightRouteCreateManyAndReturnArgs>(args?: SelectSubset<T, FlightRouteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FlightRoute.
     * @param {FlightRouteDeleteArgs} args - Arguments to delete one FlightRoute.
     * @example
     * // Delete one FlightRoute
     * const FlightRoute = await prisma.flightRoute.delete({
     *   where: {
     *     // ... filter to delete one FlightRoute
     *   }
     * })
     * 
     */
    delete<T extends FlightRouteDeleteArgs>(args: SelectSubset<T, FlightRouteDeleteArgs<ExtArgs>>): Prisma__FlightRouteClient<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FlightRoute.
     * @param {FlightRouteUpdateArgs} args - Arguments to update one FlightRoute.
     * @example
     * // Update one FlightRoute
     * const flightRoute = await prisma.flightRoute.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FlightRouteUpdateArgs>(args: SelectSubset<T, FlightRouteUpdateArgs<ExtArgs>>): Prisma__FlightRouteClient<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FlightRoutes.
     * @param {FlightRouteDeleteManyArgs} args - Arguments to filter FlightRoutes to delete.
     * @example
     * // Delete a few FlightRoutes
     * const { count } = await prisma.flightRoute.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FlightRouteDeleteManyArgs>(args?: SelectSubset<T, FlightRouteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FlightRoutes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightRouteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FlightRoutes
     * const flightRoute = await prisma.flightRoute.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FlightRouteUpdateManyArgs>(args: SelectSubset<T, FlightRouteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FlightRoutes and returns the data updated in the database.
     * @param {FlightRouteUpdateManyAndReturnArgs} args - Arguments to update many FlightRoutes.
     * @example
     * // Update many FlightRoutes
     * const flightRoute = await prisma.flightRoute.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FlightRoutes and only return the `Id`
     * const flightRouteWithIdOnly = await prisma.flightRoute.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FlightRouteUpdateManyAndReturnArgs>(args: SelectSubset<T, FlightRouteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FlightRoute.
     * @param {FlightRouteUpsertArgs} args - Arguments to update or create a FlightRoute.
     * @example
     * // Update or create a FlightRoute
     * const flightRoute = await prisma.flightRoute.upsert({
     *   create: {
     *     // ... data to create a FlightRoute
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FlightRoute we want to update
     *   }
     * })
     */
    upsert<T extends FlightRouteUpsertArgs>(args: SelectSubset<T, FlightRouteUpsertArgs<ExtArgs>>): Prisma__FlightRouteClient<$Result.GetResult<Prisma.$FlightRoutePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FlightRoutes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightRouteCountArgs} args - Arguments to filter FlightRoutes to count.
     * @example
     * // Count the number of FlightRoutes
     * const count = await prisma.flightRoute.count({
     *   where: {
     *     // ... the filter for the FlightRoutes we want to count
     *   }
     * })
    **/
    count<T extends FlightRouteCountArgs>(
      args?: Subset<T, FlightRouteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FlightRouteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FlightRoute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightRouteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FlightRouteAggregateArgs>(args: Subset<T, FlightRouteAggregateArgs>): Prisma.PrismaPromise<GetFlightRouteAggregateType<T>>

    /**
     * Group by FlightRoute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlightRouteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FlightRouteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FlightRouteGroupByArgs['orderBy'] }
        : { orderBy?: FlightRouteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FlightRouteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFlightRouteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FlightRoute model
   */
  readonly fields: FlightRouteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FlightRoute.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FlightRouteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Flight<T extends FlightRoute$FlightArgs<ExtArgs> = {}>(args?: Subset<T, FlightRoute$FlightArgs<ExtArgs>>): Prisma__FlightClient<$Result.GetResult<Prisma.$FlightPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Member<T extends MemberDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MemberDefaultArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FlightRoute model
   */
  interface FlightRouteFieldRefs {
    readonly Id: FieldRef<"FlightRoute", 'String'>
    readonly FlightId: FieldRef<"FlightRoute", 'String'>
    readonly MemberId: FieldRef<"FlightRoute", 'String'>
    readonly Route: FieldRef<"FlightRoute", 'String'>
    readonly CreatedAt: FieldRef<"FlightRoute", 'DateTime'>
    readonly UpdatedAt: FieldRef<"FlightRoute", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FlightRoute findUnique
   */
  export type FlightRouteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    /**
     * Filter, which FlightRoute to fetch.
     */
    where: FlightRouteWhereUniqueInput
  }

  /**
   * FlightRoute findUniqueOrThrow
   */
  export type FlightRouteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    /**
     * Filter, which FlightRoute to fetch.
     */
    where: FlightRouteWhereUniqueInput
  }

  /**
   * FlightRoute findFirst
   */
  export type FlightRouteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    /**
     * Filter, which FlightRoute to fetch.
     */
    where?: FlightRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlightRoutes to fetch.
     */
    orderBy?: FlightRouteOrderByWithRelationInput | FlightRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FlightRoutes.
     */
    cursor?: FlightRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlightRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlightRoutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FlightRoutes.
     */
    distinct?: FlightRouteScalarFieldEnum | FlightRouteScalarFieldEnum[]
  }

  /**
   * FlightRoute findFirstOrThrow
   */
  export type FlightRouteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    /**
     * Filter, which FlightRoute to fetch.
     */
    where?: FlightRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlightRoutes to fetch.
     */
    orderBy?: FlightRouteOrderByWithRelationInput | FlightRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FlightRoutes.
     */
    cursor?: FlightRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlightRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlightRoutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FlightRoutes.
     */
    distinct?: FlightRouteScalarFieldEnum | FlightRouteScalarFieldEnum[]
  }

  /**
   * FlightRoute findMany
   */
  export type FlightRouteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    /**
     * Filter, which FlightRoutes to fetch.
     */
    where?: FlightRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlightRoutes to fetch.
     */
    orderBy?: FlightRouteOrderByWithRelationInput | FlightRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FlightRoutes.
     */
    cursor?: FlightRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlightRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlightRoutes.
     */
    skip?: number
    distinct?: FlightRouteScalarFieldEnum | FlightRouteScalarFieldEnum[]
  }

  /**
   * FlightRoute create
   */
  export type FlightRouteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    /**
     * The data needed to create a FlightRoute.
     */
    data: XOR<FlightRouteCreateInput, FlightRouteUncheckedCreateInput>
  }

  /**
   * FlightRoute createMany
   */
  export type FlightRouteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FlightRoutes.
     */
    data: FlightRouteCreateManyInput | FlightRouteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FlightRoute createManyAndReturn
   */
  export type FlightRouteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * The data used to create many FlightRoutes.
     */
    data: FlightRouteCreateManyInput | FlightRouteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FlightRoute update
   */
  export type FlightRouteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    /**
     * The data needed to update a FlightRoute.
     */
    data: XOR<FlightRouteUpdateInput, FlightRouteUncheckedUpdateInput>
    /**
     * Choose, which FlightRoute to update.
     */
    where: FlightRouteWhereUniqueInput
  }

  /**
   * FlightRoute updateMany
   */
  export type FlightRouteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FlightRoutes.
     */
    data: XOR<FlightRouteUpdateManyMutationInput, FlightRouteUncheckedUpdateManyInput>
    /**
     * Filter which FlightRoutes to update
     */
    where?: FlightRouteWhereInput
    /**
     * Limit how many FlightRoutes to update.
     */
    limit?: number
  }

  /**
   * FlightRoute updateManyAndReturn
   */
  export type FlightRouteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * The data used to update FlightRoutes.
     */
    data: XOR<FlightRouteUpdateManyMutationInput, FlightRouteUncheckedUpdateManyInput>
    /**
     * Filter which FlightRoutes to update
     */
    where?: FlightRouteWhereInput
    /**
     * Limit how many FlightRoutes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FlightRoute upsert
   */
  export type FlightRouteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    /**
     * The filter to search for the FlightRoute to update in case it exists.
     */
    where: FlightRouteWhereUniqueInput
    /**
     * In case the FlightRoute found by the `where` argument doesn't exist, create a new FlightRoute with this data.
     */
    create: XOR<FlightRouteCreateInput, FlightRouteUncheckedCreateInput>
    /**
     * In case the FlightRoute was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FlightRouteUpdateInput, FlightRouteUncheckedUpdateInput>
  }

  /**
   * FlightRoute delete
   */
  export type FlightRouteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
    /**
     * Filter which FlightRoute to delete.
     */
    where: FlightRouteWhereUniqueInput
  }

  /**
   * FlightRoute deleteMany
   */
  export type FlightRouteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FlightRoutes to delete
     */
    where?: FlightRouteWhereInput
    /**
     * Limit how many FlightRoutes to delete.
     */
    limit?: number
  }

  /**
   * FlightRoute.Flight
   */
  export type FlightRoute$FlightArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flight
     */
    select?: FlightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Flight
     */
    omit?: FlightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightInclude<ExtArgs> | null
    where?: FlightWhereInput
  }

  /**
   * FlightRoute without action
   */
  export type FlightRouteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlightRoute
     */
    select?: FlightRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FlightRoute
     */
    omit?: FlightRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlightRouteInclude<ExtArgs> | null
  }


  /**
   * Model Job
   */

  export type AggregateJob = {
    _count: JobCountAggregateOutputType | null
    _avg: JobAvgAggregateOutputType | null
    _sum: JobSumAggregateOutputType | null
    _min: JobMinAggregateOutputType | null
    _max: JobMaxAggregateOutputType | null
  }

  export type JobAvgAggregateOutputType = {
    ExecutionCount: number | null
  }

  export type JobSumAggregateOutputType = {
    ExecutionCount: number | null
  }

  export type JobMinAggregateOutputType = {
    Id: string | null
    IsEnabled: boolean | null
    FirstRunCompleted: boolean | null
    Type: $Enums.JobType | null
    Status: $Enums.JobStatus | null
    CronExpression: $Enums.CronExpression | null
    Name: string | null
    Description: string | null
    LastRunAt: Date | null
    NextRunAt: Date | null
    LastError: string | null
    ExecutionCount: number | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type JobMaxAggregateOutputType = {
    Id: string | null
    IsEnabled: boolean | null
    FirstRunCompleted: boolean | null
    Type: $Enums.JobType | null
    Status: $Enums.JobStatus | null
    CronExpression: $Enums.CronExpression | null
    Name: string | null
    Description: string | null
    LastRunAt: Date | null
    NextRunAt: Date | null
    LastError: string | null
    ExecutionCount: number | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type JobCountAggregateOutputType = {
    Id: number
    IsEnabled: number
    FirstRunCompleted: number
    Type: number
    Status: number
    CronExpression: number
    Name: number
    Description: number
    Parameters: number
    LastRunAt: number
    NextRunAt: number
    LastError: number
    ExecutionCount: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type JobAvgAggregateInputType = {
    ExecutionCount?: true
  }

  export type JobSumAggregateInputType = {
    ExecutionCount?: true
  }

  export type JobMinAggregateInputType = {
    Id?: true
    IsEnabled?: true
    FirstRunCompleted?: true
    Type?: true
    Status?: true
    CronExpression?: true
    Name?: true
    Description?: true
    LastRunAt?: true
    NextRunAt?: true
    LastError?: true
    ExecutionCount?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type JobMaxAggregateInputType = {
    Id?: true
    IsEnabled?: true
    FirstRunCompleted?: true
    Type?: true
    Status?: true
    CronExpression?: true
    Name?: true
    Description?: true
    LastRunAt?: true
    NextRunAt?: true
    LastError?: true
    ExecutionCount?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type JobCountAggregateInputType = {
    Id?: true
    IsEnabled?: true
    FirstRunCompleted?: true
    Type?: true
    Status?: true
    CronExpression?: true
    Name?: true
    Description?: true
    Parameters?: true
    LastRunAt?: true
    NextRunAt?: true
    LastError?: true
    ExecutionCount?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type JobAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Job to aggregate.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Jobs
    **/
    _count?: true | JobCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobMaxAggregateInputType
  }

  export type GetJobAggregateType<T extends JobAggregateArgs> = {
        [P in keyof T & keyof AggregateJob]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJob[P]>
      : GetScalarType<T[P], AggregateJob[P]>
  }




  export type JobGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobWhereInput
    orderBy?: JobOrderByWithAggregationInput | JobOrderByWithAggregationInput[]
    by: JobScalarFieldEnum[] | JobScalarFieldEnum
    having?: JobScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobCountAggregateInputType | true
    _avg?: JobAvgAggregateInputType
    _sum?: JobSumAggregateInputType
    _min?: JobMinAggregateInputType
    _max?: JobMaxAggregateInputType
  }

  export type JobGroupByOutputType = {
    Id: string
    IsEnabled: boolean
    FirstRunCompleted: boolean
    Type: $Enums.JobType
    Status: $Enums.JobStatus
    CronExpression: $Enums.CronExpression
    Name: string
    Description: string | null
    Parameters: JsonValue | null
    LastRunAt: Date | null
    NextRunAt: Date | null
    LastError: string | null
    ExecutionCount: number
    CreatedAt: Date
    UpdatedAt: Date
    _count: JobCountAggregateOutputType | null
    _avg: JobAvgAggregateOutputType | null
    _sum: JobSumAggregateOutputType | null
    _min: JobMinAggregateOutputType | null
    _max: JobMaxAggregateOutputType | null
  }

  type GetJobGroupByPayload<T extends JobGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobGroupByOutputType[P]>
            : GetScalarType<T[P], JobGroupByOutputType[P]>
        }
      >
    >


  export type JobSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    IsEnabled?: boolean
    FirstRunCompleted?: boolean
    Type?: boolean
    Status?: boolean
    CronExpression?: boolean
    Name?: boolean
    Description?: boolean
    Parameters?: boolean
    LastRunAt?: boolean
    NextRunAt?: boolean
    LastError?: boolean
    ExecutionCount?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["job"]>

  export type JobSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    IsEnabled?: boolean
    FirstRunCompleted?: boolean
    Type?: boolean
    Status?: boolean
    CronExpression?: boolean
    Name?: boolean
    Description?: boolean
    Parameters?: boolean
    LastRunAt?: boolean
    NextRunAt?: boolean
    LastError?: boolean
    ExecutionCount?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["job"]>

  export type JobSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    IsEnabled?: boolean
    FirstRunCompleted?: boolean
    Type?: boolean
    Status?: boolean
    CronExpression?: boolean
    Name?: boolean
    Description?: boolean
    Parameters?: boolean
    LastRunAt?: boolean
    NextRunAt?: boolean
    LastError?: boolean
    ExecutionCount?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["job"]>

  export type JobSelectScalar = {
    Id?: boolean
    IsEnabled?: boolean
    FirstRunCompleted?: boolean
    Type?: boolean
    Status?: boolean
    CronExpression?: boolean
    Name?: boolean
    Description?: boolean
    Parameters?: boolean
    LastRunAt?: boolean
    NextRunAt?: boolean
    LastError?: boolean
    ExecutionCount?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type JobOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Id" | "IsEnabled" | "FirstRunCompleted" | "Type" | "Status" | "CronExpression" | "Name" | "Description" | "Parameters" | "LastRunAt" | "NextRunAt" | "LastError" | "ExecutionCount" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["job"]>

  export type $JobPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Job"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      IsEnabled: boolean
      FirstRunCompleted: boolean
      Type: $Enums.JobType
      Status: $Enums.JobStatus
      CronExpression: $Enums.CronExpression
      Name: string
      Description: string | null
      Parameters: Prisma.JsonValue | null
      LastRunAt: Date | null
      NextRunAt: Date | null
      LastError: string | null
      ExecutionCount: number
      CreatedAt: Date
      UpdatedAt: Date
    }, ExtArgs["result"]["job"]>
    composites: {}
  }

  type JobGetPayload<S extends boolean | null | undefined | JobDefaultArgs> = $Result.GetResult<Prisma.$JobPayload, S>

  type JobCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<JobFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JobCountAggregateInputType | true
    }

  export interface JobDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Job'], meta: { name: 'Job' } }
    /**
     * Find zero or one Job that matches the filter.
     * @param {JobFindUniqueArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobFindUniqueArgs>(args: SelectSubset<T, JobFindUniqueArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Job that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {JobFindUniqueOrThrowArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobFindUniqueOrThrowArgs>(args: SelectSubset<T, JobFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Job that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobFindFirstArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobFindFirstArgs>(args?: SelectSubset<T, JobFindFirstArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Job that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobFindFirstOrThrowArgs} args - Arguments to find a Job
     * @example
     * // Get one Job
     * const job = await prisma.job.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobFindFirstOrThrowArgs>(args?: SelectSubset<T, JobFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Jobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Jobs
     * const jobs = await prisma.job.findMany()
     * 
     * // Get first 10 Jobs
     * const jobs = await prisma.job.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const jobWithIdOnly = await prisma.job.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends JobFindManyArgs>(args?: SelectSubset<T, JobFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Job.
     * @param {JobCreateArgs} args - Arguments to create a Job.
     * @example
     * // Create one Job
     * const Job = await prisma.job.create({
     *   data: {
     *     // ... data to create a Job
     *   }
     * })
     * 
     */
    create<T extends JobCreateArgs>(args: SelectSubset<T, JobCreateArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Jobs.
     * @param {JobCreateManyArgs} args - Arguments to create many Jobs.
     * @example
     * // Create many Jobs
     * const job = await prisma.job.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobCreateManyArgs>(args?: SelectSubset<T, JobCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Jobs and returns the data saved in the database.
     * @param {JobCreateManyAndReturnArgs} args - Arguments to create many Jobs.
     * @example
     * // Create many Jobs
     * const job = await prisma.job.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Jobs and only return the `Id`
     * const jobWithIdOnly = await prisma.job.createManyAndReturn({
     *   select: { Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobCreateManyAndReturnArgs>(args?: SelectSubset<T, JobCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Job.
     * @param {JobDeleteArgs} args - Arguments to delete one Job.
     * @example
     * // Delete one Job
     * const Job = await prisma.job.delete({
     *   where: {
     *     // ... filter to delete one Job
     *   }
     * })
     * 
     */
    delete<T extends JobDeleteArgs>(args: SelectSubset<T, JobDeleteArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Job.
     * @param {JobUpdateArgs} args - Arguments to update one Job.
     * @example
     * // Update one Job
     * const job = await prisma.job.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobUpdateArgs>(args: SelectSubset<T, JobUpdateArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Jobs.
     * @param {JobDeleteManyArgs} args - Arguments to filter Jobs to delete.
     * @example
     * // Delete a few Jobs
     * const { count } = await prisma.job.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobDeleteManyArgs>(args?: SelectSubset<T, JobDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Jobs
     * const job = await prisma.job.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobUpdateManyArgs>(args: SelectSubset<T, JobUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jobs and returns the data updated in the database.
     * @param {JobUpdateManyAndReturnArgs} args - Arguments to update many Jobs.
     * @example
     * // Update many Jobs
     * const job = await prisma.job.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Jobs and only return the `Id`
     * const jobWithIdOnly = await prisma.job.updateManyAndReturn({
     *   select: { Id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends JobUpdateManyAndReturnArgs>(args: SelectSubset<T, JobUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Job.
     * @param {JobUpsertArgs} args - Arguments to update or create a Job.
     * @example
     * // Update or create a Job
     * const job = await prisma.job.upsert({
     *   create: {
     *     // ... data to create a Job
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Job we want to update
     *   }
     * })
     */
    upsert<T extends JobUpsertArgs>(args: SelectSubset<T, JobUpsertArgs<ExtArgs>>): Prisma__JobClient<$Result.GetResult<Prisma.$JobPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobCountArgs} args - Arguments to filter Jobs to count.
     * @example
     * // Count the number of Jobs
     * const count = await prisma.job.count({
     *   where: {
     *     // ... the filter for the Jobs we want to count
     *   }
     * })
    **/
    count<T extends JobCountArgs>(
      args?: Subset<T, JobCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Job.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobAggregateArgs>(args: Subset<T, JobAggregateArgs>): Prisma.PrismaPromise<GetJobAggregateType<T>>

    /**
     * Group by Job.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobGroupByArgs['orderBy'] }
        : { orderBy?: JobGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Job model
   */
  readonly fields: JobFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Job.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Job model
   */
  interface JobFieldRefs {
    readonly Id: FieldRef<"Job", 'String'>
    readonly IsEnabled: FieldRef<"Job", 'Boolean'>
    readonly FirstRunCompleted: FieldRef<"Job", 'Boolean'>
    readonly Type: FieldRef<"Job", 'JobType'>
    readonly Status: FieldRef<"Job", 'JobStatus'>
    readonly CronExpression: FieldRef<"Job", 'CronExpression'>
    readonly Name: FieldRef<"Job", 'String'>
    readonly Description: FieldRef<"Job", 'String'>
    readonly Parameters: FieldRef<"Job", 'Json'>
    readonly LastRunAt: FieldRef<"Job", 'DateTime'>
    readonly NextRunAt: FieldRef<"Job", 'DateTime'>
    readonly LastError: FieldRef<"Job", 'String'>
    readonly ExecutionCount: FieldRef<"Job", 'Int'>
    readonly CreatedAt: FieldRef<"Job", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Job", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Job findUnique
   */
  export type JobFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job findUniqueOrThrow
   */
  export type JobFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job findFirst
   */
  export type JobFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Jobs.
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Jobs.
     */
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Job findFirstOrThrow
   */
  export type JobFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Filter, which Job to fetch.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Jobs.
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Jobs.
     */
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Job findMany
   */
  export type JobFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Filter, which Jobs to fetch.
     */
    where?: JobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jobs to fetch.
     */
    orderBy?: JobOrderByWithRelationInput | JobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Jobs.
     */
    cursor?: JobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jobs.
     */
    skip?: number
    distinct?: JobScalarFieldEnum | JobScalarFieldEnum[]
  }

  /**
   * Job create
   */
  export type JobCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * The data needed to create a Job.
     */
    data: XOR<JobCreateInput, JobUncheckedCreateInput>
  }

  /**
   * Job createMany
   */
  export type JobCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Jobs.
     */
    data: JobCreateManyInput | JobCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Job createManyAndReturn
   */
  export type JobCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * The data used to create many Jobs.
     */
    data: JobCreateManyInput | JobCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Job update
   */
  export type JobUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * The data needed to update a Job.
     */
    data: XOR<JobUpdateInput, JobUncheckedUpdateInput>
    /**
     * Choose, which Job to update.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job updateMany
   */
  export type JobUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Jobs.
     */
    data: XOR<JobUpdateManyMutationInput, JobUncheckedUpdateManyInput>
    /**
     * Filter which Jobs to update
     */
    where?: JobWhereInput
    /**
     * Limit how many Jobs to update.
     */
    limit?: number
  }

  /**
   * Job updateManyAndReturn
   */
  export type JobUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * The data used to update Jobs.
     */
    data: XOR<JobUpdateManyMutationInput, JobUncheckedUpdateManyInput>
    /**
     * Filter which Jobs to update
     */
    where?: JobWhereInput
    /**
     * Limit how many Jobs to update.
     */
    limit?: number
  }

  /**
   * Job upsert
   */
  export type JobUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * The filter to search for the Job to update in case it exists.
     */
    where: JobWhereUniqueInput
    /**
     * In case the Job found by the `where` argument doesn't exist, create a new Job with this data.
     */
    create: XOR<JobCreateInput, JobUncheckedCreateInput>
    /**
     * In case the Job was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobUpdateInput, JobUncheckedUpdateInput>
  }

  /**
   * Job delete
   */
  export type JobDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
    /**
     * Filter which Job to delete.
     */
    where: JobWhereUniqueInput
  }

  /**
   * Job deleteMany
   */
  export type JobDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Jobs to delete
     */
    where?: JobWhereInput
    /**
     * Limit how many Jobs to delete.
     */
    limit?: number
  }

  /**
   * Job without action
   */
  export type JobDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Job
     */
    select?: JobSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Job
     */
    omit?: JobOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AppConfigScalarFieldEnum: {
    Id: 'Id',
    OnAirSyncEnabled: 'OnAirSyncEnabled',
    OnAirVASyncEnabled: 'OnAirVASyncEnabled',
    OnAirVAMembersSyncEnabled: 'OnAirVAMembersSyncEnabled',
    OnAirCompanySyncEnabled: 'OnAirCompanySyncEnabled',
    DiscordServerInviteLink: 'DiscordServerInviteLink',
    DiscordServerInviteLinkEnabled: 'DiscordServerInviteLinkEnabled',
    AcceptingNewMembers: 'AcceptingNewMembers',
    DiscordAuthEnabled: 'DiscordAuthEnabled',
    DiscordAuthCreateUser: 'DiscordAuthCreateUser',
    LocalAuthEnabled: 'LocalAuthEnabled',
    VirtualAirlineInitiated: 'VirtualAirlineInitiated',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type AppConfigScalarFieldEnum = (typeof AppConfigScalarFieldEnum)[keyof typeof AppConfigScalarFieldEnum]


  export const InviteCodeScalarFieldEnum: {
    Id: 'Id',
    Code: 'Code',
    IsUsed: 'IsUsed',
    UsedAt: 'UsedAt',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type InviteCodeScalarFieldEnum = (typeof InviteCodeScalarFieldEnum)[keyof typeof InviteCodeScalarFieldEnum]


  export const DiscordMessageScalarFieldEnum: {
    Id: 'Id',
    ChannelId: 'ChannelId',
    Content: 'Content',
    DiscordMessageTemplateId: 'DiscordMessageTemplateId',
    DiscordChannelWebhookId: 'DiscordChannelWebhookId',
    DiscordMessageSentAt: 'DiscordMessageSentAt',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type DiscordMessageScalarFieldEnum = (typeof DiscordMessageScalarFieldEnum)[keyof typeof DiscordMessageScalarFieldEnum]


  export const DiscordMessageTemplateScalarFieldEnum: {
    Id: 'Id',
    Slug: 'Slug',
    Name: 'Name',
    Description: 'Description',
    Content: 'Content',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type DiscordMessageTemplateScalarFieldEnum = (typeof DiscordMessageTemplateScalarFieldEnum)[keyof typeof DiscordMessageTemplateScalarFieldEnum]


  export const DiscordChannelWebhookScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name',
    Description: 'Description',
    WebhookUrl: 'WebhookUrl',
    ChannelId: 'ChannelId',
    Token: 'Token',
    IsActive: 'IsActive',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type DiscordChannelWebhookScalarFieldEnum = (typeof DiscordChannelWebhookScalarFieldEnum)[keyof typeof DiscordChannelWebhookScalarFieldEnum]


  export const ListenerEventScalarFieldEnum: {
    Id: 'Id',
    Variant: 'Variant',
    Type: 'Type',
    SentAt: 'SentAt',
    Status: 'Status',
    SenderId: 'SenderId',
    Error: 'Error',
    Data: 'Data',
    DiscordMessageId: 'DiscordMessageId',
    DeliveredAt: 'DeliveredAt',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type ListenerEventScalarFieldEnum = (typeof ListenerEventScalarFieldEnum)[keyof typeof ListenerEventScalarFieldEnum]


  export const ListenerEventSenderScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name',
    Description: 'Description',
    Slug: 'Slug',
    Token: 'Token',
    IsActive: 'IsActive',
    DiscordChannelWebhookId: 'DiscordChannelWebhookId',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type ListenerEventSenderScalarFieldEnum = (typeof ListenerEventSenderScalarFieldEnum)[keyof typeof ListenerEventSenderScalarFieldEnum]


  export const UserScalarFieldEnum: {
    Id: 'Id',
    Username: 'Username',
    Password: 'Password',
    Email: 'Email',
    FirstName: 'FirstName',
    LastName: 'LastName',
    FirstLoginCompleted: 'FirstLoginCompleted',
    IsOnline: 'IsOnline',
    IsBanned: 'IsBanned',
    BanReason: 'BanReason',
    BanExpiresAt: 'BanExpiresAt',
    IsVerified: 'IsVerified',
    LastLogin: 'LastLogin',
    InviteCodeId: 'InviteCodeId',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DiscordId: 'DiscordId',
    DiscordUsername: 'DiscordUsername',
    DiscordAvatar: 'DiscordAvatar',
    DiscordEmail: 'DiscordEmail'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserPrivacySettingsScalarFieldEnum: {
    Id: 'Id',
    UserId: 'UserId',
    ShowOnlineStatus: 'ShowOnlineStatus',
    ShowFirstName: 'ShowFirstName',
    ShowLastName: 'ShowLastName',
    ShowLastNameInitial: 'ShowLastNameInitial',
    ShowLastLogin: 'ShowLastLogin',
    CreatedAt: 'CreatedAt'
  };

  export type UserPrivacySettingsScalarFieldEnum = (typeof UserPrivacySettingsScalarFieldEnum)[keyof typeof UserPrivacySettingsScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name',
    Description: 'Description',
    Slug: 'Slug',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    VirtualAirlineRoleId: 'VirtualAirlineRoleId'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const PermissionScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name',
    Description: 'Description',
    Slug: 'Slug',
    Entity: 'Entity',
    Action: 'Action'
  };

  export type PermissionScalarFieldEnum = (typeof PermissionScalarFieldEnum)[keyof typeof PermissionScalarFieldEnum]


  export const LiveryScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name',
    IsActive: 'IsActive',
    AircraftId: 'AircraftId',
    DownloadCount: 'DownloadCount',
    Image: 'Image',
    ImageFileName: 'ImageFileName',
    CoverPhoto: 'CoverPhoto',
    Metadata: 'Metadata',
    Url: 'Url',
    Description: 'Description',
    DownloadUrl: 'DownloadUrl',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type LiveryScalarFieldEnum = (typeof LiveryScalarFieldEnum)[keyof typeof LiveryScalarFieldEnum]


  export const LiveryImageScalarFieldEnum: {
    Id: 'Id',
    LiveryId: 'LiveryId',
    Name: 'Name',
    Type: 'Type',
    Path: 'Path',
    Size: 'Size',
    MimeType: 'MimeType',
    FileName: 'FileName',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type LiveryImageScalarFieldEnum = (typeof LiveryImageScalarFieldEnum)[keyof typeof LiveryImageScalarFieldEnum]


  export const LiveryFileScalarFieldEnum: {
    Id: 'Id',
    LiveryId: 'LiveryId',
    Name: 'Name',
    Type: 'Type',
    Path: 'Path',
    Size: 'Size',
    MimeType: 'MimeType',
    FileName: 'FileName',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type LiveryFileScalarFieldEnum = (typeof LiveryFileScalarFieldEnum)[keyof typeof LiveryFileScalarFieldEnum]


  export const VirtualAirlineScalarFieldEnum: {
    Id: 'Id',
    ApiKey: 'ApiKey',
    IsPrimary: 'IsPrimary',
    Identifier: 'Identifier',
    Name: 'Name',
    Description: 'Description',
    WorldId: 'WorldId',
    LastDividendsDistribution: 'LastDividendsDistribution',
    LastComputationDate: 'LastComputationDate',
    ComputedMemberCount: 'ComputedMemberCount',
    ComputedAircraftsCount: 'ComputedAircraftsCount',
    ComputedNumberOfFlights30Days: 'ComputedNumberOfFlights30Days',
    ComputedNumberOfFlightHours30Days: 'ComputedNumberOfFlightHours30Days',
    ComputedMostUsedAirports: 'ComputedMostUsedAirports',
    LastConnection: 'LastConnection',
    LastReportDate: 'LastReportDate',
    Reputation: 'Reputation',
    CreationDate: 'CreationDate',
    DifficultyLevel: 'DifficultyLevel',
    Level: 'Level',
    LevelXP: 'LevelXP',
    TotalContractsCompleted: 'TotalContractsCompleted',
    TotalContractsEarnedCredits: 'TotalContractsEarnedCredits',
    LastRefresh: 'LastRefresh',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type VirtualAirlineScalarFieldEnum = (typeof VirtualAirlineScalarFieldEnum)[keyof typeof VirtualAirlineScalarFieldEnum]


  export const VirtualAirlineRoleScalarFieldEnum: {
    Id: 'Id',
    VAId: 'VAId',
    Name: 'Name',
    Permission: 'Permission',
    IsDefaultNewRole: 'IsDefaultNewRole',
    Color: 'Color',
    PayPercent: 'PayPercent',
    IsHidden: 'IsHidden',
    RestrictLoadingVAJobsIntoNonVAAircraft: 'RestrictLoadingVAJobsIntoNonVAAircraft',
    RestrictLoadingNonVAJobsIntoVAAircraft: 'RestrictLoadingNonVAJobsIntoVAAircraft',
    PayWeekly: 'PayWeekly',
    PayPerFlightHour: 'PayPerFlightHour',
    LastRefresh: 'LastRefresh',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type VirtualAirlineRoleScalarFieldEnum = (typeof VirtualAirlineRoleScalarFieldEnum)[keyof typeof VirtualAirlineRoleScalarFieldEnum]


  export const WorldScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name',
    Slug: 'Slug',
    Description: 'Description',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type WorldScalarFieldEnum = (typeof WorldScalarFieldEnum)[keyof typeof WorldScalarFieldEnum]


  export const MemberScalarFieldEnum: {
    Id: 'Id',
    IsActive: 'IsActive',
    DeactivatedAt: 'DeactivatedAt',
    VAId: 'VAId',
    VARoleId: 'VARoleId',
    TotalCargosTransportedLbs: 'TotalCargosTransportedLbs',
    TotalPAXsTransported: 'TotalPAXsTransported',
    TotalEarnedCredits: 'TotalEarnedCredits',
    TotalSpentCredits: 'TotalSpentCredits',
    NumberOfFlights: 'NumberOfFlights',
    FlightHours: 'FlightHours',
    Color: 'Color',
    ReputationImpact: 'ReputationImpact',
    LastVAFlightDate: 'LastVAFlightDate',
    LastRefresh: 'LastRefresh',
    UserId: 'UserId',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    CompanyId: 'CompanyId'
  };

  export type MemberScalarFieldEnum = (typeof MemberScalarFieldEnum)[keyof typeof MemberScalarFieldEnum]


  export const CompanyScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name',
    AirlineCode: 'AirlineCode',
    CreationDate: 'CreationDate',
    Level: 'Level',
    LevelXP: 'LevelXP',
    Reputation: 'Reputation',
    Paused: 'Paused',
    LastConnection: 'LastConnection',
    LastReportDate: 'LastReportDate',
    DifficultyLevel: 'DifficultyLevel',
    WorldId: 'WorldId',
    LastRefresh: 'LastRefresh',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const AircraftScalarFieldEnum: {
    Id: 'Id',
    Identifier: 'Identifier',
    DisplayName: 'DisplayName',
    AircraftStatusId: 'AircraftStatusId',
    AircraftClassId: 'AircraftClassId',
    VirtualAirlineId: 'VirtualAirlineId',
    CurrentAirportId: 'CurrentAirportId',
    LastRefresh: 'LastRefresh',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type AircraftScalarFieldEnum = (typeof AircraftScalarFieldEnum)[keyof typeof AircraftScalarFieldEnum]


  export const AircraftClassScalarFieldEnum: {
    Id: 'Id',
    ShortName: 'ShortName',
    Name: 'Name'
  };

  export type AircraftClassScalarFieldEnum = (typeof AircraftClassScalarFieldEnum)[keyof typeof AircraftClassScalarFieldEnum]


  export const AircraftMaintenanceScalarFieldEnum: {
    Id: 'Id',
    AircraftId: 'AircraftId',
    AnnualCheckup: 'AnnualCheckup',
    Inspection100Hours: 'Inspection100Hours',
    FailuresRepair: 'FailuresRepair',
    AirframeRepair: 'AirframeRepair',
    AirframeReplace: 'AirframeReplace',
    EcoSeats: 'EcoSeats',
    BusSeats: 'BusSeats',
    FirstClassSeats: 'FirstClassSeats',
    AirframeRepairCondition: 'AirframeRepairCondition',
    MaintenanceFBOId: 'MaintenanceFBOId',
    RemainingMaintenanceWorkHours: 'RemainingMaintenanceWorkHours',
    Amount: 'Amount',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type AircraftMaintenanceScalarFieldEnum = (typeof AircraftMaintenanceScalarFieldEnum)[keyof typeof AircraftMaintenanceScalarFieldEnum]


  export const AircraftStatusScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name'
  };

  export type AircraftStatusScalarFieldEnum = (typeof AircraftStatusScalarFieldEnum)[keyof typeof AircraftStatusScalarFieldEnum]


  export const AirportScalarFieldEnum: {
    Id: 'Id',
    ICAO: 'ICAO',
    IATA: 'IATA',
    Description: 'Description',
    Name: 'Name',
    Size: 'Size',
    City: 'City',
    State: 'State',
    CountryCode: 'CountryCode',
    CountryName: 'CountryName',
    CountryEmoji: 'CountryEmoji',
    Latitude: 'Latitude',
    Longitude: 'Longitude',
    HomeWebSiteUrl: 'HomeWebSiteUrl',
    WikiUrl: 'WikiUrl',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type AirportScalarFieldEnum = (typeof AirportScalarFieldEnum)[keyof typeof AirportScalarFieldEnum]


  export const FlightScalarFieldEnum: {
    Id: 'Id',
    AircraftId: 'AircraftId',
    CompanyId: 'CompanyId',
    Registered: 'Registered',
    Category: 'Category',
    ResultComments: 'ResultComments',
    StartTime: 'StartTime',
    EndTime: 'EndTime',
    EngineOnTime: 'EngineOnTime',
    EngineOffTime: 'EngineOffTime',
    AirborneTime: 'AirborneTime',
    LandedTime: 'LandedTime',
    IntendedFlightLevel: 'IntendedFlightLevel',
    Passengers: 'Passengers',
    Cargo: 'Cargo',
    AddedFuelQty: 'AddedFuelQty',
    IsAI: 'IsAI',
    VerticalSpeedAtTouchdownMpS: 'VerticalSpeedAtTouchdownMpS',
    MaxGForce: 'MaxGForce',
    MinGForce: 'MinGForce',
    MaxBank: 'MaxBank',
    MaxPitch: 'MaxPitch',
    HasStalled: 'HasStalled',
    HasOverspeeded: 'HasOverspeeded',
    XPFlight: 'XPFlight',
    XPFlightBonus: 'XPFlightBonus',
    XPMissions: 'XPMissions',
    CargosTotalWeight: 'CargosTotalWeight',
    PAXCount: 'PAXCount',
    AircraftCurrentFOB: 'AircraftCurrentFOB',
    AircraftCurrentAltitude: 'AircraftCurrentAltitude',
    ActualCruiseAltitude: 'ActualCruiseAltitude',
    ActualConsumptionAtCruiseLevelInLbsPerHour: 'ActualConsumptionAtCruiseLevelInLbsPerHour',
    ActualTotalFuelConsumptionInLbs: 'ActualTotalFuelConsumptionInLbs',
    ActualConsumptionAtCruiseLevelInGalPerHour: 'ActualConsumptionAtCruiseLevelInGalPerHour',
    ActualTASAtCruiseLevel: 'ActualTASAtCruiseLevel',
    ActualCruiseTimeInMinutes: 'ActualCruiseTimeInMinutes',
    ActualPressureAltitude: 'ActualPressureAltitude',
    RegisterState: 'RegisterState',
    WrongFuelDetected: 'WrongFuelDetected',
    WrongWeightDetected: 'WrongWeightDetected',
    TimeOffset: 'TimeOffset',
    StartLatitude: 'StartLatitude',
    StartLongitude: 'StartLongitude',
    StartHeading: 'StartHeading',
    UseFreelanceRouteSchedule: 'UseFreelanceRouteSchedule',
    RestCrewAfterWarp: 'RestCrewAfterWarp',
    Score: 'Score',
    CanResumeOrAbort: 'CanResumeOrAbort',
    EngineOnRealTime: 'EngineOnRealTime',
    EngineOffRealTime: 'EngineOffRealTime',
    LandedRealTime: 'LandedRealTime',
    AirborneRealTime: 'AirborneRealTime',
    DepartureAirportId: 'DepartureAirportId',
    ArrivalIntendedAirportId: 'ArrivalIntendedAirportId',
    ArrivalAlternateAirportId: 'ArrivalAlternateAirportId',
    ArrivalActualAirportId: 'ArrivalActualAirportId',
    VAId: 'VAId',
    MemberId: 'MemberId',
    LastRefresh: 'LastRefresh',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    FlightStatus: 'FlightStatus'
  };

  export type FlightScalarFieldEnum = (typeof FlightScalarFieldEnum)[keyof typeof FlightScalarFieldEnum]


  export const FlightRouteScalarFieldEnum: {
    Id: 'Id',
    FlightId: 'FlightId',
    MemberId: 'MemberId',
    Route: 'Route',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type FlightRouteScalarFieldEnum = (typeof FlightRouteScalarFieldEnum)[keyof typeof FlightRouteScalarFieldEnum]


  export const JobScalarFieldEnum: {
    Id: 'Id',
    IsEnabled: 'IsEnabled',
    FirstRunCompleted: 'FirstRunCompleted',
    Type: 'Type',
    Status: 'Status',
    CronExpression: 'CronExpression',
    Name: 'Name',
    Description: 'Description',
    Parameters: 'Parameters',
    LastRunAt: 'LastRunAt',
    NextRunAt: 'NextRunAt',
    LastError: 'LastError',
    ExecutionCount: 'ExecutionCount',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type JobScalarFieldEnum = (typeof JobScalarFieldEnum)[keyof typeof JobScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'ListenerEventStatus'
   */
  export type EnumListenerEventStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ListenerEventStatus'>
    


  /**
   * Reference to a field of type 'ListenerEventStatus[]'
   */
  export type ListEnumListenerEventStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ListenerEventStatus[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'FlightStatus'
   */
  export type EnumFlightStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FlightStatus'>
    


  /**
   * Reference to a field of type 'FlightStatus[]'
   */
  export type ListEnumFlightStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FlightStatus[]'>
    


  /**
   * Reference to a field of type 'JobType'
   */
  export type EnumJobTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobType'>
    


  /**
   * Reference to a field of type 'JobType[]'
   */
  export type ListEnumJobTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobType[]'>
    


  /**
   * Reference to a field of type 'JobStatus'
   */
  export type EnumJobStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobStatus'>
    


  /**
   * Reference to a field of type 'JobStatus[]'
   */
  export type ListEnumJobStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobStatus[]'>
    


  /**
   * Reference to a field of type 'CronExpression'
   */
  export type EnumCronExpressionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CronExpression'>
    


  /**
   * Reference to a field of type 'CronExpression[]'
   */
  export type ListEnumCronExpressionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CronExpression[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type AppConfigWhereInput = {
    AND?: AppConfigWhereInput | AppConfigWhereInput[]
    OR?: AppConfigWhereInput[]
    NOT?: AppConfigWhereInput | AppConfigWhereInput[]
    Id?: IntFilter<"AppConfig"> | number
    OnAirSyncEnabled?: BoolFilter<"AppConfig"> | boolean
    OnAirVASyncEnabled?: BoolFilter<"AppConfig"> | boolean
    OnAirVAMembersSyncEnabled?: BoolFilter<"AppConfig"> | boolean
    OnAirCompanySyncEnabled?: BoolFilter<"AppConfig"> | boolean
    DiscordServerInviteLink?: StringNullableFilter<"AppConfig"> | string | null
    DiscordServerInviteLinkEnabled?: BoolFilter<"AppConfig"> | boolean
    AcceptingNewMembers?: BoolFilter<"AppConfig"> | boolean
    DiscordAuthEnabled?: BoolFilter<"AppConfig"> | boolean
    DiscordAuthCreateUser?: BoolFilter<"AppConfig"> | boolean
    LocalAuthEnabled?: BoolFilter<"AppConfig"> | boolean
    VirtualAirlineInitiated?: BoolFilter<"AppConfig"> | boolean
    CreatedAt?: DateTimeFilter<"AppConfig"> | Date | string
    UpdatedAt?: DateTimeFilter<"AppConfig"> | Date | string
  }

  export type AppConfigOrderByWithRelationInput = {
    Id?: SortOrder
    OnAirSyncEnabled?: SortOrder
    OnAirVASyncEnabled?: SortOrder
    OnAirVAMembersSyncEnabled?: SortOrder
    OnAirCompanySyncEnabled?: SortOrder
    DiscordServerInviteLink?: SortOrderInput | SortOrder
    DiscordServerInviteLinkEnabled?: SortOrder
    AcceptingNewMembers?: SortOrder
    DiscordAuthEnabled?: SortOrder
    DiscordAuthCreateUser?: SortOrder
    LocalAuthEnabled?: SortOrder
    VirtualAirlineInitiated?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AppConfigWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: AppConfigWhereInput | AppConfigWhereInput[]
    OR?: AppConfigWhereInput[]
    NOT?: AppConfigWhereInput | AppConfigWhereInput[]
    OnAirSyncEnabled?: BoolFilter<"AppConfig"> | boolean
    OnAirVASyncEnabled?: BoolFilter<"AppConfig"> | boolean
    OnAirVAMembersSyncEnabled?: BoolFilter<"AppConfig"> | boolean
    OnAirCompanySyncEnabled?: BoolFilter<"AppConfig"> | boolean
    DiscordServerInviteLink?: StringNullableFilter<"AppConfig"> | string | null
    DiscordServerInviteLinkEnabled?: BoolFilter<"AppConfig"> | boolean
    AcceptingNewMembers?: BoolFilter<"AppConfig"> | boolean
    DiscordAuthEnabled?: BoolFilter<"AppConfig"> | boolean
    DiscordAuthCreateUser?: BoolFilter<"AppConfig"> | boolean
    LocalAuthEnabled?: BoolFilter<"AppConfig"> | boolean
    VirtualAirlineInitiated?: BoolFilter<"AppConfig"> | boolean
    CreatedAt?: DateTimeFilter<"AppConfig"> | Date | string
    UpdatedAt?: DateTimeFilter<"AppConfig"> | Date | string
  }, "Id">

  export type AppConfigOrderByWithAggregationInput = {
    Id?: SortOrder
    OnAirSyncEnabled?: SortOrder
    OnAirVASyncEnabled?: SortOrder
    OnAirVAMembersSyncEnabled?: SortOrder
    OnAirCompanySyncEnabled?: SortOrder
    DiscordServerInviteLink?: SortOrderInput | SortOrder
    DiscordServerInviteLinkEnabled?: SortOrder
    AcceptingNewMembers?: SortOrder
    DiscordAuthEnabled?: SortOrder
    DiscordAuthCreateUser?: SortOrder
    LocalAuthEnabled?: SortOrder
    VirtualAirlineInitiated?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: AppConfigCountOrderByAggregateInput
    _avg?: AppConfigAvgOrderByAggregateInput
    _max?: AppConfigMaxOrderByAggregateInput
    _min?: AppConfigMinOrderByAggregateInput
    _sum?: AppConfigSumOrderByAggregateInput
  }

  export type AppConfigScalarWhereWithAggregatesInput = {
    AND?: AppConfigScalarWhereWithAggregatesInput | AppConfigScalarWhereWithAggregatesInput[]
    OR?: AppConfigScalarWhereWithAggregatesInput[]
    NOT?: AppConfigScalarWhereWithAggregatesInput | AppConfigScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"AppConfig"> | number
    OnAirSyncEnabled?: BoolWithAggregatesFilter<"AppConfig"> | boolean
    OnAirVASyncEnabled?: BoolWithAggregatesFilter<"AppConfig"> | boolean
    OnAirVAMembersSyncEnabled?: BoolWithAggregatesFilter<"AppConfig"> | boolean
    OnAirCompanySyncEnabled?: BoolWithAggregatesFilter<"AppConfig"> | boolean
    DiscordServerInviteLink?: StringNullableWithAggregatesFilter<"AppConfig"> | string | null
    DiscordServerInviteLinkEnabled?: BoolWithAggregatesFilter<"AppConfig"> | boolean
    AcceptingNewMembers?: BoolWithAggregatesFilter<"AppConfig"> | boolean
    DiscordAuthEnabled?: BoolWithAggregatesFilter<"AppConfig"> | boolean
    DiscordAuthCreateUser?: BoolWithAggregatesFilter<"AppConfig"> | boolean
    LocalAuthEnabled?: BoolWithAggregatesFilter<"AppConfig"> | boolean
    VirtualAirlineInitiated?: BoolWithAggregatesFilter<"AppConfig"> | boolean
    CreatedAt?: DateTimeWithAggregatesFilter<"AppConfig"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"AppConfig"> | Date | string
  }

  export type InviteCodeWhereInput = {
    AND?: InviteCodeWhereInput | InviteCodeWhereInput[]
    OR?: InviteCodeWhereInput[]
    NOT?: InviteCodeWhereInput | InviteCodeWhereInput[]
    Id?: UuidFilter<"InviteCode"> | string
    Code?: StringFilter<"InviteCode"> | string
    IsUsed?: BoolFilter<"InviteCode"> | boolean
    UsedAt?: DateTimeNullableFilter<"InviteCode"> | Date | string | null
    CreatedAt?: DateTimeFilter<"InviteCode"> | Date | string
    UpdatedAt?: DateTimeFilter<"InviteCode"> | Date | string
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type InviteCodeOrderByWithRelationInput = {
    Id?: SortOrder
    Code?: SortOrder
    IsUsed?: SortOrder
    UsedAt?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    User?: UserOrderByWithRelationInput
  }

  export type InviteCodeWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    Code?: string
    AND?: InviteCodeWhereInput | InviteCodeWhereInput[]
    OR?: InviteCodeWhereInput[]
    NOT?: InviteCodeWhereInput | InviteCodeWhereInput[]
    IsUsed?: BoolFilter<"InviteCode"> | boolean
    UsedAt?: DateTimeNullableFilter<"InviteCode"> | Date | string | null
    CreatedAt?: DateTimeFilter<"InviteCode"> | Date | string
    UpdatedAt?: DateTimeFilter<"InviteCode"> | Date | string
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "Id" | "Id" | "Code">

  export type InviteCodeOrderByWithAggregationInput = {
    Id?: SortOrder
    Code?: SortOrder
    IsUsed?: SortOrder
    UsedAt?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: InviteCodeCountOrderByAggregateInput
    _max?: InviteCodeMaxOrderByAggregateInput
    _min?: InviteCodeMinOrderByAggregateInput
  }

  export type InviteCodeScalarWhereWithAggregatesInput = {
    AND?: InviteCodeScalarWhereWithAggregatesInput | InviteCodeScalarWhereWithAggregatesInput[]
    OR?: InviteCodeScalarWhereWithAggregatesInput[]
    NOT?: InviteCodeScalarWhereWithAggregatesInput | InviteCodeScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"InviteCode"> | string
    Code?: StringWithAggregatesFilter<"InviteCode"> | string
    IsUsed?: BoolWithAggregatesFilter<"InviteCode"> | boolean
    UsedAt?: DateTimeNullableWithAggregatesFilter<"InviteCode"> | Date | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"InviteCode"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"InviteCode"> | Date | string
  }

  export type DiscordMessageWhereInput = {
    AND?: DiscordMessageWhereInput | DiscordMessageWhereInput[]
    OR?: DiscordMessageWhereInput[]
    NOT?: DiscordMessageWhereInput | DiscordMessageWhereInput[]
    Id?: UuidFilter<"DiscordMessage"> | string
    ChannelId?: StringFilter<"DiscordMessage"> | string
    Content?: StringFilter<"DiscordMessage"> | string
    DiscordMessageTemplateId?: IntNullableFilter<"DiscordMessage"> | number | null
    DiscordChannelWebhookId?: UuidNullableFilter<"DiscordMessage"> | string | null
    DiscordMessageSentAt?: DateTimeNullableFilter<"DiscordMessage"> | Date | string | null
    CreatedAt?: DateTimeFilter<"DiscordMessage"> | Date | string
    UpdatedAt?: DateTimeFilter<"DiscordMessage"> | Date | string
    DiscordMessageTemplate?: XOR<DiscordMessageTemplateNullableScalarRelationFilter, DiscordMessageTemplateWhereInput> | null
    DiscordChannelWebhook?: XOR<DiscordChannelWebhookNullableScalarRelationFilter, DiscordChannelWebhookWhereInput> | null
    ListenerEvents?: ListenerEventListRelationFilter
  }

  export type DiscordMessageOrderByWithRelationInput = {
    Id?: SortOrder
    ChannelId?: SortOrder
    Content?: SortOrder
    DiscordMessageTemplateId?: SortOrderInput | SortOrder
    DiscordChannelWebhookId?: SortOrderInput | SortOrder
    DiscordMessageSentAt?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DiscordMessageTemplate?: DiscordMessageTemplateOrderByWithRelationInput
    DiscordChannelWebhook?: DiscordChannelWebhookOrderByWithRelationInput
    ListenerEvents?: ListenerEventOrderByRelationAggregateInput
  }

  export type DiscordMessageWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: DiscordMessageWhereInput | DiscordMessageWhereInput[]
    OR?: DiscordMessageWhereInput[]
    NOT?: DiscordMessageWhereInput | DiscordMessageWhereInput[]
    ChannelId?: StringFilter<"DiscordMessage"> | string
    Content?: StringFilter<"DiscordMessage"> | string
    DiscordMessageTemplateId?: IntNullableFilter<"DiscordMessage"> | number | null
    DiscordChannelWebhookId?: UuidNullableFilter<"DiscordMessage"> | string | null
    DiscordMessageSentAt?: DateTimeNullableFilter<"DiscordMessage"> | Date | string | null
    CreatedAt?: DateTimeFilter<"DiscordMessage"> | Date | string
    UpdatedAt?: DateTimeFilter<"DiscordMessage"> | Date | string
    DiscordMessageTemplate?: XOR<DiscordMessageTemplateNullableScalarRelationFilter, DiscordMessageTemplateWhereInput> | null
    DiscordChannelWebhook?: XOR<DiscordChannelWebhookNullableScalarRelationFilter, DiscordChannelWebhookWhereInput> | null
    ListenerEvents?: ListenerEventListRelationFilter
  }, "Id" | "Id">

  export type DiscordMessageOrderByWithAggregationInput = {
    Id?: SortOrder
    ChannelId?: SortOrder
    Content?: SortOrder
    DiscordMessageTemplateId?: SortOrderInput | SortOrder
    DiscordChannelWebhookId?: SortOrderInput | SortOrder
    DiscordMessageSentAt?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: DiscordMessageCountOrderByAggregateInput
    _avg?: DiscordMessageAvgOrderByAggregateInput
    _max?: DiscordMessageMaxOrderByAggregateInput
    _min?: DiscordMessageMinOrderByAggregateInput
    _sum?: DiscordMessageSumOrderByAggregateInput
  }

  export type DiscordMessageScalarWhereWithAggregatesInput = {
    AND?: DiscordMessageScalarWhereWithAggregatesInput | DiscordMessageScalarWhereWithAggregatesInput[]
    OR?: DiscordMessageScalarWhereWithAggregatesInput[]
    NOT?: DiscordMessageScalarWhereWithAggregatesInput | DiscordMessageScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"DiscordMessage"> | string
    ChannelId?: StringWithAggregatesFilter<"DiscordMessage"> | string
    Content?: StringWithAggregatesFilter<"DiscordMessage"> | string
    DiscordMessageTemplateId?: IntNullableWithAggregatesFilter<"DiscordMessage"> | number | null
    DiscordChannelWebhookId?: UuidNullableWithAggregatesFilter<"DiscordMessage"> | string | null
    DiscordMessageSentAt?: DateTimeNullableWithAggregatesFilter<"DiscordMessage"> | Date | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"DiscordMessage"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"DiscordMessage"> | Date | string
  }

  export type DiscordMessageTemplateWhereInput = {
    AND?: DiscordMessageTemplateWhereInput | DiscordMessageTemplateWhereInput[]
    OR?: DiscordMessageTemplateWhereInput[]
    NOT?: DiscordMessageTemplateWhereInput | DiscordMessageTemplateWhereInput[]
    Id?: IntFilter<"DiscordMessageTemplate"> | number
    Slug?: StringFilter<"DiscordMessageTemplate"> | string
    Name?: StringFilter<"DiscordMessageTemplate"> | string
    Description?: StringNullableFilter<"DiscordMessageTemplate"> | string | null
    Content?: StringFilter<"DiscordMessageTemplate"> | string
    CreatedAt?: DateTimeFilter<"DiscordMessageTemplate"> | Date | string
    UpdatedAt?: DateTimeFilter<"DiscordMessageTemplate"> | Date | string
    DiscordMessages?: DiscordMessageListRelationFilter
  }

  export type DiscordMessageTemplateOrderByWithRelationInput = {
    Id?: SortOrder
    Slug?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    Content?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DiscordMessages?: DiscordMessageOrderByRelationAggregateInput
  }

  export type DiscordMessageTemplateWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    Slug?: string
    AND?: DiscordMessageTemplateWhereInput | DiscordMessageTemplateWhereInput[]
    OR?: DiscordMessageTemplateWhereInput[]
    NOT?: DiscordMessageTemplateWhereInput | DiscordMessageTemplateWhereInput[]
    Name?: StringFilter<"DiscordMessageTemplate"> | string
    Description?: StringNullableFilter<"DiscordMessageTemplate"> | string | null
    Content?: StringFilter<"DiscordMessageTemplate"> | string
    CreatedAt?: DateTimeFilter<"DiscordMessageTemplate"> | Date | string
    UpdatedAt?: DateTimeFilter<"DiscordMessageTemplate"> | Date | string
    DiscordMessages?: DiscordMessageListRelationFilter
  }, "Id" | "Id" | "Slug">

  export type DiscordMessageTemplateOrderByWithAggregationInput = {
    Id?: SortOrder
    Slug?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    Content?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: DiscordMessageTemplateCountOrderByAggregateInput
    _avg?: DiscordMessageTemplateAvgOrderByAggregateInput
    _max?: DiscordMessageTemplateMaxOrderByAggregateInput
    _min?: DiscordMessageTemplateMinOrderByAggregateInput
    _sum?: DiscordMessageTemplateSumOrderByAggregateInput
  }

  export type DiscordMessageTemplateScalarWhereWithAggregatesInput = {
    AND?: DiscordMessageTemplateScalarWhereWithAggregatesInput | DiscordMessageTemplateScalarWhereWithAggregatesInput[]
    OR?: DiscordMessageTemplateScalarWhereWithAggregatesInput[]
    NOT?: DiscordMessageTemplateScalarWhereWithAggregatesInput | DiscordMessageTemplateScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"DiscordMessageTemplate"> | number
    Slug?: StringWithAggregatesFilter<"DiscordMessageTemplate"> | string
    Name?: StringWithAggregatesFilter<"DiscordMessageTemplate"> | string
    Description?: StringNullableWithAggregatesFilter<"DiscordMessageTemplate"> | string | null
    Content?: StringWithAggregatesFilter<"DiscordMessageTemplate"> | string
    CreatedAt?: DateTimeWithAggregatesFilter<"DiscordMessageTemplate"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"DiscordMessageTemplate"> | Date | string
  }

  export type DiscordChannelWebhookWhereInput = {
    AND?: DiscordChannelWebhookWhereInput | DiscordChannelWebhookWhereInput[]
    OR?: DiscordChannelWebhookWhereInput[]
    NOT?: DiscordChannelWebhookWhereInput | DiscordChannelWebhookWhereInput[]
    Id?: UuidFilter<"DiscordChannelWebhook"> | string
    Name?: StringFilter<"DiscordChannelWebhook"> | string
    Description?: StringNullableFilter<"DiscordChannelWebhook"> | string | null
    WebhookUrl?: StringFilter<"DiscordChannelWebhook"> | string
    ChannelId?: StringFilter<"DiscordChannelWebhook"> | string
    Token?: StringFilter<"DiscordChannelWebhook"> | string
    IsActive?: BoolFilter<"DiscordChannelWebhook"> | boolean
    CreatedAt?: DateTimeFilter<"DiscordChannelWebhook"> | Date | string
    UpdatedAt?: DateTimeFilter<"DiscordChannelWebhook"> | Date | string
    DiscordMessages?: DiscordMessageListRelationFilter
    ListenerEventSenders?: ListenerEventSenderListRelationFilter
  }

  export type DiscordChannelWebhookOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    WebhookUrl?: SortOrder
    ChannelId?: SortOrder
    Token?: SortOrder
    IsActive?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DiscordMessages?: DiscordMessageOrderByRelationAggregateInput
    ListenerEventSenders?: ListenerEventSenderOrderByRelationAggregateInput
  }

  export type DiscordChannelWebhookWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    Token?: string
    AND?: DiscordChannelWebhookWhereInput | DiscordChannelWebhookWhereInput[]
    OR?: DiscordChannelWebhookWhereInput[]
    NOT?: DiscordChannelWebhookWhereInput | DiscordChannelWebhookWhereInput[]
    Name?: StringFilter<"DiscordChannelWebhook"> | string
    Description?: StringNullableFilter<"DiscordChannelWebhook"> | string | null
    WebhookUrl?: StringFilter<"DiscordChannelWebhook"> | string
    ChannelId?: StringFilter<"DiscordChannelWebhook"> | string
    IsActive?: BoolFilter<"DiscordChannelWebhook"> | boolean
    CreatedAt?: DateTimeFilter<"DiscordChannelWebhook"> | Date | string
    UpdatedAt?: DateTimeFilter<"DiscordChannelWebhook"> | Date | string
    DiscordMessages?: DiscordMessageListRelationFilter
    ListenerEventSenders?: ListenerEventSenderListRelationFilter
  }, "Id" | "Id" | "Token">

  export type DiscordChannelWebhookOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    WebhookUrl?: SortOrder
    ChannelId?: SortOrder
    Token?: SortOrder
    IsActive?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: DiscordChannelWebhookCountOrderByAggregateInput
    _max?: DiscordChannelWebhookMaxOrderByAggregateInput
    _min?: DiscordChannelWebhookMinOrderByAggregateInput
  }

  export type DiscordChannelWebhookScalarWhereWithAggregatesInput = {
    AND?: DiscordChannelWebhookScalarWhereWithAggregatesInput | DiscordChannelWebhookScalarWhereWithAggregatesInput[]
    OR?: DiscordChannelWebhookScalarWhereWithAggregatesInput[]
    NOT?: DiscordChannelWebhookScalarWhereWithAggregatesInput | DiscordChannelWebhookScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"DiscordChannelWebhook"> | string
    Name?: StringWithAggregatesFilter<"DiscordChannelWebhook"> | string
    Description?: StringNullableWithAggregatesFilter<"DiscordChannelWebhook"> | string | null
    WebhookUrl?: StringWithAggregatesFilter<"DiscordChannelWebhook"> | string
    ChannelId?: StringWithAggregatesFilter<"DiscordChannelWebhook"> | string
    Token?: StringWithAggregatesFilter<"DiscordChannelWebhook"> | string
    IsActive?: BoolWithAggregatesFilter<"DiscordChannelWebhook"> | boolean
    CreatedAt?: DateTimeWithAggregatesFilter<"DiscordChannelWebhook"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"DiscordChannelWebhook"> | Date | string
  }

  export type ListenerEventWhereInput = {
    AND?: ListenerEventWhereInput | ListenerEventWhereInput[]
    OR?: ListenerEventWhereInput[]
    NOT?: ListenerEventWhereInput | ListenerEventWhereInput[]
    Id?: IntFilter<"ListenerEvent"> | number
    Variant?: StringFilter<"ListenerEvent"> | string
    Type?: StringFilter<"ListenerEvent"> | string
    SentAt?: DateTimeFilter<"ListenerEvent"> | Date | string
    Status?: EnumListenerEventStatusFilter<"ListenerEvent"> | $Enums.ListenerEventStatus
    SenderId?: UuidFilter<"ListenerEvent"> | string
    Error?: StringNullableFilter<"ListenerEvent"> | string | null
    Data?: JsonNullableFilter<"ListenerEvent">
    DiscordMessageId?: UuidNullableFilter<"ListenerEvent"> | string | null
    DeliveredAt?: DateTimeNullableFilter<"ListenerEvent"> | Date | string | null
    CreatedAt?: DateTimeFilter<"ListenerEvent"> | Date | string
    UpdatedAt?: DateTimeFilter<"ListenerEvent"> | Date | string
    DiscordMessage?: XOR<DiscordMessageNullableScalarRelationFilter, DiscordMessageWhereInput> | null
    Sender?: XOR<ListenerEventSenderScalarRelationFilter, ListenerEventSenderWhereInput>
  }

  export type ListenerEventOrderByWithRelationInput = {
    Id?: SortOrder
    Variant?: SortOrder
    Type?: SortOrder
    SentAt?: SortOrder
    Status?: SortOrder
    SenderId?: SortOrder
    Error?: SortOrderInput | SortOrder
    Data?: SortOrderInput | SortOrder
    DiscordMessageId?: SortOrderInput | SortOrder
    DeliveredAt?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DiscordMessage?: DiscordMessageOrderByWithRelationInput
    Sender?: ListenerEventSenderOrderByWithRelationInput
  }

  export type ListenerEventWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: ListenerEventWhereInput | ListenerEventWhereInput[]
    OR?: ListenerEventWhereInput[]
    NOT?: ListenerEventWhereInput | ListenerEventWhereInput[]
    Variant?: StringFilter<"ListenerEvent"> | string
    Type?: StringFilter<"ListenerEvent"> | string
    SentAt?: DateTimeFilter<"ListenerEvent"> | Date | string
    Status?: EnumListenerEventStatusFilter<"ListenerEvent"> | $Enums.ListenerEventStatus
    SenderId?: UuidFilter<"ListenerEvent"> | string
    Error?: StringNullableFilter<"ListenerEvent"> | string | null
    Data?: JsonNullableFilter<"ListenerEvent">
    DiscordMessageId?: UuidNullableFilter<"ListenerEvent"> | string | null
    DeliveredAt?: DateTimeNullableFilter<"ListenerEvent"> | Date | string | null
    CreatedAt?: DateTimeFilter<"ListenerEvent"> | Date | string
    UpdatedAt?: DateTimeFilter<"ListenerEvent"> | Date | string
    DiscordMessage?: XOR<DiscordMessageNullableScalarRelationFilter, DiscordMessageWhereInput> | null
    Sender?: XOR<ListenerEventSenderScalarRelationFilter, ListenerEventSenderWhereInput>
  }, "Id" | "Id">

  export type ListenerEventOrderByWithAggregationInput = {
    Id?: SortOrder
    Variant?: SortOrder
    Type?: SortOrder
    SentAt?: SortOrder
    Status?: SortOrder
    SenderId?: SortOrder
    Error?: SortOrderInput | SortOrder
    Data?: SortOrderInput | SortOrder
    DiscordMessageId?: SortOrderInput | SortOrder
    DeliveredAt?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: ListenerEventCountOrderByAggregateInput
    _avg?: ListenerEventAvgOrderByAggregateInput
    _max?: ListenerEventMaxOrderByAggregateInput
    _min?: ListenerEventMinOrderByAggregateInput
    _sum?: ListenerEventSumOrderByAggregateInput
  }

  export type ListenerEventScalarWhereWithAggregatesInput = {
    AND?: ListenerEventScalarWhereWithAggregatesInput | ListenerEventScalarWhereWithAggregatesInput[]
    OR?: ListenerEventScalarWhereWithAggregatesInput[]
    NOT?: ListenerEventScalarWhereWithAggregatesInput | ListenerEventScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"ListenerEvent"> | number
    Variant?: StringWithAggregatesFilter<"ListenerEvent"> | string
    Type?: StringWithAggregatesFilter<"ListenerEvent"> | string
    SentAt?: DateTimeWithAggregatesFilter<"ListenerEvent"> | Date | string
    Status?: EnumListenerEventStatusWithAggregatesFilter<"ListenerEvent"> | $Enums.ListenerEventStatus
    SenderId?: UuidWithAggregatesFilter<"ListenerEvent"> | string
    Error?: StringNullableWithAggregatesFilter<"ListenerEvent"> | string | null
    Data?: JsonNullableWithAggregatesFilter<"ListenerEvent">
    DiscordMessageId?: UuidNullableWithAggregatesFilter<"ListenerEvent"> | string | null
    DeliveredAt?: DateTimeNullableWithAggregatesFilter<"ListenerEvent"> | Date | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"ListenerEvent"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"ListenerEvent"> | Date | string
  }

  export type ListenerEventSenderWhereInput = {
    AND?: ListenerEventSenderWhereInput | ListenerEventSenderWhereInput[]
    OR?: ListenerEventSenderWhereInput[]
    NOT?: ListenerEventSenderWhereInput | ListenerEventSenderWhereInput[]
    Id?: UuidFilter<"ListenerEventSender"> | string
    Name?: StringFilter<"ListenerEventSender"> | string
    Description?: StringNullableFilter<"ListenerEventSender"> | string | null
    Slug?: StringFilter<"ListenerEventSender"> | string
    Token?: StringFilter<"ListenerEventSender"> | string
    IsActive?: BoolFilter<"ListenerEventSender"> | boolean
    DiscordChannelWebhookId?: UuidNullableFilter<"ListenerEventSender"> | string | null
    CreatedAt?: DateTimeFilter<"ListenerEventSender"> | Date | string
    UpdatedAt?: DateTimeFilter<"ListenerEventSender"> | Date | string
    ListenerEvents?: ListenerEventListRelationFilter
    DiscordChannelWebhook?: XOR<DiscordChannelWebhookNullableScalarRelationFilter, DiscordChannelWebhookWhereInput> | null
  }

  export type ListenerEventSenderOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    Slug?: SortOrder
    Token?: SortOrder
    IsActive?: SortOrder
    DiscordChannelWebhookId?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    ListenerEvents?: ListenerEventOrderByRelationAggregateInput
    DiscordChannelWebhook?: DiscordChannelWebhookOrderByWithRelationInput
  }

  export type ListenerEventSenderWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    Slug?: string
    Token?: string
    AND?: ListenerEventSenderWhereInput | ListenerEventSenderWhereInput[]
    OR?: ListenerEventSenderWhereInput[]
    NOT?: ListenerEventSenderWhereInput | ListenerEventSenderWhereInput[]
    Name?: StringFilter<"ListenerEventSender"> | string
    Description?: StringNullableFilter<"ListenerEventSender"> | string | null
    IsActive?: BoolFilter<"ListenerEventSender"> | boolean
    DiscordChannelWebhookId?: UuidNullableFilter<"ListenerEventSender"> | string | null
    CreatedAt?: DateTimeFilter<"ListenerEventSender"> | Date | string
    UpdatedAt?: DateTimeFilter<"ListenerEventSender"> | Date | string
    ListenerEvents?: ListenerEventListRelationFilter
    DiscordChannelWebhook?: XOR<DiscordChannelWebhookNullableScalarRelationFilter, DiscordChannelWebhookWhereInput> | null
  }, "Id" | "Id" | "Slug" | "Token">

  export type ListenerEventSenderOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    Slug?: SortOrder
    Token?: SortOrder
    IsActive?: SortOrder
    DiscordChannelWebhookId?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: ListenerEventSenderCountOrderByAggregateInput
    _max?: ListenerEventSenderMaxOrderByAggregateInput
    _min?: ListenerEventSenderMinOrderByAggregateInput
  }

  export type ListenerEventSenderScalarWhereWithAggregatesInput = {
    AND?: ListenerEventSenderScalarWhereWithAggregatesInput | ListenerEventSenderScalarWhereWithAggregatesInput[]
    OR?: ListenerEventSenderScalarWhereWithAggregatesInput[]
    NOT?: ListenerEventSenderScalarWhereWithAggregatesInput | ListenerEventSenderScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"ListenerEventSender"> | string
    Name?: StringWithAggregatesFilter<"ListenerEventSender"> | string
    Description?: StringNullableWithAggregatesFilter<"ListenerEventSender"> | string | null
    Slug?: StringWithAggregatesFilter<"ListenerEventSender"> | string
    Token?: StringWithAggregatesFilter<"ListenerEventSender"> | string
    IsActive?: BoolWithAggregatesFilter<"ListenerEventSender"> | boolean
    DiscordChannelWebhookId?: UuidNullableWithAggregatesFilter<"ListenerEventSender"> | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"ListenerEventSender"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"ListenerEventSender"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    Id?: UuidFilter<"User"> | string
    Username?: StringFilter<"User"> | string
    Password?: StringNullableFilter<"User"> | string | null
    Email?: StringNullableFilter<"User"> | string | null
    FirstName?: StringNullableFilter<"User"> | string | null
    LastName?: StringNullableFilter<"User"> | string | null
    FirstLoginCompleted?: BoolFilter<"User"> | boolean
    IsOnline?: BoolFilter<"User"> | boolean
    IsBanned?: BoolFilter<"User"> | boolean
    BanReason?: StringNullableFilter<"User"> | string | null
    BanExpiresAt?: DateTimeNullableFilter<"User"> | Date | string | null
    IsVerified?: BoolFilter<"User"> | boolean
    LastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    InviteCodeId?: UuidNullableFilter<"User"> | string | null
    CreatedAt?: DateTimeFilter<"User"> | Date | string
    UpdatedAt?: DateTimeFilter<"User"> | Date | string
    DiscordId?: StringNullableFilter<"User"> | string | null
    DiscordUsername?: StringNullableFilter<"User"> | string | null
    DiscordAvatar?: StringNullableFilter<"User"> | string | null
    DiscordEmail?: StringNullableFilter<"User"> | string | null
    Roles?: RoleListRelationFilter
    PrivacySettings?: UserPrivacySettingsListRelationFilter
    Members?: MemberListRelationFilter
    InviteCode?: XOR<InviteCodeNullableScalarRelationFilter, InviteCodeWhereInput> | null
  }

  export type UserOrderByWithRelationInput = {
    Id?: SortOrder
    Username?: SortOrder
    Password?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    FirstName?: SortOrderInput | SortOrder
    LastName?: SortOrderInput | SortOrder
    FirstLoginCompleted?: SortOrder
    IsOnline?: SortOrder
    IsBanned?: SortOrder
    BanReason?: SortOrderInput | SortOrder
    BanExpiresAt?: SortOrderInput | SortOrder
    IsVerified?: SortOrder
    LastLogin?: SortOrderInput | SortOrder
    InviteCodeId?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DiscordId?: SortOrderInput | SortOrder
    DiscordUsername?: SortOrderInput | SortOrder
    DiscordAvatar?: SortOrderInput | SortOrder
    DiscordEmail?: SortOrderInput | SortOrder
    Roles?: RoleOrderByRelationAggregateInput
    PrivacySettings?: UserPrivacySettingsOrderByRelationAggregateInput
    Members?: MemberOrderByRelationAggregateInput
    InviteCode?: InviteCodeOrderByWithRelationInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    Username?: string
    Email?: string
    InviteCodeId?: string
    DiscordId?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    Password?: StringNullableFilter<"User"> | string | null
    FirstName?: StringNullableFilter<"User"> | string | null
    LastName?: StringNullableFilter<"User"> | string | null
    FirstLoginCompleted?: BoolFilter<"User"> | boolean
    IsOnline?: BoolFilter<"User"> | boolean
    IsBanned?: BoolFilter<"User"> | boolean
    BanReason?: StringNullableFilter<"User"> | string | null
    BanExpiresAt?: DateTimeNullableFilter<"User"> | Date | string | null
    IsVerified?: BoolFilter<"User"> | boolean
    LastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    CreatedAt?: DateTimeFilter<"User"> | Date | string
    UpdatedAt?: DateTimeFilter<"User"> | Date | string
    DiscordUsername?: StringNullableFilter<"User"> | string | null
    DiscordAvatar?: StringNullableFilter<"User"> | string | null
    DiscordEmail?: StringNullableFilter<"User"> | string | null
    Roles?: RoleListRelationFilter
    PrivacySettings?: UserPrivacySettingsListRelationFilter
    Members?: MemberListRelationFilter
    InviteCode?: XOR<InviteCodeNullableScalarRelationFilter, InviteCodeWhereInput> | null
  }, "Id" | "Id" | "Username" | "Email" | "InviteCodeId" | "DiscordId">

  export type UserOrderByWithAggregationInput = {
    Id?: SortOrder
    Username?: SortOrder
    Password?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    FirstName?: SortOrderInput | SortOrder
    LastName?: SortOrderInput | SortOrder
    FirstLoginCompleted?: SortOrder
    IsOnline?: SortOrder
    IsBanned?: SortOrder
    BanReason?: SortOrderInput | SortOrder
    BanExpiresAt?: SortOrderInput | SortOrder
    IsVerified?: SortOrder
    LastLogin?: SortOrderInput | SortOrder
    InviteCodeId?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DiscordId?: SortOrderInput | SortOrder
    DiscordUsername?: SortOrderInput | SortOrder
    DiscordAvatar?: SortOrderInput | SortOrder
    DiscordEmail?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"User"> | string
    Username?: StringWithAggregatesFilter<"User"> | string
    Password?: StringNullableWithAggregatesFilter<"User"> | string | null
    Email?: StringNullableWithAggregatesFilter<"User"> | string | null
    FirstName?: StringNullableWithAggregatesFilter<"User"> | string | null
    LastName?: StringNullableWithAggregatesFilter<"User"> | string | null
    FirstLoginCompleted?: BoolWithAggregatesFilter<"User"> | boolean
    IsOnline?: BoolWithAggregatesFilter<"User"> | boolean
    IsBanned?: BoolWithAggregatesFilter<"User"> | boolean
    BanReason?: StringNullableWithAggregatesFilter<"User"> | string | null
    BanExpiresAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    IsVerified?: BoolWithAggregatesFilter<"User"> | boolean
    LastLogin?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    InviteCodeId?: UuidNullableWithAggregatesFilter<"User"> | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    DiscordId?: StringNullableWithAggregatesFilter<"User"> | string | null
    DiscordUsername?: StringNullableWithAggregatesFilter<"User"> | string | null
    DiscordAvatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    DiscordEmail?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type UserPrivacySettingsWhereInput = {
    AND?: UserPrivacySettingsWhereInput | UserPrivacySettingsWhereInput[]
    OR?: UserPrivacySettingsWhereInput[]
    NOT?: UserPrivacySettingsWhereInput | UserPrivacySettingsWhereInput[]
    Id?: UuidFilter<"UserPrivacySettings"> | string
    UserId?: UuidFilter<"UserPrivacySettings"> | string
    ShowOnlineStatus?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowFirstName?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowLastName?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowLastNameInitial?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowLastLogin?: BoolFilter<"UserPrivacySettings"> | boolean
    CreatedAt?: DateTimeFilter<"UserPrivacySettings"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserPrivacySettingsOrderByWithRelationInput = {
    Id?: SortOrder
    UserId?: SortOrder
    ShowOnlineStatus?: SortOrder
    ShowFirstName?: SortOrder
    ShowLastName?: SortOrder
    ShowLastNameInitial?: SortOrder
    ShowLastLogin?: SortOrder
    CreatedAt?: SortOrder
    User?: UserOrderByWithRelationInput
  }

  export type UserPrivacySettingsWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    UserId?: string
    AND?: UserPrivacySettingsWhereInput | UserPrivacySettingsWhereInput[]
    OR?: UserPrivacySettingsWhereInput[]
    NOT?: UserPrivacySettingsWhereInput | UserPrivacySettingsWhereInput[]
    ShowOnlineStatus?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowFirstName?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowLastName?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowLastNameInitial?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowLastLogin?: BoolFilter<"UserPrivacySettings"> | boolean
    CreatedAt?: DateTimeFilter<"UserPrivacySettings"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "Id" | "Id" | "UserId">

  export type UserPrivacySettingsOrderByWithAggregationInput = {
    Id?: SortOrder
    UserId?: SortOrder
    ShowOnlineStatus?: SortOrder
    ShowFirstName?: SortOrder
    ShowLastName?: SortOrder
    ShowLastNameInitial?: SortOrder
    ShowLastLogin?: SortOrder
    CreatedAt?: SortOrder
    _count?: UserPrivacySettingsCountOrderByAggregateInput
    _max?: UserPrivacySettingsMaxOrderByAggregateInput
    _min?: UserPrivacySettingsMinOrderByAggregateInput
  }

  export type UserPrivacySettingsScalarWhereWithAggregatesInput = {
    AND?: UserPrivacySettingsScalarWhereWithAggregatesInput | UserPrivacySettingsScalarWhereWithAggregatesInput[]
    OR?: UserPrivacySettingsScalarWhereWithAggregatesInput[]
    NOT?: UserPrivacySettingsScalarWhereWithAggregatesInput | UserPrivacySettingsScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"UserPrivacySettings"> | string
    UserId?: UuidWithAggregatesFilter<"UserPrivacySettings"> | string
    ShowOnlineStatus?: BoolWithAggregatesFilter<"UserPrivacySettings"> | boolean
    ShowFirstName?: BoolWithAggregatesFilter<"UserPrivacySettings"> | boolean
    ShowLastName?: BoolWithAggregatesFilter<"UserPrivacySettings"> | boolean
    ShowLastNameInitial?: BoolWithAggregatesFilter<"UserPrivacySettings"> | boolean
    ShowLastLogin?: BoolWithAggregatesFilter<"UserPrivacySettings"> | boolean
    CreatedAt?: DateTimeWithAggregatesFilter<"UserPrivacySettings"> | Date | string
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    Id?: IntFilter<"Role"> | number
    Name?: StringFilter<"Role"> | string
    Description?: StringNullableFilter<"Role"> | string | null
    Slug?: StringFilter<"Role"> | string
    CreatedAt?: DateTimeFilter<"Role"> | Date | string
    UpdatedAt?: DateTimeFilter<"Role"> | Date | string
    VirtualAirlineRoleId?: UuidNullableFilter<"Role"> | string | null
    Permissions?: PermissionListRelationFilter
    Users?: UserListRelationFilter
    VirtualAirlineRole?: XOR<VirtualAirlineRoleNullableScalarRelationFilter, VirtualAirlineRoleWhereInput> | null
  }

  export type RoleOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    Slug?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    VirtualAirlineRoleId?: SortOrderInput | SortOrder
    Permissions?: PermissionOrderByRelationAggregateInput
    Users?: UserOrderByRelationAggregateInput
    VirtualAirlineRole?: VirtualAirlineRoleOrderByWithRelationInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    Slug?: string
    VirtualAirlineRoleId?: string
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    Name?: StringFilter<"Role"> | string
    Description?: StringNullableFilter<"Role"> | string | null
    CreatedAt?: DateTimeFilter<"Role"> | Date | string
    UpdatedAt?: DateTimeFilter<"Role"> | Date | string
    Permissions?: PermissionListRelationFilter
    Users?: UserListRelationFilter
    VirtualAirlineRole?: XOR<VirtualAirlineRoleNullableScalarRelationFilter, VirtualAirlineRoleWhereInput> | null
  }, "Id" | "Id" | "Slug" | "VirtualAirlineRoleId">

  export type RoleOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    Slug?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    VirtualAirlineRoleId?: SortOrderInput | SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"Role"> | number
    Name?: StringWithAggregatesFilter<"Role"> | string
    Description?: StringNullableWithAggregatesFilter<"Role"> | string | null
    Slug?: StringWithAggregatesFilter<"Role"> | string
    CreatedAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    VirtualAirlineRoleId?: UuidNullableWithAggregatesFilter<"Role"> | string | null
  }

  export type PermissionWhereInput = {
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    Id?: IntFilter<"Permission"> | number
    Name?: StringFilter<"Permission"> | string
    Description?: StringNullableFilter<"Permission"> | string | null
    Slug?: StringFilter<"Permission"> | string
    Entity?: StringFilter<"Permission"> | string
    Action?: StringFilter<"Permission"> | string
    Roles?: RoleListRelationFilter
  }

  export type PermissionOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    Slug?: SortOrder
    Entity?: SortOrder
    Action?: SortOrder
    Roles?: RoleOrderByRelationAggregateInput
  }

  export type PermissionWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    Slug?: string
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    Name?: StringFilter<"Permission"> | string
    Description?: StringNullableFilter<"Permission"> | string | null
    Entity?: StringFilter<"Permission"> | string
    Action?: StringFilter<"Permission"> | string
    Roles?: RoleListRelationFilter
  }, "Id" | "Slug">

  export type PermissionOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    Slug?: SortOrder
    Entity?: SortOrder
    Action?: SortOrder
    _count?: PermissionCountOrderByAggregateInput
    _avg?: PermissionAvgOrderByAggregateInput
    _max?: PermissionMaxOrderByAggregateInput
    _min?: PermissionMinOrderByAggregateInput
    _sum?: PermissionSumOrderByAggregateInput
  }

  export type PermissionScalarWhereWithAggregatesInput = {
    AND?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    OR?: PermissionScalarWhereWithAggregatesInput[]
    NOT?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"Permission"> | number
    Name?: StringWithAggregatesFilter<"Permission"> | string
    Description?: StringNullableWithAggregatesFilter<"Permission"> | string | null
    Slug?: StringWithAggregatesFilter<"Permission"> | string
    Entity?: StringWithAggregatesFilter<"Permission"> | string
    Action?: StringWithAggregatesFilter<"Permission"> | string
  }

  export type LiveryWhereInput = {
    AND?: LiveryWhereInput | LiveryWhereInput[]
    OR?: LiveryWhereInput[]
    NOT?: LiveryWhereInput | LiveryWhereInput[]
    Id?: UuidFilter<"Livery"> | string
    Name?: StringFilter<"Livery"> | string
    IsActive?: BoolFilter<"Livery"> | boolean
    AircraftId?: UuidNullableFilter<"Livery"> | string | null
    DownloadCount?: IntFilter<"Livery"> | number
    Image?: StringFilter<"Livery"> | string
    ImageFileName?: StringNullableFilter<"Livery"> | string | null
    CoverPhoto?: StringNullableFilter<"Livery"> | string | null
    Metadata?: JsonNullableFilter<"Livery">
    Url?: StringNullableFilter<"Livery"> | string | null
    Description?: StringNullableFilter<"Livery"> | string | null
    DownloadUrl?: StringNullableFilter<"Livery"> | string | null
    CreatedAt?: DateTimeFilter<"Livery"> | Date | string
    UpdatedAt?: DateTimeFilter<"Livery"> | Date | string
    Aircraft?: XOR<AircraftNullableScalarRelationFilter, AircraftWhereInput> | null
    Images?: LiveryImageListRelationFilter
    Files?: LiveryFileListRelationFilter
  }

  export type LiveryOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    IsActive?: SortOrder
    AircraftId?: SortOrderInput | SortOrder
    DownloadCount?: SortOrder
    Image?: SortOrder
    ImageFileName?: SortOrderInput | SortOrder
    CoverPhoto?: SortOrderInput | SortOrder
    Metadata?: SortOrderInput | SortOrder
    Url?: SortOrderInput | SortOrder
    Description?: SortOrderInput | SortOrder
    DownloadUrl?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    Aircraft?: AircraftOrderByWithRelationInput
    Images?: LiveryImageOrderByRelationAggregateInput
    Files?: LiveryFileOrderByRelationAggregateInput
  }

  export type LiveryWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: LiveryWhereInput | LiveryWhereInput[]
    OR?: LiveryWhereInput[]
    NOT?: LiveryWhereInput | LiveryWhereInput[]
    Name?: StringFilter<"Livery"> | string
    IsActive?: BoolFilter<"Livery"> | boolean
    AircraftId?: UuidNullableFilter<"Livery"> | string | null
    DownloadCount?: IntFilter<"Livery"> | number
    Image?: StringFilter<"Livery"> | string
    ImageFileName?: StringNullableFilter<"Livery"> | string | null
    CoverPhoto?: StringNullableFilter<"Livery"> | string | null
    Metadata?: JsonNullableFilter<"Livery">
    Url?: StringNullableFilter<"Livery"> | string | null
    Description?: StringNullableFilter<"Livery"> | string | null
    DownloadUrl?: StringNullableFilter<"Livery"> | string | null
    CreatedAt?: DateTimeFilter<"Livery"> | Date | string
    UpdatedAt?: DateTimeFilter<"Livery"> | Date | string
    Aircraft?: XOR<AircraftNullableScalarRelationFilter, AircraftWhereInput> | null
    Images?: LiveryImageListRelationFilter
    Files?: LiveryFileListRelationFilter
  }, "Id">

  export type LiveryOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    IsActive?: SortOrder
    AircraftId?: SortOrderInput | SortOrder
    DownloadCount?: SortOrder
    Image?: SortOrder
    ImageFileName?: SortOrderInput | SortOrder
    CoverPhoto?: SortOrderInput | SortOrder
    Metadata?: SortOrderInput | SortOrder
    Url?: SortOrderInput | SortOrder
    Description?: SortOrderInput | SortOrder
    DownloadUrl?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: LiveryCountOrderByAggregateInput
    _avg?: LiveryAvgOrderByAggregateInput
    _max?: LiveryMaxOrderByAggregateInput
    _min?: LiveryMinOrderByAggregateInput
    _sum?: LiverySumOrderByAggregateInput
  }

  export type LiveryScalarWhereWithAggregatesInput = {
    AND?: LiveryScalarWhereWithAggregatesInput | LiveryScalarWhereWithAggregatesInput[]
    OR?: LiveryScalarWhereWithAggregatesInput[]
    NOT?: LiveryScalarWhereWithAggregatesInput | LiveryScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"Livery"> | string
    Name?: StringWithAggregatesFilter<"Livery"> | string
    IsActive?: BoolWithAggregatesFilter<"Livery"> | boolean
    AircraftId?: UuidNullableWithAggregatesFilter<"Livery"> | string | null
    DownloadCount?: IntWithAggregatesFilter<"Livery"> | number
    Image?: StringWithAggregatesFilter<"Livery"> | string
    ImageFileName?: StringNullableWithAggregatesFilter<"Livery"> | string | null
    CoverPhoto?: StringNullableWithAggregatesFilter<"Livery"> | string | null
    Metadata?: JsonNullableWithAggregatesFilter<"Livery">
    Url?: StringNullableWithAggregatesFilter<"Livery"> | string | null
    Description?: StringNullableWithAggregatesFilter<"Livery"> | string | null
    DownloadUrl?: StringNullableWithAggregatesFilter<"Livery"> | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"Livery"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"Livery"> | Date | string
  }

  export type LiveryImageWhereInput = {
    AND?: LiveryImageWhereInput | LiveryImageWhereInput[]
    OR?: LiveryImageWhereInput[]
    NOT?: LiveryImageWhereInput | LiveryImageWhereInput[]
    Id?: UuidFilter<"LiveryImage"> | string
    LiveryId?: UuidFilter<"LiveryImage"> | string
    Name?: StringFilter<"LiveryImage"> | string
    Type?: StringFilter<"LiveryImage"> | string
    Path?: StringFilter<"LiveryImage"> | string
    Size?: IntFilter<"LiveryImage"> | number
    MimeType?: StringFilter<"LiveryImage"> | string
    FileName?: StringFilter<"LiveryImage"> | string
    CreatedAt?: DateTimeFilter<"LiveryImage"> | Date | string
    UpdatedAt?: DateTimeFilter<"LiveryImage"> | Date | string
    Livery?: XOR<LiveryScalarRelationFilter, LiveryWhereInput>
  }

  export type LiveryImageOrderByWithRelationInput = {
    Id?: SortOrder
    LiveryId?: SortOrder
    Name?: SortOrder
    Type?: SortOrder
    Path?: SortOrder
    Size?: SortOrder
    MimeType?: SortOrder
    FileName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    Livery?: LiveryOrderByWithRelationInput
  }

  export type LiveryImageWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: LiveryImageWhereInput | LiveryImageWhereInput[]
    OR?: LiveryImageWhereInput[]
    NOT?: LiveryImageWhereInput | LiveryImageWhereInput[]
    LiveryId?: UuidFilter<"LiveryImage"> | string
    Name?: StringFilter<"LiveryImage"> | string
    Type?: StringFilter<"LiveryImage"> | string
    Path?: StringFilter<"LiveryImage"> | string
    Size?: IntFilter<"LiveryImage"> | number
    MimeType?: StringFilter<"LiveryImage"> | string
    FileName?: StringFilter<"LiveryImage"> | string
    CreatedAt?: DateTimeFilter<"LiveryImage"> | Date | string
    UpdatedAt?: DateTimeFilter<"LiveryImage"> | Date | string
    Livery?: XOR<LiveryScalarRelationFilter, LiveryWhereInput>
  }, "Id">

  export type LiveryImageOrderByWithAggregationInput = {
    Id?: SortOrder
    LiveryId?: SortOrder
    Name?: SortOrder
    Type?: SortOrder
    Path?: SortOrder
    Size?: SortOrder
    MimeType?: SortOrder
    FileName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: LiveryImageCountOrderByAggregateInput
    _avg?: LiveryImageAvgOrderByAggregateInput
    _max?: LiveryImageMaxOrderByAggregateInput
    _min?: LiveryImageMinOrderByAggregateInput
    _sum?: LiveryImageSumOrderByAggregateInput
  }

  export type LiveryImageScalarWhereWithAggregatesInput = {
    AND?: LiveryImageScalarWhereWithAggregatesInput | LiveryImageScalarWhereWithAggregatesInput[]
    OR?: LiveryImageScalarWhereWithAggregatesInput[]
    NOT?: LiveryImageScalarWhereWithAggregatesInput | LiveryImageScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"LiveryImage"> | string
    LiveryId?: UuidWithAggregatesFilter<"LiveryImage"> | string
    Name?: StringWithAggregatesFilter<"LiveryImage"> | string
    Type?: StringWithAggregatesFilter<"LiveryImage"> | string
    Path?: StringWithAggregatesFilter<"LiveryImage"> | string
    Size?: IntWithAggregatesFilter<"LiveryImage"> | number
    MimeType?: StringWithAggregatesFilter<"LiveryImage"> | string
    FileName?: StringWithAggregatesFilter<"LiveryImage"> | string
    CreatedAt?: DateTimeWithAggregatesFilter<"LiveryImage"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"LiveryImage"> | Date | string
  }

  export type LiveryFileWhereInput = {
    AND?: LiveryFileWhereInput | LiveryFileWhereInput[]
    OR?: LiveryFileWhereInput[]
    NOT?: LiveryFileWhereInput | LiveryFileWhereInput[]
    Id?: UuidFilter<"LiveryFile"> | string
    LiveryId?: UuidFilter<"LiveryFile"> | string
    Name?: StringFilter<"LiveryFile"> | string
    Type?: StringFilter<"LiveryFile"> | string
    Path?: StringFilter<"LiveryFile"> | string
    Size?: IntFilter<"LiveryFile"> | number
    MimeType?: StringFilter<"LiveryFile"> | string
    FileName?: StringFilter<"LiveryFile"> | string
    CreatedAt?: DateTimeFilter<"LiveryFile"> | Date | string
    UpdatedAt?: DateTimeFilter<"LiveryFile"> | Date | string
    Livery?: XOR<LiveryScalarRelationFilter, LiveryWhereInput>
  }

  export type LiveryFileOrderByWithRelationInput = {
    Id?: SortOrder
    LiveryId?: SortOrder
    Name?: SortOrder
    Type?: SortOrder
    Path?: SortOrder
    Size?: SortOrder
    MimeType?: SortOrder
    FileName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    Livery?: LiveryOrderByWithRelationInput
  }

  export type LiveryFileWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: LiveryFileWhereInput | LiveryFileWhereInput[]
    OR?: LiveryFileWhereInput[]
    NOT?: LiveryFileWhereInput | LiveryFileWhereInput[]
    LiveryId?: UuidFilter<"LiveryFile"> | string
    Name?: StringFilter<"LiveryFile"> | string
    Type?: StringFilter<"LiveryFile"> | string
    Path?: StringFilter<"LiveryFile"> | string
    Size?: IntFilter<"LiveryFile"> | number
    MimeType?: StringFilter<"LiveryFile"> | string
    FileName?: StringFilter<"LiveryFile"> | string
    CreatedAt?: DateTimeFilter<"LiveryFile"> | Date | string
    UpdatedAt?: DateTimeFilter<"LiveryFile"> | Date | string
    Livery?: XOR<LiveryScalarRelationFilter, LiveryWhereInput>
  }, "Id">

  export type LiveryFileOrderByWithAggregationInput = {
    Id?: SortOrder
    LiveryId?: SortOrder
    Name?: SortOrder
    Type?: SortOrder
    Path?: SortOrder
    Size?: SortOrder
    MimeType?: SortOrder
    FileName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: LiveryFileCountOrderByAggregateInput
    _avg?: LiveryFileAvgOrderByAggregateInput
    _max?: LiveryFileMaxOrderByAggregateInput
    _min?: LiveryFileMinOrderByAggregateInput
    _sum?: LiveryFileSumOrderByAggregateInput
  }

  export type LiveryFileScalarWhereWithAggregatesInput = {
    AND?: LiveryFileScalarWhereWithAggregatesInput | LiveryFileScalarWhereWithAggregatesInput[]
    OR?: LiveryFileScalarWhereWithAggregatesInput[]
    NOT?: LiveryFileScalarWhereWithAggregatesInput | LiveryFileScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"LiveryFile"> | string
    LiveryId?: UuidWithAggregatesFilter<"LiveryFile"> | string
    Name?: StringWithAggregatesFilter<"LiveryFile"> | string
    Type?: StringWithAggregatesFilter<"LiveryFile"> | string
    Path?: StringWithAggregatesFilter<"LiveryFile"> | string
    Size?: IntWithAggregatesFilter<"LiveryFile"> | number
    MimeType?: StringWithAggregatesFilter<"LiveryFile"> | string
    FileName?: StringWithAggregatesFilter<"LiveryFile"> | string
    CreatedAt?: DateTimeWithAggregatesFilter<"LiveryFile"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"LiveryFile"> | Date | string
  }

  export type VirtualAirlineWhereInput = {
    AND?: VirtualAirlineWhereInput | VirtualAirlineWhereInput[]
    OR?: VirtualAirlineWhereInput[]
    NOT?: VirtualAirlineWhereInput | VirtualAirlineWhereInput[]
    Id?: UuidFilter<"VirtualAirline"> | string
    ApiKey?: UuidFilter<"VirtualAirline"> | string
    IsPrimary?: BoolFilter<"VirtualAirline"> | boolean
    Identifier?: StringNullableFilter<"VirtualAirline"> | string | null
    Name?: StringNullableFilter<"VirtualAirline"> | string | null
    Description?: StringNullableFilter<"VirtualAirline"> | string | null
    WorldId?: UuidNullableFilter<"VirtualAirline"> | string | null
    LastDividendsDistribution?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    LastComputationDate?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    ComputedMemberCount?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedAircraftsCount?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedNumberOfFlights30Days?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedNumberOfFlightHours30Days?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedMostUsedAirports?: StringNullableFilter<"VirtualAirline"> | string | null
    LastConnection?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    LastReportDate?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    Reputation?: DecimalNullableFilter<"VirtualAirline"> | Decimal | DecimalJsLike | number | string | null
    CreationDate?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    DifficultyLevel?: IntNullableFilter<"VirtualAirline"> | number | null
    Level?: IntNullableFilter<"VirtualAirline"> | number | null
    LevelXP?: IntNullableFilter<"VirtualAirline"> | number | null
    TotalContractsCompleted?: IntNullableFilter<"VirtualAirline"> | number | null
    TotalContractsEarnedCredits?: IntNullableFilter<"VirtualAirline"> | number | null
    LastRefresh?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    CreatedAt?: DateTimeFilter<"VirtualAirline"> | Date | string
    UpdatedAt?: DateTimeFilter<"VirtualAirline"> | Date | string
    World?: XOR<WorldNullableScalarRelationFilter, WorldWhereInput> | null
    VARoles?: VirtualAirlineRoleListRelationFilter
    Members?: MemberListRelationFilter
    Fleet?: AircraftListRelationFilter
    Flights?: FlightListRelationFilter
  }

  export type VirtualAirlineOrderByWithRelationInput = {
    Id?: SortOrder
    ApiKey?: SortOrder
    IsPrimary?: SortOrder
    Identifier?: SortOrderInput | SortOrder
    Name?: SortOrderInput | SortOrder
    Description?: SortOrderInput | SortOrder
    WorldId?: SortOrderInput | SortOrder
    LastDividendsDistribution?: SortOrderInput | SortOrder
    LastComputationDate?: SortOrderInput | SortOrder
    ComputedMemberCount?: SortOrderInput | SortOrder
    ComputedAircraftsCount?: SortOrderInput | SortOrder
    ComputedNumberOfFlights30Days?: SortOrderInput | SortOrder
    ComputedNumberOfFlightHours30Days?: SortOrderInput | SortOrder
    ComputedMostUsedAirports?: SortOrderInput | SortOrder
    LastConnection?: SortOrderInput | SortOrder
    LastReportDate?: SortOrderInput | SortOrder
    Reputation?: SortOrderInput | SortOrder
    CreationDate?: SortOrderInput | SortOrder
    DifficultyLevel?: SortOrderInput | SortOrder
    Level?: SortOrderInput | SortOrder
    LevelXP?: SortOrderInput | SortOrder
    TotalContractsCompleted?: SortOrderInput | SortOrder
    TotalContractsEarnedCredits?: SortOrderInput | SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    World?: WorldOrderByWithRelationInput
    VARoles?: VirtualAirlineRoleOrderByRelationAggregateInput
    Members?: MemberOrderByRelationAggregateInput
    Fleet?: AircraftOrderByRelationAggregateInput
    Flights?: FlightOrderByRelationAggregateInput
  }

  export type VirtualAirlineWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    ApiKey?: string
    Identifier?: string
    AND?: VirtualAirlineWhereInput | VirtualAirlineWhereInput[]
    OR?: VirtualAirlineWhereInput[]
    NOT?: VirtualAirlineWhereInput | VirtualAirlineWhereInput[]
    IsPrimary?: BoolFilter<"VirtualAirline"> | boolean
    Name?: StringNullableFilter<"VirtualAirline"> | string | null
    Description?: StringNullableFilter<"VirtualAirline"> | string | null
    WorldId?: UuidNullableFilter<"VirtualAirline"> | string | null
    LastDividendsDistribution?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    LastComputationDate?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    ComputedMemberCount?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedAircraftsCount?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedNumberOfFlights30Days?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedNumberOfFlightHours30Days?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedMostUsedAirports?: StringNullableFilter<"VirtualAirline"> | string | null
    LastConnection?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    LastReportDate?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    Reputation?: DecimalNullableFilter<"VirtualAirline"> | Decimal | DecimalJsLike | number | string | null
    CreationDate?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    DifficultyLevel?: IntNullableFilter<"VirtualAirline"> | number | null
    Level?: IntNullableFilter<"VirtualAirline"> | number | null
    LevelXP?: IntNullableFilter<"VirtualAirline"> | number | null
    TotalContractsCompleted?: IntNullableFilter<"VirtualAirline"> | number | null
    TotalContractsEarnedCredits?: IntNullableFilter<"VirtualAirline"> | number | null
    LastRefresh?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    CreatedAt?: DateTimeFilter<"VirtualAirline"> | Date | string
    UpdatedAt?: DateTimeFilter<"VirtualAirline"> | Date | string
    World?: XOR<WorldNullableScalarRelationFilter, WorldWhereInput> | null
    VARoles?: VirtualAirlineRoleListRelationFilter
    Members?: MemberListRelationFilter
    Fleet?: AircraftListRelationFilter
    Flights?: FlightListRelationFilter
  }, "Id" | "ApiKey" | "Identifier">

  export type VirtualAirlineOrderByWithAggregationInput = {
    Id?: SortOrder
    ApiKey?: SortOrder
    IsPrimary?: SortOrder
    Identifier?: SortOrderInput | SortOrder
    Name?: SortOrderInput | SortOrder
    Description?: SortOrderInput | SortOrder
    WorldId?: SortOrderInput | SortOrder
    LastDividendsDistribution?: SortOrderInput | SortOrder
    LastComputationDate?: SortOrderInput | SortOrder
    ComputedMemberCount?: SortOrderInput | SortOrder
    ComputedAircraftsCount?: SortOrderInput | SortOrder
    ComputedNumberOfFlights30Days?: SortOrderInput | SortOrder
    ComputedNumberOfFlightHours30Days?: SortOrderInput | SortOrder
    ComputedMostUsedAirports?: SortOrderInput | SortOrder
    LastConnection?: SortOrderInput | SortOrder
    LastReportDate?: SortOrderInput | SortOrder
    Reputation?: SortOrderInput | SortOrder
    CreationDate?: SortOrderInput | SortOrder
    DifficultyLevel?: SortOrderInput | SortOrder
    Level?: SortOrderInput | SortOrder
    LevelXP?: SortOrderInput | SortOrder
    TotalContractsCompleted?: SortOrderInput | SortOrder
    TotalContractsEarnedCredits?: SortOrderInput | SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: VirtualAirlineCountOrderByAggregateInput
    _avg?: VirtualAirlineAvgOrderByAggregateInput
    _max?: VirtualAirlineMaxOrderByAggregateInput
    _min?: VirtualAirlineMinOrderByAggregateInput
    _sum?: VirtualAirlineSumOrderByAggregateInput
  }

  export type VirtualAirlineScalarWhereWithAggregatesInput = {
    AND?: VirtualAirlineScalarWhereWithAggregatesInput | VirtualAirlineScalarWhereWithAggregatesInput[]
    OR?: VirtualAirlineScalarWhereWithAggregatesInput[]
    NOT?: VirtualAirlineScalarWhereWithAggregatesInput | VirtualAirlineScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"VirtualAirline"> | string
    ApiKey?: UuidWithAggregatesFilter<"VirtualAirline"> | string
    IsPrimary?: BoolWithAggregatesFilter<"VirtualAirline"> | boolean
    Identifier?: StringNullableWithAggregatesFilter<"VirtualAirline"> | string | null
    Name?: StringNullableWithAggregatesFilter<"VirtualAirline"> | string | null
    Description?: StringNullableWithAggregatesFilter<"VirtualAirline"> | string | null
    WorldId?: UuidNullableWithAggregatesFilter<"VirtualAirline"> | string | null
    LastDividendsDistribution?: DateTimeNullableWithAggregatesFilter<"VirtualAirline"> | Date | string | null
    LastComputationDate?: DateTimeNullableWithAggregatesFilter<"VirtualAirline"> | Date | string | null
    ComputedMemberCount?: IntNullableWithAggregatesFilter<"VirtualAirline"> | number | null
    ComputedAircraftsCount?: IntNullableWithAggregatesFilter<"VirtualAirline"> | number | null
    ComputedNumberOfFlights30Days?: IntNullableWithAggregatesFilter<"VirtualAirline"> | number | null
    ComputedNumberOfFlightHours30Days?: IntNullableWithAggregatesFilter<"VirtualAirline"> | number | null
    ComputedMostUsedAirports?: StringNullableWithAggregatesFilter<"VirtualAirline"> | string | null
    LastConnection?: DateTimeNullableWithAggregatesFilter<"VirtualAirline"> | Date | string | null
    LastReportDate?: DateTimeNullableWithAggregatesFilter<"VirtualAirline"> | Date | string | null
    Reputation?: DecimalNullableWithAggregatesFilter<"VirtualAirline"> | Decimal | DecimalJsLike | number | string | null
    CreationDate?: DateTimeNullableWithAggregatesFilter<"VirtualAirline"> | Date | string | null
    DifficultyLevel?: IntNullableWithAggregatesFilter<"VirtualAirline"> | number | null
    Level?: IntNullableWithAggregatesFilter<"VirtualAirline"> | number | null
    LevelXP?: IntNullableWithAggregatesFilter<"VirtualAirline"> | number | null
    TotalContractsCompleted?: IntNullableWithAggregatesFilter<"VirtualAirline"> | number | null
    TotalContractsEarnedCredits?: IntNullableWithAggregatesFilter<"VirtualAirline"> | number | null
    LastRefresh?: DateTimeNullableWithAggregatesFilter<"VirtualAirline"> | Date | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"VirtualAirline"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"VirtualAirline"> | Date | string
  }

  export type VirtualAirlineRoleWhereInput = {
    AND?: VirtualAirlineRoleWhereInput | VirtualAirlineRoleWhereInput[]
    OR?: VirtualAirlineRoleWhereInput[]
    NOT?: VirtualAirlineRoleWhereInput | VirtualAirlineRoleWhereInput[]
    Id?: UuidFilter<"VirtualAirlineRole"> | string
    VAId?: UuidFilter<"VirtualAirlineRole"> | string
    Name?: StringFilter<"VirtualAirlineRole"> | string
    Permission?: IntFilter<"VirtualAirlineRole"> | number
    IsDefaultNewRole?: BoolFilter<"VirtualAirlineRole"> | boolean
    Color?: StringFilter<"VirtualAirlineRole"> | string
    PayPercent?: DecimalFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFilter<"VirtualAirlineRole"> | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFilter<"VirtualAirlineRole"> | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFilter<"VirtualAirlineRole"> | boolean
    PayWeekly?: DecimalFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    LastRefresh?: DateTimeNullableFilter<"VirtualAirlineRole"> | Date | string | null
    CreatedAt?: DateTimeFilter<"VirtualAirlineRole"> | Date | string
    UpdatedAt?: DateTimeFilter<"VirtualAirlineRole"> | Date | string
    Role?: XOR<RoleNullableScalarRelationFilter, RoleWhereInput> | null
    VirtualAirline?: XOR<VirtualAirlineScalarRelationFilter, VirtualAirlineWhereInput>
    Members?: MemberListRelationFilter
  }

  export type VirtualAirlineRoleOrderByWithRelationInput = {
    Id?: SortOrder
    VAId?: SortOrder
    Name?: SortOrder
    Permission?: SortOrder
    IsDefaultNewRole?: SortOrder
    Color?: SortOrder
    PayPercent?: SortOrder
    IsHidden?: SortOrder
    RestrictLoadingVAJobsIntoNonVAAircraft?: SortOrder
    RestrictLoadingNonVAJobsIntoVAAircraft?: SortOrder
    PayWeekly?: SortOrder
    PayPerFlightHour?: SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    Role?: RoleOrderByWithRelationInput
    VirtualAirline?: VirtualAirlineOrderByWithRelationInput
    Members?: MemberOrderByRelationAggregateInput
  }

  export type VirtualAirlineRoleWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: VirtualAirlineRoleWhereInput | VirtualAirlineRoleWhereInput[]
    OR?: VirtualAirlineRoleWhereInput[]
    NOT?: VirtualAirlineRoleWhereInput | VirtualAirlineRoleWhereInput[]
    VAId?: UuidFilter<"VirtualAirlineRole"> | string
    Name?: StringFilter<"VirtualAirlineRole"> | string
    Permission?: IntFilter<"VirtualAirlineRole"> | number
    IsDefaultNewRole?: BoolFilter<"VirtualAirlineRole"> | boolean
    Color?: StringFilter<"VirtualAirlineRole"> | string
    PayPercent?: DecimalFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFilter<"VirtualAirlineRole"> | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFilter<"VirtualAirlineRole"> | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFilter<"VirtualAirlineRole"> | boolean
    PayWeekly?: DecimalFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    LastRefresh?: DateTimeNullableFilter<"VirtualAirlineRole"> | Date | string | null
    CreatedAt?: DateTimeFilter<"VirtualAirlineRole"> | Date | string
    UpdatedAt?: DateTimeFilter<"VirtualAirlineRole"> | Date | string
    Role?: XOR<RoleNullableScalarRelationFilter, RoleWhereInput> | null
    VirtualAirline?: XOR<VirtualAirlineScalarRelationFilter, VirtualAirlineWhereInput>
    Members?: MemberListRelationFilter
  }, "Id">

  export type VirtualAirlineRoleOrderByWithAggregationInput = {
    Id?: SortOrder
    VAId?: SortOrder
    Name?: SortOrder
    Permission?: SortOrder
    IsDefaultNewRole?: SortOrder
    Color?: SortOrder
    PayPercent?: SortOrder
    IsHidden?: SortOrder
    RestrictLoadingVAJobsIntoNonVAAircraft?: SortOrder
    RestrictLoadingNonVAJobsIntoVAAircraft?: SortOrder
    PayWeekly?: SortOrder
    PayPerFlightHour?: SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: VirtualAirlineRoleCountOrderByAggregateInput
    _avg?: VirtualAirlineRoleAvgOrderByAggregateInput
    _max?: VirtualAirlineRoleMaxOrderByAggregateInput
    _min?: VirtualAirlineRoleMinOrderByAggregateInput
    _sum?: VirtualAirlineRoleSumOrderByAggregateInput
  }

  export type VirtualAirlineRoleScalarWhereWithAggregatesInput = {
    AND?: VirtualAirlineRoleScalarWhereWithAggregatesInput | VirtualAirlineRoleScalarWhereWithAggregatesInput[]
    OR?: VirtualAirlineRoleScalarWhereWithAggregatesInput[]
    NOT?: VirtualAirlineRoleScalarWhereWithAggregatesInput | VirtualAirlineRoleScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"VirtualAirlineRole"> | string
    VAId?: UuidWithAggregatesFilter<"VirtualAirlineRole"> | string
    Name?: StringWithAggregatesFilter<"VirtualAirlineRole"> | string
    Permission?: IntWithAggregatesFilter<"VirtualAirlineRole"> | number
    IsDefaultNewRole?: BoolWithAggregatesFilter<"VirtualAirlineRole"> | boolean
    Color?: StringWithAggregatesFilter<"VirtualAirlineRole"> | string
    PayPercent?: DecimalWithAggregatesFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolWithAggregatesFilter<"VirtualAirlineRole"> | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolWithAggregatesFilter<"VirtualAirlineRole"> | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolWithAggregatesFilter<"VirtualAirlineRole"> | boolean
    PayWeekly?: DecimalWithAggregatesFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalWithAggregatesFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    LastRefresh?: DateTimeNullableWithAggregatesFilter<"VirtualAirlineRole"> | Date | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"VirtualAirlineRole"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"VirtualAirlineRole"> | Date | string
  }

  export type WorldWhereInput = {
    AND?: WorldWhereInput | WorldWhereInput[]
    OR?: WorldWhereInput[]
    NOT?: WorldWhereInput | WorldWhereInput[]
    Id?: UuidFilter<"World"> | string
    Name?: StringFilter<"World"> | string
    Slug?: StringFilter<"World"> | string
    Description?: StringNullableFilter<"World"> | string | null
    CreatedAt?: DateTimeFilter<"World"> | Date | string
    UpdatedAt?: DateTimeFilter<"World"> | Date | string
    VirtualAirlines?: VirtualAirlineListRelationFilter
    Companies?: CompanyListRelationFilter
  }

  export type WorldOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Slug?: SortOrder
    Description?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    VirtualAirlines?: VirtualAirlineOrderByRelationAggregateInput
    Companies?: CompanyOrderByRelationAggregateInput
  }

  export type WorldWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    Slug?: string
    AND?: WorldWhereInput | WorldWhereInput[]
    OR?: WorldWhereInput[]
    NOT?: WorldWhereInput | WorldWhereInput[]
    Name?: StringFilter<"World"> | string
    Description?: StringNullableFilter<"World"> | string | null
    CreatedAt?: DateTimeFilter<"World"> | Date | string
    UpdatedAt?: DateTimeFilter<"World"> | Date | string
    VirtualAirlines?: VirtualAirlineListRelationFilter
    Companies?: CompanyListRelationFilter
  }, "Id" | "Slug">

  export type WorldOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Slug?: SortOrder
    Description?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: WorldCountOrderByAggregateInput
    _max?: WorldMaxOrderByAggregateInput
    _min?: WorldMinOrderByAggregateInput
  }

  export type WorldScalarWhereWithAggregatesInput = {
    AND?: WorldScalarWhereWithAggregatesInput | WorldScalarWhereWithAggregatesInput[]
    OR?: WorldScalarWhereWithAggregatesInput[]
    NOT?: WorldScalarWhereWithAggregatesInput | WorldScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"World"> | string
    Name?: StringWithAggregatesFilter<"World"> | string
    Slug?: StringWithAggregatesFilter<"World"> | string
    Description?: StringNullableWithAggregatesFilter<"World"> | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"World"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"World"> | Date | string
  }

  export type MemberWhereInput = {
    AND?: MemberWhereInput | MemberWhereInput[]
    OR?: MemberWhereInput[]
    NOT?: MemberWhereInput | MemberWhereInput[]
    Id?: UuidFilter<"Member"> | string
    IsActive?: BoolFilter<"Member"> | boolean
    DeactivatedAt?: DateTimeNullableFilter<"Member"> | Date | string | null
    VAId?: UuidFilter<"Member"> | string
    VARoleId?: UuidFilter<"Member"> | string
    TotalCargosTransportedLbs?: IntFilter<"Member"> | number
    TotalPAXsTransported?: IntFilter<"Member"> | number
    TotalEarnedCredits?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFilter<"Member"> | number
    FlightHours?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    Color?: StringFilter<"Member"> | string
    ReputationImpact?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: DateTimeNullableFilter<"Member"> | Date | string | null
    LastRefresh?: DateTimeNullableFilter<"Member"> | Date | string | null
    UserId?: UuidNullableFilter<"Member"> | string | null
    CreatedAt?: DateTimeFilter<"Member"> | Date | string
    UpdatedAt?: DateTimeFilter<"Member"> | Date | string
    CompanyId?: UuidFilter<"Member"> | string
    Company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    VirtualAirline?: XOR<VirtualAirlineScalarRelationFilter, VirtualAirlineWhereInput>
    VARole?: XOR<VirtualAirlineRoleScalarRelationFilter, VirtualAirlineRoleWhereInput>
    Flights?: FlightListRelationFilter
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    FlightRoutes?: FlightRouteListRelationFilter
  }

  export type MemberOrderByWithRelationInput = {
    Id?: SortOrder
    IsActive?: SortOrder
    DeactivatedAt?: SortOrderInput | SortOrder
    VAId?: SortOrder
    VARoleId?: SortOrder
    TotalCargosTransportedLbs?: SortOrder
    TotalPAXsTransported?: SortOrder
    TotalEarnedCredits?: SortOrder
    TotalSpentCredits?: SortOrder
    NumberOfFlights?: SortOrder
    FlightHours?: SortOrder
    Color?: SortOrder
    ReputationImpact?: SortOrder
    LastVAFlightDate?: SortOrderInput | SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    UserId?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    CompanyId?: SortOrder
    Company?: CompanyOrderByWithRelationInput
    VirtualAirline?: VirtualAirlineOrderByWithRelationInput
    VARole?: VirtualAirlineRoleOrderByWithRelationInput
    Flights?: FlightOrderByRelationAggregateInput
    User?: UserOrderByWithRelationInput
    FlightRoutes?: FlightRouteOrderByRelationAggregateInput
  }

  export type MemberWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    CompanyId?: string
    AND?: MemberWhereInput | MemberWhereInput[]
    OR?: MemberWhereInput[]
    NOT?: MemberWhereInput | MemberWhereInput[]
    IsActive?: BoolFilter<"Member"> | boolean
    DeactivatedAt?: DateTimeNullableFilter<"Member"> | Date | string | null
    VAId?: UuidFilter<"Member"> | string
    VARoleId?: UuidFilter<"Member"> | string
    TotalCargosTransportedLbs?: IntFilter<"Member"> | number
    TotalPAXsTransported?: IntFilter<"Member"> | number
    TotalEarnedCredits?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFilter<"Member"> | number
    FlightHours?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    Color?: StringFilter<"Member"> | string
    ReputationImpact?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: DateTimeNullableFilter<"Member"> | Date | string | null
    LastRefresh?: DateTimeNullableFilter<"Member"> | Date | string | null
    UserId?: UuidNullableFilter<"Member"> | string | null
    CreatedAt?: DateTimeFilter<"Member"> | Date | string
    UpdatedAt?: DateTimeFilter<"Member"> | Date | string
    Company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    VirtualAirline?: XOR<VirtualAirlineScalarRelationFilter, VirtualAirlineWhereInput>
    VARole?: XOR<VirtualAirlineRoleScalarRelationFilter, VirtualAirlineRoleWhereInput>
    Flights?: FlightListRelationFilter
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    FlightRoutes?: FlightRouteListRelationFilter
  }, "Id" | "CompanyId">

  export type MemberOrderByWithAggregationInput = {
    Id?: SortOrder
    IsActive?: SortOrder
    DeactivatedAt?: SortOrderInput | SortOrder
    VAId?: SortOrder
    VARoleId?: SortOrder
    TotalCargosTransportedLbs?: SortOrder
    TotalPAXsTransported?: SortOrder
    TotalEarnedCredits?: SortOrder
    TotalSpentCredits?: SortOrder
    NumberOfFlights?: SortOrder
    FlightHours?: SortOrder
    Color?: SortOrder
    ReputationImpact?: SortOrder
    LastVAFlightDate?: SortOrderInput | SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    UserId?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    CompanyId?: SortOrder
    _count?: MemberCountOrderByAggregateInput
    _avg?: MemberAvgOrderByAggregateInput
    _max?: MemberMaxOrderByAggregateInput
    _min?: MemberMinOrderByAggregateInput
    _sum?: MemberSumOrderByAggregateInput
  }

  export type MemberScalarWhereWithAggregatesInput = {
    AND?: MemberScalarWhereWithAggregatesInput | MemberScalarWhereWithAggregatesInput[]
    OR?: MemberScalarWhereWithAggregatesInput[]
    NOT?: MemberScalarWhereWithAggregatesInput | MemberScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"Member"> | string
    IsActive?: BoolWithAggregatesFilter<"Member"> | boolean
    DeactivatedAt?: DateTimeNullableWithAggregatesFilter<"Member"> | Date | string | null
    VAId?: UuidWithAggregatesFilter<"Member"> | string
    VARoleId?: UuidWithAggregatesFilter<"Member"> | string
    TotalCargosTransportedLbs?: IntWithAggregatesFilter<"Member"> | number
    TotalPAXsTransported?: IntWithAggregatesFilter<"Member"> | number
    TotalEarnedCredits?: DecimalWithAggregatesFilter<"Member"> | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalWithAggregatesFilter<"Member"> | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntWithAggregatesFilter<"Member"> | number
    FlightHours?: DecimalWithAggregatesFilter<"Member"> | Decimal | DecimalJsLike | number | string
    Color?: StringWithAggregatesFilter<"Member"> | string
    ReputationImpact?: DecimalWithAggregatesFilter<"Member"> | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: DateTimeNullableWithAggregatesFilter<"Member"> | Date | string | null
    LastRefresh?: DateTimeNullableWithAggregatesFilter<"Member"> | Date | string | null
    UserId?: UuidNullableWithAggregatesFilter<"Member"> | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"Member"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"Member"> | Date | string
    CompanyId?: UuidWithAggregatesFilter<"Member"> | string
  }

  export type CompanyWhereInput = {
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    Id?: UuidFilter<"Company"> | string
    Name?: StringFilter<"Company"> | string
    AirlineCode?: StringFilter<"Company"> | string
    CreationDate?: DateTimeFilter<"Company"> | Date | string
    Level?: IntFilter<"Company"> | number
    LevelXP?: IntFilter<"Company"> | number
    Reputation?: DecimalFilter<"Company"> | Decimal | DecimalJsLike | number | string
    Paused?: BoolFilter<"Company"> | boolean
    LastConnection?: DateTimeNullableFilter<"Company"> | Date | string | null
    LastReportDate?: DateTimeNullableFilter<"Company"> | Date | string | null
    DifficultyLevel?: IntFilter<"Company"> | number
    WorldId?: UuidFilter<"Company"> | string
    LastRefresh?: DateTimeNullableFilter<"Company"> | Date | string | null
    CreatedAt?: DateTimeFilter<"Company"> | Date | string
    UpdatedAt?: DateTimeFilter<"Company"> | Date | string
    World?: XOR<WorldScalarRelationFilter, WorldWhereInput>
    Flights?: FlightListRelationFilter
    Owner?: XOR<MemberNullableScalarRelationFilter, MemberWhereInput> | null
  }

  export type CompanyOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    AirlineCode?: SortOrder
    CreationDate?: SortOrder
    Level?: SortOrder
    LevelXP?: SortOrder
    Reputation?: SortOrder
    Paused?: SortOrder
    LastConnection?: SortOrderInput | SortOrder
    LastReportDate?: SortOrderInput | SortOrder
    DifficultyLevel?: SortOrder
    WorldId?: SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    World?: WorldOrderByWithRelationInput
    Flights?: FlightOrderByRelationAggregateInput
    Owner?: MemberOrderByWithRelationInput
  }

  export type CompanyWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AirlineCode?: string
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    Name?: StringFilter<"Company"> | string
    CreationDate?: DateTimeFilter<"Company"> | Date | string
    Level?: IntFilter<"Company"> | number
    LevelXP?: IntFilter<"Company"> | number
    Reputation?: DecimalFilter<"Company"> | Decimal | DecimalJsLike | number | string
    Paused?: BoolFilter<"Company"> | boolean
    LastConnection?: DateTimeNullableFilter<"Company"> | Date | string | null
    LastReportDate?: DateTimeNullableFilter<"Company"> | Date | string | null
    DifficultyLevel?: IntFilter<"Company"> | number
    WorldId?: UuidFilter<"Company"> | string
    LastRefresh?: DateTimeNullableFilter<"Company"> | Date | string | null
    CreatedAt?: DateTimeFilter<"Company"> | Date | string
    UpdatedAt?: DateTimeFilter<"Company"> | Date | string
    World?: XOR<WorldScalarRelationFilter, WorldWhereInput>
    Flights?: FlightListRelationFilter
    Owner?: XOR<MemberNullableScalarRelationFilter, MemberWhereInput> | null
  }, "Id" | "AirlineCode">

  export type CompanyOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    AirlineCode?: SortOrder
    CreationDate?: SortOrder
    Level?: SortOrder
    LevelXP?: SortOrder
    Reputation?: SortOrder
    Paused?: SortOrder
    LastConnection?: SortOrderInput | SortOrder
    LastReportDate?: SortOrderInput | SortOrder
    DifficultyLevel?: SortOrder
    WorldId?: SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: CompanyCountOrderByAggregateInput
    _avg?: CompanyAvgOrderByAggregateInput
    _max?: CompanyMaxOrderByAggregateInput
    _min?: CompanyMinOrderByAggregateInput
    _sum?: CompanySumOrderByAggregateInput
  }

  export type CompanyScalarWhereWithAggregatesInput = {
    AND?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    OR?: CompanyScalarWhereWithAggregatesInput[]
    NOT?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"Company"> | string
    Name?: StringWithAggregatesFilter<"Company"> | string
    AirlineCode?: StringWithAggregatesFilter<"Company"> | string
    CreationDate?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    Level?: IntWithAggregatesFilter<"Company"> | number
    LevelXP?: IntWithAggregatesFilter<"Company"> | number
    Reputation?: DecimalWithAggregatesFilter<"Company"> | Decimal | DecimalJsLike | number | string
    Paused?: BoolWithAggregatesFilter<"Company"> | boolean
    LastConnection?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    LastReportDate?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    DifficultyLevel?: IntWithAggregatesFilter<"Company"> | number
    WorldId?: UuidWithAggregatesFilter<"Company"> | string
    LastRefresh?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"Company"> | Date | string
  }

  export type AircraftWhereInput = {
    AND?: AircraftWhereInput | AircraftWhereInput[]
    OR?: AircraftWhereInput[]
    NOT?: AircraftWhereInput | AircraftWhereInput[]
    Id?: UuidFilter<"Aircraft"> | string
    Identifier?: StringFilter<"Aircraft"> | string
    DisplayName?: StringFilter<"Aircraft"> | string
    AircraftStatusId?: IntFilter<"Aircraft"> | number
    AircraftClassId?: UuidFilter<"Aircraft"> | string
    VirtualAirlineId?: UuidFilter<"Aircraft"> | string
    CurrentAirportId?: UuidNullableFilter<"Aircraft"> | string | null
    LastRefresh?: DateTimeNullableFilter<"Aircraft"> | Date | string | null
    CreatedAt?: DateTimeFilter<"Aircraft"> | Date | string
    UpdatedAt?: DateTimeFilter<"Aircraft"> | Date | string
    AircraftClass?: XOR<AircraftClassScalarRelationFilter, AircraftClassWhereInput>
    VirtualAirline?: XOR<VirtualAirlineScalarRelationFilter, VirtualAirlineWhereInput>
    AircraftStatus?: XOR<AircraftStatusScalarRelationFilter, AircraftStatusWhereInput>
    CurrentAirport?: XOR<AirportNullableScalarRelationFilter, AirportWhereInput> | null
    AircraftMaintenance?: AircraftMaintenanceListRelationFilter
    Flights?: FlightListRelationFilter
    Liveries?: LiveryListRelationFilter
  }

  export type AircraftOrderByWithRelationInput = {
    Id?: SortOrder
    Identifier?: SortOrder
    DisplayName?: SortOrder
    AircraftStatusId?: SortOrder
    AircraftClassId?: SortOrder
    VirtualAirlineId?: SortOrder
    CurrentAirportId?: SortOrderInput | SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    AircraftClass?: AircraftClassOrderByWithRelationInput
    VirtualAirline?: VirtualAirlineOrderByWithRelationInput
    AircraftStatus?: AircraftStatusOrderByWithRelationInput
    CurrentAirport?: AirportOrderByWithRelationInput
    AircraftMaintenance?: AircraftMaintenanceOrderByRelationAggregateInput
    Flights?: FlightOrderByRelationAggregateInput
    Liveries?: LiveryOrderByRelationAggregateInput
  }

  export type AircraftWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    Identifier?: string
    AND?: AircraftWhereInput | AircraftWhereInput[]
    OR?: AircraftWhereInput[]
    NOT?: AircraftWhereInput | AircraftWhereInput[]
    DisplayName?: StringFilter<"Aircraft"> | string
    AircraftStatusId?: IntFilter<"Aircraft"> | number
    AircraftClassId?: UuidFilter<"Aircraft"> | string
    VirtualAirlineId?: UuidFilter<"Aircraft"> | string
    CurrentAirportId?: UuidNullableFilter<"Aircraft"> | string | null
    LastRefresh?: DateTimeNullableFilter<"Aircraft"> | Date | string | null
    CreatedAt?: DateTimeFilter<"Aircraft"> | Date | string
    UpdatedAt?: DateTimeFilter<"Aircraft"> | Date | string
    AircraftClass?: XOR<AircraftClassScalarRelationFilter, AircraftClassWhereInput>
    VirtualAirline?: XOR<VirtualAirlineScalarRelationFilter, VirtualAirlineWhereInput>
    AircraftStatus?: XOR<AircraftStatusScalarRelationFilter, AircraftStatusWhereInput>
    CurrentAirport?: XOR<AirportNullableScalarRelationFilter, AirportWhereInput> | null
    AircraftMaintenance?: AircraftMaintenanceListRelationFilter
    Flights?: FlightListRelationFilter
    Liveries?: LiveryListRelationFilter
  }, "Id" | "Identifier">

  export type AircraftOrderByWithAggregationInput = {
    Id?: SortOrder
    Identifier?: SortOrder
    DisplayName?: SortOrder
    AircraftStatusId?: SortOrder
    AircraftClassId?: SortOrder
    VirtualAirlineId?: SortOrder
    CurrentAirportId?: SortOrderInput | SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: AircraftCountOrderByAggregateInput
    _avg?: AircraftAvgOrderByAggregateInput
    _max?: AircraftMaxOrderByAggregateInput
    _min?: AircraftMinOrderByAggregateInput
    _sum?: AircraftSumOrderByAggregateInput
  }

  export type AircraftScalarWhereWithAggregatesInput = {
    AND?: AircraftScalarWhereWithAggregatesInput | AircraftScalarWhereWithAggregatesInput[]
    OR?: AircraftScalarWhereWithAggregatesInput[]
    NOT?: AircraftScalarWhereWithAggregatesInput | AircraftScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"Aircraft"> | string
    Identifier?: StringWithAggregatesFilter<"Aircraft"> | string
    DisplayName?: StringWithAggregatesFilter<"Aircraft"> | string
    AircraftStatusId?: IntWithAggregatesFilter<"Aircraft"> | number
    AircraftClassId?: UuidWithAggregatesFilter<"Aircraft"> | string
    VirtualAirlineId?: UuidWithAggregatesFilter<"Aircraft"> | string
    CurrentAirportId?: UuidNullableWithAggregatesFilter<"Aircraft"> | string | null
    LastRefresh?: DateTimeNullableWithAggregatesFilter<"Aircraft"> | Date | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"Aircraft"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"Aircraft"> | Date | string
  }

  export type AircraftClassWhereInput = {
    AND?: AircraftClassWhereInput | AircraftClassWhereInput[]
    OR?: AircraftClassWhereInput[]
    NOT?: AircraftClassWhereInput | AircraftClassWhereInput[]
    Id?: UuidFilter<"AircraftClass"> | string
    ShortName?: StringFilter<"AircraftClass"> | string
    Name?: StringFilter<"AircraftClass"> | string
    Aircrafts?: AircraftListRelationFilter
  }

  export type AircraftClassOrderByWithRelationInput = {
    Id?: SortOrder
    ShortName?: SortOrder
    Name?: SortOrder
    Aircrafts?: AircraftOrderByRelationAggregateInput
  }

  export type AircraftClassWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    ShortName?: string
    AND?: AircraftClassWhereInput | AircraftClassWhereInput[]
    OR?: AircraftClassWhereInput[]
    NOT?: AircraftClassWhereInput | AircraftClassWhereInput[]
    Name?: StringFilter<"AircraftClass"> | string
    Aircrafts?: AircraftListRelationFilter
  }, "Id" | "ShortName">

  export type AircraftClassOrderByWithAggregationInput = {
    Id?: SortOrder
    ShortName?: SortOrder
    Name?: SortOrder
    _count?: AircraftClassCountOrderByAggregateInput
    _max?: AircraftClassMaxOrderByAggregateInput
    _min?: AircraftClassMinOrderByAggregateInput
  }

  export type AircraftClassScalarWhereWithAggregatesInput = {
    AND?: AircraftClassScalarWhereWithAggregatesInput | AircraftClassScalarWhereWithAggregatesInput[]
    OR?: AircraftClassScalarWhereWithAggregatesInput[]
    NOT?: AircraftClassScalarWhereWithAggregatesInput | AircraftClassScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"AircraftClass"> | string
    ShortName?: StringWithAggregatesFilter<"AircraftClass"> | string
    Name?: StringWithAggregatesFilter<"AircraftClass"> | string
  }

  export type AircraftMaintenanceWhereInput = {
    AND?: AircraftMaintenanceWhereInput | AircraftMaintenanceWhereInput[]
    OR?: AircraftMaintenanceWhereInput[]
    NOT?: AircraftMaintenanceWhereInput | AircraftMaintenanceWhereInput[]
    Id?: UuidFilter<"AircraftMaintenance"> | string
    AircraftId?: UuidFilter<"AircraftMaintenance"> | string
    AnnualCheckup?: BoolFilter<"AircraftMaintenance"> | boolean
    Inspection100Hours?: BoolFilter<"AircraftMaintenance"> | boolean
    FailuresRepair?: BoolFilter<"AircraftMaintenance"> | boolean
    AirframeRepair?: BoolFilter<"AircraftMaintenance"> | boolean
    AirframeReplace?: BoolFilter<"AircraftMaintenance"> | boolean
    EcoSeats?: IntFilter<"AircraftMaintenance"> | number
    BusSeats?: IntFilter<"AircraftMaintenance"> | number
    FirstClassSeats?: IntFilter<"AircraftMaintenance"> | number
    AirframeRepairCondition?: DecimalFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: UuidFilter<"AircraftMaintenance"> | string
    RemainingMaintenanceWorkHours?: DecimalFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    Amount?: DecimalFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeFilter<"AircraftMaintenance"> | Date | string
    UpdatedAt?: DateTimeFilter<"AircraftMaintenance"> | Date | string
    Aircraft?: XOR<AircraftScalarRelationFilter, AircraftWhereInput>
  }

  export type AircraftMaintenanceOrderByWithRelationInput = {
    Id?: SortOrder
    AircraftId?: SortOrder
    AnnualCheckup?: SortOrder
    Inspection100Hours?: SortOrder
    FailuresRepair?: SortOrder
    AirframeRepair?: SortOrder
    AirframeReplace?: SortOrder
    EcoSeats?: SortOrder
    BusSeats?: SortOrder
    FirstClassSeats?: SortOrder
    AirframeRepairCondition?: SortOrder
    MaintenanceFBOId?: SortOrder
    RemainingMaintenanceWorkHours?: SortOrder
    Amount?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    Aircraft?: AircraftOrderByWithRelationInput
  }

  export type AircraftMaintenanceWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: AircraftMaintenanceWhereInput | AircraftMaintenanceWhereInput[]
    OR?: AircraftMaintenanceWhereInput[]
    NOT?: AircraftMaintenanceWhereInput | AircraftMaintenanceWhereInput[]
    AircraftId?: UuidFilter<"AircraftMaintenance"> | string
    AnnualCheckup?: BoolFilter<"AircraftMaintenance"> | boolean
    Inspection100Hours?: BoolFilter<"AircraftMaintenance"> | boolean
    FailuresRepair?: BoolFilter<"AircraftMaintenance"> | boolean
    AirframeRepair?: BoolFilter<"AircraftMaintenance"> | boolean
    AirframeReplace?: BoolFilter<"AircraftMaintenance"> | boolean
    EcoSeats?: IntFilter<"AircraftMaintenance"> | number
    BusSeats?: IntFilter<"AircraftMaintenance"> | number
    FirstClassSeats?: IntFilter<"AircraftMaintenance"> | number
    AirframeRepairCondition?: DecimalFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: UuidFilter<"AircraftMaintenance"> | string
    RemainingMaintenanceWorkHours?: DecimalFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    Amount?: DecimalFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeFilter<"AircraftMaintenance"> | Date | string
    UpdatedAt?: DateTimeFilter<"AircraftMaintenance"> | Date | string
    Aircraft?: XOR<AircraftScalarRelationFilter, AircraftWhereInput>
  }, "Id">

  export type AircraftMaintenanceOrderByWithAggregationInput = {
    Id?: SortOrder
    AircraftId?: SortOrder
    AnnualCheckup?: SortOrder
    Inspection100Hours?: SortOrder
    FailuresRepair?: SortOrder
    AirframeRepair?: SortOrder
    AirframeReplace?: SortOrder
    EcoSeats?: SortOrder
    BusSeats?: SortOrder
    FirstClassSeats?: SortOrder
    AirframeRepairCondition?: SortOrder
    MaintenanceFBOId?: SortOrder
    RemainingMaintenanceWorkHours?: SortOrder
    Amount?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: AircraftMaintenanceCountOrderByAggregateInput
    _avg?: AircraftMaintenanceAvgOrderByAggregateInput
    _max?: AircraftMaintenanceMaxOrderByAggregateInput
    _min?: AircraftMaintenanceMinOrderByAggregateInput
    _sum?: AircraftMaintenanceSumOrderByAggregateInput
  }

  export type AircraftMaintenanceScalarWhereWithAggregatesInput = {
    AND?: AircraftMaintenanceScalarWhereWithAggregatesInput | AircraftMaintenanceScalarWhereWithAggregatesInput[]
    OR?: AircraftMaintenanceScalarWhereWithAggregatesInput[]
    NOT?: AircraftMaintenanceScalarWhereWithAggregatesInput | AircraftMaintenanceScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"AircraftMaintenance"> | string
    AircraftId?: UuidWithAggregatesFilter<"AircraftMaintenance"> | string
    AnnualCheckup?: BoolWithAggregatesFilter<"AircraftMaintenance"> | boolean
    Inspection100Hours?: BoolWithAggregatesFilter<"AircraftMaintenance"> | boolean
    FailuresRepair?: BoolWithAggregatesFilter<"AircraftMaintenance"> | boolean
    AirframeRepair?: BoolWithAggregatesFilter<"AircraftMaintenance"> | boolean
    AirframeReplace?: BoolWithAggregatesFilter<"AircraftMaintenance"> | boolean
    EcoSeats?: IntWithAggregatesFilter<"AircraftMaintenance"> | number
    BusSeats?: IntWithAggregatesFilter<"AircraftMaintenance"> | number
    FirstClassSeats?: IntWithAggregatesFilter<"AircraftMaintenance"> | number
    AirframeRepairCondition?: DecimalWithAggregatesFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: UuidWithAggregatesFilter<"AircraftMaintenance"> | string
    RemainingMaintenanceWorkHours?: DecimalWithAggregatesFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    Amount?: DecimalWithAggregatesFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeWithAggregatesFilter<"AircraftMaintenance"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"AircraftMaintenance"> | Date | string
  }

  export type AircraftStatusWhereInput = {
    AND?: AircraftStatusWhereInput | AircraftStatusWhereInput[]
    OR?: AircraftStatusWhereInput[]
    NOT?: AircraftStatusWhereInput | AircraftStatusWhereInput[]
    Id?: IntFilter<"AircraftStatus"> | number
    Name?: StringFilter<"AircraftStatus"> | string
    Aircrafts?: AircraftListRelationFilter
  }

  export type AircraftStatusOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Aircrafts?: AircraftOrderByRelationAggregateInput
  }

  export type AircraftStatusWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    AND?: AircraftStatusWhereInput | AircraftStatusWhereInput[]
    OR?: AircraftStatusWhereInput[]
    NOT?: AircraftStatusWhereInput | AircraftStatusWhereInput[]
    Name?: StringFilter<"AircraftStatus"> | string
    Aircrafts?: AircraftListRelationFilter
  }, "Id" | "Id">

  export type AircraftStatusOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    _count?: AircraftStatusCountOrderByAggregateInput
    _avg?: AircraftStatusAvgOrderByAggregateInput
    _max?: AircraftStatusMaxOrderByAggregateInput
    _min?: AircraftStatusMinOrderByAggregateInput
    _sum?: AircraftStatusSumOrderByAggregateInput
  }

  export type AircraftStatusScalarWhereWithAggregatesInput = {
    AND?: AircraftStatusScalarWhereWithAggregatesInput | AircraftStatusScalarWhereWithAggregatesInput[]
    OR?: AircraftStatusScalarWhereWithAggregatesInput[]
    NOT?: AircraftStatusScalarWhereWithAggregatesInput | AircraftStatusScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"AircraftStatus"> | number
    Name?: StringWithAggregatesFilter<"AircraftStatus"> | string
  }

  export type AirportWhereInput = {
    AND?: AirportWhereInput | AirportWhereInput[]
    OR?: AirportWhereInput[]
    NOT?: AirportWhereInput | AirportWhereInput[]
    Id?: UuidFilter<"Airport"> | string
    ICAO?: StringFilter<"Airport"> | string
    IATA?: StringNullableFilter<"Airport"> | string | null
    Description?: StringNullableFilter<"Airport"> | string | null
    Name?: StringFilter<"Airport"> | string
    Size?: IntFilter<"Airport"> | number
    City?: StringNullableFilter<"Airport"> | string | null
    State?: StringNullableFilter<"Airport"> | string | null
    CountryCode?: StringNullableFilter<"Airport"> | string | null
    CountryName?: StringNullableFilter<"Airport"> | string | null
    CountryEmoji?: StringNullableFilter<"Airport"> | string | null
    Latitude?: DecimalFilter<"Airport"> | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFilter<"Airport"> | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: StringNullableFilter<"Airport"> | string | null
    WikiUrl?: StringNullableFilter<"Airport"> | string | null
    CreatedAt?: DateTimeFilter<"Airport"> | Date | string
    UpdatedAt?: DateTimeFilter<"Airport"> | Date | string
    AircraftAtAirport?: AircraftListRelationFilter
    DepartingFlights?: FlightListRelationFilter
    ArrivingFlights?: FlightListRelationFilter
    ArrivingAlternateFlights?: FlightListRelationFilter
    ArrivingActualFlights?: FlightListRelationFilter
  }

  export type AirportOrderByWithRelationInput = {
    Id?: SortOrder
    ICAO?: SortOrder
    IATA?: SortOrderInput | SortOrder
    Description?: SortOrderInput | SortOrder
    Name?: SortOrder
    Size?: SortOrder
    City?: SortOrderInput | SortOrder
    State?: SortOrderInput | SortOrder
    CountryCode?: SortOrderInput | SortOrder
    CountryName?: SortOrderInput | SortOrder
    CountryEmoji?: SortOrderInput | SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
    HomeWebSiteUrl?: SortOrderInput | SortOrder
    WikiUrl?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    AircraftAtAirport?: AircraftOrderByRelationAggregateInput
    DepartingFlights?: FlightOrderByRelationAggregateInput
    ArrivingFlights?: FlightOrderByRelationAggregateInput
    ArrivingAlternateFlights?: FlightOrderByRelationAggregateInput
    ArrivingActualFlights?: FlightOrderByRelationAggregateInput
  }

  export type AirportWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    ICAO?: string
    IATA?: string
    AND?: AirportWhereInput | AirportWhereInput[]
    OR?: AirportWhereInput[]
    NOT?: AirportWhereInput | AirportWhereInput[]
    Description?: StringNullableFilter<"Airport"> | string | null
    Name?: StringFilter<"Airport"> | string
    Size?: IntFilter<"Airport"> | number
    City?: StringNullableFilter<"Airport"> | string | null
    State?: StringNullableFilter<"Airport"> | string | null
    CountryCode?: StringNullableFilter<"Airport"> | string | null
    CountryName?: StringNullableFilter<"Airport"> | string | null
    CountryEmoji?: StringNullableFilter<"Airport"> | string | null
    Latitude?: DecimalFilter<"Airport"> | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFilter<"Airport"> | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: StringNullableFilter<"Airport"> | string | null
    WikiUrl?: StringNullableFilter<"Airport"> | string | null
    CreatedAt?: DateTimeFilter<"Airport"> | Date | string
    UpdatedAt?: DateTimeFilter<"Airport"> | Date | string
    AircraftAtAirport?: AircraftListRelationFilter
    DepartingFlights?: FlightListRelationFilter
    ArrivingFlights?: FlightListRelationFilter
    ArrivingAlternateFlights?: FlightListRelationFilter
    ArrivingActualFlights?: FlightListRelationFilter
  }, "Id" | "Id" | "ICAO" | "IATA">

  export type AirportOrderByWithAggregationInput = {
    Id?: SortOrder
    ICAO?: SortOrder
    IATA?: SortOrderInput | SortOrder
    Description?: SortOrderInput | SortOrder
    Name?: SortOrder
    Size?: SortOrder
    City?: SortOrderInput | SortOrder
    State?: SortOrderInput | SortOrder
    CountryCode?: SortOrderInput | SortOrder
    CountryName?: SortOrderInput | SortOrder
    CountryEmoji?: SortOrderInput | SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
    HomeWebSiteUrl?: SortOrderInput | SortOrder
    WikiUrl?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: AirportCountOrderByAggregateInput
    _avg?: AirportAvgOrderByAggregateInput
    _max?: AirportMaxOrderByAggregateInput
    _min?: AirportMinOrderByAggregateInput
    _sum?: AirportSumOrderByAggregateInput
  }

  export type AirportScalarWhereWithAggregatesInput = {
    AND?: AirportScalarWhereWithAggregatesInput | AirportScalarWhereWithAggregatesInput[]
    OR?: AirportScalarWhereWithAggregatesInput[]
    NOT?: AirportScalarWhereWithAggregatesInput | AirportScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"Airport"> | string
    ICAO?: StringWithAggregatesFilter<"Airport"> | string
    IATA?: StringNullableWithAggregatesFilter<"Airport"> | string | null
    Description?: StringNullableWithAggregatesFilter<"Airport"> | string | null
    Name?: StringWithAggregatesFilter<"Airport"> | string
    Size?: IntWithAggregatesFilter<"Airport"> | number
    City?: StringNullableWithAggregatesFilter<"Airport"> | string | null
    State?: StringNullableWithAggregatesFilter<"Airport"> | string | null
    CountryCode?: StringNullableWithAggregatesFilter<"Airport"> | string | null
    CountryName?: StringNullableWithAggregatesFilter<"Airport"> | string | null
    CountryEmoji?: StringNullableWithAggregatesFilter<"Airport"> | string | null
    Latitude?: DecimalWithAggregatesFilter<"Airport"> | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalWithAggregatesFilter<"Airport"> | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: StringNullableWithAggregatesFilter<"Airport"> | string | null
    WikiUrl?: StringNullableWithAggregatesFilter<"Airport"> | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"Airport"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"Airport"> | Date | string
  }

  export type FlightWhereInput = {
    AND?: FlightWhereInput | FlightWhereInput[]
    OR?: FlightWhereInput[]
    NOT?: FlightWhereInput | FlightWhereInput[]
    Id?: UuidFilter<"Flight"> | string
    AircraftId?: UuidNullableFilter<"Flight"> | string | null
    CompanyId?: UuidFilter<"Flight"> | string
    Registered?: BoolFilter<"Flight"> | boolean
    Category?: IntFilter<"Flight"> | number
    ResultComments?: StringFilter<"Flight"> | string
    StartTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EndTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EngineOnTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EngineOffTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    AirborneTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    LandedTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    IntendedFlightLevel?: IntNullableFilter<"Flight"> | number | null
    Passengers?: IntNullableFilter<"Flight"> | number | null
    Cargo?: IntNullableFilter<"Flight"> | number | null
    AddedFuelQty?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFilter<"Flight"> | boolean
    VerticalSpeedAtTouchdownMpS?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MinGForce?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxBank?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFilter<"Flight"> | boolean
    HasOverspeeded?: BoolFilter<"Flight"> | boolean
    XPFlight?: IntNullableFilter<"Flight"> | number | null
    XPFlightBonus?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    XPMissions?: IntNullableFilter<"Flight"> | number | null
    CargosTotalWeight?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    PAXCount?: IntNullableFilter<"Flight"> | number | null
    AircraftCurrentFOB?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    RegisterState?: IntNullableFilter<"Flight"> | number | null
    WrongFuelDetected?: BoolFilter<"Flight"> | boolean
    WrongWeightDetected?: BoolFilter<"Flight"> | boolean
    TimeOffset?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartHeading?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFilter<"Flight"> | boolean
    RestCrewAfterWarp?: BoolFilter<"Flight"> | boolean
    Score?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFilter<"Flight"> | boolean
    EngineOnRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EngineOffRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    LandedRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    AirborneRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    DepartureAirportId?: UuidNullableFilter<"Flight"> | string | null
    ArrivalIntendedAirportId?: UuidNullableFilter<"Flight"> | string | null
    ArrivalAlternateAirportId?: UuidNullableFilter<"Flight"> | string | null
    ArrivalActualAirportId?: UuidNullableFilter<"Flight"> | string | null
    VAId?: UuidNullableFilter<"Flight"> | string | null
    MemberId?: UuidNullableFilter<"Flight"> | string | null
    LastRefresh?: DateTimeNullableFilter<"Flight"> | Date | string | null
    CreatedAt?: DateTimeFilter<"Flight"> | Date | string
    UpdatedAt?: DateTimeFilter<"Flight"> | Date | string
    FlightStatus?: EnumFlightStatusFilter<"Flight"> | $Enums.FlightStatus
    Company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    VirtualAirline?: XOR<VirtualAirlineNullableScalarRelationFilter, VirtualAirlineWhereInput> | null
    Aircraft?: XOR<AircraftNullableScalarRelationFilter, AircraftWhereInput> | null
    FlightRoute?: FlightRouteListRelationFilter
    DepartureAirport?: XOR<AirportNullableScalarRelationFilter, AirportWhereInput> | null
    ArrivalIntendedAirport?: XOR<AirportNullableScalarRelationFilter, AirportWhereInput> | null
    ArrivalAlternateAirport?: XOR<AirportNullableScalarRelationFilter, AirportWhereInput> | null
    ArrivalActualAirport?: XOR<AirportNullableScalarRelationFilter, AirportWhereInput> | null
    Member?: XOR<MemberNullableScalarRelationFilter, MemberWhereInput> | null
  }

  export type FlightOrderByWithRelationInput = {
    Id?: SortOrder
    AircraftId?: SortOrderInput | SortOrder
    CompanyId?: SortOrder
    Registered?: SortOrder
    Category?: SortOrder
    ResultComments?: SortOrder
    StartTime?: SortOrderInput | SortOrder
    EndTime?: SortOrderInput | SortOrder
    EngineOnTime?: SortOrderInput | SortOrder
    EngineOffTime?: SortOrderInput | SortOrder
    AirborneTime?: SortOrderInput | SortOrder
    LandedTime?: SortOrderInput | SortOrder
    IntendedFlightLevel?: SortOrderInput | SortOrder
    Passengers?: SortOrderInput | SortOrder
    Cargo?: SortOrderInput | SortOrder
    AddedFuelQty?: SortOrderInput | SortOrder
    IsAI?: SortOrder
    VerticalSpeedAtTouchdownMpS?: SortOrderInput | SortOrder
    MaxGForce?: SortOrderInput | SortOrder
    MinGForce?: SortOrderInput | SortOrder
    MaxBank?: SortOrderInput | SortOrder
    MaxPitch?: SortOrderInput | SortOrder
    HasStalled?: SortOrder
    HasOverspeeded?: SortOrder
    XPFlight?: SortOrderInput | SortOrder
    XPFlightBonus?: SortOrderInput | SortOrder
    XPMissions?: SortOrderInput | SortOrder
    CargosTotalWeight?: SortOrderInput | SortOrder
    PAXCount?: SortOrderInput | SortOrder
    AircraftCurrentFOB?: SortOrderInput | SortOrder
    AircraftCurrentAltitude?: SortOrderInput | SortOrder
    ActualCruiseAltitude?: SortOrderInput | SortOrder
    ActualConsumptionAtCruiseLevelInLbsPerHour?: SortOrderInput | SortOrder
    ActualTotalFuelConsumptionInLbs?: SortOrderInput | SortOrder
    ActualConsumptionAtCruiseLevelInGalPerHour?: SortOrderInput | SortOrder
    ActualTASAtCruiseLevel?: SortOrderInput | SortOrder
    ActualCruiseTimeInMinutes?: SortOrderInput | SortOrder
    ActualPressureAltitude?: SortOrderInput | SortOrder
    RegisterState?: SortOrderInput | SortOrder
    WrongFuelDetected?: SortOrder
    WrongWeightDetected?: SortOrder
    TimeOffset?: SortOrderInput | SortOrder
    StartLatitude?: SortOrderInput | SortOrder
    StartLongitude?: SortOrderInput | SortOrder
    StartHeading?: SortOrderInput | SortOrder
    UseFreelanceRouteSchedule?: SortOrder
    RestCrewAfterWarp?: SortOrder
    Score?: SortOrderInput | SortOrder
    CanResumeOrAbort?: SortOrder
    EngineOnRealTime?: SortOrderInput | SortOrder
    EngineOffRealTime?: SortOrderInput | SortOrder
    LandedRealTime?: SortOrderInput | SortOrder
    AirborneRealTime?: SortOrderInput | SortOrder
    DepartureAirportId?: SortOrderInput | SortOrder
    ArrivalIntendedAirportId?: SortOrderInput | SortOrder
    ArrivalAlternateAirportId?: SortOrderInput | SortOrder
    ArrivalActualAirportId?: SortOrderInput | SortOrder
    VAId?: SortOrderInput | SortOrder
    MemberId?: SortOrderInput | SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    FlightStatus?: SortOrder
    Company?: CompanyOrderByWithRelationInput
    VirtualAirline?: VirtualAirlineOrderByWithRelationInput
    Aircraft?: AircraftOrderByWithRelationInput
    FlightRoute?: FlightRouteOrderByRelationAggregateInput
    DepartureAirport?: AirportOrderByWithRelationInput
    ArrivalIntendedAirport?: AirportOrderByWithRelationInput
    ArrivalAlternateAirport?: AirportOrderByWithRelationInput
    ArrivalActualAirport?: AirportOrderByWithRelationInput
    Member?: MemberOrderByWithRelationInput
  }

  export type FlightWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: FlightWhereInput | FlightWhereInput[]
    OR?: FlightWhereInput[]
    NOT?: FlightWhereInput | FlightWhereInput[]
    AircraftId?: UuidNullableFilter<"Flight"> | string | null
    CompanyId?: UuidFilter<"Flight"> | string
    Registered?: BoolFilter<"Flight"> | boolean
    Category?: IntFilter<"Flight"> | number
    ResultComments?: StringFilter<"Flight"> | string
    StartTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EndTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EngineOnTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EngineOffTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    AirborneTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    LandedTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    IntendedFlightLevel?: IntNullableFilter<"Flight"> | number | null
    Passengers?: IntNullableFilter<"Flight"> | number | null
    Cargo?: IntNullableFilter<"Flight"> | number | null
    AddedFuelQty?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFilter<"Flight"> | boolean
    VerticalSpeedAtTouchdownMpS?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MinGForce?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxBank?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFilter<"Flight"> | boolean
    HasOverspeeded?: BoolFilter<"Flight"> | boolean
    XPFlight?: IntNullableFilter<"Flight"> | number | null
    XPFlightBonus?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    XPMissions?: IntNullableFilter<"Flight"> | number | null
    CargosTotalWeight?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    PAXCount?: IntNullableFilter<"Flight"> | number | null
    AircraftCurrentFOB?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    RegisterState?: IntNullableFilter<"Flight"> | number | null
    WrongFuelDetected?: BoolFilter<"Flight"> | boolean
    WrongWeightDetected?: BoolFilter<"Flight"> | boolean
    TimeOffset?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartHeading?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFilter<"Flight"> | boolean
    RestCrewAfterWarp?: BoolFilter<"Flight"> | boolean
    Score?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFilter<"Flight"> | boolean
    EngineOnRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EngineOffRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    LandedRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    AirborneRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    DepartureAirportId?: UuidNullableFilter<"Flight"> | string | null
    ArrivalIntendedAirportId?: UuidNullableFilter<"Flight"> | string | null
    ArrivalAlternateAirportId?: UuidNullableFilter<"Flight"> | string | null
    ArrivalActualAirportId?: UuidNullableFilter<"Flight"> | string | null
    VAId?: UuidNullableFilter<"Flight"> | string | null
    MemberId?: UuidNullableFilter<"Flight"> | string | null
    LastRefresh?: DateTimeNullableFilter<"Flight"> | Date | string | null
    CreatedAt?: DateTimeFilter<"Flight"> | Date | string
    UpdatedAt?: DateTimeFilter<"Flight"> | Date | string
    FlightStatus?: EnumFlightStatusFilter<"Flight"> | $Enums.FlightStatus
    Company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    VirtualAirline?: XOR<VirtualAirlineNullableScalarRelationFilter, VirtualAirlineWhereInput> | null
    Aircraft?: XOR<AircraftNullableScalarRelationFilter, AircraftWhereInput> | null
    FlightRoute?: FlightRouteListRelationFilter
    DepartureAirport?: XOR<AirportNullableScalarRelationFilter, AirportWhereInput> | null
    ArrivalIntendedAirport?: XOR<AirportNullableScalarRelationFilter, AirportWhereInput> | null
    ArrivalAlternateAirport?: XOR<AirportNullableScalarRelationFilter, AirportWhereInput> | null
    ArrivalActualAirport?: XOR<AirportNullableScalarRelationFilter, AirportWhereInput> | null
    Member?: XOR<MemberNullableScalarRelationFilter, MemberWhereInput> | null
  }, "Id" | "Id">

  export type FlightOrderByWithAggregationInput = {
    Id?: SortOrder
    AircraftId?: SortOrderInput | SortOrder
    CompanyId?: SortOrder
    Registered?: SortOrder
    Category?: SortOrder
    ResultComments?: SortOrder
    StartTime?: SortOrderInput | SortOrder
    EndTime?: SortOrderInput | SortOrder
    EngineOnTime?: SortOrderInput | SortOrder
    EngineOffTime?: SortOrderInput | SortOrder
    AirborneTime?: SortOrderInput | SortOrder
    LandedTime?: SortOrderInput | SortOrder
    IntendedFlightLevel?: SortOrderInput | SortOrder
    Passengers?: SortOrderInput | SortOrder
    Cargo?: SortOrderInput | SortOrder
    AddedFuelQty?: SortOrderInput | SortOrder
    IsAI?: SortOrder
    VerticalSpeedAtTouchdownMpS?: SortOrderInput | SortOrder
    MaxGForce?: SortOrderInput | SortOrder
    MinGForce?: SortOrderInput | SortOrder
    MaxBank?: SortOrderInput | SortOrder
    MaxPitch?: SortOrderInput | SortOrder
    HasStalled?: SortOrder
    HasOverspeeded?: SortOrder
    XPFlight?: SortOrderInput | SortOrder
    XPFlightBonus?: SortOrderInput | SortOrder
    XPMissions?: SortOrderInput | SortOrder
    CargosTotalWeight?: SortOrderInput | SortOrder
    PAXCount?: SortOrderInput | SortOrder
    AircraftCurrentFOB?: SortOrderInput | SortOrder
    AircraftCurrentAltitude?: SortOrderInput | SortOrder
    ActualCruiseAltitude?: SortOrderInput | SortOrder
    ActualConsumptionAtCruiseLevelInLbsPerHour?: SortOrderInput | SortOrder
    ActualTotalFuelConsumptionInLbs?: SortOrderInput | SortOrder
    ActualConsumptionAtCruiseLevelInGalPerHour?: SortOrderInput | SortOrder
    ActualTASAtCruiseLevel?: SortOrderInput | SortOrder
    ActualCruiseTimeInMinutes?: SortOrderInput | SortOrder
    ActualPressureAltitude?: SortOrderInput | SortOrder
    RegisterState?: SortOrderInput | SortOrder
    WrongFuelDetected?: SortOrder
    WrongWeightDetected?: SortOrder
    TimeOffset?: SortOrderInput | SortOrder
    StartLatitude?: SortOrderInput | SortOrder
    StartLongitude?: SortOrderInput | SortOrder
    StartHeading?: SortOrderInput | SortOrder
    UseFreelanceRouteSchedule?: SortOrder
    RestCrewAfterWarp?: SortOrder
    Score?: SortOrderInput | SortOrder
    CanResumeOrAbort?: SortOrder
    EngineOnRealTime?: SortOrderInput | SortOrder
    EngineOffRealTime?: SortOrderInput | SortOrder
    LandedRealTime?: SortOrderInput | SortOrder
    AirborneRealTime?: SortOrderInput | SortOrder
    DepartureAirportId?: SortOrderInput | SortOrder
    ArrivalIntendedAirportId?: SortOrderInput | SortOrder
    ArrivalAlternateAirportId?: SortOrderInput | SortOrder
    ArrivalActualAirportId?: SortOrderInput | SortOrder
    VAId?: SortOrderInput | SortOrder
    MemberId?: SortOrderInput | SortOrder
    LastRefresh?: SortOrderInput | SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    FlightStatus?: SortOrder
    _count?: FlightCountOrderByAggregateInput
    _avg?: FlightAvgOrderByAggregateInput
    _max?: FlightMaxOrderByAggregateInput
    _min?: FlightMinOrderByAggregateInput
    _sum?: FlightSumOrderByAggregateInput
  }

  export type FlightScalarWhereWithAggregatesInput = {
    AND?: FlightScalarWhereWithAggregatesInput | FlightScalarWhereWithAggregatesInput[]
    OR?: FlightScalarWhereWithAggregatesInput[]
    NOT?: FlightScalarWhereWithAggregatesInput | FlightScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"Flight"> | string
    AircraftId?: UuidNullableWithAggregatesFilter<"Flight"> | string | null
    CompanyId?: UuidWithAggregatesFilter<"Flight"> | string
    Registered?: BoolWithAggregatesFilter<"Flight"> | boolean
    Category?: IntWithAggregatesFilter<"Flight"> | number
    ResultComments?: StringWithAggregatesFilter<"Flight"> | string
    StartTime?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    EndTime?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    EngineOnTime?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    EngineOffTime?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    AirborneTime?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    LandedTime?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    IntendedFlightLevel?: IntNullableWithAggregatesFilter<"Flight"> | number | null
    Passengers?: IntNullableWithAggregatesFilter<"Flight"> | number | null
    Cargo?: IntNullableWithAggregatesFilter<"Flight"> | number | null
    AddedFuelQty?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolWithAggregatesFilter<"Flight"> | boolean
    VerticalSpeedAtTouchdownMpS?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MinGForce?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxBank?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolWithAggregatesFilter<"Flight"> | boolean
    HasOverspeeded?: BoolWithAggregatesFilter<"Flight"> | boolean
    XPFlight?: IntNullableWithAggregatesFilter<"Flight"> | number | null
    XPFlightBonus?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    XPMissions?: IntNullableWithAggregatesFilter<"Flight"> | number | null
    CargosTotalWeight?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    PAXCount?: IntNullableWithAggregatesFilter<"Flight"> | number | null
    AircraftCurrentFOB?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    RegisterState?: IntNullableWithAggregatesFilter<"Flight"> | number | null
    WrongFuelDetected?: BoolWithAggregatesFilter<"Flight"> | boolean
    WrongWeightDetected?: BoolWithAggregatesFilter<"Flight"> | boolean
    TimeOffset?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartHeading?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolWithAggregatesFilter<"Flight"> | boolean
    RestCrewAfterWarp?: BoolWithAggregatesFilter<"Flight"> | boolean
    Score?: DecimalNullableWithAggregatesFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolWithAggregatesFilter<"Flight"> | boolean
    EngineOnRealTime?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    EngineOffRealTime?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    LandedRealTime?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    AirborneRealTime?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    DepartureAirportId?: UuidNullableWithAggregatesFilter<"Flight"> | string | null
    ArrivalIntendedAirportId?: UuidNullableWithAggregatesFilter<"Flight"> | string | null
    ArrivalAlternateAirportId?: UuidNullableWithAggregatesFilter<"Flight"> | string | null
    ArrivalActualAirportId?: UuidNullableWithAggregatesFilter<"Flight"> | string | null
    VAId?: UuidNullableWithAggregatesFilter<"Flight"> | string | null
    MemberId?: UuidNullableWithAggregatesFilter<"Flight"> | string | null
    LastRefresh?: DateTimeNullableWithAggregatesFilter<"Flight"> | Date | string | null
    CreatedAt?: DateTimeWithAggregatesFilter<"Flight"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"Flight"> | Date | string
    FlightStatus?: EnumFlightStatusWithAggregatesFilter<"Flight"> | $Enums.FlightStatus
  }

  export type FlightRouteWhereInput = {
    AND?: FlightRouteWhereInput | FlightRouteWhereInput[]
    OR?: FlightRouteWhereInput[]
    NOT?: FlightRouteWhereInput | FlightRouteWhereInput[]
    Id?: UuidFilter<"FlightRoute"> | string
    FlightId?: UuidNullableFilter<"FlightRoute"> | string | null
    MemberId?: UuidFilter<"FlightRoute"> | string
    Route?: StringFilter<"FlightRoute"> | string
    CreatedAt?: DateTimeFilter<"FlightRoute"> | Date | string
    UpdatedAt?: DateTimeFilter<"FlightRoute"> | Date | string
    Flight?: XOR<FlightNullableScalarRelationFilter, FlightWhereInput> | null
    Member?: XOR<MemberScalarRelationFilter, MemberWhereInput>
  }

  export type FlightRouteOrderByWithRelationInput = {
    Id?: SortOrder
    FlightId?: SortOrderInput | SortOrder
    MemberId?: SortOrder
    Route?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    Flight?: FlightOrderByWithRelationInput
    Member?: MemberOrderByWithRelationInput
  }

  export type FlightRouteWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: FlightRouteWhereInput | FlightRouteWhereInput[]
    OR?: FlightRouteWhereInput[]
    NOT?: FlightRouteWhereInput | FlightRouteWhereInput[]
    FlightId?: UuidNullableFilter<"FlightRoute"> | string | null
    MemberId?: UuidFilter<"FlightRoute"> | string
    Route?: StringFilter<"FlightRoute"> | string
    CreatedAt?: DateTimeFilter<"FlightRoute"> | Date | string
    UpdatedAt?: DateTimeFilter<"FlightRoute"> | Date | string
    Flight?: XOR<FlightNullableScalarRelationFilter, FlightWhereInput> | null
    Member?: XOR<MemberScalarRelationFilter, MemberWhereInput>
  }, "Id">

  export type FlightRouteOrderByWithAggregationInput = {
    Id?: SortOrder
    FlightId?: SortOrderInput | SortOrder
    MemberId?: SortOrder
    Route?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: FlightRouteCountOrderByAggregateInput
    _max?: FlightRouteMaxOrderByAggregateInput
    _min?: FlightRouteMinOrderByAggregateInput
  }

  export type FlightRouteScalarWhereWithAggregatesInput = {
    AND?: FlightRouteScalarWhereWithAggregatesInput | FlightRouteScalarWhereWithAggregatesInput[]
    OR?: FlightRouteScalarWhereWithAggregatesInput[]
    NOT?: FlightRouteScalarWhereWithAggregatesInput | FlightRouteScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"FlightRoute"> | string
    FlightId?: UuidNullableWithAggregatesFilter<"FlightRoute"> | string | null
    MemberId?: UuidWithAggregatesFilter<"FlightRoute"> | string
    Route?: StringWithAggregatesFilter<"FlightRoute"> | string
    CreatedAt?: DateTimeWithAggregatesFilter<"FlightRoute"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"FlightRoute"> | Date | string
  }

  export type JobWhereInput = {
    AND?: JobWhereInput | JobWhereInput[]
    OR?: JobWhereInput[]
    NOT?: JobWhereInput | JobWhereInput[]
    Id?: UuidFilter<"Job"> | string
    IsEnabled?: BoolFilter<"Job"> | boolean
    FirstRunCompleted?: BoolFilter<"Job"> | boolean
    Type?: EnumJobTypeFilter<"Job"> | $Enums.JobType
    Status?: EnumJobStatusFilter<"Job"> | $Enums.JobStatus
    CronExpression?: EnumCronExpressionFilter<"Job"> | $Enums.CronExpression
    Name?: StringFilter<"Job"> | string
    Description?: StringNullableFilter<"Job"> | string | null
    Parameters?: JsonNullableFilter<"Job">
    LastRunAt?: DateTimeNullableFilter<"Job"> | Date | string | null
    NextRunAt?: DateTimeNullableFilter<"Job"> | Date | string | null
    LastError?: StringNullableFilter<"Job"> | string | null
    ExecutionCount?: IntFilter<"Job"> | number
    CreatedAt?: DateTimeFilter<"Job"> | Date | string
    UpdatedAt?: DateTimeFilter<"Job"> | Date | string
  }

  export type JobOrderByWithRelationInput = {
    Id?: SortOrder
    IsEnabled?: SortOrder
    FirstRunCompleted?: SortOrder
    Type?: SortOrder
    Status?: SortOrder
    CronExpression?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    Parameters?: SortOrderInput | SortOrder
    LastRunAt?: SortOrderInput | SortOrder
    NextRunAt?: SortOrderInput | SortOrder
    LastError?: SortOrderInput | SortOrder
    ExecutionCount?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type JobWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: JobWhereInput | JobWhereInput[]
    OR?: JobWhereInput[]
    NOT?: JobWhereInput | JobWhereInput[]
    IsEnabled?: BoolFilter<"Job"> | boolean
    FirstRunCompleted?: BoolFilter<"Job"> | boolean
    Type?: EnumJobTypeFilter<"Job"> | $Enums.JobType
    Status?: EnumJobStatusFilter<"Job"> | $Enums.JobStatus
    CronExpression?: EnumCronExpressionFilter<"Job"> | $Enums.CronExpression
    Name?: StringFilter<"Job"> | string
    Description?: StringNullableFilter<"Job"> | string | null
    Parameters?: JsonNullableFilter<"Job">
    LastRunAt?: DateTimeNullableFilter<"Job"> | Date | string | null
    NextRunAt?: DateTimeNullableFilter<"Job"> | Date | string | null
    LastError?: StringNullableFilter<"Job"> | string | null
    ExecutionCount?: IntFilter<"Job"> | number
    CreatedAt?: DateTimeFilter<"Job"> | Date | string
    UpdatedAt?: DateTimeFilter<"Job"> | Date | string
  }, "Id">

  export type JobOrderByWithAggregationInput = {
    Id?: SortOrder
    IsEnabled?: SortOrder
    FirstRunCompleted?: SortOrder
    Type?: SortOrder
    Status?: SortOrder
    CronExpression?: SortOrder
    Name?: SortOrder
    Description?: SortOrderInput | SortOrder
    Parameters?: SortOrderInput | SortOrder
    LastRunAt?: SortOrderInput | SortOrder
    NextRunAt?: SortOrderInput | SortOrder
    LastError?: SortOrderInput | SortOrder
    ExecutionCount?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    _count?: JobCountOrderByAggregateInput
    _avg?: JobAvgOrderByAggregateInput
    _max?: JobMaxOrderByAggregateInput
    _min?: JobMinOrderByAggregateInput
    _sum?: JobSumOrderByAggregateInput
  }

  export type JobScalarWhereWithAggregatesInput = {
    AND?: JobScalarWhereWithAggregatesInput | JobScalarWhereWithAggregatesInput[]
    OR?: JobScalarWhereWithAggregatesInput[]
    NOT?: JobScalarWhereWithAggregatesInput | JobScalarWhereWithAggregatesInput[]
    Id?: UuidWithAggregatesFilter<"Job"> | string
    IsEnabled?: BoolWithAggregatesFilter<"Job"> | boolean
    FirstRunCompleted?: BoolWithAggregatesFilter<"Job"> | boolean
    Type?: EnumJobTypeWithAggregatesFilter<"Job"> | $Enums.JobType
    Status?: EnumJobStatusWithAggregatesFilter<"Job"> | $Enums.JobStatus
    CronExpression?: EnumCronExpressionWithAggregatesFilter<"Job"> | $Enums.CronExpression
    Name?: StringWithAggregatesFilter<"Job"> | string
    Description?: StringNullableWithAggregatesFilter<"Job"> | string | null
    Parameters?: JsonNullableWithAggregatesFilter<"Job">
    LastRunAt?: DateTimeNullableWithAggregatesFilter<"Job"> | Date | string | null
    NextRunAt?: DateTimeNullableWithAggregatesFilter<"Job"> | Date | string | null
    LastError?: StringNullableWithAggregatesFilter<"Job"> | string | null
    ExecutionCount?: IntWithAggregatesFilter<"Job"> | number
    CreatedAt?: DateTimeWithAggregatesFilter<"Job"> | Date | string
    UpdatedAt?: DateTimeWithAggregatesFilter<"Job"> | Date | string
  }

  export type AppConfigCreateInput = {
    OnAirSyncEnabled?: boolean
    OnAirVASyncEnabled?: boolean
    OnAirVAMembersSyncEnabled?: boolean
    OnAirCompanySyncEnabled?: boolean
    DiscordServerInviteLink?: string | null
    DiscordServerInviteLinkEnabled?: boolean
    AcceptingNewMembers?: boolean
    DiscordAuthEnabled?: boolean
    DiscordAuthCreateUser?: boolean
    LocalAuthEnabled?: boolean
    VirtualAirlineInitiated?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AppConfigUncheckedCreateInput = {
    Id?: number
    OnAirSyncEnabled?: boolean
    OnAirVASyncEnabled?: boolean
    OnAirVAMembersSyncEnabled?: boolean
    OnAirCompanySyncEnabled?: boolean
    DiscordServerInviteLink?: string | null
    DiscordServerInviteLinkEnabled?: boolean
    AcceptingNewMembers?: boolean
    DiscordAuthEnabled?: boolean
    DiscordAuthCreateUser?: boolean
    LocalAuthEnabled?: boolean
    VirtualAirlineInitiated?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AppConfigUpdateInput = {
    OnAirSyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirVASyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirVAMembersSyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirCompanySyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    DiscordServerInviteLink?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordServerInviteLinkEnabled?: BoolFieldUpdateOperationsInput | boolean
    AcceptingNewMembers?: BoolFieldUpdateOperationsInput | boolean
    DiscordAuthEnabled?: BoolFieldUpdateOperationsInput | boolean
    DiscordAuthCreateUser?: BoolFieldUpdateOperationsInput | boolean
    LocalAuthEnabled?: BoolFieldUpdateOperationsInput | boolean
    VirtualAirlineInitiated?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppConfigUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    OnAirSyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirVASyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirVAMembersSyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirCompanySyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    DiscordServerInviteLink?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordServerInviteLinkEnabled?: BoolFieldUpdateOperationsInput | boolean
    AcceptingNewMembers?: BoolFieldUpdateOperationsInput | boolean
    DiscordAuthEnabled?: BoolFieldUpdateOperationsInput | boolean
    DiscordAuthCreateUser?: BoolFieldUpdateOperationsInput | boolean
    LocalAuthEnabled?: BoolFieldUpdateOperationsInput | boolean
    VirtualAirlineInitiated?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppConfigCreateManyInput = {
    Id?: number
    OnAirSyncEnabled?: boolean
    OnAirVASyncEnabled?: boolean
    OnAirVAMembersSyncEnabled?: boolean
    OnAirCompanySyncEnabled?: boolean
    DiscordServerInviteLink?: string | null
    DiscordServerInviteLinkEnabled?: boolean
    AcceptingNewMembers?: boolean
    DiscordAuthEnabled?: boolean
    DiscordAuthCreateUser?: boolean
    LocalAuthEnabled?: boolean
    VirtualAirlineInitiated?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AppConfigUpdateManyMutationInput = {
    OnAirSyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirVASyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirVAMembersSyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirCompanySyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    DiscordServerInviteLink?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordServerInviteLinkEnabled?: BoolFieldUpdateOperationsInput | boolean
    AcceptingNewMembers?: BoolFieldUpdateOperationsInput | boolean
    DiscordAuthEnabled?: BoolFieldUpdateOperationsInput | boolean
    DiscordAuthCreateUser?: BoolFieldUpdateOperationsInput | boolean
    LocalAuthEnabled?: BoolFieldUpdateOperationsInput | boolean
    VirtualAirlineInitiated?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppConfigUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    OnAirSyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirVASyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirVAMembersSyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    OnAirCompanySyncEnabled?: BoolFieldUpdateOperationsInput | boolean
    DiscordServerInviteLink?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordServerInviteLinkEnabled?: BoolFieldUpdateOperationsInput | boolean
    AcceptingNewMembers?: BoolFieldUpdateOperationsInput | boolean
    DiscordAuthEnabled?: BoolFieldUpdateOperationsInput | boolean
    DiscordAuthCreateUser?: BoolFieldUpdateOperationsInput | boolean
    LocalAuthEnabled?: BoolFieldUpdateOperationsInput | boolean
    VirtualAirlineInitiated?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InviteCodeCreateInput = {
    Id?: string
    Code: string
    IsUsed?: boolean
    UsedAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    User?: UserCreateNestedOneWithoutInviteCodeInput
  }

  export type InviteCodeUncheckedCreateInput = {
    Id?: string
    Code: string
    IsUsed?: boolean
    UsedAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    User?: UserUncheckedCreateNestedOneWithoutInviteCodeInput
  }

  export type InviteCodeUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Code?: StringFieldUpdateOperationsInput | string
    IsUsed?: BoolFieldUpdateOperationsInput | boolean
    UsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneWithoutInviteCodeNestedInput
  }

  export type InviteCodeUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Code?: StringFieldUpdateOperationsInput | string
    IsUsed?: BoolFieldUpdateOperationsInput | boolean
    UsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUncheckedUpdateOneWithoutInviteCodeNestedInput
  }

  export type InviteCodeCreateManyInput = {
    Id?: string
    Code: string
    IsUsed?: boolean
    UsedAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type InviteCodeUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Code?: StringFieldUpdateOperationsInput | string
    IsUsed?: BoolFieldUpdateOperationsInput | boolean
    UsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InviteCodeUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Code?: StringFieldUpdateOperationsInput | string
    IsUsed?: BoolFieldUpdateOperationsInput | boolean
    UsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscordMessageCreateInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessageTemplate?: DiscordMessageTemplateCreateNestedOneWithoutDiscordMessagesInput
    DiscordChannelWebhook?: DiscordChannelWebhookCreateNestedOneWithoutDiscordMessagesInput
    ListenerEvents?: ListenerEventCreateNestedManyWithoutDiscordMessageInput
  }

  export type DiscordMessageUncheckedCreateInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordMessageTemplateId?: number | null
    DiscordChannelWebhookId?: string | null
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    ListenerEvents?: ListenerEventUncheckedCreateNestedManyWithoutDiscordMessageInput
  }

  export type DiscordMessageUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessageTemplate?: DiscordMessageTemplateUpdateOneWithoutDiscordMessagesNestedInput
    DiscordChannelWebhook?: DiscordChannelWebhookUpdateOneWithoutDiscordMessagesNestedInput
    ListenerEvents?: ListenerEventUpdateManyWithoutDiscordMessageNestedInput
  }

  export type DiscordMessageUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordMessageTemplateId?: NullableIntFieldUpdateOperationsInput | number | null
    DiscordChannelWebhookId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListenerEvents?: ListenerEventUncheckedUpdateManyWithoutDiscordMessageNestedInput
  }

  export type DiscordMessageCreateManyInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordMessageTemplateId?: number | null
    DiscordChannelWebhookId?: string | null
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type DiscordMessageUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscordMessageUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordMessageTemplateId?: NullableIntFieldUpdateOperationsInput | number | null
    DiscordChannelWebhookId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscordMessageTemplateCreateInput = {
    Slug: string
    Name: string
    Description?: string | null
    Content: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessages?: DiscordMessageCreateNestedManyWithoutDiscordMessageTemplateInput
  }

  export type DiscordMessageTemplateUncheckedCreateInput = {
    Id?: number
    Slug: string
    Name: string
    Description?: string | null
    Content: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessages?: DiscordMessageUncheckedCreateNestedManyWithoutDiscordMessageTemplateInput
  }

  export type DiscordMessageTemplateUpdateInput = {
    Slug?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Content?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessages?: DiscordMessageUpdateManyWithoutDiscordMessageTemplateNestedInput
  }

  export type DiscordMessageTemplateUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Slug?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Content?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessages?: DiscordMessageUncheckedUpdateManyWithoutDiscordMessageTemplateNestedInput
  }

  export type DiscordMessageTemplateCreateManyInput = {
    Id?: number
    Slug: string
    Name: string
    Description?: string | null
    Content: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type DiscordMessageTemplateUpdateManyMutationInput = {
    Slug?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Content?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscordMessageTemplateUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Slug?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Content?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscordChannelWebhookCreateInput = {
    Id?: string
    Name?: string
    Description?: string | null
    WebhookUrl: string
    ChannelId: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessages?: DiscordMessageCreateNestedManyWithoutDiscordChannelWebhookInput
    ListenerEventSenders?: ListenerEventSenderCreateNestedManyWithoutDiscordChannelWebhookInput
  }

  export type DiscordChannelWebhookUncheckedCreateInput = {
    Id?: string
    Name?: string
    Description?: string | null
    WebhookUrl: string
    ChannelId: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessages?: DiscordMessageUncheckedCreateNestedManyWithoutDiscordChannelWebhookInput
    ListenerEventSenders?: ListenerEventSenderUncheckedCreateNestedManyWithoutDiscordChannelWebhookInput
  }

  export type DiscordChannelWebhookUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WebhookUrl?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessages?: DiscordMessageUpdateManyWithoutDiscordChannelWebhookNestedInput
    ListenerEventSenders?: ListenerEventSenderUpdateManyWithoutDiscordChannelWebhookNestedInput
  }

  export type DiscordChannelWebhookUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WebhookUrl?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessages?: DiscordMessageUncheckedUpdateManyWithoutDiscordChannelWebhookNestedInput
    ListenerEventSenders?: ListenerEventSenderUncheckedUpdateManyWithoutDiscordChannelWebhookNestedInput
  }

  export type DiscordChannelWebhookCreateManyInput = {
    Id?: string
    Name?: string
    Description?: string | null
    WebhookUrl: string
    ChannelId: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type DiscordChannelWebhookUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WebhookUrl?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscordChannelWebhookUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WebhookUrl?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventCreateInput = {
    Variant: string
    Type: string
    SentAt: Date | string
    Status?: $Enums.ListenerEventStatus
    Error?: string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessage?: DiscordMessageCreateNestedOneWithoutListenerEventsInput
    Sender: ListenerEventSenderCreateNestedOneWithoutListenerEventsInput
  }

  export type ListenerEventUncheckedCreateInput = {
    Id?: number
    Variant: string
    Type: string
    SentAt: Date | string
    Status?: $Enums.ListenerEventStatus
    SenderId: string
    Error?: string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DiscordMessageId?: string | null
    DeliveredAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type ListenerEventUpdateInput = {
    Variant?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    SentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Status?: EnumListenerEventStatusFieldUpdateOperationsInput | $Enums.ListenerEventStatus
    Error?: NullableStringFieldUpdateOperationsInput | string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessage?: DiscordMessageUpdateOneWithoutListenerEventsNestedInput
    Sender?: ListenerEventSenderUpdateOneRequiredWithoutListenerEventsNestedInput
  }

  export type ListenerEventUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Variant?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    SentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Status?: EnumListenerEventStatusFieldUpdateOperationsInput | $Enums.ListenerEventStatus
    SenderId?: StringFieldUpdateOperationsInput | string
    Error?: NullableStringFieldUpdateOperationsInput | string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DiscordMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    DeliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventCreateManyInput = {
    Id?: number
    Variant: string
    Type: string
    SentAt: Date | string
    Status?: $Enums.ListenerEventStatus
    SenderId: string
    Error?: string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DiscordMessageId?: string | null
    DeliveredAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type ListenerEventUpdateManyMutationInput = {
    Variant?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    SentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Status?: EnumListenerEventStatusFieldUpdateOperationsInput | $Enums.ListenerEventStatus
    Error?: NullableStringFieldUpdateOperationsInput | string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Variant?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    SentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Status?: EnumListenerEventStatusFieldUpdateOperationsInput | $Enums.ListenerEventStatus
    SenderId?: StringFieldUpdateOperationsInput | string
    Error?: NullableStringFieldUpdateOperationsInput | string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DiscordMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    DeliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventSenderCreateInput = {
    Id?: string
    Name: string
    Description?: string | null
    Slug: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    ListenerEvents?: ListenerEventCreateNestedManyWithoutSenderInput
    DiscordChannelWebhook?: DiscordChannelWebhookCreateNestedOneWithoutListenerEventSendersInput
  }

  export type ListenerEventSenderUncheckedCreateInput = {
    Id?: string
    Name: string
    Description?: string | null
    Slug: string
    Token: string
    IsActive?: boolean
    DiscordChannelWebhookId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    ListenerEvents?: ListenerEventUncheckedCreateNestedManyWithoutSenderInput
  }

  export type ListenerEventSenderUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListenerEvents?: ListenerEventUpdateManyWithoutSenderNestedInput
    DiscordChannelWebhook?: DiscordChannelWebhookUpdateOneWithoutListenerEventSendersNestedInput
  }

  export type ListenerEventSenderUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DiscordChannelWebhookId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListenerEvents?: ListenerEventUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type ListenerEventSenderCreateManyInput = {
    Id?: string
    Name: string
    Description?: string | null
    Slug: string
    Token: string
    IsActive?: boolean
    DiscordChannelWebhookId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type ListenerEventSenderUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventSenderUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DiscordChannelWebhookId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
    Roles?: RoleCreateNestedManyWithoutUsersInput
    PrivacySettings?: UserPrivacySettingsCreateNestedManyWithoutUserInput
    Members?: MemberCreateNestedManyWithoutUserInput
    InviteCode?: InviteCodeCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    InviteCodeId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
    Roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    PrivacySettings?: UserPrivacySettingsUncheckedCreateNestedManyWithoutUserInput
    Members?: MemberUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Roles?: RoleUpdateManyWithoutUsersNestedInput
    PrivacySettings?: UserPrivacySettingsUpdateManyWithoutUserNestedInput
    Members?: MemberUpdateManyWithoutUserNestedInput
    InviteCode?: InviteCodeUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    InviteCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    PrivacySettings?: UserPrivacySettingsUncheckedUpdateManyWithoutUserNestedInput
    Members?: MemberUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    InviteCodeId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
  }

  export type UserUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    InviteCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserPrivacySettingsCreateInput = {
    Id?: string
    ShowOnlineStatus?: boolean
    ShowFirstName?: boolean
    ShowLastName?: boolean
    ShowLastNameInitial?: boolean
    ShowLastLogin?: boolean
    CreatedAt?: Date | string
    User: UserCreateNestedOneWithoutPrivacySettingsInput
  }

  export type UserPrivacySettingsUncheckedCreateInput = {
    Id?: string
    UserId: string
    ShowOnlineStatus?: boolean
    ShowFirstName?: boolean
    ShowLastName?: boolean
    ShowLastNameInitial?: boolean
    ShowLastLogin?: boolean
    CreatedAt?: Date | string
  }

  export type UserPrivacySettingsUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShowOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    ShowFirstName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastNameInitial?: BoolFieldUpdateOperationsInput | boolean
    ShowLastLogin?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutPrivacySettingsNestedInput
  }

  export type UserPrivacySettingsUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    ShowOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    ShowFirstName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastNameInitial?: BoolFieldUpdateOperationsInput | boolean
    ShowLastLogin?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPrivacySettingsCreateManyInput = {
    Id?: string
    UserId: string
    ShowOnlineStatus?: boolean
    ShowFirstName?: boolean
    ShowLastName?: boolean
    ShowLastNameInitial?: boolean
    ShowLastLogin?: boolean
    CreatedAt?: Date | string
  }

  export type UserPrivacySettingsUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShowOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    ShowFirstName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastNameInitial?: BoolFieldUpdateOperationsInput | boolean
    ShowLastLogin?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPrivacySettingsUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    ShowOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    ShowFirstName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastNameInitial?: BoolFieldUpdateOperationsInput | boolean
    ShowLastLogin?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleCreateInput = {
    Name: string
    Description?: string | null
    Slug: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Permissions?: PermissionCreateNestedManyWithoutRolesInput
    Users?: UserCreateNestedManyWithoutRolesInput
    VirtualAirlineRole?: VirtualAirlineRoleCreateNestedOneWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    Id?: number
    Name: string
    Description?: string | null
    Slug: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirlineRoleId?: string | null
    Permissions?: PermissionUncheckedCreateNestedManyWithoutRolesInput
    Users?: UserUncheckedCreateNestedManyWithoutRolesInput
  }

  export type RoleUpdateInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Permissions?: PermissionUpdateManyWithoutRolesNestedInput
    Users?: UserUpdateManyWithoutRolesNestedInput
    VirtualAirlineRole?: VirtualAirlineRoleUpdateOneWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirlineRoleId?: NullableStringFieldUpdateOperationsInput | string | null
    Permissions?: PermissionUncheckedUpdateManyWithoutRolesNestedInput
    Users?: UserUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type RoleCreateManyInput = {
    Id?: number
    Name: string
    Description?: string | null
    Slug: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirlineRoleId?: string | null
  }

  export type RoleUpdateManyMutationInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirlineRoleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PermissionCreateInput = {
    Name: string
    Description?: string | null
    Slug: string
    Entity: string
    Action: string
    Roles?: RoleCreateNestedManyWithoutPermissionsInput
  }

  export type PermissionUncheckedCreateInput = {
    Id?: number
    Name: string
    Description?: string | null
    Slug: string
    Entity: string
    Action: string
    Roles?: RoleUncheckedCreateNestedManyWithoutPermissionsInput
  }

  export type PermissionUpdateInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Entity?: StringFieldUpdateOperationsInput | string
    Action?: StringFieldUpdateOperationsInput | string
    Roles?: RoleUpdateManyWithoutPermissionsNestedInput
  }

  export type PermissionUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Entity?: StringFieldUpdateOperationsInput | string
    Action?: StringFieldUpdateOperationsInput | string
    Roles?: RoleUncheckedUpdateManyWithoutPermissionsNestedInput
  }

  export type PermissionCreateManyInput = {
    Id?: number
    Name: string
    Description?: string | null
    Slug: string
    Entity: string
    Action: string
  }

  export type PermissionUpdateManyMutationInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Entity?: StringFieldUpdateOperationsInput | string
    Action?: StringFieldUpdateOperationsInput | string
  }

  export type PermissionUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Entity?: StringFieldUpdateOperationsInput | string
    Action?: StringFieldUpdateOperationsInput | string
  }

  export type LiveryCreateInput = {
    Id?: string
    Name: string
    IsActive?: boolean
    DownloadCount?: number
    Image: string
    ImageFileName?: string | null
    CoverPhoto?: string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: string | null
    Description?: string | null
    DownloadUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Aircraft?: AircraftCreateNestedOneWithoutLiveriesInput
    Images?: LiveryImageCreateNestedManyWithoutLiveryInput
    Files?: LiveryFileCreateNestedManyWithoutLiveryInput
  }

  export type LiveryUncheckedCreateInput = {
    Id?: string
    Name: string
    IsActive?: boolean
    AircraftId?: string | null
    DownloadCount?: number
    Image: string
    ImageFileName?: string | null
    CoverPhoto?: string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: string | null
    Description?: string | null
    DownloadUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Images?: LiveryImageUncheckedCreateNestedManyWithoutLiveryInput
    Files?: LiveryFileUncheckedCreateNestedManyWithoutLiveryInput
  }

  export type LiveryUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Aircraft?: AircraftUpdateOneWithoutLiveriesNestedInput
    Images?: LiveryImageUpdateManyWithoutLiveryNestedInput
    Files?: LiveryFileUpdateManyWithoutLiveryNestedInput
  }

  export type LiveryUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Images?: LiveryImageUncheckedUpdateManyWithoutLiveryNestedInput
    Files?: LiveryFileUncheckedUpdateManyWithoutLiveryNestedInput
  }

  export type LiveryCreateManyInput = {
    Id?: string
    Name: string
    IsActive?: boolean
    AircraftId?: string | null
    DownloadCount?: number
    Image: string
    ImageFileName?: string | null
    CoverPhoto?: string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: string | null
    Description?: string | null
    DownloadUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryImageCreateInput = {
    Id?: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Livery: LiveryCreateNestedOneWithoutImagesInput
  }

  export type LiveryImageUncheckedCreateInput = {
    Id?: string
    LiveryId: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryImageUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Livery?: LiveryUpdateOneRequiredWithoutImagesNestedInput
  }

  export type LiveryImageUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    LiveryId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryImageCreateManyInput = {
    Id?: string
    LiveryId: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryImageUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryImageUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    LiveryId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryFileCreateInput = {
    Id?: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Livery: LiveryCreateNestedOneWithoutFilesInput
  }

  export type LiveryFileUncheckedCreateInput = {
    Id?: string
    LiveryId: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryFileUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Livery?: LiveryUpdateOneRequiredWithoutFilesNestedInput
  }

  export type LiveryFileUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    LiveryId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryFileCreateManyInput = {
    Id?: string
    LiveryId: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryFileUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryFileUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    LiveryId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VirtualAirlineCreateInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    World?: WorldCreateNestedOneWithoutVirtualAirlinesInput
    VARoles?: VirtualAirlineRoleCreateNestedManyWithoutVirtualAirlineInput
    Members?: MemberCreateNestedManyWithoutVirtualAirlineInput
    Fleet?: AircraftCreateNestedManyWithoutVirtualAirlineInput
    Flights?: FlightCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineUncheckedCreateInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    WorldId?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VARoles?: VirtualAirlineRoleUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Members?: MemberUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Fleet?: AircraftUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Flights?: FlightUncheckedCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    World?: WorldUpdateOneWithoutVirtualAirlinesNestedInput
    VARoles?: VirtualAirlineRoleUpdateManyWithoutVirtualAirlineNestedInput
    Members?: MemberUpdateManyWithoutVirtualAirlineNestedInput
    Fleet?: AircraftUpdateManyWithoutVirtualAirlineNestedInput
    Flights?: FlightUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type VirtualAirlineUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WorldId?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VARoles?: VirtualAirlineRoleUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Members?: MemberUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Fleet?: AircraftUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type VirtualAirlineCreateManyInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    WorldId?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type VirtualAirlineUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VirtualAirlineUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WorldId?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VirtualAirlineRoleCreateInput = {
    Id: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal | DecimalJsLike | number | string
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal | DecimalJsLike | number | string
    PayPerFlightHour: Decimal | DecimalJsLike | number | string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Role?: RoleCreateNestedOneWithoutVirtualAirlineRoleInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutVARolesInput
    Members?: MemberCreateNestedManyWithoutVARoleInput
  }

  export type VirtualAirlineRoleUncheckedCreateInput = {
    Id: string
    VAId: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal | DecimalJsLike | number | string
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal | DecimalJsLike | number | string
    PayPerFlightHour: Decimal | DecimalJsLike | number | string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Role?: RoleUncheckedCreateNestedOneWithoutVirtualAirlineRoleInput
    Members?: MemberUncheckedCreateNestedManyWithoutVARoleInput
  }

  export type VirtualAirlineRoleUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Role?: RoleUpdateOneWithoutVirtualAirlineRoleNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutVARolesNestedInput
    Members?: MemberUpdateManyWithoutVARoleNestedInput
  }

  export type VirtualAirlineRoleUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    VAId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Role?: RoleUncheckedUpdateOneWithoutVirtualAirlineRoleNestedInput
    Members?: MemberUncheckedUpdateManyWithoutVARoleNestedInput
  }

  export type VirtualAirlineRoleCreateManyInput = {
    Id: string
    VAId: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal | DecimalJsLike | number | string
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal | DecimalJsLike | number | string
    PayPerFlightHour: Decimal | DecimalJsLike | number | string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type VirtualAirlineRoleUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VirtualAirlineRoleUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    VAId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorldCreateInput = {
    Id: string
    Name: string
    Slug: string
    Description?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirlines?: VirtualAirlineCreateNestedManyWithoutWorldInput
    Companies?: CompanyCreateNestedManyWithoutWorldInput
  }

  export type WorldUncheckedCreateInput = {
    Id: string
    Name: string
    Slug: string
    Description?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirlines?: VirtualAirlineUncheckedCreateNestedManyWithoutWorldInput
    Companies?: CompanyUncheckedCreateNestedManyWithoutWorldInput
  }

  export type WorldUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Slug?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirlines?: VirtualAirlineUpdateManyWithoutWorldNestedInput
    Companies?: CompanyUpdateManyWithoutWorldNestedInput
  }

  export type WorldUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Slug?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirlines?: VirtualAirlineUncheckedUpdateManyWithoutWorldNestedInput
    Companies?: CompanyUncheckedUpdateManyWithoutWorldNestedInput
  }

  export type WorldCreateManyInput = {
    Id: string
    Name: string
    Slug: string
    Description?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type WorldUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Slug?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorldUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Slug?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MemberCreateInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Company: CompanyCreateNestedOneWithoutOwnerInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutMembersInput
    VARole: VirtualAirlineRoleCreateNestedOneWithoutMembersInput
    Flights?: FlightCreateNestedManyWithoutMemberInput
    User?: UserCreateNestedOneWithoutMembersInput
    FlightRoutes?: FlightRouteCreateNestedManyWithoutMemberInput
  }

  export type MemberUncheckedCreateInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VAId: string
    VARoleId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    UserId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    CompanyId: string
    Flights?: FlightUncheckedCreateNestedManyWithoutMemberInput
    FlightRoutes?: FlightRouteUncheckedCreateNestedManyWithoutMemberInput
  }

  export type MemberUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Company?: CompanyUpdateOneRequiredWithoutOwnerNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutMembersNestedInput
    VARole?: VirtualAirlineRoleUpdateOneRequiredWithoutMembersNestedInput
    Flights?: FlightUpdateManyWithoutMemberNestedInput
    User?: UserUpdateOneWithoutMembersNestedInput
    FlightRoutes?: FlightRouteUpdateManyWithoutMemberNestedInput
  }

  export type MemberUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VAId?: StringFieldUpdateOperationsInput | string
    VARoleId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CompanyId?: StringFieldUpdateOperationsInput | string
    Flights?: FlightUncheckedUpdateManyWithoutMemberNestedInput
    FlightRoutes?: FlightRouteUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type MemberCreateManyInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VAId: string
    VARoleId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    UserId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    CompanyId: string
  }

  export type MemberUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MemberUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VAId?: StringFieldUpdateOperationsInput | string
    VARoleId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CompanyId?: StringFieldUpdateOperationsInput | string
  }

  export type CompanyCreateInput = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date | string
    Level: number
    LevelXP: number
    Reputation: Decimal | DecimalJsLike | number | string
    Paused?: boolean
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    DifficultyLevel: number
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    World: WorldCreateNestedOneWithoutCompaniesInput
    Flights?: FlightCreateNestedManyWithoutCompanyInput
    Owner?: MemberCreateNestedOneWithoutCompanyInput
  }

  export type CompanyUncheckedCreateInput = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date | string
    Level: number
    LevelXP: number
    Reputation: Decimal | DecimalJsLike | number | string
    Paused?: boolean
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    DifficultyLevel: number
    WorldId: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Flights?: FlightUncheckedCreateNestedManyWithoutCompanyInput
    Owner?: MemberUncheckedCreateNestedOneWithoutCompanyInput
  }

  export type CompanyUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    World?: WorldUpdateOneRequiredWithoutCompaniesNestedInput
    Flights?: FlightUpdateManyWithoutCompanyNestedInput
    Owner?: MemberUpdateOneWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    WorldId?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Flights?: FlightUncheckedUpdateManyWithoutCompanyNestedInput
    Owner?: MemberUncheckedUpdateOneWithoutCompanyNestedInput
  }

  export type CompanyCreateManyInput = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date | string
    Level: number
    LevelXP: number
    Reputation: Decimal | DecimalJsLike | number | string
    Paused?: boolean
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    DifficultyLevel: number
    WorldId: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type CompanyUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    WorldId?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftCreateInput = {
    Id: string
    Identifier: string
    DisplayName: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftClass: AircraftClassCreateNestedOneWithoutAircraftsInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutFleetInput
    AircraftStatus: AircraftStatusCreateNestedOneWithoutAircraftsInput
    CurrentAirport?: AirportCreateNestedOneWithoutAircraftAtAirportInput
    AircraftMaintenance?: AircraftMaintenanceCreateNestedManyWithoutAircraftInput
    Flights?: FlightCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryCreateNestedManyWithoutAircraftInput
  }

  export type AircraftUncheckedCreateInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    AircraftClassId: string
    VirtualAirlineId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedCreateNestedManyWithoutAircraftInput
    Flights?: FlightUncheckedCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryUncheckedCreateNestedManyWithoutAircraftInput
  }

  export type AircraftUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftClass?: AircraftClassUpdateOneRequiredWithoutAircraftsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutFleetNestedInput
    AircraftStatus?: AircraftStatusUpdateOneRequiredWithoutAircraftsNestedInput
    CurrentAirport?: AirportUpdateOneWithoutAircraftAtAirportNestedInput
    AircraftMaintenance?: AircraftMaintenanceUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUncheckedUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftCreateManyInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    AircraftClassId: string
    VirtualAirlineId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AircraftUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftClassCreateInput = {
    Id: string
    ShortName: string
    Name: string
    Aircrafts?: AircraftCreateNestedManyWithoutAircraftClassInput
  }

  export type AircraftClassUncheckedCreateInput = {
    Id: string
    ShortName: string
    Name: string
    Aircrafts?: AircraftUncheckedCreateNestedManyWithoutAircraftClassInput
  }

  export type AircraftClassUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShortName?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Aircrafts?: AircraftUpdateManyWithoutAircraftClassNestedInput
  }

  export type AircraftClassUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShortName?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Aircrafts?: AircraftUncheckedUpdateManyWithoutAircraftClassNestedInput
  }

  export type AircraftClassCreateManyInput = {
    Id: string
    ShortName: string
    Name: string
  }

  export type AircraftClassUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShortName?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
  }

  export type AircraftClassUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShortName?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
  }

  export type AircraftMaintenanceCreateInput = {
    Id: string
    AnnualCheckup: boolean
    Inspection100Hours: boolean
    FailuresRepair: boolean
    AirframeRepair: boolean
    AirframeReplace: boolean
    EcoSeats: number
    BusSeats: number
    FirstClassSeats: number
    AirframeRepairCondition: Decimal | DecimalJsLike | number | string
    MaintenanceFBOId: string
    RemainingMaintenanceWorkHours: Decimal | DecimalJsLike | number | string
    Amount: Decimal | DecimalJsLike | number | string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Aircraft: AircraftCreateNestedOneWithoutAircraftMaintenanceInput
  }

  export type AircraftMaintenanceUncheckedCreateInput = {
    Id: string
    AircraftId: string
    AnnualCheckup: boolean
    Inspection100Hours: boolean
    FailuresRepair: boolean
    AirframeRepair: boolean
    AirframeReplace: boolean
    EcoSeats: number
    BusSeats: number
    FirstClassSeats: number
    AirframeRepairCondition: Decimal | DecimalJsLike | number | string
    MaintenanceFBOId: string
    RemainingMaintenanceWorkHours: Decimal | DecimalJsLike | number | string
    Amount: Decimal | DecimalJsLike | number | string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AircraftMaintenanceUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AnnualCheckup?: BoolFieldUpdateOperationsInput | boolean
    Inspection100Hours?: BoolFieldUpdateOperationsInput | boolean
    FailuresRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeReplace?: BoolFieldUpdateOperationsInput | boolean
    EcoSeats?: IntFieldUpdateOperationsInput | number
    BusSeats?: IntFieldUpdateOperationsInput | number
    FirstClassSeats?: IntFieldUpdateOperationsInput | number
    AirframeRepairCondition?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: StringFieldUpdateOperationsInput | string
    RemainingMaintenanceWorkHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Aircraft?: AircraftUpdateOneRequiredWithoutAircraftMaintenanceNestedInput
  }

  export type AircraftMaintenanceUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: StringFieldUpdateOperationsInput | string
    AnnualCheckup?: BoolFieldUpdateOperationsInput | boolean
    Inspection100Hours?: BoolFieldUpdateOperationsInput | boolean
    FailuresRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeReplace?: BoolFieldUpdateOperationsInput | boolean
    EcoSeats?: IntFieldUpdateOperationsInput | number
    BusSeats?: IntFieldUpdateOperationsInput | number
    FirstClassSeats?: IntFieldUpdateOperationsInput | number
    AirframeRepairCondition?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: StringFieldUpdateOperationsInput | string
    RemainingMaintenanceWorkHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftMaintenanceCreateManyInput = {
    Id: string
    AircraftId: string
    AnnualCheckup: boolean
    Inspection100Hours: boolean
    FailuresRepair: boolean
    AirframeRepair: boolean
    AirframeReplace: boolean
    EcoSeats: number
    BusSeats: number
    FirstClassSeats: number
    AirframeRepairCondition: Decimal | DecimalJsLike | number | string
    MaintenanceFBOId: string
    RemainingMaintenanceWorkHours: Decimal | DecimalJsLike | number | string
    Amount: Decimal | DecimalJsLike | number | string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AircraftMaintenanceUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AnnualCheckup?: BoolFieldUpdateOperationsInput | boolean
    Inspection100Hours?: BoolFieldUpdateOperationsInput | boolean
    FailuresRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeReplace?: BoolFieldUpdateOperationsInput | boolean
    EcoSeats?: IntFieldUpdateOperationsInput | number
    BusSeats?: IntFieldUpdateOperationsInput | number
    FirstClassSeats?: IntFieldUpdateOperationsInput | number
    AirframeRepairCondition?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: StringFieldUpdateOperationsInput | string
    RemainingMaintenanceWorkHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftMaintenanceUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: StringFieldUpdateOperationsInput | string
    AnnualCheckup?: BoolFieldUpdateOperationsInput | boolean
    Inspection100Hours?: BoolFieldUpdateOperationsInput | boolean
    FailuresRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeReplace?: BoolFieldUpdateOperationsInput | boolean
    EcoSeats?: IntFieldUpdateOperationsInput | number
    BusSeats?: IntFieldUpdateOperationsInput | number
    FirstClassSeats?: IntFieldUpdateOperationsInput | number
    AirframeRepairCondition?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: StringFieldUpdateOperationsInput | string
    RemainingMaintenanceWorkHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftStatusCreateInput = {
    Id: number
    Name: string
    Aircrafts?: AircraftCreateNestedManyWithoutAircraftStatusInput
  }

  export type AircraftStatusUncheckedCreateInput = {
    Id: number
    Name: string
    Aircrafts?: AircraftUncheckedCreateNestedManyWithoutAircraftStatusInput
  }

  export type AircraftStatusUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Aircrafts?: AircraftUpdateManyWithoutAircraftStatusNestedInput
  }

  export type AircraftStatusUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Aircrafts?: AircraftUncheckedUpdateManyWithoutAircraftStatusNestedInput
  }

  export type AircraftStatusCreateManyInput = {
    Id: number
    Name: string
  }

  export type AircraftStatusUpdateManyMutationInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
  }

  export type AircraftStatusUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
  }

  export type AirportCreateInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftAtAirport?: AircraftCreateNestedManyWithoutCurrentAirportInput
    DepartingFlights?: FlightCreateNestedManyWithoutDepartureAirportInput
    ArrivingFlights?: FlightCreateNestedManyWithoutArrivalIntendedAirportInput
    ArrivingAlternateFlights?: FlightCreateNestedManyWithoutArrivalAlternateAirportInput
    ArrivingActualFlights?: FlightCreateNestedManyWithoutArrivalActualAirportInput
  }

  export type AirportUncheckedCreateInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftAtAirport?: AircraftUncheckedCreateNestedManyWithoutCurrentAirportInput
    DepartingFlights?: FlightUncheckedCreateNestedManyWithoutDepartureAirportInput
    ArrivingFlights?: FlightUncheckedCreateNestedManyWithoutArrivalIntendedAirportInput
    ArrivingAlternateFlights?: FlightUncheckedCreateNestedManyWithoutArrivalAlternateAirportInput
    ArrivingActualFlights?: FlightUncheckedCreateNestedManyWithoutArrivalActualAirportInput
  }

  export type AirportUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftAtAirport?: AircraftUpdateManyWithoutCurrentAirportNestedInput
    DepartingFlights?: FlightUpdateManyWithoutDepartureAirportNestedInput
    ArrivingFlights?: FlightUpdateManyWithoutArrivalIntendedAirportNestedInput
    ArrivingAlternateFlights?: FlightUpdateManyWithoutArrivalAlternateAirportNestedInput
    ArrivingActualFlights?: FlightUpdateManyWithoutArrivalActualAirportNestedInput
  }

  export type AirportUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftAtAirport?: AircraftUncheckedUpdateManyWithoutCurrentAirportNestedInput
    DepartingFlights?: FlightUncheckedUpdateManyWithoutDepartureAirportNestedInput
    ArrivingFlights?: FlightUncheckedUpdateManyWithoutArrivalIntendedAirportNestedInput
    ArrivingAlternateFlights?: FlightUncheckedUpdateManyWithoutArrivalAlternateAirportNestedInput
    ArrivingActualFlights?: FlightUncheckedUpdateManyWithoutArrivalActualAirportNestedInput
  }

  export type AirportCreateManyInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AirportUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AirportUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlightCreateInput = {
    Id: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    Company: CompanyCreateNestedOneWithoutFlightsInput
    VirtualAirline?: VirtualAirlineCreateNestedOneWithoutFlightsInput
    Aircraft?: AircraftCreateNestedOneWithoutFlightsInput
    FlightRoute?: FlightRouteCreateNestedManyWithoutFlightInput
    DepartureAirport?: AirportCreateNestedOneWithoutDepartingFlightsInput
    ArrivalIntendedAirport?: AirportCreateNestedOneWithoutArrivingFlightsInput
    ArrivalAlternateAirport?: AirportCreateNestedOneWithoutArrivingAlternateFlightsInput
    ArrivalActualAirport?: AirportCreateNestedOneWithoutArrivingActualFlightsInput
    Member?: MemberCreateNestedOneWithoutFlightsInput
  }

  export type FlightUncheckedCreateInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedCreateNestedManyWithoutFlightInput
  }

  export type FlightUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    Company?: CompanyUpdateOneRequiredWithoutFlightsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneWithoutFlightsNestedInput
    Aircraft?: AircraftUpdateOneWithoutFlightsNestedInput
    FlightRoute?: FlightRouteUpdateManyWithoutFlightNestedInput
    DepartureAirport?: AirportUpdateOneWithoutDepartingFlightsNestedInput
    ArrivalIntendedAirport?: AirportUpdateOneWithoutArrivingFlightsNestedInput
    ArrivalAlternateAirport?: AirportUpdateOneWithoutArrivingAlternateFlightsNestedInput
    ArrivalActualAirport?: AirportUpdateOneWithoutArrivingActualFlightsNestedInput
    Member?: MemberUpdateOneWithoutFlightsNestedInput
  }

  export type FlightUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedUpdateManyWithoutFlightNestedInput
  }

  export type FlightCreateManyInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
  }

  export type FlightUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type FlightUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type FlightRouteCreateInput = {
    Id?: string
    Route: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Flight?: FlightCreateNestedOneWithoutFlightRouteInput
    Member: MemberCreateNestedOneWithoutFlightRoutesInput
  }

  export type FlightRouteUncheckedCreateInput = {
    Id?: string
    FlightId?: string | null
    MemberId: string
    Route: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type FlightRouteUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Route?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Flight?: FlightUpdateOneWithoutFlightRouteNestedInput
    Member?: MemberUpdateOneRequiredWithoutFlightRoutesNestedInput
  }

  export type FlightRouteUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    FlightId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: StringFieldUpdateOperationsInput | string
    Route?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlightRouteCreateManyInput = {
    Id?: string
    FlightId?: string | null
    MemberId: string
    Route: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type FlightRouteUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Route?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlightRouteUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    FlightId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: StringFieldUpdateOperationsInput | string
    Route?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobCreateInput = {
    Id?: string
    IsEnabled?: boolean
    FirstRunCompleted?: boolean
    Type: $Enums.JobType
    Status?: $Enums.JobStatus
    CronExpression: $Enums.CronExpression
    Name: string
    Description?: string | null
    Parameters?: NullableJsonNullValueInput | InputJsonValue
    LastRunAt?: Date | string | null
    NextRunAt?: Date | string | null
    LastError?: string | null
    ExecutionCount?: number
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type JobUncheckedCreateInput = {
    Id?: string
    IsEnabled?: boolean
    FirstRunCompleted?: boolean
    Type: $Enums.JobType
    Status?: $Enums.JobStatus
    CronExpression: $Enums.CronExpression
    Name: string
    Description?: string | null
    Parameters?: NullableJsonNullValueInput | InputJsonValue
    LastRunAt?: Date | string | null
    NextRunAt?: Date | string | null
    LastError?: string | null
    ExecutionCount?: number
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type JobUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsEnabled?: BoolFieldUpdateOperationsInput | boolean
    FirstRunCompleted?: BoolFieldUpdateOperationsInput | boolean
    Type?: EnumJobTypeFieldUpdateOperationsInput | $Enums.JobType
    Status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    CronExpression?: EnumCronExpressionFieldUpdateOperationsInput | $Enums.CronExpression
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Parameters?: NullableJsonNullValueInput | InputJsonValue
    LastRunAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NextRunAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastError?: NullableStringFieldUpdateOperationsInput | string | null
    ExecutionCount?: IntFieldUpdateOperationsInput | number
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsEnabled?: BoolFieldUpdateOperationsInput | boolean
    FirstRunCompleted?: BoolFieldUpdateOperationsInput | boolean
    Type?: EnumJobTypeFieldUpdateOperationsInput | $Enums.JobType
    Status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    CronExpression?: EnumCronExpressionFieldUpdateOperationsInput | $Enums.CronExpression
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Parameters?: NullableJsonNullValueInput | InputJsonValue
    LastRunAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NextRunAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastError?: NullableStringFieldUpdateOperationsInput | string | null
    ExecutionCount?: IntFieldUpdateOperationsInput | number
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobCreateManyInput = {
    Id?: string
    IsEnabled?: boolean
    FirstRunCompleted?: boolean
    Type: $Enums.JobType
    Status?: $Enums.JobStatus
    CronExpression: $Enums.CronExpression
    Name: string
    Description?: string | null
    Parameters?: NullableJsonNullValueInput | InputJsonValue
    LastRunAt?: Date | string | null
    NextRunAt?: Date | string | null
    LastError?: string | null
    ExecutionCount?: number
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type JobUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsEnabled?: BoolFieldUpdateOperationsInput | boolean
    FirstRunCompleted?: BoolFieldUpdateOperationsInput | boolean
    Type?: EnumJobTypeFieldUpdateOperationsInput | $Enums.JobType
    Status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    CronExpression?: EnumCronExpressionFieldUpdateOperationsInput | $Enums.CronExpression
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Parameters?: NullableJsonNullValueInput | InputJsonValue
    LastRunAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NextRunAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastError?: NullableStringFieldUpdateOperationsInput | string | null
    ExecutionCount?: IntFieldUpdateOperationsInput | number
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsEnabled?: BoolFieldUpdateOperationsInput | boolean
    FirstRunCompleted?: BoolFieldUpdateOperationsInput | boolean
    Type?: EnumJobTypeFieldUpdateOperationsInput | $Enums.JobType
    Status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    CronExpression?: EnumCronExpressionFieldUpdateOperationsInput | $Enums.CronExpression
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Parameters?: NullableJsonNullValueInput | InputJsonValue
    LastRunAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NextRunAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastError?: NullableStringFieldUpdateOperationsInput | string | null
    ExecutionCount?: IntFieldUpdateOperationsInput | number
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AppConfigCountOrderByAggregateInput = {
    Id?: SortOrder
    OnAirSyncEnabled?: SortOrder
    OnAirVASyncEnabled?: SortOrder
    OnAirVAMembersSyncEnabled?: SortOrder
    OnAirCompanySyncEnabled?: SortOrder
    DiscordServerInviteLink?: SortOrder
    DiscordServerInviteLinkEnabled?: SortOrder
    AcceptingNewMembers?: SortOrder
    DiscordAuthEnabled?: SortOrder
    DiscordAuthCreateUser?: SortOrder
    LocalAuthEnabled?: SortOrder
    VirtualAirlineInitiated?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AppConfigAvgOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type AppConfigMaxOrderByAggregateInput = {
    Id?: SortOrder
    OnAirSyncEnabled?: SortOrder
    OnAirVASyncEnabled?: SortOrder
    OnAirVAMembersSyncEnabled?: SortOrder
    OnAirCompanySyncEnabled?: SortOrder
    DiscordServerInviteLink?: SortOrder
    DiscordServerInviteLinkEnabled?: SortOrder
    AcceptingNewMembers?: SortOrder
    DiscordAuthEnabled?: SortOrder
    DiscordAuthCreateUser?: SortOrder
    LocalAuthEnabled?: SortOrder
    VirtualAirlineInitiated?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AppConfigMinOrderByAggregateInput = {
    Id?: SortOrder
    OnAirSyncEnabled?: SortOrder
    OnAirVASyncEnabled?: SortOrder
    OnAirVAMembersSyncEnabled?: SortOrder
    OnAirCompanySyncEnabled?: SortOrder
    DiscordServerInviteLink?: SortOrder
    DiscordServerInviteLinkEnabled?: SortOrder
    AcceptingNewMembers?: SortOrder
    DiscordAuthEnabled?: SortOrder
    DiscordAuthCreateUser?: SortOrder
    LocalAuthEnabled?: SortOrder
    VirtualAirlineInitiated?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AppConfigSumOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type InviteCodeCountOrderByAggregateInput = {
    Id?: SortOrder
    Code?: SortOrder
    IsUsed?: SortOrder
    UsedAt?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type InviteCodeMaxOrderByAggregateInput = {
    Id?: SortOrder
    Code?: SortOrder
    IsUsed?: SortOrder
    UsedAt?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type InviteCodeMinOrderByAggregateInput = {
    Id?: SortOrder
    Code?: SortOrder
    IsUsed?: SortOrder
    UsedAt?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type DiscordMessageTemplateNullableScalarRelationFilter = {
    is?: DiscordMessageTemplateWhereInput | null
    isNot?: DiscordMessageTemplateWhereInput | null
  }

  export type DiscordChannelWebhookNullableScalarRelationFilter = {
    is?: DiscordChannelWebhookWhereInput | null
    isNot?: DiscordChannelWebhookWhereInput | null
  }

  export type ListenerEventListRelationFilter = {
    every?: ListenerEventWhereInput
    some?: ListenerEventWhereInput
    none?: ListenerEventWhereInput
  }

  export type ListenerEventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DiscordMessageCountOrderByAggregateInput = {
    Id?: SortOrder
    ChannelId?: SortOrder
    Content?: SortOrder
    DiscordMessageTemplateId?: SortOrder
    DiscordChannelWebhookId?: SortOrder
    DiscordMessageSentAt?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DiscordMessageAvgOrderByAggregateInput = {
    DiscordMessageTemplateId?: SortOrder
  }

  export type DiscordMessageMaxOrderByAggregateInput = {
    Id?: SortOrder
    ChannelId?: SortOrder
    Content?: SortOrder
    DiscordMessageTemplateId?: SortOrder
    DiscordChannelWebhookId?: SortOrder
    DiscordMessageSentAt?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DiscordMessageMinOrderByAggregateInput = {
    Id?: SortOrder
    ChannelId?: SortOrder
    Content?: SortOrder
    DiscordMessageTemplateId?: SortOrder
    DiscordChannelWebhookId?: SortOrder
    DiscordMessageSentAt?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DiscordMessageSumOrderByAggregateInput = {
    DiscordMessageTemplateId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DiscordMessageListRelationFilter = {
    every?: DiscordMessageWhereInput
    some?: DiscordMessageWhereInput
    none?: DiscordMessageWhereInput
  }

  export type DiscordMessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DiscordMessageTemplateCountOrderByAggregateInput = {
    Id?: SortOrder
    Slug?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Content?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DiscordMessageTemplateAvgOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type DiscordMessageTemplateMaxOrderByAggregateInput = {
    Id?: SortOrder
    Slug?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Content?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DiscordMessageTemplateMinOrderByAggregateInput = {
    Id?: SortOrder
    Slug?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Content?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DiscordMessageTemplateSumOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type ListenerEventSenderListRelationFilter = {
    every?: ListenerEventSenderWhereInput
    some?: ListenerEventSenderWhereInput
    none?: ListenerEventSenderWhereInput
  }

  export type ListenerEventSenderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DiscordChannelWebhookCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    WebhookUrl?: SortOrder
    ChannelId?: SortOrder
    Token?: SortOrder
    IsActive?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DiscordChannelWebhookMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    WebhookUrl?: SortOrder
    ChannelId?: SortOrder
    Token?: SortOrder
    IsActive?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DiscordChannelWebhookMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    WebhookUrl?: SortOrder
    ChannelId?: SortOrder
    Token?: SortOrder
    IsActive?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type EnumListenerEventStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ListenerEventStatus | EnumListenerEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListenerEventStatus[] | ListEnumListenerEventStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListenerEventStatus[] | ListEnumListenerEventStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListenerEventStatusFilter<$PrismaModel> | $Enums.ListenerEventStatus
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DiscordMessageNullableScalarRelationFilter = {
    is?: DiscordMessageWhereInput | null
    isNot?: DiscordMessageWhereInput | null
  }

  export type ListenerEventSenderScalarRelationFilter = {
    is?: ListenerEventSenderWhereInput
    isNot?: ListenerEventSenderWhereInput
  }

  export type ListenerEventCountOrderByAggregateInput = {
    Id?: SortOrder
    Variant?: SortOrder
    Type?: SortOrder
    SentAt?: SortOrder
    Status?: SortOrder
    SenderId?: SortOrder
    Error?: SortOrder
    Data?: SortOrder
    DiscordMessageId?: SortOrder
    DeliveredAt?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type ListenerEventAvgOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type ListenerEventMaxOrderByAggregateInput = {
    Id?: SortOrder
    Variant?: SortOrder
    Type?: SortOrder
    SentAt?: SortOrder
    Status?: SortOrder
    SenderId?: SortOrder
    Error?: SortOrder
    DiscordMessageId?: SortOrder
    DeliveredAt?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type ListenerEventMinOrderByAggregateInput = {
    Id?: SortOrder
    Variant?: SortOrder
    Type?: SortOrder
    SentAt?: SortOrder
    Status?: SortOrder
    SenderId?: SortOrder
    Error?: SortOrder
    DiscordMessageId?: SortOrder
    DeliveredAt?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type ListenerEventSumOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type EnumListenerEventStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ListenerEventStatus | EnumListenerEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListenerEventStatus[] | ListEnumListenerEventStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListenerEventStatus[] | ListEnumListenerEventStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListenerEventStatusWithAggregatesFilter<$PrismaModel> | $Enums.ListenerEventStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumListenerEventStatusFilter<$PrismaModel>
    _max?: NestedEnumListenerEventStatusFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type ListenerEventSenderCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Slug?: SortOrder
    Token?: SortOrder
    IsActive?: SortOrder
    DiscordChannelWebhookId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type ListenerEventSenderMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Slug?: SortOrder
    Token?: SortOrder
    IsActive?: SortOrder
    DiscordChannelWebhookId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type ListenerEventSenderMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Slug?: SortOrder
    Token?: SortOrder
    IsActive?: SortOrder
    DiscordChannelWebhookId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type RoleListRelationFilter = {
    every?: RoleWhereInput
    some?: RoleWhereInput
    none?: RoleWhereInput
  }

  export type UserPrivacySettingsListRelationFilter = {
    every?: UserPrivacySettingsWhereInput
    some?: UserPrivacySettingsWhereInput
    none?: UserPrivacySettingsWhereInput
  }

  export type MemberListRelationFilter = {
    every?: MemberWhereInput
    some?: MemberWhereInput
    none?: MemberWhereInput
  }

  export type InviteCodeNullableScalarRelationFilter = {
    is?: InviteCodeWhereInput | null
    isNot?: InviteCodeWhereInput | null
  }

  export type RoleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserPrivacySettingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MemberOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    Id?: SortOrder
    Username?: SortOrder
    Password?: SortOrder
    Email?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    FirstLoginCompleted?: SortOrder
    IsOnline?: SortOrder
    IsBanned?: SortOrder
    BanReason?: SortOrder
    BanExpiresAt?: SortOrder
    IsVerified?: SortOrder
    LastLogin?: SortOrder
    InviteCodeId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DiscordId?: SortOrder
    DiscordUsername?: SortOrder
    DiscordAvatar?: SortOrder
    DiscordEmail?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    Id?: SortOrder
    Username?: SortOrder
    Password?: SortOrder
    Email?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    FirstLoginCompleted?: SortOrder
    IsOnline?: SortOrder
    IsBanned?: SortOrder
    BanReason?: SortOrder
    BanExpiresAt?: SortOrder
    IsVerified?: SortOrder
    LastLogin?: SortOrder
    InviteCodeId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DiscordId?: SortOrder
    DiscordUsername?: SortOrder
    DiscordAvatar?: SortOrder
    DiscordEmail?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    Id?: SortOrder
    Username?: SortOrder
    Password?: SortOrder
    Email?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    FirstLoginCompleted?: SortOrder
    IsOnline?: SortOrder
    IsBanned?: SortOrder
    BanReason?: SortOrder
    BanExpiresAt?: SortOrder
    IsVerified?: SortOrder
    LastLogin?: SortOrder
    InviteCodeId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DiscordId?: SortOrder
    DiscordUsername?: SortOrder
    DiscordAvatar?: SortOrder
    DiscordEmail?: SortOrder
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UserPrivacySettingsCountOrderByAggregateInput = {
    Id?: SortOrder
    UserId?: SortOrder
    ShowOnlineStatus?: SortOrder
    ShowFirstName?: SortOrder
    ShowLastName?: SortOrder
    ShowLastNameInitial?: SortOrder
    ShowLastLogin?: SortOrder
    CreatedAt?: SortOrder
  }

  export type UserPrivacySettingsMaxOrderByAggregateInput = {
    Id?: SortOrder
    UserId?: SortOrder
    ShowOnlineStatus?: SortOrder
    ShowFirstName?: SortOrder
    ShowLastName?: SortOrder
    ShowLastNameInitial?: SortOrder
    ShowLastLogin?: SortOrder
    CreatedAt?: SortOrder
  }

  export type UserPrivacySettingsMinOrderByAggregateInput = {
    Id?: SortOrder
    UserId?: SortOrder
    ShowOnlineStatus?: SortOrder
    ShowFirstName?: SortOrder
    ShowLastName?: SortOrder
    ShowLastNameInitial?: SortOrder
    ShowLastLogin?: SortOrder
    CreatedAt?: SortOrder
  }

  export type PermissionListRelationFilter = {
    every?: PermissionWhereInput
    some?: PermissionWhereInput
    none?: PermissionWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type VirtualAirlineRoleNullableScalarRelationFilter = {
    is?: VirtualAirlineRoleWhereInput | null
    isNot?: VirtualAirlineRoleWhereInput | null
  }

  export type PermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Slug?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    VirtualAirlineRoleId?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Slug?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    VirtualAirlineRoleId?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Slug?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    VirtualAirlineRoleId?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type PermissionCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Slug?: SortOrder
    Entity?: SortOrder
    Action?: SortOrder
  }

  export type PermissionAvgOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type PermissionMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Slug?: SortOrder
    Entity?: SortOrder
    Action?: SortOrder
  }

  export type PermissionMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Slug?: SortOrder
    Entity?: SortOrder
    Action?: SortOrder
  }

  export type PermissionSumOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type AircraftNullableScalarRelationFilter = {
    is?: AircraftWhereInput | null
    isNot?: AircraftWhereInput | null
  }

  export type LiveryImageListRelationFilter = {
    every?: LiveryImageWhereInput
    some?: LiveryImageWhereInput
    none?: LiveryImageWhereInput
  }

  export type LiveryFileListRelationFilter = {
    every?: LiveryFileWhereInput
    some?: LiveryFileWhereInput
    none?: LiveryFileWhereInput
  }

  export type LiveryImageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LiveryFileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LiveryCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    IsActive?: SortOrder
    AircraftId?: SortOrder
    DownloadCount?: SortOrder
    Image?: SortOrder
    ImageFileName?: SortOrder
    CoverPhoto?: SortOrder
    Metadata?: SortOrder
    Url?: SortOrder
    Description?: SortOrder
    DownloadUrl?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type LiveryAvgOrderByAggregateInput = {
    DownloadCount?: SortOrder
  }

  export type LiveryMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    IsActive?: SortOrder
    AircraftId?: SortOrder
    DownloadCount?: SortOrder
    Image?: SortOrder
    ImageFileName?: SortOrder
    CoverPhoto?: SortOrder
    Url?: SortOrder
    Description?: SortOrder
    DownloadUrl?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type LiveryMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    IsActive?: SortOrder
    AircraftId?: SortOrder
    DownloadCount?: SortOrder
    Image?: SortOrder
    ImageFileName?: SortOrder
    CoverPhoto?: SortOrder
    Url?: SortOrder
    Description?: SortOrder
    DownloadUrl?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type LiverySumOrderByAggregateInput = {
    DownloadCount?: SortOrder
  }

  export type LiveryScalarRelationFilter = {
    is?: LiveryWhereInput
    isNot?: LiveryWhereInput
  }

  export type LiveryImageCountOrderByAggregateInput = {
    Id?: SortOrder
    LiveryId?: SortOrder
    Name?: SortOrder
    Type?: SortOrder
    Path?: SortOrder
    Size?: SortOrder
    MimeType?: SortOrder
    FileName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type LiveryImageAvgOrderByAggregateInput = {
    Size?: SortOrder
  }

  export type LiveryImageMaxOrderByAggregateInput = {
    Id?: SortOrder
    LiveryId?: SortOrder
    Name?: SortOrder
    Type?: SortOrder
    Path?: SortOrder
    Size?: SortOrder
    MimeType?: SortOrder
    FileName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type LiveryImageMinOrderByAggregateInput = {
    Id?: SortOrder
    LiveryId?: SortOrder
    Name?: SortOrder
    Type?: SortOrder
    Path?: SortOrder
    Size?: SortOrder
    MimeType?: SortOrder
    FileName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type LiveryImageSumOrderByAggregateInput = {
    Size?: SortOrder
  }

  export type LiveryFileCountOrderByAggregateInput = {
    Id?: SortOrder
    LiveryId?: SortOrder
    Name?: SortOrder
    Type?: SortOrder
    Path?: SortOrder
    Size?: SortOrder
    MimeType?: SortOrder
    FileName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type LiveryFileAvgOrderByAggregateInput = {
    Size?: SortOrder
  }

  export type LiveryFileMaxOrderByAggregateInput = {
    Id?: SortOrder
    LiveryId?: SortOrder
    Name?: SortOrder
    Type?: SortOrder
    Path?: SortOrder
    Size?: SortOrder
    MimeType?: SortOrder
    FileName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type LiveryFileMinOrderByAggregateInput = {
    Id?: SortOrder
    LiveryId?: SortOrder
    Name?: SortOrder
    Type?: SortOrder
    Path?: SortOrder
    Size?: SortOrder
    MimeType?: SortOrder
    FileName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type LiveryFileSumOrderByAggregateInput = {
    Size?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type WorldNullableScalarRelationFilter = {
    is?: WorldWhereInput | null
    isNot?: WorldWhereInput | null
  }

  export type VirtualAirlineRoleListRelationFilter = {
    every?: VirtualAirlineRoleWhereInput
    some?: VirtualAirlineRoleWhereInput
    none?: VirtualAirlineRoleWhereInput
  }

  export type AircraftListRelationFilter = {
    every?: AircraftWhereInput
    some?: AircraftWhereInput
    none?: AircraftWhereInput
  }

  export type FlightListRelationFilter = {
    every?: FlightWhereInput
    some?: FlightWhereInput
    none?: FlightWhereInput
  }

  export type VirtualAirlineRoleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AircraftOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FlightOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VirtualAirlineCountOrderByAggregateInput = {
    Id?: SortOrder
    ApiKey?: SortOrder
    IsPrimary?: SortOrder
    Identifier?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    WorldId?: SortOrder
    LastDividendsDistribution?: SortOrder
    LastComputationDate?: SortOrder
    ComputedMemberCount?: SortOrder
    ComputedAircraftsCount?: SortOrder
    ComputedNumberOfFlights30Days?: SortOrder
    ComputedNumberOfFlightHours30Days?: SortOrder
    ComputedMostUsedAirports?: SortOrder
    LastConnection?: SortOrder
    LastReportDate?: SortOrder
    Reputation?: SortOrder
    CreationDate?: SortOrder
    DifficultyLevel?: SortOrder
    Level?: SortOrder
    LevelXP?: SortOrder
    TotalContractsCompleted?: SortOrder
    TotalContractsEarnedCredits?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type VirtualAirlineAvgOrderByAggregateInput = {
    ComputedMemberCount?: SortOrder
    ComputedAircraftsCount?: SortOrder
    ComputedNumberOfFlights30Days?: SortOrder
    ComputedNumberOfFlightHours30Days?: SortOrder
    Reputation?: SortOrder
    DifficultyLevel?: SortOrder
    Level?: SortOrder
    LevelXP?: SortOrder
    TotalContractsCompleted?: SortOrder
    TotalContractsEarnedCredits?: SortOrder
  }

  export type VirtualAirlineMaxOrderByAggregateInput = {
    Id?: SortOrder
    ApiKey?: SortOrder
    IsPrimary?: SortOrder
    Identifier?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    WorldId?: SortOrder
    LastDividendsDistribution?: SortOrder
    LastComputationDate?: SortOrder
    ComputedMemberCount?: SortOrder
    ComputedAircraftsCount?: SortOrder
    ComputedNumberOfFlights30Days?: SortOrder
    ComputedNumberOfFlightHours30Days?: SortOrder
    ComputedMostUsedAirports?: SortOrder
    LastConnection?: SortOrder
    LastReportDate?: SortOrder
    Reputation?: SortOrder
    CreationDate?: SortOrder
    DifficultyLevel?: SortOrder
    Level?: SortOrder
    LevelXP?: SortOrder
    TotalContractsCompleted?: SortOrder
    TotalContractsEarnedCredits?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type VirtualAirlineMinOrderByAggregateInput = {
    Id?: SortOrder
    ApiKey?: SortOrder
    IsPrimary?: SortOrder
    Identifier?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    WorldId?: SortOrder
    LastDividendsDistribution?: SortOrder
    LastComputationDate?: SortOrder
    ComputedMemberCount?: SortOrder
    ComputedAircraftsCount?: SortOrder
    ComputedNumberOfFlights30Days?: SortOrder
    ComputedNumberOfFlightHours30Days?: SortOrder
    ComputedMostUsedAirports?: SortOrder
    LastConnection?: SortOrder
    LastReportDate?: SortOrder
    Reputation?: SortOrder
    CreationDate?: SortOrder
    DifficultyLevel?: SortOrder
    Level?: SortOrder
    LevelXP?: SortOrder
    TotalContractsCompleted?: SortOrder
    TotalContractsEarnedCredits?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type VirtualAirlineSumOrderByAggregateInput = {
    ComputedMemberCount?: SortOrder
    ComputedAircraftsCount?: SortOrder
    ComputedNumberOfFlights30Days?: SortOrder
    ComputedNumberOfFlightHours30Days?: SortOrder
    Reputation?: SortOrder
    DifficultyLevel?: SortOrder
    Level?: SortOrder
    LevelXP?: SortOrder
    TotalContractsCompleted?: SortOrder
    TotalContractsEarnedCredits?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type RoleNullableScalarRelationFilter = {
    is?: RoleWhereInput | null
    isNot?: RoleWhereInput | null
  }

  export type VirtualAirlineScalarRelationFilter = {
    is?: VirtualAirlineWhereInput
    isNot?: VirtualAirlineWhereInput
  }

  export type VirtualAirlineRoleCountOrderByAggregateInput = {
    Id?: SortOrder
    VAId?: SortOrder
    Name?: SortOrder
    Permission?: SortOrder
    IsDefaultNewRole?: SortOrder
    Color?: SortOrder
    PayPercent?: SortOrder
    IsHidden?: SortOrder
    RestrictLoadingVAJobsIntoNonVAAircraft?: SortOrder
    RestrictLoadingNonVAJobsIntoVAAircraft?: SortOrder
    PayWeekly?: SortOrder
    PayPerFlightHour?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type VirtualAirlineRoleAvgOrderByAggregateInput = {
    Permission?: SortOrder
    PayPercent?: SortOrder
    PayWeekly?: SortOrder
    PayPerFlightHour?: SortOrder
  }

  export type VirtualAirlineRoleMaxOrderByAggregateInput = {
    Id?: SortOrder
    VAId?: SortOrder
    Name?: SortOrder
    Permission?: SortOrder
    IsDefaultNewRole?: SortOrder
    Color?: SortOrder
    PayPercent?: SortOrder
    IsHidden?: SortOrder
    RestrictLoadingVAJobsIntoNonVAAircraft?: SortOrder
    RestrictLoadingNonVAJobsIntoVAAircraft?: SortOrder
    PayWeekly?: SortOrder
    PayPerFlightHour?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type VirtualAirlineRoleMinOrderByAggregateInput = {
    Id?: SortOrder
    VAId?: SortOrder
    Name?: SortOrder
    Permission?: SortOrder
    IsDefaultNewRole?: SortOrder
    Color?: SortOrder
    PayPercent?: SortOrder
    IsHidden?: SortOrder
    RestrictLoadingVAJobsIntoNonVAAircraft?: SortOrder
    RestrictLoadingNonVAJobsIntoVAAircraft?: SortOrder
    PayWeekly?: SortOrder
    PayPerFlightHour?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type VirtualAirlineRoleSumOrderByAggregateInput = {
    Permission?: SortOrder
    PayPercent?: SortOrder
    PayWeekly?: SortOrder
    PayPerFlightHour?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type VirtualAirlineListRelationFilter = {
    every?: VirtualAirlineWhereInput
    some?: VirtualAirlineWhereInput
    none?: VirtualAirlineWhereInput
  }

  export type CompanyListRelationFilter = {
    every?: CompanyWhereInput
    some?: CompanyWhereInput
    none?: CompanyWhereInput
  }

  export type VirtualAirlineOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CompanyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WorldCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Slug?: SortOrder
    Description?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type WorldMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Slug?: SortOrder
    Description?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type WorldMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Slug?: SortOrder
    Description?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type CompanyScalarRelationFilter = {
    is?: CompanyWhereInput
    isNot?: CompanyWhereInput
  }

  export type VirtualAirlineRoleScalarRelationFilter = {
    is?: VirtualAirlineRoleWhereInput
    isNot?: VirtualAirlineRoleWhereInput
  }

  export type FlightRouteListRelationFilter = {
    every?: FlightRouteWhereInput
    some?: FlightRouteWhereInput
    none?: FlightRouteWhereInput
  }

  export type FlightRouteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MemberCountOrderByAggregateInput = {
    Id?: SortOrder
    IsActive?: SortOrder
    DeactivatedAt?: SortOrder
    VAId?: SortOrder
    VARoleId?: SortOrder
    TotalCargosTransportedLbs?: SortOrder
    TotalPAXsTransported?: SortOrder
    TotalEarnedCredits?: SortOrder
    TotalSpentCredits?: SortOrder
    NumberOfFlights?: SortOrder
    FlightHours?: SortOrder
    Color?: SortOrder
    ReputationImpact?: SortOrder
    LastVAFlightDate?: SortOrder
    LastRefresh?: SortOrder
    UserId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    CompanyId?: SortOrder
  }

  export type MemberAvgOrderByAggregateInput = {
    TotalCargosTransportedLbs?: SortOrder
    TotalPAXsTransported?: SortOrder
    TotalEarnedCredits?: SortOrder
    TotalSpentCredits?: SortOrder
    NumberOfFlights?: SortOrder
    FlightHours?: SortOrder
    ReputationImpact?: SortOrder
  }

  export type MemberMaxOrderByAggregateInput = {
    Id?: SortOrder
    IsActive?: SortOrder
    DeactivatedAt?: SortOrder
    VAId?: SortOrder
    VARoleId?: SortOrder
    TotalCargosTransportedLbs?: SortOrder
    TotalPAXsTransported?: SortOrder
    TotalEarnedCredits?: SortOrder
    TotalSpentCredits?: SortOrder
    NumberOfFlights?: SortOrder
    FlightHours?: SortOrder
    Color?: SortOrder
    ReputationImpact?: SortOrder
    LastVAFlightDate?: SortOrder
    LastRefresh?: SortOrder
    UserId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    CompanyId?: SortOrder
  }

  export type MemberMinOrderByAggregateInput = {
    Id?: SortOrder
    IsActive?: SortOrder
    DeactivatedAt?: SortOrder
    VAId?: SortOrder
    VARoleId?: SortOrder
    TotalCargosTransportedLbs?: SortOrder
    TotalPAXsTransported?: SortOrder
    TotalEarnedCredits?: SortOrder
    TotalSpentCredits?: SortOrder
    NumberOfFlights?: SortOrder
    FlightHours?: SortOrder
    Color?: SortOrder
    ReputationImpact?: SortOrder
    LastVAFlightDate?: SortOrder
    LastRefresh?: SortOrder
    UserId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    CompanyId?: SortOrder
  }

  export type MemberSumOrderByAggregateInput = {
    TotalCargosTransportedLbs?: SortOrder
    TotalPAXsTransported?: SortOrder
    TotalEarnedCredits?: SortOrder
    TotalSpentCredits?: SortOrder
    NumberOfFlights?: SortOrder
    FlightHours?: SortOrder
    ReputationImpact?: SortOrder
  }

  export type WorldScalarRelationFilter = {
    is?: WorldWhereInput
    isNot?: WorldWhereInput
  }

  export type MemberNullableScalarRelationFilter = {
    is?: MemberWhereInput | null
    isNot?: MemberWhereInput | null
  }

  export type CompanyCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    AirlineCode?: SortOrder
    CreationDate?: SortOrder
    Level?: SortOrder
    LevelXP?: SortOrder
    Reputation?: SortOrder
    Paused?: SortOrder
    LastConnection?: SortOrder
    LastReportDate?: SortOrder
    DifficultyLevel?: SortOrder
    WorldId?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type CompanyAvgOrderByAggregateInput = {
    Level?: SortOrder
    LevelXP?: SortOrder
    Reputation?: SortOrder
    DifficultyLevel?: SortOrder
  }

  export type CompanyMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    AirlineCode?: SortOrder
    CreationDate?: SortOrder
    Level?: SortOrder
    LevelXP?: SortOrder
    Reputation?: SortOrder
    Paused?: SortOrder
    LastConnection?: SortOrder
    LastReportDate?: SortOrder
    DifficultyLevel?: SortOrder
    WorldId?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type CompanyMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    AirlineCode?: SortOrder
    CreationDate?: SortOrder
    Level?: SortOrder
    LevelXP?: SortOrder
    Reputation?: SortOrder
    Paused?: SortOrder
    LastConnection?: SortOrder
    LastReportDate?: SortOrder
    DifficultyLevel?: SortOrder
    WorldId?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type CompanySumOrderByAggregateInput = {
    Level?: SortOrder
    LevelXP?: SortOrder
    Reputation?: SortOrder
    DifficultyLevel?: SortOrder
  }

  export type AircraftClassScalarRelationFilter = {
    is?: AircraftClassWhereInput
    isNot?: AircraftClassWhereInput
  }

  export type AircraftStatusScalarRelationFilter = {
    is?: AircraftStatusWhereInput
    isNot?: AircraftStatusWhereInput
  }

  export type AirportNullableScalarRelationFilter = {
    is?: AirportWhereInput | null
    isNot?: AirportWhereInput | null
  }

  export type AircraftMaintenanceListRelationFilter = {
    every?: AircraftMaintenanceWhereInput
    some?: AircraftMaintenanceWhereInput
    none?: AircraftMaintenanceWhereInput
  }

  export type LiveryListRelationFilter = {
    every?: LiveryWhereInput
    some?: LiveryWhereInput
    none?: LiveryWhereInput
  }

  export type AircraftMaintenanceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LiveryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AircraftCountOrderByAggregateInput = {
    Id?: SortOrder
    Identifier?: SortOrder
    DisplayName?: SortOrder
    AircraftStatusId?: SortOrder
    AircraftClassId?: SortOrder
    VirtualAirlineId?: SortOrder
    CurrentAirportId?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AircraftAvgOrderByAggregateInput = {
    AircraftStatusId?: SortOrder
  }

  export type AircraftMaxOrderByAggregateInput = {
    Id?: SortOrder
    Identifier?: SortOrder
    DisplayName?: SortOrder
    AircraftStatusId?: SortOrder
    AircraftClassId?: SortOrder
    VirtualAirlineId?: SortOrder
    CurrentAirportId?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AircraftMinOrderByAggregateInput = {
    Id?: SortOrder
    Identifier?: SortOrder
    DisplayName?: SortOrder
    AircraftStatusId?: SortOrder
    AircraftClassId?: SortOrder
    VirtualAirlineId?: SortOrder
    CurrentAirportId?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AircraftSumOrderByAggregateInput = {
    AircraftStatusId?: SortOrder
  }

  export type AircraftClassCountOrderByAggregateInput = {
    Id?: SortOrder
    ShortName?: SortOrder
    Name?: SortOrder
  }

  export type AircraftClassMaxOrderByAggregateInput = {
    Id?: SortOrder
    ShortName?: SortOrder
    Name?: SortOrder
  }

  export type AircraftClassMinOrderByAggregateInput = {
    Id?: SortOrder
    ShortName?: SortOrder
    Name?: SortOrder
  }

  export type AircraftScalarRelationFilter = {
    is?: AircraftWhereInput
    isNot?: AircraftWhereInput
  }

  export type AircraftMaintenanceCountOrderByAggregateInput = {
    Id?: SortOrder
    AircraftId?: SortOrder
    AnnualCheckup?: SortOrder
    Inspection100Hours?: SortOrder
    FailuresRepair?: SortOrder
    AirframeRepair?: SortOrder
    AirframeReplace?: SortOrder
    EcoSeats?: SortOrder
    BusSeats?: SortOrder
    FirstClassSeats?: SortOrder
    AirframeRepairCondition?: SortOrder
    MaintenanceFBOId?: SortOrder
    RemainingMaintenanceWorkHours?: SortOrder
    Amount?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AircraftMaintenanceAvgOrderByAggregateInput = {
    EcoSeats?: SortOrder
    BusSeats?: SortOrder
    FirstClassSeats?: SortOrder
    AirframeRepairCondition?: SortOrder
    RemainingMaintenanceWorkHours?: SortOrder
    Amount?: SortOrder
  }

  export type AircraftMaintenanceMaxOrderByAggregateInput = {
    Id?: SortOrder
    AircraftId?: SortOrder
    AnnualCheckup?: SortOrder
    Inspection100Hours?: SortOrder
    FailuresRepair?: SortOrder
    AirframeRepair?: SortOrder
    AirframeReplace?: SortOrder
    EcoSeats?: SortOrder
    BusSeats?: SortOrder
    FirstClassSeats?: SortOrder
    AirframeRepairCondition?: SortOrder
    MaintenanceFBOId?: SortOrder
    RemainingMaintenanceWorkHours?: SortOrder
    Amount?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AircraftMaintenanceMinOrderByAggregateInput = {
    Id?: SortOrder
    AircraftId?: SortOrder
    AnnualCheckup?: SortOrder
    Inspection100Hours?: SortOrder
    FailuresRepair?: SortOrder
    AirframeRepair?: SortOrder
    AirframeReplace?: SortOrder
    EcoSeats?: SortOrder
    BusSeats?: SortOrder
    FirstClassSeats?: SortOrder
    AirframeRepairCondition?: SortOrder
    MaintenanceFBOId?: SortOrder
    RemainingMaintenanceWorkHours?: SortOrder
    Amount?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AircraftMaintenanceSumOrderByAggregateInput = {
    EcoSeats?: SortOrder
    BusSeats?: SortOrder
    FirstClassSeats?: SortOrder
    AirframeRepairCondition?: SortOrder
    RemainingMaintenanceWorkHours?: SortOrder
    Amount?: SortOrder
  }

  export type AircraftStatusCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
  }

  export type AircraftStatusAvgOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type AircraftStatusMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
  }

  export type AircraftStatusMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
  }

  export type AircraftStatusSumOrderByAggregateInput = {
    Id?: SortOrder
  }

  export type AirportCountOrderByAggregateInput = {
    Id?: SortOrder
    ICAO?: SortOrder
    IATA?: SortOrder
    Description?: SortOrder
    Name?: SortOrder
    Size?: SortOrder
    City?: SortOrder
    State?: SortOrder
    CountryCode?: SortOrder
    CountryName?: SortOrder
    CountryEmoji?: SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
    HomeWebSiteUrl?: SortOrder
    WikiUrl?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AirportAvgOrderByAggregateInput = {
    Size?: SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
  }

  export type AirportMaxOrderByAggregateInput = {
    Id?: SortOrder
    ICAO?: SortOrder
    IATA?: SortOrder
    Description?: SortOrder
    Name?: SortOrder
    Size?: SortOrder
    City?: SortOrder
    State?: SortOrder
    CountryCode?: SortOrder
    CountryName?: SortOrder
    CountryEmoji?: SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
    HomeWebSiteUrl?: SortOrder
    WikiUrl?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AirportMinOrderByAggregateInput = {
    Id?: SortOrder
    ICAO?: SortOrder
    IATA?: SortOrder
    Description?: SortOrder
    Name?: SortOrder
    Size?: SortOrder
    City?: SortOrder
    State?: SortOrder
    CountryCode?: SortOrder
    CountryName?: SortOrder
    CountryEmoji?: SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
    HomeWebSiteUrl?: SortOrder
    WikiUrl?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AirportSumOrderByAggregateInput = {
    Size?: SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
  }

  export type EnumFlightStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.FlightStatus | EnumFlightStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FlightStatus[] | ListEnumFlightStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FlightStatus[] | ListEnumFlightStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFlightStatusFilter<$PrismaModel> | $Enums.FlightStatus
  }

  export type VirtualAirlineNullableScalarRelationFilter = {
    is?: VirtualAirlineWhereInput | null
    isNot?: VirtualAirlineWhereInput | null
  }

  export type FlightCountOrderByAggregateInput = {
    Id?: SortOrder
    AircraftId?: SortOrder
    CompanyId?: SortOrder
    Registered?: SortOrder
    Category?: SortOrder
    ResultComments?: SortOrder
    StartTime?: SortOrder
    EndTime?: SortOrder
    EngineOnTime?: SortOrder
    EngineOffTime?: SortOrder
    AirborneTime?: SortOrder
    LandedTime?: SortOrder
    IntendedFlightLevel?: SortOrder
    Passengers?: SortOrder
    Cargo?: SortOrder
    AddedFuelQty?: SortOrder
    IsAI?: SortOrder
    VerticalSpeedAtTouchdownMpS?: SortOrder
    MaxGForce?: SortOrder
    MinGForce?: SortOrder
    MaxBank?: SortOrder
    MaxPitch?: SortOrder
    HasStalled?: SortOrder
    HasOverspeeded?: SortOrder
    XPFlight?: SortOrder
    XPFlightBonus?: SortOrder
    XPMissions?: SortOrder
    CargosTotalWeight?: SortOrder
    PAXCount?: SortOrder
    AircraftCurrentFOB?: SortOrder
    AircraftCurrentAltitude?: SortOrder
    ActualCruiseAltitude?: SortOrder
    ActualConsumptionAtCruiseLevelInLbsPerHour?: SortOrder
    ActualTotalFuelConsumptionInLbs?: SortOrder
    ActualConsumptionAtCruiseLevelInGalPerHour?: SortOrder
    ActualTASAtCruiseLevel?: SortOrder
    ActualCruiseTimeInMinutes?: SortOrder
    ActualPressureAltitude?: SortOrder
    RegisterState?: SortOrder
    WrongFuelDetected?: SortOrder
    WrongWeightDetected?: SortOrder
    TimeOffset?: SortOrder
    StartLatitude?: SortOrder
    StartLongitude?: SortOrder
    StartHeading?: SortOrder
    UseFreelanceRouteSchedule?: SortOrder
    RestCrewAfterWarp?: SortOrder
    Score?: SortOrder
    CanResumeOrAbort?: SortOrder
    EngineOnRealTime?: SortOrder
    EngineOffRealTime?: SortOrder
    LandedRealTime?: SortOrder
    AirborneRealTime?: SortOrder
    DepartureAirportId?: SortOrder
    ArrivalIntendedAirportId?: SortOrder
    ArrivalAlternateAirportId?: SortOrder
    ArrivalActualAirportId?: SortOrder
    VAId?: SortOrder
    MemberId?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    FlightStatus?: SortOrder
  }

  export type FlightAvgOrderByAggregateInput = {
    Category?: SortOrder
    IntendedFlightLevel?: SortOrder
    Passengers?: SortOrder
    Cargo?: SortOrder
    AddedFuelQty?: SortOrder
    VerticalSpeedAtTouchdownMpS?: SortOrder
    MaxGForce?: SortOrder
    MinGForce?: SortOrder
    MaxBank?: SortOrder
    MaxPitch?: SortOrder
    XPFlight?: SortOrder
    XPFlightBonus?: SortOrder
    XPMissions?: SortOrder
    CargosTotalWeight?: SortOrder
    PAXCount?: SortOrder
    AircraftCurrentFOB?: SortOrder
    AircraftCurrentAltitude?: SortOrder
    ActualCruiseAltitude?: SortOrder
    ActualConsumptionAtCruiseLevelInLbsPerHour?: SortOrder
    ActualTotalFuelConsumptionInLbs?: SortOrder
    ActualConsumptionAtCruiseLevelInGalPerHour?: SortOrder
    ActualTASAtCruiseLevel?: SortOrder
    ActualCruiseTimeInMinutes?: SortOrder
    ActualPressureAltitude?: SortOrder
    RegisterState?: SortOrder
    TimeOffset?: SortOrder
    StartLatitude?: SortOrder
    StartLongitude?: SortOrder
    StartHeading?: SortOrder
    Score?: SortOrder
  }

  export type FlightMaxOrderByAggregateInput = {
    Id?: SortOrder
    AircraftId?: SortOrder
    CompanyId?: SortOrder
    Registered?: SortOrder
    Category?: SortOrder
    ResultComments?: SortOrder
    StartTime?: SortOrder
    EndTime?: SortOrder
    EngineOnTime?: SortOrder
    EngineOffTime?: SortOrder
    AirborneTime?: SortOrder
    LandedTime?: SortOrder
    IntendedFlightLevel?: SortOrder
    Passengers?: SortOrder
    Cargo?: SortOrder
    AddedFuelQty?: SortOrder
    IsAI?: SortOrder
    VerticalSpeedAtTouchdownMpS?: SortOrder
    MaxGForce?: SortOrder
    MinGForce?: SortOrder
    MaxBank?: SortOrder
    MaxPitch?: SortOrder
    HasStalled?: SortOrder
    HasOverspeeded?: SortOrder
    XPFlight?: SortOrder
    XPFlightBonus?: SortOrder
    XPMissions?: SortOrder
    CargosTotalWeight?: SortOrder
    PAXCount?: SortOrder
    AircraftCurrentFOB?: SortOrder
    AircraftCurrentAltitude?: SortOrder
    ActualCruiseAltitude?: SortOrder
    ActualConsumptionAtCruiseLevelInLbsPerHour?: SortOrder
    ActualTotalFuelConsumptionInLbs?: SortOrder
    ActualConsumptionAtCruiseLevelInGalPerHour?: SortOrder
    ActualTASAtCruiseLevel?: SortOrder
    ActualCruiseTimeInMinutes?: SortOrder
    ActualPressureAltitude?: SortOrder
    RegisterState?: SortOrder
    WrongFuelDetected?: SortOrder
    WrongWeightDetected?: SortOrder
    TimeOffset?: SortOrder
    StartLatitude?: SortOrder
    StartLongitude?: SortOrder
    StartHeading?: SortOrder
    UseFreelanceRouteSchedule?: SortOrder
    RestCrewAfterWarp?: SortOrder
    Score?: SortOrder
    CanResumeOrAbort?: SortOrder
    EngineOnRealTime?: SortOrder
    EngineOffRealTime?: SortOrder
    LandedRealTime?: SortOrder
    AirborneRealTime?: SortOrder
    DepartureAirportId?: SortOrder
    ArrivalIntendedAirportId?: SortOrder
    ArrivalAlternateAirportId?: SortOrder
    ArrivalActualAirportId?: SortOrder
    VAId?: SortOrder
    MemberId?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    FlightStatus?: SortOrder
  }

  export type FlightMinOrderByAggregateInput = {
    Id?: SortOrder
    AircraftId?: SortOrder
    CompanyId?: SortOrder
    Registered?: SortOrder
    Category?: SortOrder
    ResultComments?: SortOrder
    StartTime?: SortOrder
    EndTime?: SortOrder
    EngineOnTime?: SortOrder
    EngineOffTime?: SortOrder
    AirborneTime?: SortOrder
    LandedTime?: SortOrder
    IntendedFlightLevel?: SortOrder
    Passengers?: SortOrder
    Cargo?: SortOrder
    AddedFuelQty?: SortOrder
    IsAI?: SortOrder
    VerticalSpeedAtTouchdownMpS?: SortOrder
    MaxGForce?: SortOrder
    MinGForce?: SortOrder
    MaxBank?: SortOrder
    MaxPitch?: SortOrder
    HasStalled?: SortOrder
    HasOverspeeded?: SortOrder
    XPFlight?: SortOrder
    XPFlightBonus?: SortOrder
    XPMissions?: SortOrder
    CargosTotalWeight?: SortOrder
    PAXCount?: SortOrder
    AircraftCurrentFOB?: SortOrder
    AircraftCurrentAltitude?: SortOrder
    ActualCruiseAltitude?: SortOrder
    ActualConsumptionAtCruiseLevelInLbsPerHour?: SortOrder
    ActualTotalFuelConsumptionInLbs?: SortOrder
    ActualConsumptionAtCruiseLevelInGalPerHour?: SortOrder
    ActualTASAtCruiseLevel?: SortOrder
    ActualCruiseTimeInMinutes?: SortOrder
    ActualPressureAltitude?: SortOrder
    RegisterState?: SortOrder
    WrongFuelDetected?: SortOrder
    WrongWeightDetected?: SortOrder
    TimeOffset?: SortOrder
    StartLatitude?: SortOrder
    StartLongitude?: SortOrder
    StartHeading?: SortOrder
    UseFreelanceRouteSchedule?: SortOrder
    RestCrewAfterWarp?: SortOrder
    Score?: SortOrder
    CanResumeOrAbort?: SortOrder
    EngineOnRealTime?: SortOrder
    EngineOffRealTime?: SortOrder
    LandedRealTime?: SortOrder
    AirborneRealTime?: SortOrder
    DepartureAirportId?: SortOrder
    ArrivalIntendedAirportId?: SortOrder
    ArrivalAlternateAirportId?: SortOrder
    ArrivalActualAirportId?: SortOrder
    VAId?: SortOrder
    MemberId?: SortOrder
    LastRefresh?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    FlightStatus?: SortOrder
  }

  export type FlightSumOrderByAggregateInput = {
    Category?: SortOrder
    IntendedFlightLevel?: SortOrder
    Passengers?: SortOrder
    Cargo?: SortOrder
    AddedFuelQty?: SortOrder
    VerticalSpeedAtTouchdownMpS?: SortOrder
    MaxGForce?: SortOrder
    MinGForce?: SortOrder
    MaxBank?: SortOrder
    MaxPitch?: SortOrder
    XPFlight?: SortOrder
    XPFlightBonus?: SortOrder
    XPMissions?: SortOrder
    CargosTotalWeight?: SortOrder
    PAXCount?: SortOrder
    AircraftCurrentFOB?: SortOrder
    AircraftCurrentAltitude?: SortOrder
    ActualCruiseAltitude?: SortOrder
    ActualConsumptionAtCruiseLevelInLbsPerHour?: SortOrder
    ActualTotalFuelConsumptionInLbs?: SortOrder
    ActualConsumptionAtCruiseLevelInGalPerHour?: SortOrder
    ActualTASAtCruiseLevel?: SortOrder
    ActualCruiseTimeInMinutes?: SortOrder
    ActualPressureAltitude?: SortOrder
    RegisterState?: SortOrder
    TimeOffset?: SortOrder
    StartLatitude?: SortOrder
    StartLongitude?: SortOrder
    StartHeading?: SortOrder
    Score?: SortOrder
  }

  export type EnumFlightStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FlightStatus | EnumFlightStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FlightStatus[] | ListEnumFlightStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FlightStatus[] | ListEnumFlightStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFlightStatusWithAggregatesFilter<$PrismaModel> | $Enums.FlightStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFlightStatusFilter<$PrismaModel>
    _max?: NestedEnumFlightStatusFilter<$PrismaModel>
  }

  export type FlightNullableScalarRelationFilter = {
    is?: FlightWhereInput | null
    isNot?: FlightWhereInput | null
  }

  export type MemberScalarRelationFilter = {
    is?: MemberWhereInput
    isNot?: MemberWhereInput
  }

  export type FlightRouteCountOrderByAggregateInput = {
    Id?: SortOrder
    FlightId?: SortOrder
    MemberId?: SortOrder
    Route?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type FlightRouteMaxOrderByAggregateInput = {
    Id?: SortOrder
    FlightId?: SortOrder
    MemberId?: SortOrder
    Route?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type FlightRouteMinOrderByAggregateInput = {
    Id?: SortOrder
    FlightId?: SortOrder
    MemberId?: SortOrder
    Route?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type EnumJobTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.JobType | EnumJobTypeFieldRefInput<$PrismaModel>
    in?: $Enums.JobType[] | ListEnumJobTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobType[] | ListEnumJobTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumJobTypeFilter<$PrismaModel> | $Enums.JobType
  }

  export type EnumJobStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusFilter<$PrismaModel> | $Enums.JobStatus
  }

  export type EnumCronExpressionFilter<$PrismaModel = never> = {
    equals?: $Enums.CronExpression | EnumCronExpressionFieldRefInput<$PrismaModel>
    in?: $Enums.CronExpression[] | ListEnumCronExpressionFieldRefInput<$PrismaModel>
    notIn?: $Enums.CronExpression[] | ListEnumCronExpressionFieldRefInput<$PrismaModel>
    not?: NestedEnumCronExpressionFilter<$PrismaModel> | $Enums.CronExpression
  }

  export type JobCountOrderByAggregateInput = {
    Id?: SortOrder
    IsEnabled?: SortOrder
    FirstRunCompleted?: SortOrder
    Type?: SortOrder
    Status?: SortOrder
    CronExpression?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Parameters?: SortOrder
    LastRunAt?: SortOrder
    NextRunAt?: SortOrder
    LastError?: SortOrder
    ExecutionCount?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type JobAvgOrderByAggregateInput = {
    ExecutionCount?: SortOrder
  }

  export type JobMaxOrderByAggregateInput = {
    Id?: SortOrder
    IsEnabled?: SortOrder
    FirstRunCompleted?: SortOrder
    Type?: SortOrder
    Status?: SortOrder
    CronExpression?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    LastRunAt?: SortOrder
    NextRunAt?: SortOrder
    LastError?: SortOrder
    ExecutionCount?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type JobMinOrderByAggregateInput = {
    Id?: SortOrder
    IsEnabled?: SortOrder
    FirstRunCompleted?: SortOrder
    Type?: SortOrder
    Status?: SortOrder
    CronExpression?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    LastRunAt?: SortOrder
    NextRunAt?: SortOrder
    LastError?: SortOrder
    ExecutionCount?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type JobSumOrderByAggregateInput = {
    ExecutionCount?: SortOrder
  }

  export type EnumJobTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobType | EnumJobTypeFieldRefInput<$PrismaModel>
    in?: $Enums.JobType[] | ListEnumJobTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobType[] | ListEnumJobTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumJobTypeWithAggregatesFilter<$PrismaModel> | $Enums.JobType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobTypeFilter<$PrismaModel>
    _max?: NestedEnumJobTypeFilter<$PrismaModel>
  }

  export type EnumJobStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusWithAggregatesFilter<$PrismaModel> | $Enums.JobStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobStatusFilter<$PrismaModel>
    _max?: NestedEnumJobStatusFilter<$PrismaModel>
  }

  export type EnumCronExpressionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CronExpression | EnumCronExpressionFieldRefInput<$PrismaModel>
    in?: $Enums.CronExpression[] | ListEnumCronExpressionFieldRefInput<$PrismaModel>
    notIn?: $Enums.CronExpression[] | ListEnumCronExpressionFieldRefInput<$PrismaModel>
    not?: NestedEnumCronExpressionWithAggregatesFilter<$PrismaModel> | $Enums.CronExpression
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCronExpressionFilter<$PrismaModel>
    _max?: NestedEnumCronExpressionFilter<$PrismaModel>
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserCreateNestedOneWithoutInviteCodeInput = {
    create?: XOR<UserCreateWithoutInviteCodeInput, UserUncheckedCreateWithoutInviteCodeInput>
    connectOrCreate?: UserCreateOrConnectWithoutInviteCodeInput
    connect?: UserWhereUniqueInput
  }

  export type UserUncheckedCreateNestedOneWithoutInviteCodeInput = {
    create?: XOR<UserCreateWithoutInviteCodeInput, UserUncheckedCreateWithoutInviteCodeInput>
    connectOrCreate?: UserCreateOrConnectWithoutInviteCodeInput
    connect?: UserWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UserUpdateOneWithoutInviteCodeNestedInput = {
    create?: XOR<UserCreateWithoutInviteCodeInput, UserUncheckedCreateWithoutInviteCodeInput>
    connectOrCreate?: UserCreateOrConnectWithoutInviteCodeInput
    upsert?: UserUpsertWithoutInviteCodeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInviteCodeInput, UserUpdateWithoutInviteCodeInput>, UserUncheckedUpdateWithoutInviteCodeInput>
  }

  export type UserUncheckedUpdateOneWithoutInviteCodeNestedInput = {
    create?: XOR<UserCreateWithoutInviteCodeInput, UserUncheckedCreateWithoutInviteCodeInput>
    connectOrCreate?: UserCreateOrConnectWithoutInviteCodeInput
    upsert?: UserUpsertWithoutInviteCodeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInviteCodeInput, UserUpdateWithoutInviteCodeInput>, UserUncheckedUpdateWithoutInviteCodeInput>
  }

  export type DiscordMessageTemplateCreateNestedOneWithoutDiscordMessagesInput = {
    create?: XOR<DiscordMessageTemplateCreateWithoutDiscordMessagesInput, DiscordMessageTemplateUncheckedCreateWithoutDiscordMessagesInput>
    connectOrCreate?: DiscordMessageTemplateCreateOrConnectWithoutDiscordMessagesInput
    connect?: DiscordMessageTemplateWhereUniqueInput
  }

  export type DiscordChannelWebhookCreateNestedOneWithoutDiscordMessagesInput = {
    create?: XOR<DiscordChannelWebhookCreateWithoutDiscordMessagesInput, DiscordChannelWebhookUncheckedCreateWithoutDiscordMessagesInput>
    connectOrCreate?: DiscordChannelWebhookCreateOrConnectWithoutDiscordMessagesInput
    connect?: DiscordChannelWebhookWhereUniqueInput
  }

  export type ListenerEventCreateNestedManyWithoutDiscordMessageInput = {
    create?: XOR<ListenerEventCreateWithoutDiscordMessageInput, ListenerEventUncheckedCreateWithoutDiscordMessageInput> | ListenerEventCreateWithoutDiscordMessageInput[] | ListenerEventUncheckedCreateWithoutDiscordMessageInput[]
    connectOrCreate?: ListenerEventCreateOrConnectWithoutDiscordMessageInput | ListenerEventCreateOrConnectWithoutDiscordMessageInput[]
    createMany?: ListenerEventCreateManyDiscordMessageInputEnvelope
    connect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
  }

  export type ListenerEventUncheckedCreateNestedManyWithoutDiscordMessageInput = {
    create?: XOR<ListenerEventCreateWithoutDiscordMessageInput, ListenerEventUncheckedCreateWithoutDiscordMessageInput> | ListenerEventCreateWithoutDiscordMessageInput[] | ListenerEventUncheckedCreateWithoutDiscordMessageInput[]
    connectOrCreate?: ListenerEventCreateOrConnectWithoutDiscordMessageInput | ListenerEventCreateOrConnectWithoutDiscordMessageInput[]
    createMany?: ListenerEventCreateManyDiscordMessageInputEnvelope
    connect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
  }

  export type DiscordMessageTemplateUpdateOneWithoutDiscordMessagesNestedInput = {
    create?: XOR<DiscordMessageTemplateCreateWithoutDiscordMessagesInput, DiscordMessageTemplateUncheckedCreateWithoutDiscordMessagesInput>
    connectOrCreate?: DiscordMessageTemplateCreateOrConnectWithoutDiscordMessagesInput
    upsert?: DiscordMessageTemplateUpsertWithoutDiscordMessagesInput
    disconnect?: DiscordMessageTemplateWhereInput | boolean
    delete?: DiscordMessageTemplateWhereInput | boolean
    connect?: DiscordMessageTemplateWhereUniqueInput
    update?: XOR<XOR<DiscordMessageTemplateUpdateToOneWithWhereWithoutDiscordMessagesInput, DiscordMessageTemplateUpdateWithoutDiscordMessagesInput>, DiscordMessageTemplateUncheckedUpdateWithoutDiscordMessagesInput>
  }

  export type DiscordChannelWebhookUpdateOneWithoutDiscordMessagesNestedInput = {
    create?: XOR<DiscordChannelWebhookCreateWithoutDiscordMessagesInput, DiscordChannelWebhookUncheckedCreateWithoutDiscordMessagesInput>
    connectOrCreate?: DiscordChannelWebhookCreateOrConnectWithoutDiscordMessagesInput
    upsert?: DiscordChannelWebhookUpsertWithoutDiscordMessagesInput
    disconnect?: DiscordChannelWebhookWhereInput | boolean
    delete?: DiscordChannelWebhookWhereInput | boolean
    connect?: DiscordChannelWebhookWhereUniqueInput
    update?: XOR<XOR<DiscordChannelWebhookUpdateToOneWithWhereWithoutDiscordMessagesInput, DiscordChannelWebhookUpdateWithoutDiscordMessagesInput>, DiscordChannelWebhookUncheckedUpdateWithoutDiscordMessagesInput>
  }

  export type ListenerEventUpdateManyWithoutDiscordMessageNestedInput = {
    create?: XOR<ListenerEventCreateWithoutDiscordMessageInput, ListenerEventUncheckedCreateWithoutDiscordMessageInput> | ListenerEventCreateWithoutDiscordMessageInput[] | ListenerEventUncheckedCreateWithoutDiscordMessageInput[]
    connectOrCreate?: ListenerEventCreateOrConnectWithoutDiscordMessageInput | ListenerEventCreateOrConnectWithoutDiscordMessageInput[]
    upsert?: ListenerEventUpsertWithWhereUniqueWithoutDiscordMessageInput | ListenerEventUpsertWithWhereUniqueWithoutDiscordMessageInput[]
    createMany?: ListenerEventCreateManyDiscordMessageInputEnvelope
    set?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    disconnect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    delete?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    connect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    update?: ListenerEventUpdateWithWhereUniqueWithoutDiscordMessageInput | ListenerEventUpdateWithWhereUniqueWithoutDiscordMessageInput[]
    updateMany?: ListenerEventUpdateManyWithWhereWithoutDiscordMessageInput | ListenerEventUpdateManyWithWhereWithoutDiscordMessageInput[]
    deleteMany?: ListenerEventScalarWhereInput | ListenerEventScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ListenerEventUncheckedUpdateManyWithoutDiscordMessageNestedInput = {
    create?: XOR<ListenerEventCreateWithoutDiscordMessageInput, ListenerEventUncheckedCreateWithoutDiscordMessageInput> | ListenerEventCreateWithoutDiscordMessageInput[] | ListenerEventUncheckedCreateWithoutDiscordMessageInput[]
    connectOrCreate?: ListenerEventCreateOrConnectWithoutDiscordMessageInput | ListenerEventCreateOrConnectWithoutDiscordMessageInput[]
    upsert?: ListenerEventUpsertWithWhereUniqueWithoutDiscordMessageInput | ListenerEventUpsertWithWhereUniqueWithoutDiscordMessageInput[]
    createMany?: ListenerEventCreateManyDiscordMessageInputEnvelope
    set?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    disconnect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    delete?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    connect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    update?: ListenerEventUpdateWithWhereUniqueWithoutDiscordMessageInput | ListenerEventUpdateWithWhereUniqueWithoutDiscordMessageInput[]
    updateMany?: ListenerEventUpdateManyWithWhereWithoutDiscordMessageInput | ListenerEventUpdateManyWithWhereWithoutDiscordMessageInput[]
    deleteMany?: ListenerEventScalarWhereInput | ListenerEventScalarWhereInput[]
  }

  export type DiscordMessageCreateNestedManyWithoutDiscordMessageTemplateInput = {
    create?: XOR<DiscordMessageCreateWithoutDiscordMessageTemplateInput, DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput> | DiscordMessageCreateWithoutDiscordMessageTemplateInput[] | DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput[]
    connectOrCreate?: DiscordMessageCreateOrConnectWithoutDiscordMessageTemplateInput | DiscordMessageCreateOrConnectWithoutDiscordMessageTemplateInput[]
    createMany?: DiscordMessageCreateManyDiscordMessageTemplateInputEnvelope
    connect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
  }

  export type DiscordMessageUncheckedCreateNestedManyWithoutDiscordMessageTemplateInput = {
    create?: XOR<DiscordMessageCreateWithoutDiscordMessageTemplateInput, DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput> | DiscordMessageCreateWithoutDiscordMessageTemplateInput[] | DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput[]
    connectOrCreate?: DiscordMessageCreateOrConnectWithoutDiscordMessageTemplateInput | DiscordMessageCreateOrConnectWithoutDiscordMessageTemplateInput[]
    createMany?: DiscordMessageCreateManyDiscordMessageTemplateInputEnvelope
    connect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
  }

  export type DiscordMessageUpdateManyWithoutDiscordMessageTemplateNestedInput = {
    create?: XOR<DiscordMessageCreateWithoutDiscordMessageTemplateInput, DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput> | DiscordMessageCreateWithoutDiscordMessageTemplateInput[] | DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput[]
    connectOrCreate?: DiscordMessageCreateOrConnectWithoutDiscordMessageTemplateInput | DiscordMessageCreateOrConnectWithoutDiscordMessageTemplateInput[]
    upsert?: DiscordMessageUpsertWithWhereUniqueWithoutDiscordMessageTemplateInput | DiscordMessageUpsertWithWhereUniqueWithoutDiscordMessageTemplateInput[]
    createMany?: DiscordMessageCreateManyDiscordMessageTemplateInputEnvelope
    set?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    disconnect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    delete?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    connect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    update?: DiscordMessageUpdateWithWhereUniqueWithoutDiscordMessageTemplateInput | DiscordMessageUpdateWithWhereUniqueWithoutDiscordMessageTemplateInput[]
    updateMany?: DiscordMessageUpdateManyWithWhereWithoutDiscordMessageTemplateInput | DiscordMessageUpdateManyWithWhereWithoutDiscordMessageTemplateInput[]
    deleteMany?: DiscordMessageScalarWhereInput | DiscordMessageScalarWhereInput[]
  }

  export type DiscordMessageUncheckedUpdateManyWithoutDiscordMessageTemplateNestedInput = {
    create?: XOR<DiscordMessageCreateWithoutDiscordMessageTemplateInput, DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput> | DiscordMessageCreateWithoutDiscordMessageTemplateInput[] | DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput[]
    connectOrCreate?: DiscordMessageCreateOrConnectWithoutDiscordMessageTemplateInput | DiscordMessageCreateOrConnectWithoutDiscordMessageTemplateInput[]
    upsert?: DiscordMessageUpsertWithWhereUniqueWithoutDiscordMessageTemplateInput | DiscordMessageUpsertWithWhereUniqueWithoutDiscordMessageTemplateInput[]
    createMany?: DiscordMessageCreateManyDiscordMessageTemplateInputEnvelope
    set?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    disconnect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    delete?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    connect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    update?: DiscordMessageUpdateWithWhereUniqueWithoutDiscordMessageTemplateInput | DiscordMessageUpdateWithWhereUniqueWithoutDiscordMessageTemplateInput[]
    updateMany?: DiscordMessageUpdateManyWithWhereWithoutDiscordMessageTemplateInput | DiscordMessageUpdateManyWithWhereWithoutDiscordMessageTemplateInput[]
    deleteMany?: DiscordMessageScalarWhereInput | DiscordMessageScalarWhereInput[]
  }

  export type DiscordMessageCreateNestedManyWithoutDiscordChannelWebhookInput = {
    create?: XOR<DiscordMessageCreateWithoutDiscordChannelWebhookInput, DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput> | DiscordMessageCreateWithoutDiscordChannelWebhookInput[] | DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput[]
    connectOrCreate?: DiscordMessageCreateOrConnectWithoutDiscordChannelWebhookInput | DiscordMessageCreateOrConnectWithoutDiscordChannelWebhookInput[]
    createMany?: DiscordMessageCreateManyDiscordChannelWebhookInputEnvelope
    connect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
  }

  export type ListenerEventSenderCreateNestedManyWithoutDiscordChannelWebhookInput = {
    create?: XOR<ListenerEventSenderCreateWithoutDiscordChannelWebhookInput, ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput> | ListenerEventSenderCreateWithoutDiscordChannelWebhookInput[] | ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput[]
    connectOrCreate?: ListenerEventSenderCreateOrConnectWithoutDiscordChannelWebhookInput | ListenerEventSenderCreateOrConnectWithoutDiscordChannelWebhookInput[]
    createMany?: ListenerEventSenderCreateManyDiscordChannelWebhookInputEnvelope
    connect?: ListenerEventSenderWhereUniqueInput | ListenerEventSenderWhereUniqueInput[]
  }

  export type DiscordMessageUncheckedCreateNestedManyWithoutDiscordChannelWebhookInput = {
    create?: XOR<DiscordMessageCreateWithoutDiscordChannelWebhookInput, DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput> | DiscordMessageCreateWithoutDiscordChannelWebhookInput[] | DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput[]
    connectOrCreate?: DiscordMessageCreateOrConnectWithoutDiscordChannelWebhookInput | DiscordMessageCreateOrConnectWithoutDiscordChannelWebhookInput[]
    createMany?: DiscordMessageCreateManyDiscordChannelWebhookInputEnvelope
    connect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
  }

  export type ListenerEventSenderUncheckedCreateNestedManyWithoutDiscordChannelWebhookInput = {
    create?: XOR<ListenerEventSenderCreateWithoutDiscordChannelWebhookInput, ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput> | ListenerEventSenderCreateWithoutDiscordChannelWebhookInput[] | ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput[]
    connectOrCreate?: ListenerEventSenderCreateOrConnectWithoutDiscordChannelWebhookInput | ListenerEventSenderCreateOrConnectWithoutDiscordChannelWebhookInput[]
    createMany?: ListenerEventSenderCreateManyDiscordChannelWebhookInputEnvelope
    connect?: ListenerEventSenderWhereUniqueInput | ListenerEventSenderWhereUniqueInput[]
  }

  export type DiscordMessageUpdateManyWithoutDiscordChannelWebhookNestedInput = {
    create?: XOR<DiscordMessageCreateWithoutDiscordChannelWebhookInput, DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput> | DiscordMessageCreateWithoutDiscordChannelWebhookInput[] | DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput[]
    connectOrCreate?: DiscordMessageCreateOrConnectWithoutDiscordChannelWebhookInput | DiscordMessageCreateOrConnectWithoutDiscordChannelWebhookInput[]
    upsert?: DiscordMessageUpsertWithWhereUniqueWithoutDiscordChannelWebhookInput | DiscordMessageUpsertWithWhereUniqueWithoutDiscordChannelWebhookInput[]
    createMany?: DiscordMessageCreateManyDiscordChannelWebhookInputEnvelope
    set?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    disconnect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    delete?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    connect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    update?: DiscordMessageUpdateWithWhereUniqueWithoutDiscordChannelWebhookInput | DiscordMessageUpdateWithWhereUniqueWithoutDiscordChannelWebhookInput[]
    updateMany?: DiscordMessageUpdateManyWithWhereWithoutDiscordChannelWebhookInput | DiscordMessageUpdateManyWithWhereWithoutDiscordChannelWebhookInput[]
    deleteMany?: DiscordMessageScalarWhereInput | DiscordMessageScalarWhereInput[]
  }

  export type ListenerEventSenderUpdateManyWithoutDiscordChannelWebhookNestedInput = {
    create?: XOR<ListenerEventSenderCreateWithoutDiscordChannelWebhookInput, ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput> | ListenerEventSenderCreateWithoutDiscordChannelWebhookInput[] | ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput[]
    connectOrCreate?: ListenerEventSenderCreateOrConnectWithoutDiscordChannelWebhookInput | ListenerEventSenderCreateOrConnectWithoutDiscordChannelWebhookInput[]
    upsert?: ListenerEventSenderUpsertWithWhereUniqueWithoutDiscordChannelWebhookInput | ListenerEventSenderUpsertWithWhereUniqueWithoutDiscordChannelWebhookInput[]
    createMany?: ListenerEventSenderCreateManyDiscordChannelWebhookInputEnvelope
    set?: ListenerEventSenderWhereUniqueInput | ListenerEventSenderWhereUniqueInput[]
    disconnect?: ListenerEventSenderWhereUniqueInput | ListenerEventSenderWhereUniqueInput[]
    delete?: ListenerEventSenderWhereUniqueInput | ListenerEventSenderWhereUniqueInput[]
    connect?: ListenerEventSenderWhereUniqueInput | ListenerEventSenderWhereUniqueInput[]
    update?: ListenerEventSenderUpdateWithWhereUniqueWithoutDiscordChannelWebhookInput | ListenerEventSenderUpdateWithWhereUniqueWithoutDiscordChannelWebhookInput[]
    updateMany?: ListenerEventSenderUpdateManyWithWhereWithoutDiscordChannelWebhookInput | ListenerEventSenderUpdateManyWithWhereWithoutDiscordChannelWebhookInput[]
    deleteMany?: ListenerEventSenderScalarWhereInput | ListenerEventSenderScalarWhereInput[]
  }

  export type DiscordMessageUncheckedUpdateManyWithoutDiscordChannelWebhookNestedInput = {
    create?: XOR<DiscordMessageCreateWithoutDiscordChannelWebhookInput, DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput> | DiscordMessageCreateWithoutDiscordChannelWebhookInput[] | DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput[]
    connectOrCreate?: DiscordMessageCreateOrConnectWithoutDiscordChannelWebhookInput | DiscordMessageCreateOrConnectWithoutDiscordChannelWebhookInput[]
    upsert?: DiscordMessageUpsertWithWhereUniqueWithoutDiscordChannelWebhookInput | DiscordMessageUpsertWithWhereUniqueWithoutDiscordChannelWebhookInput[]
    createMany?: DiscordMessageCreateManyDiscordChannelWebhookInputEnvelope
    set?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    disconnect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    delete?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    connect?: DiscordMessageWhereUniqueInput | DiscordMessageWhereUniqueInput[]
    update?: DiscordMessageUpdateWithWhereUniqueWithoutDiscordChannelWebhookInput | DiscordMessageUpdateWithWhereUniqueWithoutDiscordChannelWebhookInput[]
    updateMany?: DiscordMessageUpdateManyWithWhereWithoutDiscordChannelWebhookInput | DiscordMessageUpdateManyWithWhereWithoutDiscordChannelWebhookInput[]
    deleteMany?: DiscordMessageScalarWhereInput | DiscordMessageScalarWhereInput[]
  }

  export type ListenerEventSenderUncheckedUpdateManyWithoutDiscordChannelWebhookNestedInput = {
    create?: XOR<ListenerEventSenderCreateWithoutDiscordChannelWebhookInput, ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput> | ListenerEventSenderCreateWithoutDiscordChannelWebhookInput[] | ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput[]
    connectOrCreate?: ListenerEventSenderCreateOrConnectWithoutDiscordChannelWebhookInput | ListenerEventSenderCreateOrConnectWithoutDiscordChannelWebhookInput[]
    upsert?: ListenerEventSenderUpsertWithWhereUniqueWithoutDiscordChannelWebhookInput | ListenerEventSenderUpsertWithWhereUniqueWithoutDiscordChannelWebhookInput[]
    createMany?: ListenerEventSenderCreateManyDiscordChannelWebhookInputEnvelope
    set?: ListenerEventSenderWhereUniqueInput | ListenerEventSenderWhereUniqueInput[]
    disconnect?: ListenerEventSenderWhereUniqueInput | ListenerEventSenderWhereUniqueInput[]
    delete?: ListenerEventSenderWhereUniqueInput | ListenerEventSenderWhereUniqueInput[]
    connect?: ListenerEventSenderWhereUniqueInput | ListenerEventSenderWhereUniqueInput[]
    update?: ListenerEventSenderUpdateWithWhereUniqueWithoutDiscordChannelWebhookInput | ListenerEventSenderUpdateWithWhereUniqueWithoutDiscordChannelWebhookInput[]
    updateMany?: ListenerEventSenderUpdateManyWithWhereWithoutDiscordChannelWebhookInput | ListenerEventSenderUpdateManyWithWhereWithoutDiscordChannelWebhookInput[]
    deleteMany?: ListenerEventSenderScalarWhereInput | ListenerEventSenderScalarWhereInput[]
  }

  export type DiscordMessageCreateNestedOneWithoutListenerEventsInput = {
    create?: XOR<DiscordMessageCreateWithoutListenerEventsInput, DiscordMessageUncheckedCreateWithoutListenerEventsInput>
    connectOrCreate?: DiscordMessageCreateOrConnectWithoutListenerEventsInput
    connect?: DiscordMessageWhereUniqueInput
  }

  export type ListenerEventSenderCreateNestedOneWithoutListenerEventsInput = {
    create?: XOR<ListenerEventSenderCreateWithoutListenerEventsInput, ListenerEventSenderUncheckedCreateWithoutListenerEventsInput>
    connectOrCreate?: ListenerEventSenderCreateOrConnectWithoutListenerEventsInput
    connect?: ListenerEventSenderWhereUniqueInput
  }

  export type EnumListenerEventStatusFieldUpdateOperationsInput = {
    set?: $Enums.ListenerEventStatus
  }

  export type DiscordMessageUpdateOneWithoutListenerEventsNestedInput = {
    create?: XOR<DiscordMessageCreateWithoutListenerEventsInput, DiscordMessageUncheckedCreateWithoutListenerEventsInput>
    connectOrCreate?: DiscordMessageCreateOrConnectWithoutListenerEventsInput
    upsert?: DiscordMessageUpsertWithoutListenerEventsInput
    disconnect?: DiscordMessageWhereInput | boolean
    delete?: DiscordMessageWhereInput | boolean
    connect?: DiscordMessageWhereUniqueInput
    update?: XOR<XOR<DiscordMessageUpdateToOneWithWhereWithoutListenerEventsInput, DiscordMessageUpdateWithoutListenerEventsInput>, DiscordMessageUncheckedUpdateWithoutListenerEventsInput>
  }

  export type ListenerEventSenderUpdateOneRequiredWithoutListenerEventsNestedInput = {
    create?: XOR<ListenerEventSenderCreateWithoutListenerEventsInput, ListenerEventSenderUncheckedCreateWithoutListenerEventsInput>
    connectOrCreate?: ListenerEventSenderCreateOrConnectWithoutListenerEventsInput
    upsert?: ListenerEventSenderUpsertWithoutListenerEventsInput
    connect?: ListenerEventSenderWhereUniqueInput
    update?: XOR<XOR<ListenerEventSenderUpdateToOneWithWhereWithoutListenerEventsInput, ListenerEventSenderUpdateWithoutListenerEventsInput>, ListenerEventSenderUncheckedUpdateWithoutListenerEventsInput>
  }

  export type ListenerEventCreateNestedManyWithoutSenderInput = {
    create?: XOR<ListenerEventCreateWithoutSenderInput, ListenerEventUncheckedCreateWithoutSenderInput> | ListenerEventCreateWithoutSenderInput[] | ListenerEventUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: ListenerEventCreateOrConnectWithoutSenderInput | ListenerEventCreateOrConnectWithoutSenderInput[]
    createMany?: ListenerEventCreateManySenderInputEnvelope
    connect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
  }

  export type DiscordChannelWebhookCreateNestedOneWithoutListenerEventSendersInput = {
    create?: XOR<DiscordChannelWebhookCreateWithoutListenerEventSendersInput, DiscordChannelWebhookUncheckedCreateWithoutListenerEventSendersInput>
    connectOrCreate?: DiscordChannelWebhookCreateOrConnectWithoutListenerEventSendersInput
    connect?: DiscordChannelWebhookWhereUniqueInput
  }

  export type ListenerEventUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<ListenerEventCreateWithoutSenderInput, ListenerEventUncheckedCreateWithoutSenderInput> | ListenerEventCreateWithoutSenderInput[] | ListenerEventUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: ListenerEventCreateOrConnectWithoutSenderInput | ListenerEventCreateOrConnectWithoutSenderInput[]
    createMany?: ListenerEventCreateManySenderInputEnvelope
    connect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
  }

  export type ListenerEventUpdateManyWithoutSenderNestedInput = {
    create?: XOR<ListenerEventCreateWithoutSenderInput, ListenerEventUncheckedCreateWithoutSenderInput> | ListenerEventCreateWithoutSenderInput[] | ListenerEventUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: ListenerEventCreateOrConnectWithoutSenderInput | ListenerEventCreateOrConnectWithoutSenderInput[]
    upsert?: ListenerEventUpsertWithWhereUniqueWithoutSenderInput | ListenerEventUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: ListenerEventCreateManySenderInputEnvelope
    set?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    disconnect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    delete?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    connect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    update?: ListenerEventUpdateWithWhereUniqueWithoutSenderInput | ListenerEventUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: ListenerEventUpdateManyWithWhereWithoutSenderInput | ListenerEventUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: ListenerEventScalarWhereInput | ListenerEventScalarWhereInput[]
  }

  export type DiscordChannelWebhookUpdateOneWithoutListenerEventSendersNestedInput = {
    create?: XOR<DiscordChannelWebhookCreateWithoutListenerEventSendersInput, DiscordChannelWebhookUncheckedCreateWithoutListenerEventSendersInput>
    connectOrCreate?: DiscordChannelWebhookCreateOrConnectWithoutListenerEventSendersInput
    upsert?: DiscordChannelWebhookUpsertWithoutListenerEventSendersInput
    disconnect?: DiscordChannelWebhookWhereInput | boolean
    delete?: DiscordChannelWebhookWhereInput | boolean
    connect?: DiscordChannelWebhookWhereUniqueInput
    update?: XOR<XOR<DiscordChannelWebhookUpdateToOneWithWhereWithoutListenerEventSendersInput, DiscordChannelWebhookUpdateWithoutListenerEventSendersInput>, DiscordChannelWebhookUncheckedUpdateWithoutListenerEventSendersInput>
  }

  export type ListenerEventUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<ListenerEventCreateWithoutSenderInput, ListenerEventUncheckedCreateWithoutSenderInput> | ListenerEventCreateWithoutSenderInput[] | ListenerEventUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: ListenerEventCreateOrConnectWithoutSenderInput | ListenerEventCreateOrConnectWithoutSenderInput[]
    upsert?: ListenerEventUpsertWithWhereUniqueWithoutSenderInput | ListenerEventUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: ListenerEventCreateManySenderInputEnvelope
    set?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    disconnect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    delete?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    connect?: ListenerEventWhereUniqueInput | ListenerEventWhereUniqueInput[]
    update?: ListenerEventUpdateWithWhereUniqueWithoutSenderInput | ListenerEventUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: ListenerEventUpdateManyWithWhereWithoutSenderInput | ListenerEventUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: ListenerEventScalarWhereInput | ListenerEventScalarWhereInput[]
  }

  export type RoleCreateNestedManyWithoutUsersInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput> | RoleCreateWithoutUsersInput[] | RoleUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput | RoleCreateOrConnectWithoutUsersInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type UserPrivacySettingsCreateNestedManyWithoutUserInput = {
    create?: XOR<UserPrivacySettingsCreateWithoutUserInput, UserPrivacySettingsUncheckedCreateWithoutUserInput> | UserPrivacySettingsCreateWithoutUserInput[] | UserPrivacySettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserPrivacySettingsCreateOrConnectWithoutUserInput | UserPrivacySettingsCreateOrConnectWithoutUserInput[]
    createMany?: UserPrivacySettingsCreateManyUserInputEnvelope
    connect?: UserPrivacySettingsWhereUniqueInput | UserPrivacySettingsWhereUniqueInput[]
  }

  export type MemberCreateNestedManyWithoutUserInput = {
    create?: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput> | MemberCreateWithoutUserInput[] | MemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutUserInput | MemberCreateOrConnectWithoutUserInput[]
    createMany?: MemberCreateManyUserInputEnvelope
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
  }

  export type InviteCodeCreateNestedOneWithoutUserInput = {
    create?: XOR<InviteCodeCreateWithoutUserInput, InviteCodeUncheckedCreateWithoutUserInput>
    connectOrCreate?: InviteCodeCreateOrConnectWithoutUserInput
    connect?: InviteCodeWhereUniqueInput
  }

  export type RoleUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput> | RoleCreateWithoutUsersInput[] | RoleUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput | RoleCreateOrConnectWithoutUsersInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type UserPrivacySettingsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserPrivacySettingsCreateWithoutUserInput, UserPrivacySettingsUncheckedCreateWithoutUserInput> | UserPrivacySettingsCreateWithoutUserInput[] | UserPrivacySettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserPrivacySettingsCreateOrConnectWithoutUserInput | UserPrivacySettingsCreateOrConnectWithoutUserInput[]
    createMany?: UserPrivacySettingsCreateManyUserInputEnvelope
    connect?: UserPrivacySettingsWhereUniqueInput | UserPrivacySettingsWhereUniqueInput[]
  }

  export type MemberUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput> | MemberCreateWithoutUserInput[] | MemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutUserInput | MemberCreateOrConnectWithoutUserInput[]
    createMany?: MemberCreateManyUserInputEnvelope
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
  }

  export type RoleUpdateManyWithoutUsersNestedInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput> | RoleCreateWithoutUsersInput[] | RoleUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput | RoleCreateOrConnectWithoutUsersInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUsersInput | RoleUpsertWithWhereUniqueWithoutUsersInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUsersInput | RoleUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUsersInput | RoleUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type UserPrivacySettingsUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserPrivacySettingsCreateWithoutUserInput, UserPrivacySettingsUncheckedCreateWithoutUserInput> | UserPrivacySettingsCreateWithoutUserInput[] | UserPrivacySettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserPrivacySettingsCreateOrConnectWithoutUserInput | UserPrivacySettingsCreateOrConnectWithoutUserInput[]
    upsert?: UserPrivacySettingsUpsertWithWhereUniqueWithoutUserInput | UserPrivacySettingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserPrivacySettingsCreateManyUserInputEnvelope
    set?: UserPrivacySettingsWhereUniqueInput | UserPrivacySettingsWhereUniqueInput[]
    disconnect?: UserPrivacySettingsWhereUniqueInput | UserPrivacySettingsWhereUniqueInput[]
    delete?: UserPrivacySettingsWhereUniqueInput | UserPrivacySettingsWhereUniqueInput[]
    connect?: UserPrivacySettingsWhereUniqueInput | UserPrivacySettingsWhereUniqueInput[]
    update?: UserPrivacySettingsUpdateWithWhereUniqueWithoutUserInput | UserPrivacySettingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserPrivacySettingsUpdateManyWithWhereWithoutUserInput | UserPrivacySettingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserPrivacySettingsScalarWhereInput | UserPrivacySettingsScalarWhereInput[]
  }

  export type MemberUpdateManyWithoutUserNestedInput = {
    create?: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput> | MemberCreateWithoutUserInput[] | MemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutUserInput | MemberCreateOrConnectWithoutUserInput[]
    upsert?: MemberUpsertWithWhereUniqueWithoutUserInput | MemberUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MemberCreateManyUserInputEnvelope
    set?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    disconnect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    delete?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    update?: MemberUpdateWithWhereUniqueWithoutUserInput | MemberUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MemberUpdateManyWithWhereWithoutUserInput | MemberUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MemberScalarWhereInput | MemberScalarWhereInput[]
  }

  export type InviteCodeUpdateOneWithoutUserNestedInput = {
    create?: XOR<InviteCodeCreateWithoutUserInput, InviteCodeUncheckedCreateWithoutUserInput>
    connectOrCreate?: InviteCodeCreateOrConnectWithoutUserInput
    upsert?: InviteCodeUpsertWithoutUserInput
    disconnect?: InviteCodeWhereInput | boolean
    delete?: InviteCodeWhereInput | boolean
    connect?: InviteCodeWhereUniqueInput
    update?: XOR<XOR<InviteCodeUpdateToOneWithWhereWithoutUserInput, InviteCodeUpdateWithoutUserInput>, InviteCodeUncheckedUpdateWithoutUserInput>
  }

  export type RoleUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput> | RoleCreateWithoutUsersInput[] | RoleUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput | RoleCreateOrConnectWithoutUsersInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUsersInput | RoleUpsertWithWhereUniqueWithoutUsersInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUsersInput | RoleUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUsersInput | RoleUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type UserPrivacySettingsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserPrivacySettingsCreateWithoutUserInput, UserPrivacySettingsUncheckedCreateWithoutUserInput> | UserPrivacySettingsCreateWithoutUserInput[] | UserPrivacySettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserPrivacySettingsCreateOrConnectWithoutUserInput | UserPrivacySettingsCreateOrConnectWithoutUserInput[]
    upsert?: UserPrivacySettingsUpsertWithWhereUniqueWithoutUserInput | UserPrivacySettingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserPrivacySettingsCreateManyUserInputEnvelope
    set?: UserPrivacySettingsWhereUniqueInput | UserPrivacySettingsWhereUniqueInput[]
    disconnect?: UserPrivacySettingsWhereUniqueInput | UserPrivacySettingsWhereUniqueInput[]
    delete?: UserPrivacySettingsWhereUniqueInput | UserPrivacySettingsWhereUniqueInput[]
    connect?: UserPrivacySettingsWhereUniqueInput | UserPrivacySettingsWhereUniqueInput[]
    update?: UserPrivacySettingsUpdateWithWhereUniqueWithoutUserInput | UserPrivacySettingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserPrivacySettingsUpdateManyWithWhereWithoutUserInput | UserPrivacySettingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserPrivacySettingsScalarWhereInput | UserPrivacySettingsScalarWhereInput[]
  }

  export type MemberUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput> | MemberCreateWithoutUserInput[] | MemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutUserInput | MemberCreateOrConnectWithoutUserInput[]
    upsert?: MemberUpsertWithWhereUniqueWithoutUserInput | MemberUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MemberCreateManyUserInputEnvelope
    set?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    disconnect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    delete?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    update?: MemberUpdateWithWhereUniqueWithoutUserInput | MemberUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MemberUpdateManyWithWhereWithoutUserInput | MemberUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MemberScalarWhereInput | MemberScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutPrivacySettingsInput = {
    create?: XOR<UserCreateWithoutPrivacySettingsInput, UserUncheckedCreateWithoutPrivacySettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPrivacySettingsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutPrivacySettingsNestedInput = {
    create?: XOR<UserCreateWithoutPrivacySettingsInput, UserUncheckedCreateWithoutPrivacySettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPrivacySettingsInput
    upsert?: UserUpsertWithoutPrivacySettingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPrivacySettingsInput, UserUpdateWithoutPrivacySettingsInput>, UserUncheckedUpdateWithoutPrivacySettingsInput>
  }

  export type PermissionCreateNestedManyWithoutRolesInput = {
    create?: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput> | PermissionCreateWithoutRolesInput[] | PermissionUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRolesInput | PermissionCreateOrConnectWithoutRolesInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutRolesInput = {
    create?: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput> | UserCreateWithoutRolesInput[] | UserUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRolesInput | UserCreateOrConnectWithoutRolesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type VirtualAirlineRoleCreateNestedOneWithoutRoleInput = {
    create?: XOR<VirtualAirlineRoleCreateWithoutRoleInput, VirtualAirlineRoleUncheckedCreateWithoutRoleInput>
    connectOrCreate?: VirtualAirlineRoleCreateOrConnectWithoutRoleInput
    connect?: VirtualAirlineRoleWhereUniqueInput
  }

  export type PermissionUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput> | PermissionCreateWithoutRolesInput[] | PermissionUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRolesInput | PermissionCreateOrConnectWithoutRolesInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput> | UserCreateWithoutRolesInput[] | UserUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRolesInput | UserCreateOrConnectWithoutRolesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type PermissionUpdateManyWithoutRolesNestedInput = {
    create?: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput> | PermissionCreateWithoutRolesInput[] | PermissionUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRolesInput | PermissionCreateOrConnectWithoutRolesInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutRolesInput | PermissionUpsertWithWhereUniqueWithoutRolesInput[]
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutRolesInput | PermissionUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutRolesInput | PermissionUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type UserUpdateManyWithoutRolesNestedInput = {
    create?: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput> | UserCreateWithoutRolesInput[] | UserUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRolesInput | UserCreateOrConnectWithoutRolesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRolesInput | UserUpsertWithWhereUniqueWithoutRolesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRolesInput | UserUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRolesInput | UserUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type VirtualAirlineRoleUpdateOneWithoutRoleNestedInput = {
    create?: XOR<VirtualAirlineRoleCreateWithoutRoleInput, VirtualAirlineRoleUncheckedCreateWithoutRoleInput>
    connectOrCreate?: VirtualAirlineRoleCreateOrConnectWithoutRoleInput
    upsert?: VirtualAirlineRoleUpsertWithoutRoleInput
    disconnect?: VirtualAirlineRoleWhereInput | boolean
    delete?: VirtualAirlineRoleWhereInput | boolean
    connect?: VirtualAirlineRoleWhereUniqueInput
    update?: XOR<XOR<VirtualAirlineRoleUpdateToOneWithWhereWithoutRoleInput, VirtualAirlineRoleUpdateWithoutRoleInput>, VirtualAirlineRoleUncheckedUpdateWithoutRoleInput>
  }

  export type PermissionUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput> | PermissionCreateWithoutRolesInput[] | PermissionUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRolesInput | PermissionCreateOrConnectWithoutRolesInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutRolesInput | PermissionUpsertWithWhereUniqueWithoutRolesInput[]
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutRolesInput | PermissionUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutRolesInput | PermissionUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput> | UserCreateWithoutRolesInput[] | UserUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRolesInput | UserCreateOrConnectWithoutRolesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRolesInput | UserUpsertWithWhereUniqueWithoutRolesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRolesInput | UserUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRolesInput | UserUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type RoleCreateNestedManyWithoutPermissionsInput = {
    create?: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput> | RoleCreateWithoutPermissionsInput[] | RoleUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionsInput | RoleCreateOrConnectWithoutPermissionsInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedManyWithoutPermissionsInput = {
    create?: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput> | RoleCreateWithoutPermissionsInput[] | RoleUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionsInput | RoleCreateOrConnectWithoutPermissionsInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleUpdateManyWithoutPermissionsNestedInput = {
    create?: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput> | RoleCreateWithoutPermissionsInput[] | RoleUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionsInput | RoleCreateOrConnectWithoutPermissionsInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutPermissionsInput | RoleUpsertWithWhereUniqueWithoutPermissionsInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutPermissionsInput | RoleUpdateWithWhereUniqueWithoutPermissionsInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutPermissionsInput | RoleUpdateManyWithWhereWithoutPermissionsInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type RoleUncheckedUpdateManyWithoutPermissionsNestedInput = {
    create?: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput> | RoleCreateWithoutPermissionsInput[] | RoleUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionsInput | RoleCreateOrConnectWithoutPermissionsInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutPermissionsInput | RoleUpsertWithWhereUniqueWithoutPermissionsInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutPermissionsInput | RoleUpdateWithWhereUniqueWithoutPermissionsInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutPermissionsInput | RoleUpdateManyWithWhereWithoutPermissionsInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type AircraftCreateNestedOneWithoutLiveriesInput = {
    create?: XOR<AircraftCreateWithoutLiveriesInput, AircraftUncheckedCreateWithoutLiveriesInput>
    connectOrCreate?: AircraftCreateOrConnectWithoutLiveriesInput
    connect?: AircraftWhereUniqueInput
  }

  export type LiveryImageCreateNestedManyWithoutLiveryInput = {
    create?: XOR<LiveryImageCreateWithoutLiveryInput, LiveryImageUncheckedCreateWithoutLiveryInput> | LiveryImageCreateWithoutLiveryInput[] | LiveryImageUncheckedCreateWithoutLiveryInput[]
    connectOrCreate?: LiveryImageCreateOrConnectWithoutLiveryInput | LiveryImageCreateOrConnectWithoutLiveryInput[]
    createMany?: LiveryImageCreateManyLiveryInputEnvelope
    connect?: LiveryImageWhereUniqueInput | LiveryImageWhereUniqueInput[]
  }

  export type LiveryFileCreateNestedManyWithoutLiveryInput = {
    create?: XOR<LiveryFileCreateWithoutLiveryInput, LiveryFileUncheckedCreateWithoutLiveryInput> | LiveryFileCreateWithoutLiveryInput[] | LiveryFileUncheckedCreateWithoutLiveryInput[]
    connectOrCreate?: LiveryFileCreateOrConnectWithoutLiveryInput | LiveryFileCreateOrConnectWithoutLiveryInput[]
    createMany?: LiveryFileCreateManyLiveryInputEnvelope
    connect?: LiveryFileWhereUniqueInput | LiveryFileWhereUniqueInput[]
  }

  export type LiveryImageUncheckedCreateNestedManyWithoutLiveryInput = {
    create?: XOR<LiveryImageCreateWithoutLiveryInput, LiveryImageUncheckedCreateWithoutLiveryInput> | LiveryImageCreateWithoutLiveryInput[] | LiveryImageUncheckedCreateWithoutLiveryInput[]
    connectOrCreate?: LiveryImageCreateOrConnectWithoutLiveryInput | LiveryImageCreateOrConnectWithoutLiveryInput[]
    createMany?: LiveryImageCreateManyLiveryInputEnvelope
    connect?: LiveryImageWhereUniqueInput | LiveryImageWhereUniqueInput[]
  }

  export type LiveryFileUncheckedCreateNestedManyWithoutLiveryInput = {
    create?: XOR<LiveryFileCreateWithoutLiveryInput, LiveryFileUncheckedCreateWithoutLiveryInput> | LiveryFileCreateWithoutLiveryInput[] | LiveryFileUncheckedCreateWithoutLiveryInput[]
    connectOrCreate?: LiveryFileCreateOrConnectWithoutLiveryInput | LiveryFileCreateOrConnectWithoutLiveryInput[]
    createMany?: LiveryFileCreateManyLiveryInputEnvelope
    connect?: LiveryFileWhereUniqueInput | LiveryFileWhereUniqueInput[]
  }

  export type AircraftUpdateOneWithoutLiveriesNestedInput = {
    create?: XOR<AircraftCreateWithoutLiveriesInput, AircraftUncheckedCreateWithoutLiveriesInput>
    connectOrCreate?: AircraftCreateOrConnectWithoutLiveriesInput
    upsert?: AircraftUpsertWithoutLiveriesInput
    disconnect?: AircraftWhereInput | boolean
    delete?: AircraftWhereInput | boolean
    connect?: AircraftWhereUniqueInput
    update?: XOR<XOR<AircraftUpdateToOneWithWhereWithoutLiveriesInput, AircraftUpdateWithoutLiveriesInput>, AircraftUncheckedUpdateWithoutLiveriesInput>
  }

  export type LiveryImageUpdateManyWithoutLiveryNestedInput = {
    create?: XOR<LiveryImageCreateWithoutLiveryInput, LiveryImageUncheckedCreateWithoutLiveryInput> | LiveryImageCreateWithoutLiveryInput[] | LiveryImageUncheckedCreateWithoutLiveryInput[]
    connectOrCreate?: LiveryImageCreateOrConnectWithoutLiveryInput | LiveryImageCreateOrConnectWithoutLiveryInput[]
    upsert?: LiveryImageUpsertWithWhereUniqueWithoutLiveryInput | LiveryImageUpsertWithWhereUniqueWithoutLiveryInput[]
    createMany?: LiveryImageCreateManyLiveryInputEnvelope
    set?: LiveryImageWhereUniqueInput | LiveryImageWhereUniqueInput[]
    disconnect?: LiveryImageWhereUniqueInput | LiveryImageWhereUniqueInput[]
    delete?: LiveryImageWhereUniqueInput | LiveryImageWhereUniqueInput[]
    connect?: LiveryImageWhereUniqueInput | LiveryImageWhereUniqueInput[]
    update?: LiveryImageUpdateWithWhereUniqueWithoutLiveryInput | LiveryImageUpdateWithWhereUniqueWithoutLiveryInput[]
    updateMany?: LiveryImageUpdateManyWithWhereWithoutLiveryInput | LiveryImageUpdateManyWithWhereWithoutLiveryInput[]
    deleteMany?: LiveryImageScalarWhereInput | LiveryImageScalarWhereInput[]
  }

  export type LiveryFileUpdateManyWithoutLiveryNestedInput = {
    create?: XOR<LiveryFileCreateWithoutLiveryInput, LiveryFileUncheckedCreateWithoutLiveryInput> | LiveryFileCreateWithoutLiveryInput[] | LiveryFileUncheckedCreateWithoutLiveryInput[]
    connectOrCreate?: LiveryFileCreateOrConnectWithoutLiveryInput | LiveryFileCreateOrConnectWithoutLiveryInput[]
    upsert?: LiveryFileUpsertWithWhereUniqueWithoutLiveryInput | LiveryFileUpsertWithWhereUniqueWithoutLiveryInput[]
    createMany?: LiveryFileCreateManyLiveryInputEnvelope
    set?: LiveryFileWhereUniqueInput | LiveryFileWhereUniqueInput[]
    disconnect?: LiveryFileWhereUniqueInput | LiveryFileWhereUniqueInput[]
    delete?: LiveryFileWhereUniqueInput | LiveryFileWhereUniqueInput[]
    connect?: LiveryFileWhereUniqueInput | LiveryFileWhereUniqueInput[]
    update?: LiveryFileUpdateWithWhereUniqueWithoutLiveryInput | LiveryFileUpdateWithWhereUniqueWithoutLiveryInput[]
    updateMany?: LiveryFileUpdateManyWithWhereWithoutLiveryInput | LiveryFileUpdateManyWithWhereWithoutLiveryInput[]
    deleteMany?: LiveryFileScalarWhereInput | LiveryFileScalarWhereInput[]
  }

  export type LiveryImageUncheckedUpdateManyWithoutLiveryNestedInput = {
    create?: XOR<LiveryImageCreateWithoutLiveryInput, LiveryImageUncheckedCreateWithoutLiveryInput> | LiveryImageCreateWithoutLiveryInput[] | LiveryImageUncheckedCreateWithoutLiveryInput[]
    connectOrCreate?: LiveryImageCreateOrConnectWithoutLiveryInput | LiveryImageCreateOrConnectWithoutLiveryInput[]
    upsert?: LiveryImageUpsertWithWhereUniqueWithoutLiveryInput | LiveryImageUpsertWithWhereUniqueWithoutLiveryInput[]
    createMany?: LiveryImageCreateManyLiveryInputEnvelope
    set?: LiveryImageWhereUniqueInput | LiveryImageWhereUniqueInput[]
    disconnect?: LiveryImageWhereUniqueInput | LiveryImageWhereUniqueInput[]
    delete?: LiveryImageWhereUniqueInput | LiveryImageWhereUniqueInput[]
    connect?: LiveryImageWhereUniqueInput | LiveryImageWhereUniqueInput[]
    update?: LiveryImageUpdateWithWhereUniqueWithoutLiveryInput | LiveryImageUpdateWithWhereUniqueWithoutLiveryInput[]
    updateMany?: LiveryImageUpdateManyWithWhereWithoutLiveryInput | LiveryImageUpdateManyWithWhereWithoutLiveryInput[]
    deleteMany?: LiveryImageScalarWhereInput | LiveryImageScalarWhereInput[]
  }

  export type LiveryFileUncheckedUpdateManyWithoutLiveryNestedInput = {
    create?: XOR<LiveryFileCreateWithoutLiveryInput, LiveryFileUncheckedCreateWithoutLiveryInput> | LiveryFileCreateWithoutLiveryInput[] | LiveryFileUncheckedCreateWithoutLiveryInput[]
    connectOrCreate?: LiveryFileCreateOrConnectWithoutLiveryInput | LiveryFileCreateOrConnectWithoutLiveryInput[]
    upsert?: LiveryFileUpsertWithWhereUniqueWithoutLiveryInput | LiveryFileUpsertWithWhereUniqueWithoutLiveryInput[]
    createMany?: LiveryFileCreateManyLiveryInputEnvelope
    set?: LiveryFileWhereUniqueInput | LiveryFileWhereUniqueInput[]
    disconnect?: LiveryFileWhereUniqueInput | LiveryFileWhereUniqueInput[]
    delete?: LiveryFileWhereUniqueInput | LiveryFileWhereUniqueInput[]
    connect?: LiveryFileWhereUniqueInput | LiveryFileWhereUniqueInput[]
    update?: LiveryFileUpdateWithWhereUniqueWithoutLiveryInput | LiveryFileUpdateWithWhereUniqueWithoutLiveryInput[]
    updateMany?: LiveryFileUpdateManyWithWhereWithoutLiveryInput | LiveryFileUpdateManyWithWhereWithoutLiveryInput[]
    deleteMany?: LiveryFileScalarWhereInput | LiveryFileScalarWhereInput[]
  }

  export type LiveryCreateNestedOneWithoutImagesInput = {
    create?: XOR<LiveryCreateWithoutImagesInput, LiveryUncheckedCreateWithoutImagesInput>
    connectOrCreate?: LiveryCreateOrConnectWithoutImagesInput
    connect?: LiveryWhereUniqueInput
  }

  export type LiveryUpdateOneRequiredWithoutImagesNestedInput = {
    create?: XOR<LiveryCreateWithoutImagesInput, LiveryUncheckedCreateWithoutImagesInput>
    connectOrCreate?: LiveryCreateOrConnectWithoutImagesInput
    upsert?: LiveryUpsertWithoutImagesInput
    connect?: LiveryWhereUniqueInput
    update?: XOR<XOR<LiveryUpdateToOneWithWhereWithoutImagesInput, LiveryUpdateWithoutImagesInput>, LiveryUncheckedUpdateWithoutImagesInput>
  }

  export type LiveryCreateNestedOneWithoutFilesInput = {
    create?: XOR<LiveryCreateWithoutFilesInput, LiveryUncheckedCreateWithoutFilesInput>
    connectOrCreate?: LiveryCreateOrConnectWithoutFilesInput
    connect?: LiveryWhereUniqueInput
  }

  export type LiveryUpdateOneRequiredWithoutFilesNestedInput = {
    create?: XOR<LiveryCreateWithoutFilesInput, LiveryUncheckedCreateWithoutFilesInput>
    connectOrCreate?: LiveryCreateOrConnectWithoutFilesInput
    upsert?: LiveryUpsertWithoutFilesInput
    connect?: LiveryWhereUniqueInput
    update?: XOR<XOR<LiveryUpdateToOneWithWhereWithoutFilesInput, LiveryUpdateWithoutFilesInput>, LiveryUncheckedUpdateWithoutFilesInput>
  }

  export type WorldCreateNestedOneWithoutVirtualAirlinesInput = {
    create?: XOR<WorldCreateWithoutVirtualAirlinesInput, WorldUncheckedCreateWithoutVirtualAirlinesInput>
    connectOrCreate?: WorldCreateOrConnectWithoutVirtualAirlinesInput
    connect?: WorldWhereUniqueInput
  }

  export type VirtualAirlineRoleCreateNestedManyWithoutVirtualAirlineInput = {
    create?: XOR<VirtualAirlineRoleCreateWithoutVirtualAirlineInput, VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput> | VirtualAirlineRoleCreateWithoutVirtualAirlineInput[] | VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: VirtualAirlineRoleCreateOrConnectWithoutVirtualAirlineInput | VirtualAirlineRoleCreateOrConnectWithoutVirtualAirlineInput[]
    createMany?: VirtualAirlineRoleCreateManyVirtualAirlineInputEnvelope
    connect?: VirtualAirlineRoleWhereUniqueInput | VirtualAirlineRoleWhereUniqueInput[]
  }

  export type MemberCreateNestedManyWithoutVirtualAirlineInput = {
    create?: XOR<MemberCreateWithoutVirtualAirlineInput, MemberUncheckedCreateWithoutVirtualAirlineInput> | MemberCreateWithoutVirtualAirlineInput[] | MemberUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutVirtualAirlineInput | MemberCreateOrConnectWithoutVirtualAirlineInput[]
    createMany?: MemberCreateManyVirtualAirlineInputEnvelope
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
  }

  export type AircraftCreateNestedManyWithoutVirtualAirlineInput = {
    create?: XOR<AircraftCreateWithoutVirtualAirlineInput, AircraftUncheckedCreateWithoutVirtualAirlineInput> | AircraftCreateWithoutVirtualAirlineInput[] | AircraftUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutVirtualAirlineInput | AircraftCreateOrConnectWithoutVirtualAirlineInput[]
    createMany?: AircraftCreateManyVirtualAirlineInputEnvelope
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
  }

  export type FlightCreateNestedManyWithoutVirtualAirlineInput = {
    create?: XOR<FlightCreateWithoutVirtualAirlineInput, FlightUncheckedCreateWithoutVirtualAirlineInput> | FlightCreateWithoutVirtualAirlineInput[] | FlightUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutVirtualAirlineInput | FlightCreateOrConnectWithoutVirtualAirlineInput[]
    createMany?: FlightCreateManyVirtualAirlineInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type VirtualAirlineRoleUncheckedCreateNestedManyWithoutVirtualAirlineInput = {
    create?: XOR<VirtualAirlineRoleCreateWithoutVirtualAirlineInput, VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput> | VirtualAirlineRoleCreateWithoutVirtualAirlineInput[] | VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: VirtualAirlineRoleCreateOrConnectWithoutVirtualAirlineInput | VirtualAirlineRoleCreateOrConnectWithoutVirtualAirlineInput[]
    createMany?: VirtualAirlineRoleCreateManyVirtualAirlineInputEnvelope
    connect?: VirtualAirlineRoleWhereUniqueInput | VirtualAirlineRoleWhereUniqueInput[]
  }

  export type MemberUncheckedCreateNestedManyWithoutVirtualAirlineInput = {
    create?: XOR<MemberCreateWithoutVirtualAirlineInput, MemberUncheckedCreateWithoutVirtualAirlineInput> | MemberCreateWithoutVirtualAirlineInput[] | MemberUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutVirtualAirlineInput | MemberCreateOrConnectWithoutVirtualAirlineInput[]
    createMany?: MemberCreateManyVirtualAirlineInputEnvelope
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
  }

  export type AircraftUncheckedCreateNestedManyWithoutVirtualAirlineInput = {
    create?: XOR<AircraftCreateWithoutVirtualAirlineInput, AircraftUncheckedCreateWithoutVirtualAirlineInput> | AircraftCreateWithoutVirtualAirlineInput[] | AircraftUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutVirtualAirlineInput | AircraftCreateOrConnectWithoutVirtualAirlineInput[]
    createMany?: AircraftCreateManyVirtualAirlineInputEnvelope
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
  }

  export type FlightUncheckedCreateNestedManyWithoutVirtualAirlineInput = {
    create?: XOR<FlightCreateWithoutVirtualAirlineInput, FlightUncheckedCreateWithoutVirtualAirlineInput> | FlightCreateWithoutVirtualAirlineInput[] | FlightUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutVirtualAirlineInput | FlightCreateOrConnectWithoutVirtualAirlineInput[]
    createMany?: FlightCreateManyVirtualAirlineInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type WorldUpdateOneWithoutVirtualAirlinesNestedInput = {
    create?: XOR<WorldCreateWithoutVirtualAirlinesInput, WorldUncheckedCreateWithoutVirtualAirlinesInput>
    connectOrCreate?: WorldCreateOrConnectWithoutVirtualAirlinesInput
    upsert?: WorldUpsertWithoutVirtualAirlinesInput
    disconnect?: WorldWhereInput | boolean
    delete?: WorldWhereInput | boolean
    connect?: WorldWhereUniqueInput
    update?: XOR<XOR<WorldUpdateToOneWithWhereWithoutVirtualAirlinesInput, WorldUpdateWithoutVirtualAirlinesInput>, WorldUncheckedUpdateWithoutVirtualAirlinesInput>
  }

  export type VirtualAirlineRoleUpdateManyWithoutVirtualAirlineNestedInput = {
    create?: XOR<VirtualAirlineRoleCreateWithoutVirtualAirlineInput, VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput> | VirtualAirlineRoleCreateWithoutVirtualAirlineInput[] | VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: VirtualAirlineRoleCreateOrConnectWithoutVirtualAirlineInput | VirtualAirlineRoleCreateOrConnectWithoutVirtualAirlineInput[]
    upsert?: VirtualAirlineRoleUpsertWithWhereUniqueWithoutVirtualAirlineInput | VirtualAirlineRoleUpsertWithWhereUniqueWithoutVirtualAirlineInput[]
    createMany?: VirtualAirlineRoleCreateManyVirtualAirlineInputEnvelope
    set?: VirtualAirlineRoleWhereUniqueInput | VirtualAirlineRoleWhereUniqueInput[]
    disconnect?: VirtualAirlineRoleWhereUniqueInput | VirtualAirlineRoleWhereUniqueInput[]
    delete?: VirtualAirlineRoleWhereUniqueInput | VirtualAirlineRoleWhereUniqueInput[]
    connect?: VirtualAirlineRoleWhereUniqueInput | VirtualAirlineRoleWhereUniqueInput[]
    update?: VirtualAirlineRoleUpdateWithWhereUniqueWithoutVirtualAirlineInput | VirtualAirlineRoleUpdateWithWhereUniqueWithoutVirtualAirlineInput[]
    updateMany?: VirtualAirlineRoleUpdateManyWithWhereWithoutVirtualAirlineInput | VirtualAirlineRoleUpdateManyWithWhereWithoutVirtualAirlineInput[]
    deleteMany?: VirtualAirlineRoleScalarWhereInput | VirtualAirlineRoleScalarWhereInput[]
  }

  export type MemberUpdateManyWithoutVirtualAirlineNestedInput = {
    create?: XOR<MemberCreateWithoutVirtualAirlineInput, MemberUncheckedCreateWithoutVirtualAirlineInput> | MemberCreateWithoutVirtualAirlineInput[] | MemberUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutVirtualAirlineInput | MemberCreateOrConnectWithoutVirtualAirlineInput[]
    upsert?: MemberUpsertWithWhereUniqueWithoutVirtualAirlineInput | MemberUpsertWithWhereUniqueWithoutVirtualAirlineInput[]
    createMany?: MemberCreateManyVirtualAirlineInputEnvelope
    set?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    disconnect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    delete?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    update?: MemberUpdateWithWhereUniqueWithoutVirtualAirlineInput | MemberUpdateWithWhereUniqueWithoutVirtualAirlineInput[]
    updateMany?: MemberUpdateManyWithWhereWithoutVirtualAirlineInput | MemberUpdateManyWithWhereWithoutVirtualAirlineInput[]
    deleteMany?: MemberScalarWhereInput | MemberScalarWhereInput[]
  }

  export type AircraftUpdateManyWithoutVirtualAirlineNestedInput = {
    create?: XOR<AircraftCreateWithoutVirtualAirlineInput, AircraftUncheckedCreateWithoutVirtualAirlineInput> | AircraftCreateWithoutVirtualAirlineInput[] | AircraftUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutVirtualAirlineInput | AircraftCreateOrConnectWithoutVirtualAirlineInput[]
    upsert?: AircraftUpsertWithWhereUniqueWithoutVirtualAirlineInput | AircraftUpsertWithWhereUniqueWithoutVirtualAirlineInput[]
    createMany?: AircraftCreateManyVirtualAirlineInputEnvelope
    set?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    disconnect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    delete?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    update?: AircraftUpdateWithWhereUniqueWithoutVirtualAirlineInput | AircraftUpdateWithWhereUniqueWithoutVirtualAirlineInput[]
    updateMany?: AircraftUpdateManyWithWhereWithoutVirtualAirlineInput | AircraftUpdateManyWithWhereWithoutVirtualAirlineInput[]
    deleteMany?: AircraftScalarWhereInput | AircraftScalarWhereInput[]
  }

  export type FlightUpdateManyWithoutVirtualAirlineNestedInput = {
    create?: XOR<FlightCreateWithoutVirtualAirlineInput, FlightUncheckedCreateWithoutVirtualAirlineInput> | FlightCreateWithoutVirtualAirlineInput[] | FlightUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutVirtualAirlineInput | FlightCreateOrConnectWithoutVirtualAirlineInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutVirtualAirlineInput | FlightUpsertWithWhereUniqueWithoutVirtualAirlineInput[]
    createMany?: FlightCreateManyVirtualAirlineInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutVirtualAirlineInput | FlightUpdateWithWhereUniqueWithoutVirtualAirlineInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutVirtualAirlineInput | FlightUpdateManyWithWhereWithoutVirtualAirlineInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type VirtualAirlineRoleUncheckedUpdateManyWithoutVirtualAirlineNestedInput = {
    create?: XOR<VirtualAirlineRoleCreateWithoutVirtualAirlineInput, VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput> | VirtualAirlineRoleCreateWithoutVirtualAirlineInput[] | VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: VirtualAirlineRoleCreateOrConnectWithoutVirtualAirlineInput | VirtualAirlineRoleCreateOrConnectWithoutVirtualAirlineInput[]
    upsert?: VirtualAirlineRoleUpsertWithWhereUniqueWithoutVirtualAirlineInput | VirtualAirlineRoleUpsertWithWhereUniqueWithoutVirtualAirlineInput[]
    createMany?: VirtualAirlineRoleCreateManyVirtualAirlineInputEnvelope
    set?: VirtualAirlineRoleWhereUniqueInput | VirtualAirlineRoleWhereUniqueInput[]
    disconnect?: VirtualAirlineRoleWhereUniqueInput | VirtualAirlineRoleWhereUniqueInput[]
    delete?: VirtualAirlineRoleWhereUniqueInput | VirtualAirlineRoleWhereUniqueInput[]
    connect?: VirtualAirlineRoleWhereUniqueInput | VirtualAirlineRoleWhereUniqueInput[]
    update?: VirtualAirlineRoleUpdateWithWhereUniqueWithoutVirtualAirlineInput | VirtualAirlineRoleUpdateWithWhereUniqueWithoutVirtualAirlineInput[]
    updateMany?: VirtualAirlineRoleUpdateManyWithWhereWithoutVirtualAirlineInput | VirtualAirlineRoleUpdateManyWithWhereWithoutVirtualAirlineInput[]
    deleteMany?: VirtualAirlineRoleScalarWhereInput | VirtualAirlineRoleScalarWhereInput[]
  }

  export type MemberUncheckedUpdateManyWithoutVirtualAirlineNestedInput = {
    create?: XOR<MemberCreateWithoutVirtualAirlineInput, MemberUncheckedCreateWithoutVirtualAirlineInput> | MemberCreateWithoutVirtualAirlineInput[] | MemberUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutVirtualAirlineInput | MemberCreateOrConnectWithoutVirtualAirlineInput[]
    upsert?: MemberUpsertWithWhereUniqueWithoutVirtualAirlineInput | MemberUpsertWithWhereUniqueWithoutVirtualAirlineInput[]
    createMany?: MemberCreateManyVirtualAirlineInputEnvelope
    set?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    disconnect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    delete?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    update?: MemberUpdateWithWhereUniqueWithoutVirtualAirlineInput | MemberUpdateWithWhereUniqueWithoutVirtualAirlineInput[]
    updateMany?: MemberUpdateManyWithWhereWithoutVirtualAirlineInput | MemberUpdateManyWithWhereWithoutVirtualAirlineInput[]
    deleteMany?: MemberScalarWhereInput | MemberScalarWhereInput[]
  }

  export type AircraftUncheckedUpdateManyWithoutVirtualAirlineNestedInput = {
    create?: XOR<AircraftCreateWithoutVirtualAirlineInput, AircraftUncheckedCreateWithoutVirtualAirlineInput> | AircraftCreateWithoutVirtualAirlineInput[] | AircraftUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutVirtualAirlineInput | AircraftCreateOrConnectWithoutVirtualAirlineInput[]
    upsert?: AircraftUpsertWithWhereUniqueWithoutVirtualAirlineInput | AircraftUpsertWithWhereUniqueWithoutVirtualAirlineInput[]
    createMany?: AircraftCreateManyVirtualAirlineInputEnvelope
    set?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    disconnect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    delete?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    update?: AircraftUpdateWithWhereUniqueWithoutVirtualAirlineInput | AircraftUpdateWithWhereUniqueWithoutVirtualAirlineInput[]
    updateMany?: AircraftUpdateManyWithWhereWithoutVirtualAirlineInput | AircraftUpdateManyWithWhereWithoutVirtualAirlineInput[]
    deleteMany?: AircraftScalarWhereInput | AircraftScalarWhereInput[]
  }

  export type FlightUncheckedUpdateManyWithoutVirtualAirlineNestedInput = {
    create?: XOR<FlightCreateWithoutVirtualAirlineInput, FlightUncheckedCreateWithoutVirtualAirlineInput> | FlightCreateWithoutVirtualAirlineInput[] | FlightUncheckedCreateWithoutVirtualAirlineInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutVirtualAirlineInput | FlightCreateOrConnectWithoutVirtualAirlineInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutVirtualAirlineInput | FlightUpsertWithWhereUniqueWithoutVirtualAirlineInput[]
    createMany?: FlightCreateManyVirtualAirlineInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutVirtualAirlineInput | FlightUpdateWithWhereUniqueWithoutVirtualAirlineInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutVirtualAirlineInput | FlightUpdateManyWithWhereWithoutVirtualAirlineInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type RoleCreateNestedOneWithoutVirtualAirlineRoleInput = {
    create?: XOR<RoleCreateWithoutVirtualAirlineRoleInput, RoleUncheckedCreateWithoutVirtualAirlineRoleInput>
    connectOrCreate?: RoleCreateOrConnectWithoutVirtualAirlineRoleInput
    connect?: RoleWhereUniqueInput
  }

  export type VirtualAirlineCreateNestedOneWithoutVARolesInput = {
    create?: XOR<VirtualAirlineCreateWithoutVARolesInput, VirtualAirlineUncheckedCreateWithoutVARolesInput>
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutVARolesInput
    connect?: VirtualAirlineWhereUniqueInput
  }

  export type MemberCreateNestedManyWithoutVARoleInput = {
    create?: XOR<MemberCreateWithoutVARoleInput, MemberUncheckedCreateWithoutVARoleInput> | MemberCreateWithoutVARoleInput[] | MemberUncheckedCreateWithoutVARoleInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutVARoleInput | MemberCreateOrConnectWithoutVARoleInput[]
    createMany?: MemberCreateManyVARoleInputEnvelope
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedOneWithoutVirtualAirlineRoleInput = {
    create?: XOR<RoleCreateWithoutVirtualAirlineRoleInput, RoleUncheckedCreateWithoutVirtualAirlineRoleInput>
    connectOrCreate?: RoleCreateOrConnectWithoutVirtualAirlineRoleInput
    connect?: RoleWhereUniqueInput
  }

  export type MemberUncheckedCreateNestedManyWithoutVARoleInput = {
    create?: XOR<MemberCreateWithoutVARoleInput, MemberUncheckedCreateWithoutVARoleInput> | MemberCreateWithoutVARoleInput[] | MemberUncheckedCreateWithoutVARoleInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutVARoleInput | MemberCreateOrConnectWithoutVARoleInput[]
    createMany?: MemberCreateManyVARoleInputEnvelope
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type RoleUpdateOneWithoutVirtualAirlineRoleNestedInput = {
    create?: XOR<RoleCreateWithoutVirtualAirlineRoleInput, RoleUncheckedCreateWithoutVirtualAirlineRoleInput>
    connectOrCreate?: RoleCreateOrConnectWithoutVirtualAirlineRoleInput
    upsert?: RoleUpsertWithoutVirtualAirlineRoleInput
    disconnect?: RoleWhereInput | boolean
    delete?: RoleWhereInput | boolean
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutVirtualAirlineRoleInput, RoleUpdateWithoutVirtualAirlineRoleInput>, RoleUncheckedUpdateWithoutVirtualAirlineRoleInput>
  }

  export type VirtualAirlineUpdateOneRequiredWithoutVARolesNestedInput = {
    create?: XOR<VirtualAirlineCreateWithoutVARolesInput, VirtualAirlineUncheckedCreateWithoutVARolesInput>
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutVARolesInput
    upsert?: VirtualAirlineUpsertWithoutVARolesInput
    connect?: VirtualAirlineWhereUniqueInput
    update?: XOR<XOR<VirtualAirlineUpdateToOneWithWhereWithoutVARolesInput, VirtualAirlineUpdateWithoutVARolesInput>, VirtualAirlineUncheckedUpdateWithoutVARolesInput>
  }

  export type MemberUpdateManyWithoutVARoleNestedInput = {
    create?: XOR<MemberCreateWithoutVARoleInput, MemberUncheckedCreateWithoutVARoleInput> | MemberCreateWithoutVARoleInput[] | MemberUncheckedCreateWithoutVARoleInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutVARoleInput | MemberCreateOrConnectWithoutVARoleInput[]
    upsert?: MemberUpsertWithWhereUniqueWithoutVARoleInput | MemberUpsertWithWhereUniqueWithoutVARoleInput[]
    createMany?: MemberCreateManyVARoleInputEnvelope
    set?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    disconnect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    delete?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    update?: MemberUpdateWithWhereUniqueWithoutVARoleInput | MemberUpdateWithWhereUniqueWithoutVARoleInput[]
    updateMany?: MemberUpdateManyWithWhereWithoutVARoleInput | MemberUpdateManyWithWhereWithoutVARoleInput[]
    deleteMany?: MemberScalarWhereInput | MemberScalarWhereInput[]
  }

  export type RoleUncheckedUpdateOneWithoutVirtualAirlineRoleNestedInput = {
    create?: XOR<RoleCreateWithoutVirtualAirlineRoleInput, RoleUncheckedCreateWithoutVirtualAirlineRoleInput>
    connectOrCreate?: RoleCreateOrConnectWithoutVirtualAirlineRoleInput
    upsert?: RoleUpsertWithoutVirtualAirlineRoleInput
    disconnect?: RoleWhereInput | boolean
    delete?: RoleWhereInput | boolean
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutVirtualAirlineRoleInput, RoleUpdateWithoutVirtualAirlineRoleInput>, RoleUncheckedUpdateWithoutVirtualAirlineRoleInput>
  }

  export type MemberUncheckedUpdateManyWithoutVARoleNestedInput = {
    create?: XOR<MemberCreateWithoutVARoleInput, MemberUncheckedCreateWithoutVARoleInput> | MemberCreateWithoutVARoleInput[] | MemberUncheckedCreateWithoutVARoleInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutVARoleInput | MemberCreateOrConnectWithoutVARoleInput[]
    upsert?: MemberUpsertWithWhereUniqueWithoutVARoleInput | MemberUpsertWithWhereUniqueWithoutVARoleInput[]
    createMany?: MemberCreateManyVARoleInputEnvelope
    set?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    disconnect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    delete?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    update?: MemberUpdateWithWhereUniqueWithoutVARoleInput | MemberUpdateWithWhereUniqueWithoutVARoleInput[]
    updateMany?: MemberUpdateManyWithWhereWithoutVARoleInput | MemberUpdateManyWithWhereWithoutVARoleInput[]
    deleteMany?: MemberScalarWhereInput | MemberScalarWhereInput[]
  }

  export type VirtualAirlineCreateNestedManyWithoutWorldInput = {
    create?: XOR<VirtualAirlineCreateWithoutWorldInput, VirtualAirlineUncheckedCreateWithoutWorldInput> | VirtualAirlineCreateWithoutWorldInput[] | VirtualAirlineUncheckedCreateWithoutWorldInput[]
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutWorldInput | VirtualAirlineCreateOrConnectWithoutWorldInput[]
    createMany?: VirtualAirlineCreateManyWorldInputEnvelope
    connect?: VirtualAirlineWhereUniqueInput | VirtualAirlineWhereUniqueInput[]
  }

  export type CompanyCreateNestedManyWithoutWorldInput = {
    create?: XOR<CompanyCreateWithoutWorldInput, CompanyUncheckedCreateWithoutWorldInput> | CompanyCreateWithoutWorldInput[] | CompanyUncheckedCreateWithoutWorldInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutWorldInput | CompanyCreateOrConnectWithoutWorldInput[]
    createMany?: CompanyCreateManyWorldInputEnvelope
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
  }

  export type VirtualAirlineUncheckedCreateNestedManyWithoutWorldInput = {
    create?: XOR<VirtualAirlineCreateWithoutWorldInput, VirtualAirlineUncheckedCreateWithoutWorldInput> | VirtualAirlineCreateWithoutWorldInput[] | VirtualAirlineUncheckedCreateWithoutWorldInput[]
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutWorldInput | VirtualAirlineCreateOrConnectWithoutWorldInput[]
    createMany?: VirtualAirlineCreateManyWorldInputEnvelope
    connect?: VirtualAirlineWhereUniqueInput | VirtualAirlineWhereUniqueInput[]
  }

  export type CompanyUncheckedCreateNestedManyWithoutWorldInput = {
    create?: XOR<CompanyCreateWithoutWorldInput, CompanyUncheckedCreateWithoutWorldInput> | CompanyCreateWithoutWorldInput[] | CompanyUncheckedCreateWithoutWorldInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutWorldInput | CompanyCreateOrConnectWithoutWorldInput[]
    createMany?: CompanyCreateManyWorldInputEnvelope
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
  }

  export type VirtualAirlineUpdateManyWithoutWorldNestedInput = {
    create?: XOR<VirtualAirlineCreateWithoutWorldInput, VirtualAirlineUncheckedCreateWithoutWorldInput> | VirtualAirlineCreateWithoutWorldInput[] | VirtualAirlineUncheckedCreateWithoutWorldInput[]
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutWorldInput | VirtualAirlineCreateOrConnectWithoutWorldInput[]
    upsert?: VirtualAirlineUpsertWithWhereUniqueWithoutWorldInput | VirtualAirlineUpsertWithWhereUniqueWithoutWorldInput[]
    createMany?: VirtualAirlineCreateManyWorldInputEnvelope
    set?: VirtualAirlineWhereUniqueInput | VirtualAirlineWhereUniqueInput[]
    disconnect?: VirtualAirlineWhereUniqueInput | VirtualAirlineWhereUniqueInput[]
    delete?: VirtualAirlineWhereUniqueInput | VirtualAirlineWhereUniqueInput[]
    connect?: VirtualAirlineWhereUniqueInput | VirtualAirlineWhereUniqueInput[]
    update?: VirtualAirlineUpdateWithWhereUniqueWithoutWorldInput | VirtualAirlineUpdateWithWhereUniqueWithoutWorldInput[]
    updateMany?: VirtualAirlineUpdateManyWithWhereWithoutWorldInput | VirtualAirlineUpdateManyWithWhereWithoutWorldInput[]
    deleteMany?: VirtualAirlineScalarWhereInput | VirtualAirlineScalarWhereInput[]
  }

  export type CompanyUpdateManyWithoutWorldNestedInput = {
    create?: XOR<CompanyCreateWithoutWorldInput, CompanyUncheckedCreateWithoutWorldInput> | CompanyCreateWithoutWorldInput[] | CompanyUncheckedCreateWithoutWorldInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutWorldInput | CompanyCreateOrConnectWithoutWorldInput[]
    upsert?: CompanyUpsertWithWhereUniqueWithoutWorldInput | CompanyUpsertWithWhereUniqueWithoutWorldInput[]
    createMany?: CompanyCreateManyWorldInputEnvelope
    set?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    disconnect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    delete?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    update?: CompanyUpdateWithWhereUniqueWithoutWorldInput | CompanyUpdateWithWhereUniqueWithoutWorldInput[]
    updateMany?: CompanyUpdateManyWithWhereWithoutWorldInput | CompanyUpdateManyWithWhereWithoutWorldInput[]
    deleteMany?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
  }

  export type VirtualAirlineUncheckedUpdateManyWithoutWorldNestedInput = {
    create?: XOR<VirtualAirlineCreateWithoutWorldInput, VirtualAirlineUncheckedCreateWithoutWorldInput> | VirtualAirlineCreateWithoutWorldInput[] | VirtualAirlineUncheckedCreateWithoutWorldInput[]
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutWorldInput | VirtualAirlineCreateOrConnectWithoutWorldInput[]
    upsert?: VirtualAirlineUpsertWithWhereUniqueWithoutWorldInput | VirtualAirlineUpsertWithWhereUniqueWithoutWorldInput[]
    createMany?: VirtualAirlineCreateManyWorldInputEnvelope
    set?: VirtualAirlineWhereUniqueInput | VirtualAirlineWhereUniqueInput[]
    disconnect?: VirtualAirlineWhereUniqueInput | VirtualAirlineWhereUniqueInput[]
    delete?: VirtualAirlineWhereUniqueInput | VirtualAirlineWhereUniqueInput[]
    connect?: VirtualAirlineWhereUniqueInput | VirtualAirlineWhereUniqueInput[]
    update?: VirtualAirlineUpdateWithWhereUniqueWithoutWorldInput | VirtualAirlineUpdateWithWhereUniqueWithoutWorldInput[]
    updateMany?: VirtualAirlineUpdateManyWithWhereWithoutWorldInput | VirtualAirlineUpdateManyWithWhereWithoutWorldInput[]
    deleteMany?: VirtualAirlineScalarWhereInput | VirtualAirlineScalarWhereInput[]
  }

  export type CompanyUncheckedUpdateManyWithoutWorldNestedInput = {
    create?: XOR<CompanyCreateWithoutWorldInput, CompanyUncheckedCreateWithoutWorldInput> | CompanyCreateWithoutWorldInput[] | CompanyUncheckedCreateWithoutWorldInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutWorldInput | CompanyCreateOrConnectWithoutWorldInput[]
    upsert?: CompanyUpsertWithWhereUniqueWithoutWorldInput | CompanyUpsertWithWhereUniqueWithoutWorldInput[]
    createMany?: CompanyCreateManyWorldInputEnvelope
    set?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    disconnect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    delete?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    update?: CompanyUpdateWithWhereUniqueWithoutWorldInput | CompanyUpdateWithWhereUniqueWithoutWorldInput[]
    updateMany?: CompanyUpdateManyWithWhereWithoutWorldInput | CompanyUpdateManyWithWhereWithoutWorldInput[]
    deleteMany?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
  }

  export type CompanyCreateNestedOneWithoutOwnerInput = {
    create?: XOR<CompanyCreateWithoutOwnerInput, CompanyUncheckedCreateWithoutOwnerInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutOwnerInput
    connect?: CompanyWhereUniqueInput
  }

  export type VirtualAirlineCreateNestedOneWithoutMembersInput = {
    create?: XOR<VirtualAirlineCreateWithoutMembersInput, VirtualAirlineUncheckedCreateWithoutMembersInput>
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutMembersInput
    connect?: VirtualAirlineWhereUniqueInput
  }

  export type VirtualAirlineRoleCreateNestedOneWithoutMembersInput = {
    create?: XOR<VirtualAirlineRoleCreateWithoutMembersInput, VirtualAirlineRoleUncheckedCreateWithoutMembersInput>
    connectOrCreate?: VirtualAirlineRoleCreateOrConnectWithoutMembersInput
    connect?: VirtualAirlineRoleWhereUniqueInput
  }

  export type FlightCreateNestedManyWithoutMemberInput = {
    create?: XOR<FlightCreateWithoutMemberInput, FlightUncheckedCreateWithoutMemberInput> | FlightCreateWithoutMemberInput[] | FlightUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutMemberInput | FlightCreateOrConnectWithoutMemberInput[]
    createMany?: FlightCreateManyMemberInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutMembersInput = {
    create?: XOR<UserCreateWithoutMembersInput, UserUncheckedCreateWithoutMembersInput>
    connectOrCreate?: UserCreateOrConnectWithoutMembersInput
    connect?: UserWhereUniqueInput
  }

  export type FlightRouteCreateNestedManyWithoutMemberInput = {
    create?: XOR<FlightRouteCreateWithoutMemberInput, FlightRouteUncheckedCreateWithoutMemberInput> | FlightRouteCreateWithoutMemberInput[] | FlightRouteUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: FlightRouteCreateOrConnectWithoutMemberInput | FlightRouteCreateOrConnectWithoutMemberInput[]
    createMany?: FlightRouteCreateManyMemberInputEnvelope
    connect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
  }

  export type FlightUncheckedCreateNestedManyWithoutMemberInput = {
    create?: XOR<FlightCreateWithoutMemberInput, FlightUncheckedCreateWithoutMemberInput> | FlightCreateWithoutMemberInput[] | FlightUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutMemberInput | FlightCreateOrConnectWithoutMemberInput[]
    createMany?: FlightCreateManyMemberInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type FlightRouteUncheckedCreateNestedManyWithoutMemberInput = {
    create?: XOR<FlightRouteCreateWithoutMemberInput, FlightRouteUncheckedCreateWithoutMemberInput> | FlightRouteCreateWithoutMemberInput[] | FlightRouteUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: FlightRouteCreateOrConnectWithoutMemberInput | FlightRouteCreateOrConnectWithoutMemberInput[]
    createMany?: FlightRouteCreateManyMemberInputEnvelope
    connect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
  }

  export type CompanyUpdateOneRequiredWithoutOwnerNestedInput = {
    create?: XOR<CompanyCreateWithoutOwnerInput, CompanyUncheckedCreateWithoutOwnerInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutOwnerInput
    upsert?: CompanyUpsertWithoutOwnerInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutOwnerInput, CompanyUpdateWithoutOwnerInput>, CompanyUncheckedUpdateWithoutOwnerInput>
  }

  export type VirtualAirlineUpdateOneRequiredWithoutMembersNestedInput = {
    create?: XOR<VirtualAirlineCreateWithoutMembersInput, VirtualAirlineUncheckedCreateWithoutMembersInput>
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutMembersInput
    upsert?: VirtualAirlineUpsertWithoutMembersInput
    connect?: VirtualAirlineWhereUniqueInput
    update?: XOR<XOR<VirtualAirlineUpdateToOneWithWhereWithoutMembersInput, VirtualAirlineUpdateWithoutMembersInput>, VirtualAirlineUncheckedUpdateWithoutMembersInput>
  }

  export type VirtualAirlineRoleUpdateOneRequiredWithoutMembersNestedInput = {
    create?: XOR<VirtualAirlineRoleCreateWithoutMembersInput, VirtualAirlineRoleUncheckedCreateWithoutMembersInput>
    connectOrCreate?: VirtualAirlineRoleCreateOrConnectWithoutMembersInput
    upsert?: VirtualAirlineRoleUpsertWithoutMembersInput
    connect?: VirtualAirlineRoleWhereUniqueInput
    update?: XOR<XOR<VirtualAirlineRoleUpdateToOneWithWhereWithoutMembersInput, VirtualAirlineRoleUpdateWithoutMembersInput>, VirtualAirlineRoleUncheckedUpdateWithoutMembersInput>
  }

  export type FlightUpdateManyWithoutMemberNestedInput = {
    create?: XOR<FlightCreateWithoutMemberInput, FlightUncheckedCreateWithoutMemberInput> | FlightCreateWithoutMemberInput[] | FlightUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutMemberInput | FlightCreateOrConnectWithoutMemberInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutMemberInput | FlightUpsertWithWhereUniqueWithoutMemberInput[]
    createMany?: FlightCreateManyMemberInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutMemberInput | FlightUpdateWithWhereUniqueWithoutMemberInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutMemberInput | FlightUpdateManyWithWhereWithoutMemberInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type UserUpdateOneWithoutMembersNestedInput = {
    create?: XOR<UserCreateWithoutMembersInput, UserUncheckedCreateWithoutMembersInput>
    connectOrCreate?: UserCreateOrConnectWithoutMembersInput
    upsert?: UserUpsertWithoutMembersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMembersInput, UserUpdateWithoutMembersInput>, UserUncheckedUpdateWithoutMembersInput>
  }

  export type FlightRouteUpdateManyWithoutMemberNestedInput = {
    create?: XOR<FlightRouteCreateWithoutMemberInput, FlightRouteUncheckedCreateWithoutMemberInput> | FlightRouteCreateWithoutMemberInput[] | FlightRouteUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: FlightRouteCreateOrConnectWithoutMemberInput | FlightRouteCreateOrConnectWithoutMemberInput[]
    upsert?: FlightRouteUpsertWithWhereUniqueWithoutMemberInput | FlightRouteUpsertWithWhereUniqueWithoutMemberInput[]
    createMany?: FlightRouteCreateManyMemberInputEnvelope
    set?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    disconnect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    delete?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    connect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    update?: FlightRouteUpdateWithWhereUniqueWithoutMemberInput | FlightRouteUpdateWithWhereUniqueWithoutMemberInput[]
    updateMany?: FlightRouteUpdateManyWithWhereWithoutMemberInput | FlightRouteUpdateManyWithWhereWithoutMemberInput[]
    deleteMany?: FlightRouteScalarWhereInput | FlightRouteScalarWhereInput[]
  }

  export type FlightUncheckedUpdateManyWithoutMemberNestedInput = {
    create?: XOR<FlightCreateWithoutMemberInput, FlightUncheckedCreateWithoutMemberInput> | FlightCreateWithoutMemberInput[] | FlightUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutMemberInput | FlightCreateOrConnectWithoutMemberInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutMemberInput | FlightUpsertWithWhereUniqueWithoutMemberInput[]
    createMany?: FlightCreateManyMemberInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutMemberInput | FlightUpdateWithWhereUniqueWithoutMemberInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutMemberInput | FlightUpdateManyWithWhereWithoutMemberInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type FlightRouteUncheckedUpdateManyWithoutMemberNestedInput = {
    create?: XOR<FlightRouteCreateWithoutMemberInput, FlightRouteUncheckedCreateWithoutMemberInput> | FlightRouteCreateWithoutMemberInput[] | FlightRouteUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: FlightRouteCreateOrConnectWithoutMemberInput | FlightRouteCreateOrConnectWithoutMemberInput[]
    upsert?: FlightRouteUpsertWithWhereUniqueWithoutMemberInput | FlightRouteUpsertWithWhereUniqueWithoutMemberInput[]
    createMany?: FlightRouteCreateManyMemberInputEnvelope
    set?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    disconnect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    delete?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    connect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    update?: FlightRouteUpdateWithWhereUniqueWithoutMemberInput | FlightRouteUpdateWithWhereUniqueWithoutMemberInput[]
    updateMany?: FlightRouteUpdateManyWithWhereWithoutMemberInput | FlightRouteUpdateManyWithWhereWithoutMemberInput[]
    deleteMany?: FlightRouteScalarWhereInput | FlightRouteScalarWhereInput[]
  }

  export type WorldCreateNestedOneWithoutCompaniesInput = {
    create?: XOR<WorldCreateWithoutCompaniesInput, WorldUncheckedCreateWithoutCompaniesInput>
    connectOrCreate?: WorldCreateOrConnectWithoutCompaniesInput
    connect?: WorldWhereUniqueInput
  }

  export type FlightCreateNestedManyWithoutCompanyInput = {
    create?: XOR<FlightCreateWithoutCompanyInput, FlightUncheckedCreateWithoutCompanyInput> | FlightCreateWithoutCompanyInput[] | FlightUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutCompanyInput | FlightCreateOrConnectWithoutCompanyInput[]
    createMany?: FlightCreateManyCompanyInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type MemberCreateNestedOneWithoutCompanyInput = {
    create?: XOR<MemberCreateWithoutCompanyInput, MemberUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: MemberCreateOrConnectWithoutCompanyInput
    connect?: MemberWhereUniqueInput
  }

  export type FlightUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<FlightCreateWithoutCompanyInput, FlightUncheckedCreateWithoutCompanyInput> | FlightCreateWithoutCompanyInput[] | FlightUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutCompanyInput | FlightCreateOrConnectWithoutCompanyInput[]
    createMany?: FlightCreateManyCompanyInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type MemberUncheckedCreateNestedOneWithoutCompanyInput = {
    create?: XOR<MemberCreateWithoutCompanyInput, MemberUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: MemberCreateOrConnectWithoutCompanyInput
    connect?: MemberWhereUniqueInput
  }

  export type WorldUpdateOneRequiredWithoutCompaniesNestedInput = {
    create?: XOR<WorldCreateWithoutCompaniesInput, WorldUncheckedCreateWithoutCompaniesInput>
    connectOrCreate?: WorldCreateOrConnectWithoutCompaniesInput
    upsert?: WorldUpsertWithoutCompaniesInput
    connect?: WorldWhereUniqueInput
    update?: XOR<XOR<WorldUpdateToOneWithWhereWithoutCompaniesInput, WorldUpdateWithoutCompaniesInput>, WorldUncheckedUpdateWithoutCompaniesInput>
  }

  export type FlightUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<FlightCreateWithoutCompanyInput, FlightUncheckedCreateWithoutCompanyInput> | FlightCreateWithoutCompanyInput[] | FlightUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutCompanyInput | FlightCreateOrConnectWithoutCompanyInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutCompanyInput | FlightUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: FlightCreateManyCompanyInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutCompanyInput | FlightUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutCompanyInput | FlightUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type MemberUpdateOneWithoutCompanyNestedInput = {
    create?: XOR<MemberCreateWithoutCompanyInput, MemberUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: MemberCreateOrConnectWithoutCompanyInput
    upsert?: MemberUpsertWithoutCompanyInput
    disconnect?: MemberWhereInput | boolean
    delete?: MemberWhereInput | boolean
    connect?: MemberWhereUniqueInput
    update?: XOR<XOR<MemberUpdateToOneWithWhereWithoutCompanyInput, MemberUpdateWithoutCompanyInput>, MemberUncheckedUpdateWithoutCompanyInput>
  }

  export type FlightUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<FlightCreateWithoutCompanyInput, FlightUncheckedCreateWithoutCompanyInput> | FlightCreateWithoutCompanyInput[] | FlightUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutCompanyInput | FlightCreateOrConnectWithoutCompanyInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutCompanyInput | FlightUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: FlightCreateManyCompanyInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutCompanyInput | FlightUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutCompanyInput | FlightUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type MemberUncheckedUpdateOneWithoutCompanyNestedInput = {
    create?: XOR<MemberCreateWithoutCompanyInput, MemberUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: MemberCreateOrConnectWithoutCompanyInput
    upsert?: MemberUpsertWithoutCompanyInput
    disconnect?: MemberWhereInput | boolean
    delete?: MemberWhereInput | boolean
    connect?: MemberWhereUniqueInput
    update?: XOR<XOR<MemberUpdateToOneWithWhereWithoutCompanyInput, MemberUpdateWithoutCompanyInput>, MemberUncheckedUpdateWithoutCompanyInput>
  }

  export type AircraftClassCreateNestedOneWithoutAircraftsInput = {
    create?: XOR<AircraftClassCreateWithoutAircraftsInput, AircraftClassUncheckedCreateWithoutAircraftsInput>
    connectOrCreate?: AircraftClassCreateOrConnectWithoutAircraftsInput
    connect?: AircraftClassWhereUniqueInput
  }

  export type VirtualAirlineCreateNestedOneWithoutFleetInput = {
    create?: XOR<VirtualAirlineCreateWithoutFleetInput, VirtualAirlineUncheckedCreateWithoutFleetInput>
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutFleetInput
    connect?: VirtualAirlineWhereUniqueInput
  }

  export type AircraftStatusCreateNestedOneWithoutAircraftsInput = {
    create?: XOR<AircraftStatusCreateWithoutAircraftsInput, AircraftStatusUncheckedCreateWithoutAircraftsInput>
    connectOrCreate?: AircraftStatusCreateOrConnectWithoutAircraftsInput
    connect?: AircraftStatusWhereUniqueInput
  }

  export type AirportCreateNestedOneWithoutAircraftAtAirportInput = {
    create?: XOR<AirportCreateWithoutAircraftAtAirportInput, AirportUncheckedCreateWithoutAircraftAtAirportInput>
    connectOrCreate?: AirportCreateOrConnectWithoutAircraftAtAirportInput
    connect?: AirportWhereUniqueInput
  }

  export type AircraftMaintenanceCreateNestedManyWithoutAircraftInput = {
    create?: XOR<AircraftMaintenanceCreateWithoutAircraftInput, AircraftMaintenanceUncheckedCreateWithoutAircraftInput> | AircraftMaintenanceCreateWithoutAircraftInput[] | AircraftMaintenanceUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: AircraftMaintenanceCreateOrConnectWithoutAircraftInput | AircraftMaintenanceCreateOrConnectWithoutAircraftInput[]
    createMany?: AircraftMaintenanceCreateManyAircraftInputEnvelope
    connect?: AircraftMaintenanceWhereUniqueInput | AircraftMaintenanceWhereUniqueInput[]
  }

  export type FlightCreateNestedManyWithoutAircraftInput = {
    create?: XOR<FlightCreateWithoutAircraftInput, FlightUncheckedCreateWithoutAircraftInput> | FlightCreateWithoutAircraftInput[] | FlightUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutAircraftInput | FlightCreateOrConnectWithoutAircraftInput[]
    createMany?: FlightCreateManyAircraftInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type LiveryCreateNestedManyWithoutAircraftInput = {
    create?: XOR<LiveryCreateWithoutAircraftInput, LiveryUncheckedCreateWithoutAircraftInput> | LiveryCreateWithoutAircraftInput[] | LiveryUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: LiveryCreateOrConnectWithoutAircraftInput | LiveryCreateOrConnectWithoutAircraftInput[]
    createMany?: LiveryCreateManyAircraftInputEnvelope
    connect?: LiveryWhereUniqueInput | LiveryWhereUniqueInput[]
  }

  export type AircraftMaintenanceUncheckedCreateNestedManyWithoutAircraftInput = {
    create?: XOR<AircraftMaintenanceCreateWithoutAircraftInput, AircraftMaintenanceUncheckedCreateWithoutAircraftInput> | AircraftMaintenanceCreateWithoutAircraftInput[] | AircraftMaintenanceUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: AircraftMaintenanceCreateOrConnectWithoutAircraftInput | AircraftMaintenanceCreateOrConnectWithoutAircraftInput[]
    createMany?: AircraftMaintenanceCreateManyAircraftInputEnvelope
    connect?: AircraftMaintenanceWhereUniqueInput | AircraftMaintenanceWhereUniqueInput[]
  }

  export type FlightUncheckedCreateNestedManyWithoutAircraftInput = {
    create?: XOR<FlightCreateWithoutAircraftInput, FlightUncheckedCreateWithoutAircraftInput> | FlightCreateWithoutAircraftInput[] | FlightUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutAircraftInput | FlightCreateOrConnectWithoutAircraftInput[]
    createMany?: FlightCreateManyAircraftInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type LiveryUncheckedCreateNestedManyWithoutAircraftInput = {
    create?: XOR<LiveryCreateWithoutAircraftInput, LiveryUncheckedCreateWithoutAircraftInput> | LiveryCreateWithoutAircraftInput[] | LiveryUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: LiveryCreateOrConnectWithoutAircraftInput | LiveryCreateOrConnectWithoutAircraftInput[]
    createMany?: LiveryCreateManyAircraftInputEnvelope
    connect?: LiveryWhereUniqueInput | LiveryWhereUniqueInput[]
  }

  export type AircraftClassUpdateOneRequiredWithoutAircraftsNestedInput = {
    create?: XOR<AircraftClassCreateWithoutAircraftsInput, AircraftClassUncheckedCreateWithoutAircraftsInput>
    connectOrCreate?: AircraftClassCreateOrConnectWithoutAircraftsInput
    upsert?: AircraftClassUpsertWithoutAircraftsInput
    connect?: AircraftClassWhereUniqueInput
    update?: XOR<XOR<AircraftClassUpdateToOneWithWhereWithoutAircraftsInput, AircraftClassUpdateWithoutAircraftsInput>, AircraftClassUncheckedUpdateWithoutAircraftsInput>
  }

  export type VirtualAirlineUpdateOneRequiredWithoutFleetNestedInput = {
    create?: XOR<VirtualAirlineCreateWithoutFleetInput, VirtualAirlineUncheckedCreateWithoutFleetInput>
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutFleetInput
    upsert?: VirtualAirlineUpsertWithoutFleetInput
    connect?: VirtualAirlineWhereUniqueInput
    update?: XOR<XOR<VirtualAirlineUpdateToOneWithWhereWithoutFleetInput, VirtualAirlineUpdateWithoutFleetInput>, VirtualAirlineUncheckedUpdateWithoutFleetInput>
  }

  export type AircraftStatusUpdateOneRequiredWithoutAircraftsNestedInput = {
    create?: XOR<AircraftStatusCreateWithoutAircraftsInput, AircraftStatusUncheckedCreateWithoutAircraftsInput>
    connectOrCreate?: AircraftStatusCreateOrConnectWithoutAircraftsInput
    upsert?: AircraftStatusUpsertWithoutAircraftsInput
    connect?: AircraftStatusWhereUniqueInput
    update?: XOR<XOR<AircraftStatusUpdateToOneWithWhereWithoutAircraftsInput, AircraftStatusUpdateWithoutAircraftsInput>, AircraftStatusUncheckedUpdateWithoutAircraftsInput>
  }

  export type AirportUpdateOneWithoutAircraftAtAirportNestedInput = {
    create?: XOR<AirportCreateWithoutAircraftAtAirportInput, AirportUncheckedCreateWithoutAircraftAtAirportInput>
    connectOrCreate?: AirportCreateOrConnectWithoutAircraftAtAirportInput
    upsert?: AirportUpsertWithoutAircraftAtAirportInput
    disconnect?: AirportWhereInput | boolean
    delete?: AirportWhereInput | boolean
    connect?: AirportWhereUniqueInput
    update?: XOR<XOR<AirportUpdateToOneWithWhereWithoutAircraftAtAirportInput, AirportUpdateWithoutAircraftAtAirportInput>, AirportUncheckedUpdateWithoutAircraftAtAirportInput>
  }

  export type AircraftMaintenanceUpdateManyWithoutAircraftNestedInput = {
    create?: XOR<AircraftMaintenanceCreateWithoutAircraftInput, AircraftMaintenanceUncheckedCreateWithoutAircraftInput> | AircraftMaintenanceCreateWithoutAircraftInput[] | AircraftMaintenanceUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: AircraftMaintenanceCreateOrConnectWithoutAircraftInput | AircraftMaintenanceCreateOrConnectWithoutAircraftInput[]
    upsert?: AircraftMaintenanceUpsertWithWhereUniqueWithoutAircraftInput | AircraftMaintenanceUpsertWithWhereUniqueWithoutAircraftInput[]
    createMany?: AircraftMaintenanceCreateManyAircraftInputEnvelope
    set?: AircraftMaintenanceWhereUniqueInput | AircraftMaintenanceWhereUniqueInput[]
    disconnect?: AircraftMaintenanceWhereUniqueInput | AircraftMaintenanceWhereUniqueInput[]
    delete?: AircraftMaintenanceWhereUniqueInput | AircraftMaintenanceWhereUniqueInput[]
    connect?: AircraftMaintenanceWhereUniqueInput | AircraftMaintenanceWhereUniqueInput[]
    update?: AircraftMaintenanceUpdateWithWhereUniqueWithoutAircraftInput | AircraftMaintenanceUpdateWithWhereUniqueWithoutAircraftInput[]
    updateMany?: AircraftMaintenanceUpdateManyWithWhereWithoutAircraftInput | AircraftMaintenanceUpdateManyWithWhereWithoutAircraftInput[]
    deleteMany?: AircraftMaintenanceScalarWhereInput | AircraftMaintenanceScalarWhereInput[]
  }

  export type FlightUpdateManyWithoutAircraftNestedInput = {
    create?: XOR<FlightCreateWithoutAircraftInput, FlightUncheckedCreateWithoutAircraftInput> | FlightCreateWithoutAircraftInput[] | FlightUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutAircraftInput | FlightCreateOrConnectWithoutAircraftInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutAircraftInput | FlightUpsertWithWhereUniqueWithoutAircraftInput[]
    createMany?: FlightCreateManyAircraftInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutAircraftInput | FlightUpdateWithWhereUniqueWithoutAircraftInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutAircraftInput | FlightUpdateManyWithWhereWithoutAircraftInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type LiveryUpdateManyWithoutAircraftNestedInput = {
    create?: XOR<LiveryCreateWithoutAircraftInput, LiveryUncheckedCreateWithoutAircraftInput> | LiveryCreateWithoutAircraftInput[] | LiveryUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: LiveryCreateOrConnectWithoutAircraftInput | LiveryCreateOrConnectWithoutAircraftInput[]
    upsert?: LiveryUpsertWithWhereUniqueWithoutAircraftInput | LiveryUpsertWithWhereUniqueWithoutAircraftInput[]
    createMany?: LiveryCreateManyAircraftInputEnvelope
    set?: LiveryWhereUniqueInput | LiveryWhereUniqueInput[]
    disconnect?: LiveryWhereUniqueInput | LiveryWhereUniqueInput[]
    delete?: LiveryWhereUniqueInput | LiveryWhereUniqueInput[]
    connect?: LiveryWhereUniqueInput | LiveryWhereUniqueInput[]
    update?: LiveryUpdateWithWhereUniqueWithoutAircraftInput | LiveryUpdateWithWhereUniqueWithoutAircraftInput[]
    updateMany?: LiveryUpdateManyWithWhereWithoutAircraftInput | LiveryUpdateManyWithWhereWithoutAircraftInput[]
    deleteMany?: LiveryScalarWhereInput | LiveryScalarWhereInput[]
  }

  export type AircraftMaintenanceUncheckedUpdateManyWithoutAircraftNestedInput = {
    create?: XOR<AircraftMaintenanceCreateWithoutAircraftInput, AircraftMaintenanceUncheckedCreateWithoutAircraftInput> | AircraftMaintenanceCreateWithoutAircraftInput[] | AircraftMaintenanceUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: AircraftMaintenanceCreateOrConnectWithoutAircraftInput | AircraftMaintenanceCreateOrConnectWithoutAircraftInput[]
    upsert?: AircraftMaintenanceUpsertWithWhereUniqueWithoutAircraftInput | AircraftMaintenanceUpsertWithWhereUniqueWithoutAircraftInput[]
    createMany?: AircraftMaintenanceCreateManyAircraftInputEnvelope
    set?: AircraftMaintenanceWhereUniqueInput | AircraftMaintenanceWhereUniqueInput[]
    disconnect?: AircraftMaintenanceWhereUniqueInput | AircraftMaintenanceWhereUniqueInput[]
    delete?: AircraftMaintenanceWhereUniqueInput | AircraftMaintenanceWhereUniqueInput[]
    connect?: AircraftMaintenanceWhereUniqueInput | AircraftMaintenanceWhereUniqueInput[]
    update?: AircraftMaintenanceUpdateWithWhereUniqueWithoutAircraftInput | AircraftMaintenanceUpdateWithWhereUniqueWithoutAircraftInput[]
    updateMany?: AircraftMaintenanceUpdateManyWithWhereWithoutAircraftInput | AircraftMaintenanceUpdateManyWithWhereWithoutAircraftInput[]
    deleteMany?: AircraftMaintenanceScalarWhereInput | AircraftMaintenanceScalarWhereInput[]
  }

  export type FlightUncheckedUpdateManyWithoutAircraftNestedInput = {
    create?: XOR<FlightCreateWithoutAircraftInput, FlightUncheckedCreateWithoutAircraftInput> | FlightCreateWithoutAircraftInput[] | FlightUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutAircraftInput | FlightCreateOrConnectWithoutAircraftInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutAircraftInput | FlightUpsertWithWhereUniqueWithoutAircraftInput[]
    createMany?: FlightCreateManyAircraftInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutAircraftInput | FlightUpdateWithWhereUniqueWithoutAircraftInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutAircraftInput | FlightUpdateManyWithWhereWithoutAircraftInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type LiveryUncheckedUpdateManyWithoutAircraftNestedInput = {
    create?: XOR<LiveryCreateWithoutAircraftInput, LiveryUncheckedCreateWithoutAircraftInput> | LiveryCreateWithoutAircraftInput[] | LiveryUncheckedCreateWithoutAircraftInput[]
    connectOrCreate?: LiveryCreateOrConnectWithoutAircraftInput | LiveryCreateOrConnectWithoutAircraftInput[]
    upsert?: LiveryUpsertWithWhereUniqueWithoutAircraftInput | LiveryUpsertWithWhereUniqueWithoutAircraftInput[]
    createMany?: LiveryCreateManyAircraftInputEnvelope
    set?: LiveryWhereUniqueInput | LiveryWhereUniqueInput[]
    disconnect?: LiveryWhereUniqueInput | LiveryWhereUniqueInput[]
    delete?: LiveryWhereUniqueInput | LiveryWhereUniqueInput[]
    connect?: LiveryWhereUniqueInput | LiveryWhereUniqueInput[]
    update?: LiveryUpdateWithWhereUniqueWithoutAircraftInput | LiveryUpdateWithWhereUniqueWithoutAircraftInput[]
    updateMany?: LiveryUpdateManyWithWhereWithoutAircraftInput | LiveryUpdateManyWithWhereWithoutAircraftInput[]
    deleteMany?: LiveryScalarWhereInput | LiveryScalarWhereInput[]
  }

  export type AircraftCreateNestedManyWithoutAircraftClassInput = {
    create?: XOR<AircraftCreateWithoutAircraftClassInput, AircraftUncheckedCreateWithoutAircraftClassInput> | AircraftCreateWithoutAircraftClassInput[] | AircraftUncheckedCreateWithoutAircraftClassInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutAircraftClassInput | AircraftCreateOrConnectWithoutAircraftClassInput[]
    createMany?: AircraftCreateManyAircraftClassInputEnvelope
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
  }

  export type AircraftUncheckedCreateNestedManyWithoutAircraftClassInput = {
    create?: XOR<AircraftCreateWithoutAircraftClassInput, AircraftUncheckedCreateWithoutAircraftClassInput> | AircraftCreateWithoutAircraftClassInput[] | AircraftUncheckedCreateWithoutAircraftClassInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutAircraftClassInput | AircraftCreateOrConnectWithoutAircraftClassInput[]
    createMany?: AircraftCreateManyAircraftClassInputEnvelope
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
  }

  export type AircraftUpdateManyWithoutAircraftClassNestedInput = {
    create?: XOR<AircraftCreateWithoutAircraftClassInput, AircraftUncheckedCreateWithoutAircraftClassInput> | AircraftCreateWithoutAircraftClassInput[] | AircraftUncheckedCreateWithoutAircraftClassInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutAircraftClassInput | AircraftCreateOrConnectWithoutAircraftClassInput[]
    upsert?: AircraftUpsertWithWhereUniqueWithoutAircraftClassInput | AircraftUpsertWithWhereUniqueWithoutAircraftClassInput[]
    createMany?: AircraftCreateManyAircraftClassInputEnvelope
    set?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    disconnect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    delete?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    update?: AircraftUpdateWithWhereUniqueWithoutAircraftClassInput | AircraftUpdateWithWhereUniqueWithoutAircraftClassInput[]
    updateMany?: AircraftUpdateManyWithWhereWithoutAircraftClassInput | AircraftUpdateManyWithWhereWithoutAircraftClassInput[]
    deleteMany?: AircraftScalarWhereInput | AircraftScalarWhereInput[]
  }

  export type AircraftUncheckedUpdateManyWithoutAircraftClassNestedInput = {
    create?: XOR<AircraftCreateWithoutAircraftClassInput, AircraftUncheckedCreateWithoutAircraftClassInput> | AircraftCreateWithoutAircraftClassInput[] | AircraftUncheckedCreateWithoutAircraftClassInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutAircraftClassInput | AircraftCreateOrConnectWithoutAircraftClassInput[]
    upsert?: AircraftUpsertWithWhereUniqueWithoutAircraftClassInput | AircraftUpsertWithWhereUniqueWithoutAircraftClassInput[]
    createMany?: AircraftCreateManyAircraftClassInputEnvelope
    set?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    disconnect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    delete?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    update?: AircraftUpdateWithWhereUniqueWithoutAircraftClassInput | AircraftUpdateWithWhereUniqueWithoutAircraftClassInput[]
    updateMany?: AircraftUpdateManyWithWhereWithoutAircraftClassInput | AircraftUpdateManyWithWhereWithoutAircraftClassInput[]
    deleteMany?: AircraftScalarWhereInput | AircraftScalarWhereInput[]
  }

  export type AircraftCreateNestedOneWithoutAircraftMaintenanceInput = {
    create?: XOR<AircraftCreateWithoutAircraftMaintenanceInput, AircraftUncheckedCreateWithoutAircraftMaintenanceInput>
    connectOrCreate?: AircraftCreateOrConnectWithoutAircraftMaintenanceInput
    connect?: AircraftWhereUniqueInput
  }

  export type AircraftUpdateOneRequiredWithoutAircraftMaintenanceNestedInput = {
    create?: XOR<AircraftCreateWithoutAircraftMaintenanceInput, AircraftUncheckedCreateWithoutAircraftMaintenanceInput>
    connectOrCreate?: AircraftCreateOrConnectWithoutAircraftMaintenanceInput
    upsert?: AircraftUpsertWithoutAircraftMaintenanceInput
    connect?: AircraftWhereUniqueInput
    update?: XOR<XOR<AircraftUpdateToOneWithWhereWithoutAircraftMaintenanceInput, AircraftUpdateWithoutAircraftMaintenanceInput>, AircraftUncheckedUpdateWithoutAircraftMaintenanceInput>
  }

  export type AircraftCreateNestedManyWithoutAircraftStatusInput = {
    create?: XOR<AircraftCreateWithoutAircraftStatusInput, AircraftUncheckedCreateWithoutAircraftStatusInput> | AircraftCreateWithoutAircraftStatusInput[] | AircraftUncheckedCreateWithoutAircraftStatusInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutAircraftStatusInput | AircraftCreateOrConnectWithoutAircraftStatusInput[]
    createMany?: AircraftCreateManyAircraftStatusInputEnvelope
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
  }

  export type AircraftUncheckedCreateNestedManyWithoutAircraftStatusInput = {
    create?: XOR<AircraftCreateWithoutAircraftStatusInput, AircraftUncheckedCreateWithoutAircraftStatusInput> | AircraftCreateWithoutAircraftStatusInput[] | AircraftUncheckedCreateWithoutAircraftStatusInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutAircraftStatusInput | AircraftCreateOrConnectWithoutAircraftStatusInput[]
    createMany?: AircraftCreateManyAircraftStatusInputEnvelope
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
  }

  export type AircraftUpdateManyWithoutAircraftStatusNestedInput = {
    create?: XOR<AircraftCreateWithoutAircraftStatusInput, AircraftUncheckedCreateWithoutAircraftStatusInput> | AircraftCreateWithoutAircraftStatusInput[] | AircraftUncheckedCreateWithoutAircraftStatusInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutAircraftStatusInput | AircraftCreateOrConnectWithoutAircraftStatusInput[]
    upsert?: AircraftUpsertWithWhereUniqueWithoutAircraftStatusInput | AircraftUpsertWithWhereUniqueWithoutAircraftStatusInput[]
    createMany?: AircraftCreateManyAircraftStatusInputEnvelope
    set?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    disconnect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    delete?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    update?: AircraftUpdateWithWhereUniqueWithoutAircraftStatusInput | AircraftUpdateWithWhereUniqueWithoutAircraftStatusInput[]
    updateMany?: AircraftUpdateManyWithWhereWithoutAircraftStatusInput | AircraftUpdateManyWithWhereWithoutAircraftStatusInput[]
    deleteMany?: AircraftScalarWhereInput | AircraftScalarWhereInput[]
  }

  export type AircraftUncheckedUpdateManyWithoutAircraftStatusNestedInput = {
    create?: XOR<AircraftCreateWithoutAircraftStatusInput, AircraftUncheckedCreateWithoutAircraftStatusInput> | AircraftCreateWithoutAircraftStatusInput[] | AircraftUncheckedCreateWithoutAircraftStatusInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutAircraftStatusInput | AircraftCreateOrConnectWithoutAircraftStatusInput[]
    upsert?: AircraftUpsertWithWhereUniqueWithoutAircraftStatusInput | AircraftUpsertWithWhereUniqueWithoutAircraftStatusInput[]
    createMany?: AircraftCreateManyAircraftStatusInputEnvelope
    set?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    disconnect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    delete?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    update?: AircraftUpdateWithWhereUniqueWithoutAircraftStatusInput | AircraftUpdateWithWhereUniqueWithoutAircraftStatusInput[]
    updateMany?: AircraftUpdateManyWithWhereWithoutAircraftStatusInput | AircraftUpdateManyWithWhereWithoutAircraftStatusInput[]
    deleteMany?: AircraftScalarWhereInput | AircraftScalarWhereInput[]
  }

  export type AircraftCreateNestedManyWithoutCurrentAirportInput = {
    create?: XOR<AircraftCreateWithoutCurrentAirportInput, AircraftUncheckedCreateWithoutCurrentAirportInput> | AircraftCreateWithoutCurrentAirportInput[] | AircraftUncheckedCreateWithoutCurrentAirportInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutCurrentAirportInput | AircraftCreateOrConnectWithoutCurrentAirportInput[]
    createMany?: AircraftCreateManyCurrentAirportInputEnvelope
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
  }

  export type FlightCreateNestedManyWithoutDepartureAirportInput = {
    create?: XOR<FlightCreateWithoutDepartureAirportInput, FlightUncheckedCreateWithoutDepartureAirportInput> | FlightCreateWithoutDepartureAirportInput[] | FlightUncheckedCreateWithoutDepartureAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutDepartureAirportInput | FlightCreateOrConnectWithoutDepartureAirportInput[]
    createMany?: FlightCreateManyDepartureAirportInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type FlightCreateNestedManyWithoutArrivalIntendedAirportInput = {
    create?: XOR<FlightCreateWithoutArrivalIntendedAirportInput, FlightUncheckedCreateWithoutArrivalIntendedAirportInput> | FlightCreateWithoutArrivalIntendedAirportInput[] | FlightUncheckedCreateWithoutArrivalIntendedAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalIntendedAirportInput | FlightCreateOrConnectWithoutArrivalIntendedAirportInput[]
    createMany?: FlightCreateManyArrivalIntendedAirportInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type FlightCreateNestedManyWithoutArrivalAlternateAirportInput = {
    create?: XOR<FlightCreateWithoutArrivalAlternateAirportInput, FlightUncheckedCreateWithoutArrivalAlternateAirportInput> | FlightCreateWithoutArrivalAlternateAirportInput[] | FlightUncheckedCreateWithoutArrivalAlternateAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalAlternateAirportInput | FlightCreateOrConnectWithoutArrivalAlternateAirportInput[]
    createMany?: FlightCreateManyArrivalAlternateAirportInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type FlightCreateNestedManyWithoutArrivalActualAirportInput = {
    create?: XOR<FlightCreateWithoutArrivalActualAirportInput, FlightUncheckedCreateWithoutArrivalActualAirportInput> | FlightCreateWithoutArrivalActualAirportInput[] | FlightUncheckedCreateWithoutArrivalActualAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalActualAirportInput | FlightCreateOrConnectWithoutArrivalActualAirportInput[]
    createMany?: FlightCreateManyArrivalActualAirportInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type AircraftUncheckedCreateNestedManyWithoutCurrentAirportInput = {
    create?: XOR<AircraftCreateWithoutCurrentAirportInput, AircraftUncheckedCreateWithoutCurrentAirportInput> | AircraftCreateWithoutCurrentAirportInput[] | AircraftUncheckedCreateWithoutCurrentAirportInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutCurrentAirportInput | AircraftCreateOrConnectWithoutCurrentAirportInput[]
    createMany?: AircraftCreateManyCurrentAirportInputEnvelope
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
  }

  export type FlightUncheckedCreateNestedManyWithoutDepartureAirportInput = {
    create?: XOR<FlightCreateWithoutDepartureAirportInput, FlightUncheckedCreateWithoutDepartureAirportInput> | FlightCreateWithoutDepartureAirportInput[] | FlightUncheckedCreateWithoutDepartureAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutDepartureAirportInput | FlightCreateOrConnectWithoutDepartureAirportInput[]
    createMany?: FlightCreateManyDepartureAirportInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type FlightUncheckedCreateNestedManyWithoutArrivalIntendedAirportInput = {
    create?: XOR<FlightCreateWithoutArrivalIntendedAirportInput, FlightUncheckedCreateWithoutArrivalIntendedAirportInput> | FlightCreateWithoutArrivalIntendedAirportInput[] | FlightUncheckedCreateWithoutArrivalIntendedAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalIntendedAirportInput | FlightCreateOrConnectWithoutArrivalIntendedAirportInput[]
    createMany?: FlightCreateManyArrivalIntendedAirportInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type FlightUncheckedCreateNestedManyWithoutArrivalAlternateAirportInput = {
    create?: XOR<FlightCreateWithoutArrivalAlternateAirportInput, FlightUncheckedCreateWithoutArrivalAlternateAirportInput> | FlightCreateWithoutArrivalAlternateAirportInput[] | FlightUncheckedCreateWithoutArrivalAlternateAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalAlternateAirportInput | FlightCreateOrConnectWithoutArrivalAlternateAirportInput[]
    createMany?: FlightCreateManyArrivalAlternateAirportInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type FlightUncheckedCreateNestedManyWithoutArrivalActualAirportInput = {
    create?: XOR<FlightCreateWithoutArrivalActualAirportInput, FlightUncheckedCreateWithoutArrivalActualAirportInput> | FlightCreateWithoutArrivalActualAirportInput[] | FlightUncheckedCreateWithoutArrivalActualAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalActualAirportInput | FlightCreateOrConnectWithoutArrivalActualAirportInput[]
    createMany?: FlightCreateManyArrivalActualAirportInputEnvelope
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
  }

  export type AircraftUpdateManyWithoutCurrentAirportNestedInput = {
    create?: XOR<AircraftCreateWithoutCurrentAirportInput, AircraftUncheckedCreateWithoutCurrentAirportInput> | AircraftCreateWithoutCurrentAirportInput[] | AircraftUncheckedCreateWithoutCurrentAirportInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutCurrentAirportInput | AircraftCreateOrConnectWithoutCurrentAirportInput[]
    upsert?: AircraftUpsertWithWhereUniqueWithoutCurrentAirportInput | AircraftUpsertWithWhereUniqueWithoutCurrentAirportInput[]
    createMany?: AircraftCreateManyCurrentAirportInputEnvelope
    set?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    disconnect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    delete?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    update?: AircraftUpdateWithWhereUniqueWithoutCurrentAirportInput | AircraftUpdateWithWhereUniqueWithoutCurrentAirportInput[]
    updateMany?: AircraftUpdateManyWithWhereWithoutCurrentAirportInput | AircraftUpdateManyWithWhereWithoutCurrentAirportInput[]
    deleteMany?: AircraftScalarWhereInput | AircraftScalarWhereInput[]
  }

  export type FlightUpdateManyWithoutDepartureAirportNestedInput = {
    create?: XOR<FlightCreateWithoutDepartureAirportInput, FlightUncheckedCreateWithoutDepartureAirportInput> | FlightCreateWithoutDepartureAirportInput[] | FlightUncheckedCreateWithoutDepartureAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutDepartureAirportInput | FlightCreateOrConnectWithoutDepartureAirportInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutDepartureAirportInput | FlightUpsertWithWhereUniqueWithoutDepartureAirportInput[]
    createMany?: FlightCreateManyDepartureAirportInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutDepartureAirportInput | FlightUpdateWithWhereUniqueWithoutDepartureAirportInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutDepartureAirportInput | FlightUpdateManyWithWhereWithoutDepartureAirportInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type FlightUpdateManyWithoutArrivalIntendedAirportNestedInput = {
    create?: XOR<FlightCreateWithoutArrivalIntendedAirportInput, FlightUncheckedCreateWithoutArrivalIntendedAirportInput> | FlightCreateWithoutArrivalIntendedAirportInput[] | FlightUncheckedCreateWithoutArrivalIntendedAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalIntendedAirportInput | FlightCreateOrConnectWithoutArrivalIntendedAirportInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutArrivalIntendedAirportInput | FlightUpsertWithWhereUniqueWithoutArrivalIntendedAirportInput[]
    createMany?: FlightCreateManyArrivalIntendedAirportInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutArrivalIntendedAirportInput | FlightUpdateWithWhereUniqueWithoutArrivalIntendedAirportInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutArrivalIntendedAirportInput | FlightUpdateManyWithWhereWithoutArrivalIntendedAirportInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type FlightUpdateManyWithoutArrivalAlternateAirportNestedInput = {
    create?: XOR<FlightCreateWithoutArrivalAlternateAirportInput, FlightUncheckedCreateWithoutArrivalAlternateAirportInput> | FlightCreateWithoutArrivalAlternateAirportInput[] | FlightUncheckedCreateWithoutArrivalAlternateAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalAlternateAirportInput | FlightCreateOrConnectWithoutArrivalAlternateAirportInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutArrivalAlternateAirportInput | FlightUpsertWithWhereUniqueWithoutArrivalAlternateAirportInput[]
    createMany?: FlightCreateManyArrivalAlternateAirportInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutArrivalAlternateAirportInput | FlightUpdateWithWhereUniqueWithoutArrivalAlternateAirportInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutArrivalAlternateAirportInput | FlightUpdateManyWithWhereWithoutArrivalAlternateAirportInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type FlightUpdateManyWithoutArrivalActualAirportNestedInput = {
    create?: XOR<FlightCreateWithoutArrivalActualAirportInput, FlightUncheckedCreateWithoutArrivalActualAirportInput> | FlightCreateWithoutArrivalActualAirportInput[] | FlightUncheckedCreateWithoutArrivalActualAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalActualAirportInput | FlightCreateOrConnectWithoutArrivalActualAirportInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutArrivalActualAirportInput | FlightUpsertWithWhereUniqueWithoutArrivalActualAirportInput[]
    createMany?: FlightCreateManyArrivalActualAirportInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutArrivalActualAirportInput | FlightUpdateWithWhereUniqueWithoutArrivalActualAirportInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutArrivalActualAirportInput | FlightUpdateManyWithWhereWithoutArrivalActualAirportInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type AircraftUncheckedUpdateManyWithoutCurrentAirportNestedInput = {
    create?: XOR<AircraftCreateWithoutCurrentAirportInput, AircraftUncheckedCreateWithoutCurrentAirportInput> | AircraftCreateWithoutCurrentAirportInput[] | AircraftUncheckedCreateWithoutCurrentAirportInput[]
    connectOrCreate?: AircraftCreateOrConnectWithoutCurrentAirportInput | AircraftCreateOrConnectWithoutCurrentAirportInput[]
    upsert?: AircraftUpsertWithWhereUniqueWithoutCurrentAirportInput | AircraftUpsertWithWhereUniqueWithoutCurrentAirportInput[]
    createMany?: AircraftCreateManyCurrentAirportInputEnvelope
    set?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    disconnect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    delete?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    connect?: AircraftWhereUniqueInput | AircraftWhereUniqueInput[]
    update?: AircraftUpdateWithWhereUniqueWithoutCurrentAirportInput | AircraftUpdateWithWhereUniqueWithoutCurrentAirportInput[]
    updateMany?: AircraftUpdateManyWithWhereWithoutCurrentAirportInput | AircraftUpdateManyWithWhereWithoutCurrentAirportInput[]
    deleteMany?: AircraftScalarWhereInput | AircraftScalarWhereInput[]
  }

  export type FlightUncheckedUpdateManyWithoutDepartureAirportNestedInput = {
    create?: XOR<FlightCreateWithoutDepartureAirportInput, FlightUncheckedCreateWithoutDepartureAirportInput> | FlightCreateWithoutDepartureAirportInput[] | FlightUncheckedCreateWithoutDepartureAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutDepartureAirportInput | FlightCreateOrConnectWithoutDepartureAirportInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutDepartureAirportInput | FlightUpsertWithWhereUniqueWithoutDepartureAirportInput[]
    createMany?: FlightCreateManyDepartureAirportInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutDepartureAirportInput | FlightUpdateWithWhereUniqueWithoutDepartureAirportInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutDepartureAirportInput | FlightUpdateManyWithWhereWithoutDepartureAirportInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type FlightUncheckedUpdateManyWithoutArrivalIntendedAirportNestedInput = {
    create?: XOR<FlightCreateWithoutArrivalIntendedAirportInput, FlightUncheckedCreateWithoutArrivalIntendedAirportInput> | FlightCreateWithoutArrivalIntendedAirportInput[] | FlightUncheckedCreateWithoutArrivalIntendedAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalIntendedAirportInput | FlightCreateOrConnectWithoutArrivalIntendedAirportInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutArrivalIntendedAirportInput | FlightUpsertWithWhereUniqueWithoutArrivalIntendedAirportInput[]
    createMany?: FlightCreateManyArrivalIntendedAirportInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutArrivalIntendedAirportInput | FlightUpdateWithWhereUniqueWithoutArrivalIntendedAirportInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutArrivalIntendedAirportInput | FlightUpdateManyWithWhereWithoutArrivalIntendedAirportInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type FlightUncheckedUpdateManyWithoutArrivalAlternateAirportNestedInput = {
    create?: XOR<FlightCreateWithoutArrivalAlternateAirportInput, FlightUncheckedCreateWithoutArrivalAlternateAirportInput> | FlightCreateWithoutArrivalAlternateAirportInput[] | FlightUncheckedCreateWithoutArrivalAlternateAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalAlternateAirportInput | FlightCreateOrConnectWithoutArrivalAlternateAirportInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutArrivalAlternateAirportInput | FlightUpsertWithWhereUniqueWithoutArrivalAlternateAirportInput[]
    createMany?: FlightCreateManyArrivalAlternateAirportInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutArrivalAlternateAirportInput | FlightUpdateWithWhereUniqueWithoutArrivalAlternateAirportInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutArrivalAlternateAirportInput | FlightUpdateManyWithWhereWithoutArrivalAlternateAirportInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type FlightUncheckedUpdateManyWithoutArrivalActualAirportNestedInput = {
    create?: XOR<FlightCreateWithoutArrivalActualAirportInput, FlightUncheckedCreateWithoutArrivalActualAirportInput> | FlightCreateWithoutArrivalActualAirportInput[] | FlightUncheckedCreateWithoutArrivalActualAirportInput[]
    connectOrCreate?: FlightCreateOrConnectWithoutArrivalActualAirportInput | FlightCreateOrConnectWithoutArrivalActualAirportInput[]
    upsert?: FlightUpsertWithWhereUniqueWithoutArrivalActualAirportInput | FlightUpsertWithWhereUniqueWithoutArrivalActualAirportInput[]
    createMany?: FlightCreateManyArrivalActualAirportInputEnvelope
    set?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    disconnect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    delete?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    connect?: FlightWhereUniqueInput | FlightWhereUniqueInput[]
    update?: FlightUpdateWithWhereUniqueWithoutArrivalActualAirportInput | FlightUpdateWithWhereUniqueWithoutArrivalActualAirportInput[]
    updateMany?: FlightUpdateManyWithWhereWithoutArrivalActualAirportInput | FlightUpdateManyWithWhereWithoutArrivalActualAirportInput[]
    deleteMany?: FlightScalarWhereInput | FlightScalarWhereInput[]
  }

  export type CompanyCreateNestedOneWithoutFlightsInput = {
    create?: XOR<CompanyCreateWithoutFlightsInput, CompanyUncheckedCreateWithoutFlightsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutFlightsInput
    connect?: CompanyWhereUniqueInput
  }

  export type VirtualAirlineCreateNestedOneWithoutFlightsInput = {
    create?: XOR<VirtualAirlineCreateWithoutFlightsInput, VirtualAirlineUncheckedCreateWithoutFlightsInput>
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutFlightsInput
    connect?: VirtualAirlineWhereUniqueInput
  }

  export type AircraftCreateNestedOneWithoutFlightsInput = {
    create?: XOR<AircraftCreateWithoutFlightsInput, AircraftUncheckedCreateWithoutFlightsInput>
    connectOrCreate?: AircraftCreateOrConnectWithoutFlightsInput
    connect?: AircraftWhereUniqueInput
  }

  export type FlightRouteCreateNestedManyWithoutFlightInput = {
    create?: XOR<FlightRouteCreateWithoutFlightInput, FlightRouteUncheckedCreateWithoutFlightInput> | FlightRouteCreateWithoutFlightInput[] | FlightRouteUncheckedCreateWithoutFlightInput[]
    connectOrCreate?: FlightRouteCreateOrConnectWithoutFlightInput | FlightRouteCreateOrConnectWithoutFlightInput[]
    createMany?: FlightRouteCreateManyFlightInputEnvelope
    connect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
  }

  export type AirportCreateNestedOneWithoutDepartingFlightsInput = {
    create?: XOR<AirportCreateWithoutDepartingFlightsInput, AirportUncheckedCreateWithoutDepartingFlightsInput>
    connectOrCreate?: AirportCreateOrConnectWithoutDepartingFlightsInput
    connect?: AirportWhereUniqueInput
  }

  export type AirportCreateNestedOneWithoutArrivingFlightsInput = {
    create?: XOR<AirportCreateWithoutArrivingFlightsInput, AirportUncheckedCreateWithoutArrivingFlightsInput>
    connectOrCreate?: AirportCreateOrConnectWithoutArrivingFlightsInput
    connect?: AirportWhereUniqueInput
  }

  export type AirportCreateNestedOneWithoutArrivingAlternateFlightsInput = {
    create?: XOR<AirportCreateWithoutArrivingAlternateFlightsInput, AirportUncheckedCreateWithoutArrivingAlternateFlightsInput>
    connectOrCreate?: AirportCreateOrConnectWithoutArrivingAlternateFlightsInput
    connect?: AirportWhereUniqueInput
  }

  export type AirportCreateNestedOneWithoutArrivingActualFlightsInput = {
    create?: XOR<AirportCreateWithoutArrivingActualFlightsInput, AirportUncheckedCreateWithoutArrivingActualFlightsInput>
    connectOrCreate?: AirportCreateOrConnectWithoutArrivingActualFlightsInput
    connect?: AirportWhereUniqueInput
  }

  export type MemberCreateNestedOneWithoutFlightsInput = {
    create?: XOR<MemberCreateWithoutFlightsInput, MemberUncheckedCreateWithoutFlightsInput>
    connectOrCreate?: MemberCreateOrConnectWithoutFlightsInput
    connect?: MemberWhereUniqueInput
  }

  export type FlightRouteUncheckedCreateNestedManyWithoutFlightInput = {
    create?: XOR<FlightRouteCreateWithoutFlightInput, FlightRouteUncheckedCreateWithoutFlightInput> | FlightRouteCreateWithoutFlightInput[] | FlightRouteUncheckedCreateWithoutFlightInput[]
    connectOrCreate?: FlightRouteCreateOrConnectWithoutFlightInput | FlightRouteCreateOrConnectWithoutFlightInput[]
    createMany?: FlightRouteCreateManyFlightInputEnvelope
    connect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
  }

  export type EnumFlightStatusFieldUpdateOperationsInput = {
    set?: $Enums.FlightStatus
  }

  export type CompanyUpdateOneRequiredWithoutFlightsNestedInput = {
    create?: XOR<CompanyCreateWithoutFlightsInput, CompanyUncheckedCreateWithoutFlightsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutFlightsInput
    upsert?: CompanyUpsertWithoutFlightsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutFlightsInput, CompanyUpdateWithoutFlightsInput>, CompanyUncheckedUpdateWithoutFlightsInput>
  }

  export type VirtualAirlineUpdateOneWithoutFlightsNestedInput = {
    create?: XOR<VirtualAirlineCreateWithoutFlightsInput, VirtualAirlineUncheckedCreateWithoutFlightsInput>
    connectOrCreate?: VirtualAirlineCreateOrConnectWithoutFlightsInput
    upsert?: VirtualAirlineUpsertWithoutFlightsInput
    disconnect?: VirtualAirlineWhereInput | boolean
    delete?: VirtualAirlineWhereInput | boolean
    connect?: VirtualAirlineWhereUniqueInput
    update?: XOR<XOR<VirtualAirlineUpdateToOneWithWhereWithoutFlightsInput, VirtualAirlineUpdateWithoutFlightsInput>, VirtualAirlineUncheckedUpdateWithoutFlightsInput>
  }

  export type AircraftUpdateOneWithoutFlightsNestedInput = {
    create?: XOR<AircraftCreateWithoutFlightsInput, AircraftUncheckedCreateWithoutFlightsInput>
    connectOrCreate?: AircraftCreateOrConnectWithoutFlightsInput
    upsert?: AircraftUpsertWithoutFlightsInput
    disconnect?: AircraftWhereInput | boolean
    delete?: AircraftWhereInput | boolean
    connect?: AircraftWhereUniqueInput
    update?: XOR<XOR<AircraftUpdateToOneWithWhereWithoutFlightsInput, AircraftUpdateWithoutFlightsInput>, AircraftUncheckedUpdateWithoutFlightsInput>
  }

  export type FlightRouteUpdateManyWithoutFlightNestedInput = {
    create?: XOR<FlightRouteCreateWithoutFlightInput, FlightRouteUncheckedCreateWithoutFlightInput> | FlightRouteCreateWithoutFlightInput[] | FlightRouteUncheckedCreateWithoutFlightInput[]
    connectOrCreate?: FlightRouteCreateOrConnectWithoutFlightInput | FlightRouteCreateOrConnectWithoutFlightInput[]
    upsert?: FlightRouteUpsertWithWhereUniqueWithoutFlightInput | FlightRouteUpsertWithWhereUniqueWithoutFlightInput[]
    createMany?: FlightRouteCreateManyFlightInputEnvelope
    set?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    disconnect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    delete?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    connect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    update?: FlightRouteUpdateWithWhereUniqueWithoutFlightInput | FlightRouteUpdateWithWhereUniqueWithoutFlightInput[]
    updateMany?: FlightRouteUpdateManyWithWhereWithoutFlightInput | FlightRouteUpdateManyWithWhereWithoutFlightInput[]
    deleteMany?: FlightRouteScalarWhereInput | FlightRouteScalarWhereInput[]
  }

  export type AirportUpdateOneWithoutDepartingFlightsNestedInput = {
    create?: XOR<AirportCreateWithoutDepartingFlightsInput, AirportUncheckedCreateWithoutDepartingFlightsInput>
    connectOrCreate?: AirportCreateOrConnectWithoutDepartingFlightsInput
    upsert?: AirportUpsertWithoutDepartingFlightsInput
    disconnect?: AirportWhereInput | boolean
    delete?: AirportWhereInput | boolean
    connect?: AirportWhereUniqueInput
    update?: XOR<XOR<AirportUpdateToOneWithWhereWithoutDepartingFlightsInput, AirportUpdateWithoutDepartingFlightsInput>, AirportUncheckedUpdateWithoutDepartingFlightsInput>
  }

  export type AirportUpdateOneWithoutArrivingFlightsNestedInput = {
    create?: XOR<AirportCreateWithoutArrivingFlightsInput, AirportUncheckedCreateWithoutArrivingFlightsInput>
    connectOrCreate?: AirportCreateOrConnectWithoutArrivingFlightsInput
    upsert?: AirportUpsertWithoutArrivingFlightsInput
    disconnect?: AirportWhereInput | boolean
    delete?: AirportWhereInput | boolean
    connect?: AirportWhereUniqueInput
    update?: XOR<XOR<AirportUpdateToOneWithWhereWithoutArrivingFlightsInput, AirportUpdateWithoutArrivingFlightsInput>, AirportUncheckedUpdateWithoutArrivingFlightsInput>
  }

  export type AirportUpdateOneWithoutArrivingAlternateFlightsNestedInput = {
    create?: XOR<AirportCreateWithoutArrivingAlternateFlightsInput, AirportUncheckedCreateWithoutArrivingAlternateFlightsInput>
    connectOrCreate?: AirportCreateOrConnectWithoutArrivingAlternateFlightsInput
    upsert?: AirportUpsertWithoutArrivingAlternateFlightsInput
    disconnect?: AirportWhereInput | boolean
    delete?: AirportWhereInput | boolean
    connect?: AirportWhereUniqueInput
    update?: XOR<XOR<AirportUpdateToOneWithWhereWithoutArrivingAlternateFlightsInput, AirportUpdateWithoutArrivingAlternateFlightsInput>, AirportUncheckedUpdateWithoutArrivingAlternateFlightsInput>
  }

  export type AirportUpdateOneWithoutArrivingActualFlightsNestedInput = {
    create?: XOR<AirportCreateWithoutArrivingActualFlightsInput, AirportUncheckedCreateWithoutArrivingActualFlightsInput>
    connectOrCreate?: AirportCreateOrConnectWithoutArrivingActualFlightsInput
    upsert?: AirportUpsertWithoutArrivingActualFlightsInput
    disconnect?: AirportWhereInput | boolean
    delete?: AirportWhereInput | boolean
    connect?: AirportWhereUniqueInput
    update?: XOR<XOR<AirportUpdateToOneWithWhereWithoutArrivingActualFlightsInput, AirportUpdateWithoutArrivingActualFlightsInput>, AirportUncheckedUpdateWithoutArrivingActualFlightsInput>
  }

  export type MemberUpdateOneWithoutFlightsNestedInput = {
    create?: XOR<MemberCreateWithoutFlightsInput, MemberUncheckedCreateWithoutFlightsInput>
    connectOrCreate?: MemberCreateOrConnectWithoutFlightsInput
    upsert?: MemberUpsertWithoutFlightsInput
    disconnect?: MemberWhereInput | boolean
    delete?: MemberWhereInput | boolean
    connect?: MemberWhereUniqueInput
    update?: XOR<XOR<MemberUpdateToOneWithWhereWithoutFlightsInput, MemberUpdateWithoutFlightsInput>, MemberUncheckedUpdateWithoutFlightsInput>
  }

  export type FlightRouteUncheckedUpdateManyWithoutFlightNestedInput = {
    create?: XOR<FlightRouteCreateWithoutFlightInput, FlightRouteUncheckedCreateWithoutFlightInput> | FlightRouteCreateWithoutFlightInput[] | FlightRouteUncheckedCreateWithoutFlightInput[]
    connectOrCreate?: FlightRouteCreateOrConnectWithoutFlightInput | FlightRouteCreateOrConnectWithoutFlightInput[]
    upsert?: FlightRouteUpsertWithWhereUniqueWithoutFlightInput | FlightRouteUpsertWithWhereUniqueWithoutFlightInput[]
    createMany?: FlightRouteCreateManyFlightInputEnvelope
    set?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    disconnect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    delete?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    connect?: FlightRouteWhereUniqueInput | FlightRouteWhereUniqueInput[]
    update?: FlightRouteUpdateWithWhereUniqueWithoutFlightInput | FlightRouteUpdateWithWhereUniqueWithoutFlightInput[]
    updateMany?: FlightRouteUpdateManyWithWhereWithoutFlightInput | FlightRouteUpdateManyWithWhereWithoutFlightInput[]
    deleteMany?: FlightRouteScalarWhereInput | FlightRouteScalarWhereInput[]
  }

  export type FlightCreateNestedOneWithoutFlightRouteInput = {
    create?: XOR<FlightCreateWithoutFlightRouteInput, FlightUncheckedCreateWithoutFlightRouteInput>
    connectOrCreate?: FlightCreateOrConnectWithoutFlightRouteInput
    connect?: FlightWhereUniqueInput
  }

  export type MemberCreateNestedOneWithoutFlightRoutesInput = {
    create?: XOR<MemberCreateWithoutFlightRoutesInput, MemberUncheckedCreateWithoutFlightRoutesInput>
    connectOrCreate?: MemberCreateOrConnectWithoutFlightRoutesInput
    connect?: MemberWhereUniqueInput
  }

  export type FlightUpdateOneWithoutFlightRouteNestedInput = {
    create?: XOR<FlightCreateWithoutFlightRouteInput, FlightUncheckedCreateWithoutFlightRouteInput>
    connectOrCreate?: FlightCreateOrConnectWithoutFlightRouteInput
    upsert?: FlightUpsertWithoutFlightRouteInput
    disconnect?: FlightWhereInput | boolean
    delete?: FlightWhereInput | boolean
    connect?: FlightWhereUniqueInput
    update?: XOR<XOR<FlightUpdateToOneWithWhereWithoutFlightRouteInput, FlightUpdateWithoutFlightRouteInput>, FlightUncheckedUpdateWithoutFlightRouteInput>
  }

  export type MemberUpdateOneRequiredWithoutFlightRoutesNestedInput = {
    create?: XOR<MemberCreateWithoutFlightRoutesInput, MemberUncheckedCreateWithoutFlightRoutesInput>
    connectOrCreate?: MemberCreateOrConnectWithoutFlightRoutesInput
    upsert?: MemberUpsertWithoutFlightRoutesInput
    connect?: MemberWhereUniqueInput
    update?: XOR<XOR<MemberUpdateToOneWithWhereWithoutFlightRoutesInput, MemberUpdateWithoutFlightRoutesInput>, MemberUncheckedUpdateWithoutFlightRoutesInput>
  }

  export type EnumJobTypeFieldUpdateOperationsInput = {
    set?: $Enums.JobType
  }

  export type EnumJobStatusFieldUpdateOperationsInput = {
    set?: $Enums.JobStatus
  }

  export type EnumCronExpressionFieldUpdateOperationsInput = {
    set?: $Enums.CronExpression
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumListenerEventStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ListenerEventStatus | EnumListenerEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListenerEventStatus[] | ListEnumListenerEventStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListenerEventStatus[] | ListEnumListenerEventStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListenerEventStatusFilter<$PrismaModel> | $Enums.ListenerEventStatus
  }

  export type NestedEnumListenerEventStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ListenerEventStatus | EnumListenerEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListenerEventStatus[] | ListEnumListenerEventStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListenerEventStatus[] | ListEnumListenerEventStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListenerEventStatusWithAggregatesFilter<$PrismaModel> | $Enums.ListenerEventStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumListenerEventStatusFilter<$PrismaModel>
    _max?: NestedEnumListenerEventStatusFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumFlightStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.FlightStatus | EnumFlightStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FlightStatus[] | ListEnumFlightStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FlightStatus[] | ListEnumFlightStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFlightStatusFilter<$PrismaModel> | $Enums.FlightStatus
  }

  export type NestedEnumFlightStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FlightStatus | EnumFlightStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FlightStatus[] | ListEnumFlightStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FlightStatus[] | ListEnumFlightStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFlightStatusWithAggregatesFilter<$PrismaModel> | $Enums.FlightStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFlightStatusFilter<$PrismaModel>
    _max?: NestedEnumFlightStatusFilter<$PrismaModel>
  }

  export type NestedEnumJobTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.JobType | EnumJobTypeFieldRefInput<$PrismaModel>
    in?: $Enums.JobType[] | ListEnumJobTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobType[] | ListEnumJobTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumJobTypeFilter<$PrismaModel> | $Enums.JobType
  }

  export type NestedEnumJobStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusFilter<$PrismaModel> | $Enums.JobStatus
  }

  export type NestedEnumCronExpressionFilter<$PrismaModel = never> = {
    equals?: $Enums.CronExpression | EnumCronExpressionFieldRefInput<$PrismaModel>
    in?: $Enums.CronExpression[] | ListEnumCronExpressionFieldRefInput<$PrismaModel>
    notIn?: $Enums.CronExpression[] | ListEnumCronExpressionFieldRefInput<$PrismaModel>
    not?: NestedEnumCronExpressionFilter<$PrismaModel> | $Enums.CronExpression
  }

  export type NestedEnumJobTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobType | EnumJobTypeFieldRefInput<$PrismaModel>
    in?: $Enums.JobType[] | ListEnumJobTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobType[] | ListEnumJobTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumJobTypeWithAggregatesFilter<$PrismaModel> | $Enums.JobType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobTypeFilter<$PrismaModel>
    _max?: NestedEnumJobTypeFilter<$PrismaModel>
  }

  export type NestedEnumJobStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusWithAggregatesFilter<$PrismaModel> | $Enums.JobStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobStatusFilter<$PrismaModel>
    _max?: NestedEnumJobStatusFilter<$PrismaModel>
  }

  export type NestedEnumCronExpressionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CronExpression | EnumCronExpressionFieldRefInput<$PrismaModel>
    in?: $Enums.CronExpression[] | ListEnumCronExpressionFieldRefInput<$PrismaModel>
    notIn?: $Enums.CronExpression[] | ListEnumCronExpressionFieldRefInput<$PrismaModel>
    not?: NestedEnumCronExpressionWithAggregatesFilter<$PrismaModel> | $Enums.CronExpression
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCronExpressionFilter<$PrismaModel>
    _max?: NestedEnumCronExpressionFilter<$PrismaModel>
  }

  export type UserCreateWithoutInviteCodeInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
    Roles?: RoleCreateNestedManyWithoutUsersInput
    PrivacySettings?: UserPrivacySettingsCreateNestedManyWithoutUserInput
    Members?: MemberCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutInviteCodeInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
    Roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    PrivacySettings?: UserPrivacySettingsUncheckedCreateNestedManyWithoutUserInput
    Members?: MemberUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutInviteCodeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInviteCodeInput, UserUncheckedCreateWithoutInviteCodeInput>
  }

  export type UserUpsertWithoutInviteCodeInput = {
    update: XOR<UserUpdateWithoutInviteCodeInput, UserUncheckedUpdateWithoutInviteCodeInput>
    create: XOR<UserCreateWithoutInviteCodeInput, UserUncheckedCreateWithoutInviteCodeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInviteCodeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInviteCodeInput, UserUncheckedUpdateWithoutInviteCodeInput>
  }

  export type UserUpdateWithoutInviteCodeInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Roles?: RoleUpdateManyWithoutUsersNestedInput
    PrivacySettings?: UserPrivacySettingsUpdateManyWithoutUserNestedInput
    Members?: MemberUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutInviteCodeInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    PrivacySettings?: UserPrivacySettingsUncheckedUpdateManyWithoutUserNestedInput
    Members?: MemberUncheckedUpdateManyWithoutUserNestedInput
  }

  export type DiscordMessageTemplateCreateWithoutDiscordMessagesInput = {
    Slug: string
    Name: string
    Description?: string | null
    Content: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type DiscordMessageTemplateUncheckedCreateWithoutDiscordMessagesInput = {
    Id?: number
    Slug: string
    Name: string
    Description?: string | null
    Content: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type DiscordMessageTemplateCreateOrConnectWithoutDiscordMessagesInput = {
    where: DiscordMessageTemplateWhereUniqueInput
    create: XOR<DiscordMessageTemplateCreateWithoutDiscordMessagesInput, DiscordMessageTemplateUncheckedCreateWithoutDiscordMessagesInput>
  }

  export type DiscordChannelWebhookCreateWithoutDiscordMessagesInput = {
    Id?: string
    Name?: string
    Description?: string | null
    WebhookUrl: string
    ChannelId: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    ListenerEventSenders?: ListenerEventSenderCreateNestedManyWithoutDiscordChannelWebhookInput
  }

  export type DiscordChannelWebhookUncheckedCreateWithoutDiscordMessagesInput = {
    Id?: string
    Name?: string
    Description?: string | null
    WebhookUrl: string
    ChannelId: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    ListenerEventSenders?: ListenerEventSenderUncheckedCreateNestedManyWithoutDiscordChannelWebhookInput
  }

  export type DiscordChannelWebhookCreateOrConnectWithoutDiscordMessagesInput = {
    where: DiscordChannelWebhookWhereUniqueInput
    create: XOR<DiscordChannelWebhookCreateWithoutDiscordMessagesInput, DiscordChannelWebhookUncheckedCreateWithoutDiscordMessagesInput>
  }

  export type ListenerEventCreateWithoutDiscordMessageInput = {
    Variant: string
    Type: string
    SentAt: Date | string
    Status?: $Enums.ListenerEventStatus
    Error?: string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Sender: ListenerEventSenderCreateNestedOneWithoutListenerEventsInput
  }

  export type ListenerEventUncheckedCreateWithoutDiscordMessageInput = {
    Id?: number
    Variant: string
    Type: string
    SentAt: Date | string
    Status?: $Enums.ListenerEventStatus
    SenderId: string
    Error?: string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type ListenerEventCreateOrConnectWithoutDiscordMessageInput = {
    where: ListenerEventWhereUniqueInput
    create: XOR<ListenerEventCreateWithoutDiscordMessageInput, ListenerEventUncheckedCreateWithoutDiscordMessageInput>
  }

  export type ListenerEventCreateManyDiscordMessageInputEnvelope = {
    data: ListenerEventCreateManyDiscordMessageInput | ListenerEventCreateManyDiscordMessageInput[]
    skipDuplicates?: boolean
  }

  export type DiscordMessageTemplateUpsertWithoutDiscordMessagesInput = {
    update: XOR<DiscordMessageTemplateUpdateWithoutDiscordMessagesInput, DiscordMessageTemplateUncheckedUpdateWithoutDiscordMessagesInput>
    create: XOR<DiscordMessageTemplateCreateWithoutDiscordMessagesInput, DiscordMessageTemplateUncheckedCreateWithoutDiscordMessagesInput>
    where?: DiscordMessageTemplateWhereInput
  }

  export type DiscordMessageTemplateUpdateToOneWithWhereWithoutDiscordMessagesInput = {
    where?: DiscordMessageTemplateWhereInput
    data: XOR<DiscordMessageTemplateUpdateWithoutDiscordMessagesInput, DiscordMessageTemplateUncheckedUpdateWithoutDiscordMessagesInput>
  }

  export type DiscordMessageTemplateUpdateWithoutDiscordMessagesInput = {
    Slug?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Content?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscordMessageTemplateUncheckedUpdateWithoutDiscordMessagesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Slug?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Content?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscordChannelWebhookUpsertWithoutDiscordMessagesInput = {
    update: XOR<DiscordChannelWebhookUpdateWithoutDiscordMessagesInput, DiscordChannelWebhookUncheckedUpdateWithoutDiscordMessagesInput>
    create: XOR<DiscordChannelWebhookCreateWithoutDiscordMessagesInput, DiscordChannelWebhookUncheckedCreateWithoutDiscordMessagesInput>
    where?: DiscordChannelWebhookWhereInput
  }

  export type DiscordChannelWebhookUpdateToOneWithWhereWithoutDiscordMessagesInput = {
    where?: DiscordChannelWebhookWhereInput
    data: XOR<DiscordChannelWebhookUpdateWithoutDiscordMessagesInput, DiscordChannelWebhookUncheckedUpdateWithoutDiscordMessagesInput>
  }

  export type DiscordChannelWebhookUpdateWithoutDiscordMessagesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WebhookUrl?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListenerEventSenders?: ListenerEventSenderUpdateManyWithoutDiscordChannelWebhookNestedInput
  }

  export type DiscordChannelWebhookUncheckedUpdateWithoutDiscordMessagesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WebhookUrl?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListenerEventSenders?: ListenerEventSenderUncheckedUpdateManyWithoutDiscordChannelWebhookNestedInput
  }

  export type ListenerEventUpsertWithWhereUniqueWithoutDiscordMessageInput = {
    where: ListenerEventWhereUniqueInput
    update: XOR<ListenerEventUpdateWithoutDiscordMessageInput, ListenerEventUncheckedUpdateWithoutDiscordMessageInput>
    create: XOR<ListenerEventCreateWithoutDiscordMessageInput, ListenerEventUncheckedCreateWithoutDiscordMessageInput>
  }

  export type ListenerEventUpdateWithWhereUniqueWithoutDiscordMessageInput = {
    where: ListenerEventWhereUniqueInput
    data: XOR<ListenerEventUpdateWithoutDiscordMessageInput, ListenerEventUncheckedUpdateWithoutDiscordMessageInput>
  }

  export type ListenerEventUpdateManyWithWhereWithoutDiscordMessageInput = {
    where: ListenerEventScalarWhereInput
    data: XOR<ListenerEventUpdateManyMutationInput, ListenerEventUncheckedUpdateManyWithoutDiscordMessageInput>
  }

  export type ListenerEventScalarWhereInput = {
    AND?: ListenerEventScalarWhereInput | ListenerEventScalarWhereInput[]
    OR?: ListenerEventScalarWhereInput[]
    NOT?: ListenerEventScalarWhereInput | ListenerEventScalarWhereInput[]
    Id?: IntFilter<"ListenerEvent"> | number
    Variant?: StringFilter<"ListenerEvent"> | string
    Type?: StringFilter<"ListenerEvent"> | string
    SentAt?: DateTimeFilter<"ListenerEvent"> | Date | string
    Status?: EnumListenerEventStatusFilter<"ListenerEvent"> | $Enums.ListenerEventStatus
    SenderId?: UuidFilter<"ListenerEvent"> | string
    Error?: StringNullableFilter<"ListenerEvent"> | string | null
    Data?: JsonNullableFilter<"ListenerEvent">
    DiscordMessageId?: UuidNullableFilter<"ListenerEvent"> | string | null
    DeliveredAt?: DateTimeNullableFilter<"ListenerEvent"> | Date | string | null
    CreatedAt?: DateTimeFilter<"ListenerEvent"> | Date | string
    UpdatedAt?: DateTimeFilter<"ListenerEvent"> | Date | string
  }

  export type DiscordMessageCreateWithoutDiscordMessageTemplateInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordChannelWebhook?: DiscordChannelWebhookCreateNestedOneWithoutDiscordMessagesInput
    ListenerEvents?: ListenerEventCreateNestedManyWithoutDiscordMessageInput
  }

  export type DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordChannelWebhookId?: string | null
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    ListenerEvents?: ListenerEventUncheckedCreateNestedManyWithoutDiscordMessageInput
  }

  export type DiscordMessageCreateOrConnectWithoutDiscordMessageTemplateInput = {
    where: DiscordMessageWhereUniqueInput
    create: XOR<DiscordMessageCreateWithoutDiscordMessageTemplateInput, DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput>
  }

  export type DiscordMessageCreateManyDiscordMessageTemplateInputEnvelope = {
    data: DiscordMessageCreateManyDiscordMessageTemplateInput | DiscordMessageCreateManyDiscordMessageTemplateInput[]
    skipDuplicates?: boolean
  }

  export type DiscordMessageUpsertWithWhereUniqueWithoutDiscordMessageTemplateInput = {
    where: DiscordMessageWhereUniqueInput
    update: XOR<DiscordMessageUpdateWithoutDiscordMessageTemplateInput, DiscordMessageUncheckedUpdateWithoutDiscordMessageTemplateInput>
    create: XOR<DiscordMessageCreateWithoutDiscordMessageTemplateInput, DiscordMessageUncheckedCreateWithoutDiscordMessageTemplateInput>
  }

  export type DiscordMessageUpdateWithWhereUniqueWithoutDiscordMessageTemplateInput = {
    where: DiscordMessageWhereUniqueInput
    data: XOR<DiscordMessageUpdateWithoutDiscordMessageTemplateInput, DiscordMessageUncheckedUpdateWithoutDiscordMessageTemplateInput>
  }

  export type DiscordMessageUpdateManyWithWhereWithoutDiscordMessageTemplateInput = {
    where: DiscordMessageScalarWhereInput
    data: XOR<DiscordMessageUpdateManyMutationInput, DiscordMessageUncheckedUpdateManyWithoutDiscordMessageTemplateInput>
  }

  export type DiscordMessageScalarWhereInput = {
    AND?: DiscordMessageScalarWhereInput | DiscordMessageScalarWhereInput[]
    OR?: DiscordMessageScalarWhereInput[]
    NOT?: DiscordMessageScalarWhereInput | DiscordMessageScalarWhereInput[]
    Id?: UuidFilter<"DiscordMessage"> | string
    ChannelId?: StringFilter<"DiscordMessage"> | string
    Content?: StringFilter<"DiscordMessage"> | string
    DiscordMessageTemplateId?: IntNullableFilter<"DiscordMessage"> | number | null
    DiscordChannelWebhookId?: UuidNullableFilter<"DiscordMessage"> | string | null
    DiscordMessageSentAt?: DateTimeNullableFilter<"DiscordMessage"> | Date | string | null
    CreatedAt?: DateTimeFilter<"DiscordMessage"> | Date | string
    UpdatedAt?: DateTimeFilter<"DiscordMessage"> | Date | string
  }

  export type DiscordMessageCreateWithoutDiscordChannelWebhookInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessageTemplate?: DiscordMessageTemplateCreateNestedOneWithoutDiscordMessagesInput
    ListenerEvents?: ListenerEventCreateNestedManyWithoutDiscordMessageInput
  }

  export type DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordMessageTemplateId?: number | null
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    ListenerEvents?: ListenerEventUncheckedCreateNestedManyWithoutDiscordMessageInput
  }

  export type DiscordMessageCreateOrConnectWithoutDiscordChannelWebhookInput = {
    where: DiscordMessageWhereUniqueInput
    create: XOR<DiscordMessageCreateWithoutDiscordChannelWebhookInput, DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput>
  }

  export type DiscordMessageCreateManyDiscordChannelWebhookInputEnvelope = {
    data: DiscordMessageCreateManyDiscordChannelWebhookInput | DiscordMessageCreateManyDiscordChannelWebhookInput[]
    skipDuplicates?: boolean
  }

  export type ListenerEventSenderCreateWithoutDiscordChannelWebhookInput = {
    Id?: string
    Name: string
    Description?: string | null
    Slug: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    ListenerEvents?: ListenerEventCreateNestedManyWithoutSenderInput
  }

  export type ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput = {
    Id?: string
    Name: string
    Description?: string | null
    Slug: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    ListenerEvents?: ListenerEventUncheckedCreateNestedManyWithoutSenderInput
  }

  export type ListenerEventSenderCreateOrConnectWithoutDiscordChannelWebhookInput = {
    where: ListenerEventSenderWhereUniqueInput
    create: XOR<ListenerEventSenderCreateWithoutDiscordChannelWebhookInput, ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput>
  }

  export type ListenerEventSenderCreateManyDiscordChannelWebhookInputEnvelope = {
    data: ListenerEventSenderCreateManyDiscordChannelWebhookInput | ListenerEventSenderCreateManyDiscordChannelWebhookInput[]
    skipDuplicates?: boolean
  }

  export type DiscordMessageUpsertWithWhereUniqueWithoutDiscordChannelWebhookInput = {
    where: DiscordMessageWhereUniqueInput
    update: XOR<DiscordMessageUpdateWithoutDiscordChannelWebhookInput, DiscordMessageUncheckedUpdateWithoutDiscordChannelWebhookInput>
    create: XOR<DiscordMessageCreateWithoutDiscordChannelWebhookInput, DiscordMessageUncheckedCreateWithoutDiscordChannelWebhookInput>
  }

  export type DiscordMessageUpdateWithWhereUniqueWithoutDiscordChannelWebhookInput = {
    where: DiscordMessageWhereUniqueInput
    data: XOR<DiscordMessageUpdateWithoutDiscordChannelWebhookInput, DiscordMessageUncheckedUpdateWithoutDiscordChannelWebhookInput>
  }

  export type DiscordMessageUpdateManyWithWhereWithoutDiscordChannelWebhookInput = {
    where: DiscordMessageScalarWhereInput
    data: XOR<DiscordMessageUpdateManyMutationInput, DiscordMessageUncheckedUpdateManyWithoutDiscordChannelWebhookInput>
  }

  export type ListenerEventSenderUpsertWithWhereUniqueWithoutDiscordChannelWebhookInput = {
    where: ListenerEventSenderWhereUniqueInput
    update: XOR<ListenerEventSenderUpdateWithoutDiscordChannelWebhookInput, ListenerEventSenderUncheckedUpdateWithoutDiscordChannelWebhookInput>
    create: XOR<ListenerEventSenderCreateWithoutDiscordChannelWebhookInput, ListenerEventSenderUncheckedCreateWithoutDiscordChannelWebhookInput>
  }

  export type ListenerEventSenderUpdateWithWhereUniqueWithoutDiscordChannelWebhookInput = {
    where: ListenerEventSenderWhereUniqueInput
    data: XOR<ListenerEventSenderUpdateWithoutDiscordChannelWebhookInput, ListenerEventSenderUncheckedUpdateWithoutDiscordChannelWebhookInput>
  }

  export type ListenerEventSenderUpdateManyWithWhereWithoutDiscordChannelWebhookInput = {
    where: ListenerEventSenderScalarWhereInput
    data: XOR<ListenerEventSenderUpdateManyMutationInput, ListenerEventSenderUncheckedUpdateManyWithoutDiscordChannelWebhookInput>
  }

  export type ListenerEventSenderScalarWhereInput = {
    AND?: ListenerEventSenderScalarWhereInput | ListenerEventSenderScalarWhereInput[]
    OR?: ListenerEventSenderScalarWhereInput[]
    NOT?: ListenerEventSenderScalarWhereInput | ListenerEventSenderScalarWhereInput[]
    Id?: UuidFilter<"ListenerEventSender"> | string
    Name?: StringFilter<"ListenerEventSender"> | string
    Description?: StringNullableFilter<"ListenerEventSender"> | string | null
    Slug?: StringFilter<"ListenerEventSender"> | string
    Token?: StringFilter<"ListenerEventSender"> | string
    IsActive?: BoolFilter<"ListenerEventSender"> | boolean
    DiscordChannelWebhookId?: UuidNullableFilter<"ListenerEventSender"> | string | null
    CreatedAt?: DateTimeFilter<"ListenerEventSender"> | Date | string
    UpdatedAt?: DateTimeFilter<"ListenerEventSender"> | Date | string
  }

  export type DiscordMessageCreateWithoutListenerEventsInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessageTemplate?: DiscordMessageTemplateCreateNestedOneWithoutDiscordMessagesInput
    DiscordChannelWebhook?: DiscordChannelWebhookCreateNestedOneWithoutDiscordMessagesInput
  }

  export type DiscordMessageUncheckedCreateWithoutListenerEventsInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordMessageTemplateId?: number | null
    DiscordChannelWebhookId?: string | null
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type DiscordMessageCreateOrConnectWithoutListenerEventsInput = {
    where: DiscordMessageWhereUniqueInput
    create: XOR<DiscordMessageCreateWithoutListenerEventsInput, DiscordMessageUncheckedCreateWithoutListenerEventsInput>
  }

  export type ListenerEventSenderCreateWithoutListenerEventsInput = {
    Id?: string
    Name: string
    Description?: string | null
    Slug: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordChannelWebhook?: DiscordChannelWebhookCreateNestedOneWithoutListenerEventSendersInput
  }

  export type ListenerEventSenderUncheckedCreateWithoutListenerEventsInput = {
    Id?: string
    Name: string
    Description?: string | null
    Slug: string
    Token: string
    IsActive?: boolean
    DiscordChannelWebhookId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type ListenerEventSenderCreateOrConnectWithoutListenerEventsInput = {
    where: ListenerEventSenderWhereUniqueInput
    create: XOR<ListenerEventSenderCreateWithoutListenerEventsInput, ListenerEventSenderUncheckedCreateWithoutListenerEventsInput>
  }

  export type DiscordMessageUpsertWithoutListenerEventsInput = {
    update: XOR<DiscordMessageUpdateWithoutListenerEventsInput, DiscordMessageUncheckedUpdateWithoutListenerEventsInput>
    create: XOR<DiscordMessageCreateWithoutListenerEventsInput, DiscordMessageUncheckedCreateWithoutListenerEventsInput>
    where?: DiscordMessageWhereInput
  }

  export type DiscordMessageUpdateToOneWithWhereWithoutListenerEventsInput = {
    where?: DiscordMessageWhereInput
    data: XOR<DiscordMessageUpdateWithoutListenerEventsInput, DiscordMessageUncheckedUpdateWithoutListenerEventsInput>
  }

  export type DiscordMessageUpdateWithoutListenerEventsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessageTemplate?: DiscordMessageTemplateUpdateOneWithoutDiscordMessagesNestedInput
    DiscordChannelWebhook?: DiscordChannelWebhookUpdateOneWithoutDiscordMessagesNestedInput
  }

  export type DiscordMessageUncheckedUpdateWithoutListenerEventsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordMessageTemplateId?: NullableIntFieldUpdateOperationsInput | number | null
    DiscordChannelWebhookId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventSenderUpsertWithoutListenerEventsInput = {
    update: XOR<ListenerEventSenderUpdateWithoutListenerEventsInput, ListenerEventSenderUncheckedUpdateWithoutListenerEventsInput>
    create: XOR<ListenerEventSenderCreateWithoutListenerEventsInput, ListenerEventSenderUncheckedCreateWithoutListenerEventsInput>
    where?: ListenerEventSenderWhereInput
  }

  export type ListenerEventSenderUpdateToOneWithWhereWithoutListenerEventsInput = {
    where?: ListenerEventSenderWhereInput
    data: XOR<ListenerEventSenderUpdateWithoutListenerEventsInput, ListenerEventSenderUncheckedUpdateWithoutListenerEventsInput>
  }

  export type ListenerEventSenderUpdateWithoutListenerEventsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordChannelWebhook?: DiscordChannelWebhookUpdateOneWithoutListenerEventSendersNestedInput
  }

  export type ListenerEventSenderUncheckedUpdateWithoutListenerEventsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DiscordChannelWebhookId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventCreateWithoutSenderInput = {
    Variant: string
    Type: string
    SentAt: Date | string
    Status?: $Enums.ListenerEventStatus
    Error?: string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessage?: DiscordMessageCreateNestedOneWithoutListenerEventsInput
  }

  export type ListenerEventUncheckedCreateWithoutSenderInput = {
    Id?: number
    Variant: string
    Type: string
    SentAt: Date | string
    Status?: $Enums.ListenerEventStatus
    Error?: string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DiscordMessageId?: string | null
    DeliveredAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type ListenerEventCreateOrConnectWithoutSenderInput = {
    where: ListenerEventWhereUniqueInput
    create: XOR<ListenerEventCreateWithoutSenderInput, ListenerEventUncheckedCreateWithoutSenderInput>
  }

  export type ListenerEventCreateManySenderInputEnvelope = {
    data: ListenerEventCreateManySenderInput | ListenerEventCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type DiscordChannelWebhookCreateWithoutListenerEventSendersInput = {
    Id?: string
    Name?: string
    Description?: string | null
    WebhookUrl: string
    ChannelId: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessages?: DiscordMessageCreateNestedManyWithoutDiscordChannelWebhookInput
  }

  export type DiscordChannelWebhookUncheckedCreateWithoutListenerEventSendersInput = {
    Id?: string
    Name?: string
    Description?: string | null
    WebhookUrl: string
    ChannelId: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordMessages?: DiscordMessageUncheckedCreateNestedManyWithoutDiscordChannelWebhookInput
  }

  export type DiscordChannelWebhookCreateOrConnectWithoutListenerEventSendersInput = {
    where: DiscordChannelWebhookWhereUniqueInput
    create: XOR<DiscordChannelWebhookCreateWithoutListenerEventSendersInput, DiscordChannelWebhookUncheckedCreateWithoutListenerEventSendersInput>
  }

  export type ListenerEventUpsertWithWhereUniqueWithoutSenderInput = {
    where: ListenerEventWhereUniqueInput
    update: XOR<ListenerEventUpdateWithoutSenderInput, ListenerEventUncheckedUpdateWithoutSenderInput>
    create: XOR<ListenerEventCreateWithoutSenderInput, ListenerEventUncheckedCreateWithoutSenderInput>
  }

  export type ListenerEventUpdateWithWhereUniqueWithoutSenderInput = {
    where: ListenerEventWhereUniqueInput
    data: XOR<ListenerEventUpdateWithoutSenderInput, ListenerEventUncheckedUpdateWithoutSenderInput>
  }

  export type ListenerEventUpdateManyWithWhereWithoutSenderInput = {
    where: ListenerEventScalarWhereInput
    data: XOR<ListenerEventUpdateManyMutationInput, ListenerEventUncheckedUpdateManyWithoutSenderInput>
  }

  export type DiscordChannelWebhookUpsertWithoutListenerEventSendersInput = {
    update: XOR<DiscordChannelWebhookUpdateWithoutListenerEventSendersInput, DiscordChannelWebhookUncheckedUpdateWithoutListenerEventSendersInput>
    create: XOR<DiscordChannelWebhookCreateWithoutListenerEventSendersInput, DiscordChannelWebhookUncheckedCreateWithoutListenerEventSendersInput>
    where?: DiscordChannelWebhookWhereInput
  }

  export type DiscordChannelWebhookUpdateToOneWithWhereWithoutListenerEventSendersInput = {
    where?: DiscordChannelWebhookWhereInput
    data: XOR<DiscordChannelWebhookUpdateWithoutListenerEventSendersInput, DiscordChannelWebhookUncheckedUpdateWithoutListenerEventSendersInput>
  }

  export type DiscordChannelWebhookUpdateWithoutListenerEventSendersInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WebhookUrl?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessages?: DiscordMessageUpdateManyWithoutDiscordChannelWebhookNestedInput
  }

  export type DiscordChannelWebhookUncheckedUpdateWithoutListenerEventSendersInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WebhookUrl?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessages?: DiscordMessageUncheckedUpdateManyWithoutDiscordChannelWebhookNestedInput
  }

  export type RoleCreateWithoutUsersInput = {
    Name: string
    Description?: string | null
    Slug: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Permissions?: PermissionCreateNestedManyWithoutRolesInput
    VirtualAirlineRole?: VirtualAirlineRoleCreateNestedOneWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutUsersInput = {
    Id?: number
    Name: string
    Description?: string | null
    Slug: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirlineRoleId?: string | null
    Permissions?: PermissionUncheckedCreateNestedManyWithoutRolesInput
  }

  export type RoleCreateOrConnectWithoutUsersInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
  }

  export type UserPrivacySettingsCreateWithoutUserInput = {
    Id?: string
    ShowOnlineStatus?: boolean
    ShowFirstName?: boolean
    ShowLastName?: boolean
    ShowLastNameInitial?: boolean
    ShowLastLogin?: boolean
    CreatedAt?: Date | string
  }

  export type UserPrivacySettingsUncheckedCreateWithoutUserInput = {
    Id?: string
    ShowOnlineStatus?: boolean
    ShowFirstName?: boolean
    ShowLastName?: boolean
    ShowLastNameInitial?: boolean
    ShowLastLogin?: boolean
    CreatedAt?: Date | string
  }

  export type UserPrivacySettingsCreateOrConnectWithoutUserInput = {
    where: UserPrivacySettingsWhereUniqueInput
    create: XOR<UserPrivacySettingsCreateWithoutUserInput, UserPrivacySettingsUncheckedCreateWithoutUserInput>
  }

  export type UserPrivacySettingsCreateManyUserInputEnvelope = {
    data: UserPrivacySettingsCreateManyUserInput | UserPrivacySettingsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type MemberCreateWithoutUserInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Company: CompanyCreateNestedOneWithoutOwnerInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutMembersInput
    VARole: VirtualAirlineRoleCreateNestedOneWithoutMembersInput
    Flights?: FlightCreateNestedManyWithoutMemberInput
    FlightRoutes?: FlightRouteCreateNestedManyWithoutMemberInput
  }

  export type MemberUncheckedCreateWithoutUserInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VAId: string
    VARoleId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    CompanyId: string
    Flights?: FlightUncheckedCreateNestedManyWithoutMemberInput
    FlightRoutes?: FlightRouteUncheckedCreateNestedManyWithoutMemberInput
  }

  export type MemberCreateOrConnectWithoutUserInput = {
    where: MemberWhereUniqueInput
    create: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput>
  }

  export type MemberCreateManyUserInputEnvelope = {
    data: MemberCreateManyUserInput | MemberCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type InviteCodeCreateWithoutUserInput = {
    Id?: string
    Code: string
    IsUsed?: boolean
    UsedAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type InviteCodeUncheckedCreateWithoutUserInput = {
    Id?: string
    Code: string
    IsUsed?: boolean
    UsedAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type InviteCodeCreateOrConnectWithoutUserInput = {
    where: InviteCodeWhereUniqueInput
    create: XOR<InviteCodeCreateWithoutUserInput, InviteCodeUncheckedCreateWithoutUserInput>
  }

  export type RoleUpsertWithWhereUniqueWithoutUsersInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutUsersInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type RoleUpdateManyWithWhereWithoutUsersInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutUsersInput>
  }

  export type RoleScalarWhereInput = {
    AND?: RoleScalarWhereInput | RoleScalarWhereInput[]
    OR?: RoleScalarWhereInput[]
    NOT?: RoleScalarWhereInput | RoleScalarWhereInput[]
    Id?: IntFilter<"Role"> | number
    Name?: StringFilter<"Role"> | string
    Description?: StringNullableFilter<"Role"> | string | null
    Slug?: StringFilter<"Role"> | string
    CreatedAt?: DateTimeFilter<"Role"> | Date | string
    UpdatedAt?: DateTimeFilter<"Role"> | Date | string
    VirtualAirlineRoleId?: UuidNullableFilter<"Role"> | string | null
  }

  export type UserPrivacySettingsUpsertWithWhereUniqueWithoutUserInput = {
    where: UserPrivacySettingsWhereUniqueInput
    update: XOR<UserPrivacySettingsUpdateWithoutUserInput, UserPrivacySettingsUncheckedUpdateWithoutUserInput>
    create: XOR<UserPrivacySettingsCreateWithoutUserInput, UserPrivacySettingsUncheckedCreateWithoutUserInput>
  }

  export type UserPrivacySettingsUpdateWithWhereUniqueWithoutUserInput = {
    where: UserPrivacySettingsWhereUniqueInput
    data: XOR<UserPrivacySettingsUpdateWithoutUserInput, UserPrivacySettingsUncheckedUpdateWithoutUserInput>
  }

  export type UserPrivacySettingsUpdateManyWithWhereWithoutUserInput = {
    where: UserPrivacySettingsScalarWhereInput
    data: XOR<UserPrivacySettingsUpdateManyMutationInput, UserPrivacySettingsUncheckedUpdateManyWithoutUserInput>
  }

  export type UserPrivacySettingsScalarWhereInput = {
    AND?: UserPrivacySettingsScalarWhereInput | UserPrivacySettingsScalarWhereInput[]
    OR?: UserPrivacySettingsScalarWhereInput[]
    NOT?: UserPrivacySettingsScalarWhereInput | UserPrivacySettingsScalarWhereInput[]
    Id?: UuidFilter<"UserPrivacySettings"> | string
    UserId?: UuidFilter<"UserPrivacySettings"> | string
    ShowOnlineStatus?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowFirstName?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowLastName?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowLastNameInitial?: BoolFilter<"UserPrivacySettings"> | boolean
    ShowLastLogin?: BoolFilter<"UserPrivacySettings"> | boolean
    CreatedAt?: DateTimeFilter<"UserPrivacySettings"> | Date | string
  }

  export type MemberUpsertWithWhereUniqueWithoutUserInput = {
    where: MemberWhereUniqueInput
    update: XOR<MemberUpdateWithoutUserInput, MemberUncheckedUpdateWithoutUserInput>
    create: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput>
  }

  export type MemberUpdateWithWhereUniqueWithoutUserInput = {
    where: MemberWhereUniqueInput
    data: XOR<MemberUpdateWithoutUserInput, MemberUncheckedUpdateWithoutUserInput>
  }

  export type MemberUpdateManyWithWhereWithoutUserInput = {
    where: MemberScalarWhereInput
    data: XOR<MemberUpdateManyMutationInput, MemberUncheckedUpdateManyWithoutUserInput>
  }

  export type MemberScalarWhereInput = {
    AND?: MemberScalarWhereInput | MemberScalarWhereInput[]
    OR?: MemberScalarWhereInput[]
    NOT?: MemberScalarWhereInput | MemberScalarWhereInput[]
    Id?: UuidFilter<"Member"> | string
    IsActive?: BoolFilter<"Member"> | boolean
    DeactivatedAt?: DateTimeNullableFilter<"Member"> | Date | string | null
    VAId?: UuidFilter<"Member"> | string
    VARoleId?: UuidFilter<"Member"> | string
    TotalCargosTransportedLbs?: IntFilter<"Member"> | number
    TotalPAXsTransported?: IntFilter<"Member"> | number
    TotalEarnedCredits?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFilter<"Member"> | number
    FlightHours?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    Color?: StringFilter<"Member"> | string
    ReputationImpact?: DecimalFilter<"Member"> | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: DateTimeNullableFilter<"Member"> | Date | string | null
    LastRefresh?: DateTimeNullableFilter<"Member"> | Date | string | null
    UserId?: UuidNullableFilter<"Member"> | string | null
    CreatedAt?: DateTimeFilter<"Member"> | Date | string
    UpdatedAt?: DateTimeFilter<"Member"> | Date | string
    CompanyId?: UuidFilter<"Member"> | string
  }

  export type InviteCodeUpsertWithoutUserInput = {
    update: XOR<InviteCodeUpdateWithoutUserInput, InviteCodeUncheckedUpdateWithoutUserInput>
    create: XOR<InviteCodeCreateWithoutUserInput, InviteCodeUncheckedCreateWithoutUserInput>
    where?: InviteCodeWhereInput
  }

  export type InviteCodeUpdateToOneWithWhereWithoutUserInput = {
    where?: InviteCodeWhereInput
    data: XOR<InviteCodeUpdateWithoutUserInput, InviteCodeUncheckedUpdateWithoutUserInput>
  }

  export type InviteCodeUpdateWithoutUserInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Code?: StringFieldUpdateOperationsInput | string
    IsUsed?: BoolFieldUpdateOperationsInput | boolean
    UsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InviteCodeUncheckedUpdateWithoutUserInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Code?: StringFieldUpdateOperationsInput | string
    IsUsed?: BoolFieldUpdateOperationsInput | boolean
    UsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateWithoutPrivacySettingsInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
    Roles?: RoleCreateNestedManyWithoutUsersInput
    Members?: MemberCreateNestedManyWithoutUserInput
    InviteCode?: InviteCodeCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPrivacySettingsInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    InviteCodeId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
    Roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    Members?: MemberUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPrivacySettingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPrivacySettingsInput, UserUncheckedCreateWithoutPrivacySettingsInput>
  }

  export type UserUpsertWithoutPrivacySettingsInput = {
    update: XOR<UserUpdateWithoutPrivacySettingsInput, UserUncheckedUpdateWithoutPrivacySettingsInput>
    create: XOR<UserCreateWithoutPrivacySettingsInput, UserUncheckedCreateWithoutPrivacySettingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPrivacySettingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPrivacySettingsInput, UserUncheckedUpdateWithoutPrivacySettingsInput>
  }

  export type UserUpdateWithoutPrivacySettingsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Roles?: RoleUpdateManyWithoutUsersNestedInput
    Members?: MemberUpdateManyWithoutUserNestedInput
    InviteCode?: InviteCodeUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPrivacySettingsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    InviteCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    Members?: MemberUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PermissionCreateWithoutRolesInput = {
    Name: string
    Description?: string | null
    Slug: string
    Entity: string
    Action: string
  }

  export type PermissionUncheckedCreateWithoutRolesInput = {
    Id?: number
    Name: string
    Description?: string | null
    Slug: string
    Entity: string
    Action: string
  }

  export type PermissionCreateOrConnectWithoutRolesInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput>
  }

  export type UserCreateWithoutRolesInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
    PrivacySettings?: UserPrivacySettingsCreateNestedManyWithoutUserInput
    Members?: MemberCreateNestedManyWithoutUserInput
    InviteCode?: InviteCodeCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRolesInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    InviteCodeId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
    PrivacySettings?: UserPrivacySettingsUncheckedCreateNestedManyWithoutUserInput
    Members?: MemberUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput>
  }

  export type VirtualAirlineRoleCreateWithoutRoleInput = {
    Id: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal | DecimalJsLike | number | string
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal | DecimalJsLike | number | string
    PayPerFlightHour: Decimal | DecimalJsLike | number | string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutVARolesInput
    Members?: MemberCreateNestedManyWithoutVARoleInput
  }

  export type VirtualAirlineRoleUncheckedCreateWithoutRoleInput = {
    Id: string
    VAId: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal | DecimalJsLike | number | string
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal | DecimalJsLike | number | string
    PayPerFlightHour: Decimal | DecimalJsLike | number | string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Members?: MemberUncheckedCreateNestedManyWithoutVARoleInput
  }

  export type VirtualAirlineRoleCreateOrConnectWithoutRoleInput = {
    where: VirtualAirlineRoleWhereUniqueInput
    create: XOR<VirtualAirlineRoleCreateWithoutRoleInput, VirtualAirlineRoleUncheckedCreateWithoutRoleInput>
  }

  export type PermissionUpsertWithWhereUniqueWithoutRolesInput = {
    where: PermissionWhereUniqueInput
    update: XOR<PermissionUpdateWithoutRolesInput, PermissionUncheckedUpdateWithoutRolesInput>
    create: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput>
  }

  export type PermissionUpdateWithWhereUniqueWithoutRolesInput = {
    where: PermissionWhereUniqueInput
    data: XOR<PermissionUpdateWithoutRolesInput, PermissionUncheckedUpdateWithoutRolesInput>
  }

  export type PermissionUpdateManyWithWhereWithoutRolesInput = {
    where: PermissionScalarWhereInput
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyWithoutRolesInput>
  }

  export type PermissionScalarWhereInput = {
    AND?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
    OR?: PermissionScalarWhereInput[]
    NOT?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
    Id?: IntFilter<"Permission"> | number
    Name?: StringFilter<"Permission"> | string
    Description?: StringNullableFilter<"Permission"> | string | null
    Slug?: StringFilter<"Permission"> | string
    Entity?: StringFilter<"Permission"> | string
    Action?: StringFilter<"Permission"> | string
  }

  export type UserUpsertWithWhereUniqueWithoutRolesInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutRolesInput, UserUncheckedUpdateWithoutRolesInput>
    create: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput>
  }

  export type UserUpdateWithWhereUniqueWithoutRolesInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutRolesInput, UserUncheckedUpdateWithoutRolesInput>
  }

  export type UserUpdateManyWithWhereWithoutRolesInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutRolesInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    Id?: UuidFilter<"User"> | string
    Username?: StringFilter<"User"> | string
    Password?: StringNullableFilter<"User"> | string | null
    Email?: StringNullableFilter<"User"> | string | null
    FirstName?: StringNullableFilter<"User"> | string | null
    LastName?: StringNullableFilter<"User"> | string | null
    FirstLoginCompleted?: BoolFilter<"User"> | boolean
    IsOnline?: BoolFilter<"User"> | boolean
    IsBanned?: BoolFilter<"User"> | boolean
    BanReason?: StringNullableFilter<"User"> | string | null
    BanExpiresAt?: DateTimeNullableFilter<"User"> | Date | string | null
    IsVerified?: BoolFilter<"User"> | boolean
    LastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    InviteCodeId?: UuidNullableFilter<"User"> | string | null
    CreatedAt?: DateTimeFilter<"User"> | Date | string
    UpdatedAt?: DateTimeFilter<"User"> | Date | string
    DiscordId?: StringNullableFilter<"User"> | string | null
    DiscordUsername?: StringNullableFilter<"User"> | string | null
    DiscordAvatar?: StringNullableFilter<"User"> | string | null
    DiscordEmail?: StringNullableFilter<"User"> | string | null
  }

  export type VirtualAirlineRoleUpsertWithoutRoleInput = {
    update: XOR<VirtualAirlineRoleUpdateWithoutRoleInput, VirtualAirlineRoleUncheckedUpdateWithoutRoleInput>
    create: XOR<VirtualAirlineRoleCreateWithoutRoleInput, VirtualAirlineRoleUncheckedCreateWithoutRoleInput>
    where?: VirtualAirlineRoleWhereInput
  }

  export type VirtualAirlineRoleUpdateToOneWithWhereWithoutRoleInput = {
    where?: VirtualAirlineRoleWhereInput
    data: XOR<VirtualAirlineRoleUpdateWithoutRoleInput, VirtualAirlineRoleUncheckedUpdateWithoutRoleInput>
  }

  export type VirtualAirlineRoleUpdateWithoutRoleInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutVARolesNestedInput
    Members?: MemberUpdateManyWithoutVARoleNestedInput
  }

  export type VirtualAirlineRoleUncheckedUpdateWithoutRoleInput = {
    Id?: StringFieldUpdateOperationsInput | string
    VAId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Members?: MemberUncheckedUpdateManyWithoutVARoleNestedInput
  }

  export type RoleCreateWithoutPermissionsInput = {
    Name: string
    Description?: string | null
    Slug: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Users?: UserCreateNestedManyWithoutRolesInput
    VirtualAirlineRole?: VirtualAirlineRoleCreateNestedOneWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutPermissionsInput = {
    Id?: number
    Name: string
    Description?: string | null
    Slug: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirlineRoleId?: string | null
    Users?: UserUncheckedCreateNestedManyWithoutRolesInput
  }

  export type RoleCreateOrConnectWithoutPermissionsInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput>
  }

  export type RoleUpsertWithWhereUniqueWithoutPermissionsInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutPermissionsInput, RoleUncheckedUpdateWithoutPermissionsInput>
    create: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutPermissionsInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutPermissionsInput, RoleUncheckedUpdateWithoutPermissionsInput>
  }

  export type RoleUpdateManyWithWhereWithoutPermissionsInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutPermissionsInput>
  }

  export type AircraftCreateWithoutLiveriesInput = {
    Id: string
    Identifier: string
    DisplayName: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftClass: AircraftClassCreateNestedOneWithoutAircraftsInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutFleetInput
    AircraftStatus: AircraftStatusCreateNestedOneWithoutAircraftsInput
    CurrentAirport?: AirportCreateNestedOneWithoutAircraftAtAirportInput
    AircraftMaintenance?: AircraftMaintenanceCreateNestedManyWithoutAircraftInput
    Flights?: FlightCreateNestedManyWithoutAircraftInput
  }

  export type AircraftUncheckedCreateWithoutLiveriesInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    AircraftClassId: string
    VirtualAirlineId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedCreateNestedManyWithoutAircraftInput
    Flights?: FlightUncheckedCreateNestedManyWithoutAircraftInput
  }

  export type AircraftCreateOrConnectWithoutLiveriesInput = {
    where: AircraftWhereUniqueInput
    create: XOR<AircraftCreateWithoutLiveriesInput, AircraftUncheckedCreateWithoutLiveriesInput>
  }

  export type LiveryImageCreateWithoutLiveryInput = {
    Id?: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryImageUncheckedCreateWithoutLiveryInput = {
    Id?: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryImageCreateOrConnectWithoutLiveryInput = {
    where: LiveryImageWhereUniqueInput
    create: XOR<LiveryImageCreateWithoutLiveryInput, LiveryImageUncheckedCreateWithoutLiveryInput>
  }

  export type LiveryImageCreateManyLiveryInputEnvelope = {
    data: LiveryImageCreateManyLiveryInput | LiveryImageCreateManyLiveryInput[]
    skipDuplicates?: boolean
  }

  export type LiveryFileCreateWithoutLiveryInput = {
    Id?: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryFileUncheckedCreateWithoutLiveryInput = {
    Id?: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryFileCreateOrConnectWithoutLiveryInput = {
    where: LiveryFileWhereUniqueInput
    create: XOR<LiveryFileCreateWithoutLiveryInput, LiveryFileUncheckedCreateWithoutLiveryInput>
  }

  export type LiveryFileCreateManyLiveryInputEnvelope = {
    data: LiveryFileCreateManyLiveryInput | LiveryFileCreateManyLiveryInput[]
    skipDuplicates?: boolean
  }

  export type AircraftUpsertWithoutLiveriesInput = {
    update: XOR<AircraftUpdateWithoutLiveriesInput, AircraftUncheckedUpdateWithoutLiveriesInput>
    create: XOR<AircraftCreateWithoutLiveriesInput, AircraftUncheckedCreateWithoutLiveriesInput>
    where?: AircraftWhereInput
  }

  export type AircraftUpdateToOneWithWhereWithoutLiveriesInput = {
    where?: AircraftWhereInput
    data: XOR<AircraftUpdateWithoutLiveriesInput, AircraftUncheckedUpdateWithoutLiveriesInput>
  }

  export type AircraftUpdateWithoutLiveriesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftClass?: AircraftClassUpdateOneRequiredWithoutAircraftsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutFleetNestedInput
    AircraftStatus?: AircraftStatusUpdateOneRequiredWithoutAircraftsNestedInput
    CurrentAirport?: AirportUpdateOneWithoutAircraftAtAirportNestedInput
    AircraftMaintenance?: AircraftMaintenanceUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateWithoutLiveriesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutAircraftNestedInput
  }

  export type LiveryImageUpsertWithWhereUniqueWithoutLiveryInput = {
    where: LiveryImageWhereUniqueInput
    update: XOR<LiveryImageUpdateWithoutLiveryInput, LiveryImageUncheckedUpdateWithoutLiveryInput>
    create: XOR<LiveryImageCreateWithoutLiveryInput, LiveryImageUncheckedCreateWithoutLiveryInput>
  }

  export type LiveryImageUpdateWithWhereUniqueWithoutLiveryInput = {
    where: LiveryImageWhereUniqueInput
    data: XOR<LiveryImageUpdateWithoutLiveryInput, LiveryImageUncheckedUpdateWithoutLiveryInput>
  }

  export type LiveryImageUpdateManyWithWhereWithoutLiveryInput = {
    where: LiveryImageScalarWhereInput
    data: XOR<LiveryImageUpdateManyMutationInput, LiveryImageUncheckedUpdateManyWithoutLiveryInput>
  }

  export type LiveryImageScalarWhereInput = {
    AND?: LiveryImageScalarWhereInput | LiveryImageScalarWhereInput[]
    OR?: LiveryImageScalarWhereInput[]
    NOT?: LiveryImageScalarWhereInput | LiveryImageScalarWhereInput[]
    Id?: UuidFilter<"LiveryImage"> | string
    LiveryId?: UuidFilter<"LiveryImage"> | string
    Name?: StringFilter<"LiveryImage"> | string
    Type?: StringFilter<"LiveryImage"> | string
    Path?: StringFilter<"LiveryImage"> | string
    Size?: IntFilter<"LiveryImage"> | number
    MimeType?: StringFilter<"LiveryImage"> | string
    FileName?: StringFilter<"LiveryImage"> | string
    CreatedAt?: DateTimeFilter<"LiveryImage"> | Date | string
    UpdatedAt?: DateTimeFilter<"LiveryImage"> | Date | string
  }

  export type LiveryFileUpsertWithWhereUniqueWithoutLiveryInput = {
    where: LiveryFileWhereUniqueInput
    update: XOR<LiveryFileUpdateWithoutLiveryInput, LiveryFileUncheckedUpdateWithoutLiveryInput>
    create: XOR<LiveryFileCreateWithoutLiveryInput, LiveryFileUncheckedCreateWithoutLiveryInput>
  }

  export type LiveryFileUpdateWithWhereUniqueWithoutLiveryInput = {
    where: LiveryFileWhereUniqueInput
    data: XOR<LiveryFileUpdateWithoutLiveryInput, LiveryFileUncheckedUpdateWithoutLiveryInput>
  }

  export type LiveryFileUpdateManyWithWhereWithoutLiveryInput = {
    where: LiveryFileScalarWhereInput
    data: XOR<LiveryFileUpdateManyMutationInput, LiveryFileUncheckedUpdateManyWithoutLiveryInput>
  }

  export type LiveryFileScalarWhereInput = {
    AND?: LiveryFileScalarWhereInput | LiveryFileScalarWhereInput[]
    OR?: LiveryFileScalarWhereInput[]
    NOT?: LiveryFileScalarWhereInput | LiveryFileScalarWhereInput[]
    Id?: UuidFilter<"LiveryFile"> | string
    LiveryId?: UuidFilter<"LiveryFile"> | string
    Name?: StringFilter<"LiveryFile"> | string
    Type?: StringFilter<"LiveryFile"> | string
    Path?: StringFilter<"LiveryFile"> | string
    Size?: IntFilter<"LiveryFile"> | number
    MimeType?: StringFilter<"LiveryFile"> | string
    FileName?: StringFilter<"LiveryFile"> | string
    CreatedAt?: DateTimeFilter<"LiveryFile"> | Date | string
    UpdatedAt?: DateTimeFilter<"LiveryFile"> | Date | string
  }

  export type LiveryCreateWithoutImagesInput = {
    Id?: string
    Name: string
    IsActive?: boolean
    DownloadCount?: number
    Image: string
    ImageFileName?: string | null
    CoverPhoto?: string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: string | null
    Description?: string | null
    DownloadUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Aircraft?: AircraftCreateNestedOneWithoutLiveriesInput
    Files?: LiveryFileCreateNestedManyWithoutLiveryInput
  }

  export type LiveryUncheckedCreateWithoutImagesInput = {
    Id?: string
    Name: string
    IsActive?: boolean
    AircraftId?: string | null
    DownloadCount?: number
    Image: string
    ImageFileName?: string | null
    CoverPhoto?: string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: string | null
    Description?: string | null
    DownloadUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Files?: LiveryFileUncheckedCreateNestedManyWithoutLiveryInput
  }

  export type LiveryCreateOrConnectWithoutImagesInput = {
    where: LiveryWhereUniqueInput
    create: XOR<LiveryCreateWithoutImagesInput, LiveryUncheckedCreateWithoutImagesInput>
  }

  export type LiveryUpsertWithoutImagesInput = {
    update: XOR<LiveryUpdateWithoutImagesInput, LiveryUncheckedUpdateWithoutImagesInput>
    create: XOR<LiveryCreateWithoutImagesInput, LiveryUncheckedCreateWithoutImagesInput>
    where?: LiveryWhereInput
  }

  export type LiveryUpdateToOneWithWhereWithoutImagesInput = {
    where?: LiveryWhereInput
    data: XOR<LiveryUpdateWithoutImagesInput, LiveryUncheckedUpdateWithoutImagesInput>
  }

  export type LiveryUpdateWithoutImagesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Aircraft?: AircraftUpdateOneWithoutLiveriesNestedInput
    Files?: LiveryFileUpdateManyWithoutLiveryNestedInput
  }

  export type LiveryUncheckedUpdateWithoutImagesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Files?: LiveryFileUncheckedUpdateManyWithoutLiveryNestedInput
  }

  export type LiveryCreateWithoutFilesInput = {
    Id?: string
    Name: string
    IsActive?: boolean
    DownloadCount?: number
    Image: string
    ImageFileName?: string | null
    CoverPhoto?: string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: string | null
    Description?: string | null
    DownloadUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Aircraft?: AircraftCreateNestedOneWithoutLiveriesInput
    Images?: LiveryImageCreateNestedManyWithoutLiveryInput
  }

  export type LiveryUncheckedCreateWithoutFilesInput = {
    Id?: string
    Name: string
    IsActive?: boolean
    AircraftId?: string | null
    DownloadCount?: number
    Image: string
    ImageFileName?: string | null
    CoverPhoto?: string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: string | null
    Description?: string | null
    DownloadUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Images?: LiveryImageUncheckedCreateNestedManyWithoutLiveryInput
  }

  export type LiveryCreateOrConnectWithoutFilesInput = {
    where: LiveryWhereUniqueInput
    create: XOR<LiveryCreateWithoutFilesInput, LiveryUncheckedCreateWithoutFilesInput>
  }

  export type LiveryUpsertWithoutFilesInput = {
    update: XOR<LiveryUpdateWithoutFilesInput, LiveryUncheckedUpdateWithoutFilesInput>
    create: XOR<LiveryCreateWithoutFilesInput, LiveryUncheckedCreateWithoutFilesInput>
    where?: LiveryWhereInput
  }

  export type LiveryUpdateToOneWithWhereWithoutFilesInput = {
    where?: LiveryWhereInput
    data: XOR<LiveryUpdateWithoutFilesInput, LiveryUncheckedUpdateWithoutFilesInput>
  }

  export type LiveryUpdateWithoutFilesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Aircraft?: AircraftUpdateOneWithoutLiveriesNestedInput
    Images?: LiveryImageUpdateManyWithoutLiveryNestedInput
  }

  export type LiveryUncheckedUpdateWithoutFilesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Images?: LiveryImageUncheckedUpdateManyWithoutLiveryNestedInput
  }

  export type WorldCreateWithoutVirtualAirlinesInput = {
    Id: string
    Name: string
    Slug: string
    Description?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Companies?: CompanyCreateNestedManyWithoutWorldInput
  }

  export type WorldUncheckedCreateWithoutVirtualAirlinesInput = {
    Id: string
    Name: string
    Slug: string
    Description?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Companies?: CompanyUncheckedCreateNestedManyWithoutWorldInput
  }

  export type WorldCreateOrConnectWithoutVirtualAirlinesInput = {
    where: WorldWhereUniqueInput
    create: XOR<WorldCreateWithoutVirtualAirlinesInput, WorldUncheckedCreateWithoutVirtualAirlinesInput>
  }

  export type VirtualAirlineRoleCreateWithoutVirtualAirlineInput = {
    Id: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal | DecimalJsLike | number | string
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal | DecimalJsLike | number | string
    PayPerFlightHour: Decimal | DecimalJsLike | number | string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Role?: RoleCreateNestedOneWithoutVirtualAirlineRoleInput
    Members?: MemberCreateNestedManyWithoutVARoleInput
  }

  export type VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput = {
    Id: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal | DecimalJsLike | number | string
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal | DecimalJsLike | number | string
    PayPerFlightHour: Decimal | DecimalJsLike | number | string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Role?: RoleUncheckedCreateNestedOneWithoutVirtualAirlineRoleInput
    Members?: MemberUncheckedCreateNestedManyWithoutVARoleInput
  }

  export type VirtualAirlineRoleCreateOrConnectWithoutVirtualAirlineInput = {
    where: VirtualAirlineRoleWhereUniqueInput
    create: XOR<VirtualAirlineRoleCreateWithoutVirtualAirlineInput, VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput>
  }

  export type VirtualAirlineRoleCreateManyVirtualAirlineInputEnvelope = {
    data: VirtualAirlineRoleCreateManyVirtualAirlineInput | VirtualAirlineRoleCreateManyVirtualAirlineInput[]
    skipDuplicates?: boolean
  }

  export type MemberCreateWithoutVirtualAirlineInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Company: CompanyCreateNestedOneWithoutOwnerInput
    VARole: VirtualAirlineRoleCreateNestedOneWithoutMembersInput
    Flights?: FlightCreateNestedManyWithoutMemberInput
    User?: UserCreateNestedOneWithoutMembersInput
    FlightRoutes?: FlightRouteCreateNestedManyWithoutMemberInput
  }

  export type MemberUncheckedCreateWithoutVirtualAirlineInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VARoleId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    UserId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    CompanyId: string
    Flights?: FlightUncheckedCreateNestedManyWithoutMemberInput
    FlightRoutes?: FlightRouteUncheckedCreateNestedManyWithoutMemberInput
  }

  export type MemberCreateOrConnectWithoutVirtualAirlineInput = {
    where: MemberWhereUniqueInput
    create: XOR<MemberCreateWithoutVirtualAirlineInput, MemberUncheckedCreateWithoutVirtualAirlineInput>
  }

  export type MemberCreateManyVirtualAirlineInputEnvelope = {
    data: MemberCreateManyVirtualAirlineInput | MemberCreateManyVirtualAirlineInput[]
    skipDuplicates?: boolean
  }

  export type AircraftCreateWithoutVirtualAirlineInput = {
    Id: string
    Identifier: string
    DisplayName: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftClass: AircraftClassCreateNestedOneWithoutAircraftsInput
    AircraftStatus: AircraftStatusCreateNestedOneWithoutAircraftsInput
    CurrentAirport?: AirportCreateNestedOneWithoutAircraftAtAirportInput
    AircraftMaintenance?: AircraftMaintenanceCreateNestedManyWithoutAircraftInput
    Flights?: FlightCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryCreateNestedManyWithoutAircraftInput
  }

  export type AircraftUncheckedCreateWithoutVirtualAirlineInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    AircraftClassId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedCreateNestedManyWithoutAircraftInput
    Flights?: FlightUncheckedCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryUncheckedCreateNestedManyWithoutAircraftInput
  }

  export type AircraftCreateOrConnectWithoutVirtualAirlineInput = {
    where: AircraftWhereUniqueInput
    create: XOR<AircraftCreateWithoutVirtualAirlineInput, AircraftUncheckedCreateWithoutVirtualAirlineInput>
  }

  export type AircraftCreateManyVirtualAirlineInputEnvelope = {
    data: AircraftCreateManyVirtualAirlineInput | AircraftCreateManyVirtualAirlineInput[]
    skipDuplicates?: boolean
  }

  export type FlightCreateWithoutVirtualAirlineInput = {
    Id: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    Company: CompanyCreateNestedOneWithoutFlightsInput
    Aircraft?: AircraftCreateNestedOneWithoutFlightsInput
    FlightRoute?: FlightRouteCreateNestedManyWithoutFlightInput
    DepartureAirport?: AirportCreateNestedOneWithoutDepartingFlightsInput
    ArrivalIntendedAirport?: AirportCreateNestedOneWithoutArrivingFlightsInput
    ArrivalAlternateAirport?: AirportCreateNestedOneWithoutArrivingAlternateFlightsInput
    ArrivalActualAirport?: AirportCreateNestedOneWithoutArrivingActualFlightsInput
    Member?: MemberCreateNestedOneWithoutFlightsInput
  }

  export type FlightUncheckedCreateWithoutVirtualAirlineInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedCreateNestedManyWithoutFlightInput
  }

  export type FlightCreateOrConnectWithoutVirtualAirlineInput = {
    where: FlightWhereUniqueInput
    create: XOR<FlightCreateWithoutVirtualAirlineInput, FlightUncheckedCreateWithoutVirtualAirlineInput>
  }

  export type FlightCreateManyVirtualAirlineInputEnvelope = {
    data: FlightCreateManyVirtualAirlineInput | FlightCreateManyVirtualAirlineInput[]
    skipDuplicates?: boolean
  }

  export type WorldUpsertWithoutVirtualAirlinesInput = {
    update: XOR<WorldUpdateWithoutVirtualAirlinesInput, WorldUncheckedUpdateWithoutVirtualAirlinesInput>
    create: XOR<WorldCreateWithoutVirtualAirlinesInput, WorldUncheckedCreateWithoutVirtualAirlinesInput>
    where?: WorldWhereInput
  }

  export type WorldUpdateToOneWithWhereWithoutVirtualAirlinesInput = {
    where?: WorldWhereInput
    data: XOR<WorldUpdateWithoutVirtualAirlinesInput, WorldUncheckedUpdateWithoutVirtualAirlinesInput>
  }

  export type WorldUpdateWithoutVirtualAirlinesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Slug?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Companies?: CompanyUpdateManyWithoutWorldNestedInput
  }

  export type WorldUncheckedUpdateWithoutVirtualAirlinesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Slug?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Companies?: CompanyUncheckedUpdateManyWithoutWorldNestedInput
  }

  export type VirtualAirlineRoleUpsertWithWhereUniqueWithoutVirtualAirlineInput = {
    where: VirtualAirlineRoleWhereUniqueInput
    update: XOR<VirtualAirlineRoleUpdateWithoutVirtualAirlineInput, VirtualAirlineRoleUncheckedUpdateWithoutVirtualAirlineInput>
    create: XOR<VirtualAirlineRoleCreateWithoutVirtualAirlineInput, VirtualAirlineRoleUncheckedCreateWithoutVirtualAirlineInput>
  }

  export type VirtualAirlineRoleUpdateWithWhereUniqueWithoutVirtualAirlineInput = {
    where: VirtualAirlineRoleWhereUniqueInput
    data: XOR<VirtualAirlineRoleUpdateWithoutVirtualAirlineInput, VirtualAirlineRoleUncheckedUpdateWithoutVirtualAirlineInput>
  }

  export type VirtualAirlineRoleUpdateManyWithWhereWithoutVirtualAirlineInput = {
    where: VirtualAirlineRoleScalarWhereInput
    data: XOR<VirtualAirlineRoleUpdateManyMutationInput, VirtualAirlineRoleUncheckedUpdateManyWithoutVirtualAirlineInput>
  }

  export type VirtualAirlineRoleScalarWhereInput = {
    AND?: VirtualAirlineRoleScalarWhereInput | VirtualAirlineRoleScalarWhereInput[]
    OR?: VirtualAirlineRoleScalarWhereInput[]
    NOT?: VirtualAirlineRoleScalarWhereInput | VirtualAirlineRoleScalarWhereInput[]
    Id?: UuidFilter<"VirtualAirlineRole"> | string
    VAId?: UuidFilter<"VirtualAirlineRole"> | string
    Name?: StringFilter<"VirtualAirlineRole"> | string
    Permission?: IntFilter<"VirtualAirlineRole"> | number
    IsDefaultNewRole?: BoolFilter<"VirtualAirlineRole"> | boolean
    Color?: StringFilter<"VirtualAirlineRole"> | string
    PayPercent?: DecimalFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFilter<"VirtualAirlineRole"> | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFilter<"VirtualAirlineRole"> | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFilter<"VirtualAirlineRole"> | boolean
    PayWeekly?: DecimalFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFilter<"VirtualAirlineRole"> | Decimal | DecimalJsLike | number | string
    LastRefresh?: DateTimeNullableFilter<"VirtualAirlineRole"> | Date | string | null
    CreatedAt?: DateTimeFilter<"VirtualAirlineRole"> | Date | string
    UpdatedAt?: DateTimeFilter<"VirtualAirlineRole"> | Date | string
  }

  export type MemberUpsertWithWhereUniqueWithoutVirtualAirlineInput = {
    where: MemberWhereUniqueInput
    update: XOR<MemberUpdateWithoutVirtualAirlineInput, MemberUncheckedUpdateWithoutVirtualAirlineInput>
    create: XOR<MemberCreateWithoutVirtualAirlineInput, MemberUncheckedCreateWithoutVirtualAirlineInput>
  }

  export type MemberUpdateWithWhereUniqueWithoutVirtualAirlineInput = {
    where: MemberWhereUniqueInput
    data: XOR<MemberUpdateWithoutVirtualAirlineInput, MemberUncheckedUpdateWithoutVirtualAirlineInput>
  }

  export type MemberUpdateManyWithWhereWithoutVirtualAirlineInput = {
    where: MemberScalarWhereInput
    data: XOR<MemberUpdateManyMutationInput, MemberUncheckedUpdateManyWithoutVirtualAirlineInput>
  }

  export type AircraftUpsertWithWhereUniqueWithoutVirtualAirlineInput = {
    where: AircraftWhereUniqueInput
    update: XOR<AircraftUpdateWithoutVirtualAirlineInput, AircraftUncheckedUpdateWithoutVirtualAirlineInput>
    create: XOR<AircraftCreateWithoutVirtualAirlineInput, AircraftUncheckedCreateWithoutVirtualAirlineInput>
  }

  export type AircraftUpdateWithWhereUniqueWithoutVirtualAirlineInput = {
    where: AircraftWhereUniqueInput
    data: XOR<AircraftUpdateWithoutVirtualAirlineInput, AircraftUncheckedUpdateWithoutVirtualAirlineInput>
  }

  export type AircraftUpdateManyWithWhereWithoutVirtualAirlineInput = {
    where: AircraftScalarWhereInput
    data: XOR<AircraftUpdateManyMutationInput, AircraftUncheckedUpdateManyWithoutVirtualAirlineInput>
  }

  export type AircraftScalarWhereInput = {
    AND?: AircraftScalarWhereInput | AircraftScalarWhereInput[]
    OR?: AircraftScalarWhereInput[]
    NOT?: AircraftScalarWhereInput | AircraftScalarWhereInput[]
    Id?: UuidFilter<"Aircraft"> | string
    Identifier?: StringFilter<"Aircraft"> | string
    DisplayName?: StringFilter<"Aircraft"> | string
    AircraftStatusId?: IntFilter<"Aircraft"> | number
    AircraftClassId?: UuidFilter<"Aircraft"> | string
    VirtualAirlineId?: UuidFilter<"Aircraft"> | string
    CurrentAirportId?: UuidNullableFilter<"Aircraft"> | string | null
    LastRefresh?: DateTimeNullableFilter<"Aircraft"> | Date | string | null
    CreatedAt?: DateTimeFilter<"Aircraft"> | Date | string
    UpdatedAt?: DateTimeFilter<"Aircraft"> | Date | string
  }

  export type FlightUpsertWithWhereUniqueWithoutVirtualAirlineInput = {
    where: FlightWhereUniqueInput
    update: XOR<FlightUpdateWithoutVirtualAirlineInput, FlightUncheckedUpdateWithoutVirtualAirlineInput>
    create: XOR<FlightCreateWithoutVirtualAirlineInput, FlightUncheckedCreateWithoutVirtualAirlineInput>
  }

  export type FlightUpdateWithWhereUniqueWithoutVirtualAirlineInput = {
    where: FlightWhereUniqueInput
    data: XOR<FlightUpdateWithoutVirtualAirlineInput, FlightUncheckedUpdateWithoutVirtualAirlineInput>
  }

  export type FlightUpdateManyWithWhereWithoutVirtualAirlineInput = {
    where: FlightScalarWhereInput
    data: XOR<FlightUpdateManyMutationInput, FlightUncheckedUpdateManyWithoutVirtualAirlineInput>
  }

  export type FlightScalarWhereInput = {
    AND?: FlightScalarWhereInput | FlightScalarWhereInput[]
    OR?: FlightScalarWhereInput[]
    NOT?: FlightScalarWhereInput | FlightScalarWhereInput[]
    Id?: UuidFilter<"Flight"> | string
    AircraftId?: UuidNullableFilter<"Flight"> | string | null
    CompanyId?: UuidFilter<"Flight"> | string
    Registered?: BoolFilter<"Flight"> | boolean
    Category?: IntFilter<"Flight"> | number
    ResultComments?: StringFilter<"Flight"> | string
    StartTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EndTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EngineOnTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EngineOffTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    AirborneTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    LandedTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    IntendedFlightLevel?: IntNullableFilter<"Flight"> | number | null
    Passengers?: IntNullableFilter<"Flight"> | number | null
    Cargo?: IntNullableFilter<"Flight"> | number | null
    AddedFuelQty?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFilter<"Flight"> | boolean
    VerticalSpeedAtTouchdownMpS?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MinGForce?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxBank?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFilter<"Flight"> | boolean
    HasOverspeeded?: BoolFilter<"Flight"> | boolean
    XPFlight?: IntNullableFilter<"Flight"> | number | null
    XPFlightBonus?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    XPMissions?: IntNullableFilter<"Flight"> | number | null
    CargosTotalWeight?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    PAXCount?: IntNullableFilter<"Flight"> | number | null
    AircraftCurrentFOB?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    RegisterState?: IntNullableFilter<"Flight"> | number | null
    WrongFuelDetected?: BoolFilter<"Flight"> | boolean
    WrongWeightDetected?: BoolFilter<"Flight"> | boolean
    TimeOffset?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    StartHeading?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFilter<"Flight"> | boolean
    RestCrewAfterWarp?: BoolFilter<"Flight"> | boolean
    Score?: DecimalNullableFilter<"Flight"> | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFilter<"Flight"> | boolean
    EngineOnRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    EngineOffRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    LandedRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    AirborneRealTime?: DateTimeNullableFilter<"Flight"> | Date | string | null
    DepartureAirportId?: UuidNullableFilter<"Flight"> | string | null
    ArrivalIntendedAirportId?: UuidNullableFilter<"Flight"> | string | null
    ArrivalAlternateAirportId?: UuidNullableFilter<"Flight"> | string | null
    ArrivalActualAirportId?: UuidNullableFilter<"Flight"> | string | null
    VAId?: UuidNullableFilter<"Flight"> | string | null
    MemberId?: UuidNullableFilter<"Flight"> | string | null
    LastRefresh?: DateTimeNullableFilter<"Flight"> | Date | string | null
    CreatedAt?: DateTimeFilter<"Flight"> | Date | string
    UpdatedAt?: DateTimeFilter<"Flight"> | Date | string
    FlightStatus?: EnumFlightStatusFilter<"Flight"> | $Enums.FlightStatus
  }

  export type RoleCreateWithoutVirtualAirlineRoleInput = {
    Name: string
    Description?: string | null
    Slug: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Permissions?: PermissionCreateNestedManyWithoutRolesInput
    Users?: UserCreateNestedManyWithoutRolesInput
  }

  export type RoleUncheckedCreateWithoutVirtualAirlineRoleInput = {
    Id?: number
    Name: string
    Description?: string | null
    Slug: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Permissions?: PermissionUncheckedCreateNestedManyWithoutRolesInput
    Users?: UserUncheckedCreateNestedManyWithoutRolesInput
  }

  export type RoleCreateOrConnectWithoutVirtualAirlineRoleInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutVirtualAirlineRoleInput, RoleUncheckedCreateWithoutVirtualAirlineRoleInput>
  }

  export type VirtualAirlineCreateWithoutVARolesInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    World?: WorldCreateNestedOneWithoutVirtualAirlinesInput
    Members?: MemberCreateNestedManyWithoutVirtualAirlineInput
    Fleet?: AircraftCreateNestedManyWithoutVirtualAirlineInput
    Flights?: FlightCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineUncheckedCreateWithoutVARolesInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    WorldId?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Members?: MemberUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Fleet?: AircraftUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Flights?: FlightUncheckedCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineCreateOrConnectWithoutVARolesInput = {
    where: VirtualAirlineWhereUniqueInput
    create: XOR<VirtualAirlineCreateWithoutVARolesInput, VirtualAirlineUncheckedCreateWithoutVARolesInput>
  }

  export type MemberCreateWithoutVARoleInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Company: CompanyCreateNestedOneWithoutOwnerInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutMembersInput
    Flights?: FlightCreateNestedManyWithoutMemberInput
    User?: UserCreateNestedOneWithoutMembersInput
    FlightRoutes?: FlightRouteCreateNestedManyWithoutMemberInput
  }

  export type MemberUncheckedCreateWithoutVARoleInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VAId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    UserId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    CompanyId: string
    Flights?: FlightUncheckedCreateNestedManyWithoutMemberInput
    FlightRoutes?: FlightRouteUncheckedCreateNestedManyWithoutMemberInput
  }

  export type MemberCreateOrConnectWithoutVARoleInput = {
    where: MemberWhereUniqueInput
    create: XOR<MemberCreateWithoutVARoleInput, MemberUncheckedCreateWithoutVARoleInput>
  }

  export type MemberCreateManyVARoleInputEnvelope = {
    data: MemberCreateManyVARoleInput | MemberCreateManyVARoleInput[]
    skipDuplicates?: boolean
  }

  export type RoleUpsertWithoutVirtualAirlineRoleInput = {
    update: XOR<RoleUpdateWithoutVirtualAirlineRoleInput, RoleUncheckedUpdateWithoutVirtualAirlineRoleInput>
    create: XOR<RoleCreateWithoutVirtualAirlineRoleInput, RoleUncheckedCreateWithoutVirtualAirlineRoleInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutVirtualAirlineRoleInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutVirtualAirlineRoleInput, RoleUncheckedUpdateWithoutVirtualAirlineRoleInput>
  }

  export type RoleUpdateWithoutVirtualAirlineRoleInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Permissions?: PermissionUpdateManyWithoutRolesNestedInput
    Users?: UserUpdateManyWithoutRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutVirtualAirlineRoleInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Permissions?: PermissionUncheckedUpdateManyWithoutRolesNestedInput
    Users?: UserUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type VirtualAirlineUpsertWithoutVARolesInput = {
    update: XOR<VirtualAirlineUpdateWithoutVARolesInput, VirtualAirlineUncheckedUpdateWithoutVARolesInput>
    create: XOR<VirtualAirlineCreateWithoutVARolesInput, VirtualAirlineUncheckedCreateWithoutVARolesInput>
    where?: VirtualAirlineWhereInput
  }

  export type VirtualAirlineUpdateToOneWithWhereWithoutVARolesInput = {
    where?: VirtualAirlineWhereInput
    data: XOR<VirtualAirlineUpdateWithoutVARolesInput, VirtualAirlineUncheckedUpdateWithoutVARolesInput>
  }

  export type VirtualAirlineUpdateWithoutVARolesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    World?: WorldUpdateOneWithoutVirtualAirlinesNestedInput
    Members?: MemberUpdateManyWithoutVirtualAirlineNestedInput
    Fleet?: AircraftUpdateManyWithoutVirtualAirlineNestedInput
    Flights?: FlightUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type VirtualAirlineUncheckedUpdateWithoutVARolesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WorldId?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Members?: MemberUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Fleet?: AircraftUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type MemberUpsertWithWhereUniqueWithoutVARoleInput = {
    where: MemberWhereUniqueInput
    update: XOR<MemberUpdateWithoutVARoleInput, MemberUncheckedUpdateWithoutVARoleInput>
    create: XOR<MemberCreateWithoutVARoleInput, MemberUncheckedCreateWithoutVARoleInput>
  }

  export type MemberUpdateWithWhereUniqueWithoutVARoleInput = {
    where: MemberWhereUniqueInput
    data: XOR<MemberUpdateWithoutVARoleInput, MemberUncheckedUpdateWithoutVARoleInput>
  }

  export type MemberUpdateManyWithWhereWithoutVARoleInput = {
    where: MemberScalarWhereInput
    data: XOR<MemberUpdateManyMutationInput, MemberUncheckedUpdateManyWithoutVARoleInput>
  }

  export type VirtualAirlineCreateWithoutWorldInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VARoles?: VirtualAirlineRoleCreateNestedManyWithoutVirtualAirlineInput
    Members?: MemberCreateNestedManyWithoutVirtualAirlineInput
    Fleet?: AircraftCreateNestedManyWithoutVirtualAirlineInput
    Flights?: FlightCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineUncheckedCreateWithoutWorldInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VARoles?: VirtualAirlineRoleUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Members?: MemberUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Fleet?: AircraftUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Flights?: FlightUncheckedCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineCreateOrConnectWithoutWorldInput = {
    where: VirtualAirlineWhereUniqueInput
    create: XOR<VirtualAirlineCreateWithoutWorldInput, VirtualAirlineUncheckedCreateWithoutWorldInput>
  }

  export type VirtualAirlineCreateManyWorldInputEnvelope = {
    data: VirtualAirlineCreateManyWorldInput | VirtualAirlineCreateManyWorldInput[]
    skipDuplicates?: boolean
  }

  export type CompanyCreateWithoutWorldInput = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date | string
    Level: number
    LevelXP: number
    Reputation: Decimal | DecimalJsLike | number | string
    Paused?: boolean
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    DifficultyLevel: number
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Flights?: FlightCreateNestedManyWithoutCompanyInput
    Owner?: MemberCreateNestedOneWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutWorldInput = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date | string
    Level: number
    LevelXP: number
    Reputation: Decimal | DecimalJsLike | number | string
    Paused?: boolean
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    DifficultyLevel: number
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Flights?: FlightUncheckedCreateNestedManyWithoutCompanyInput
    Owner?: MemberUncheckedCreateNestedOneWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutWorldInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutWorldInput, CompanyUncheckedCreateWithoutWorldInput>
  }

  export type CompanyCreateManyWorldInputEnvelope = {
    data: CompanyCreateManyWorldInput | CompanyCreateManyWorldInput[]
    skipDuplicates?: boolean
  }

  export type VirtualAirlineUpsertWithWhereUniqueWithoutWorldInput = {
    where: VirtualAirlineWhereUniqueInput
    update: XOR<VirtualAirlineUpdateWithoutWorldInput, VirtualAirlineUncheckedUpdateWithoutWorldInput>
    create: XOR<VirtualAirlineCreateWithoutWorldInput, VirtualAirlineUncheckedCreateWithoutWorldInput>
  }

  export type VirtualAirlineUpdateWithWhereUniqueWithoutWorldInput = {
    where: VirtualAirlineWhereUniqueInput
    data: XOR<VirtualAirlineUpdateWithoutWorldInput, VirtualAirlineUncheckedUpdateWithoutWorldInput>
  }

  export type VirtualAirlineUpdateManyWithWhereWithoutWorldInput = {
    where: VirtualAirlineScalarWhereInput
    data: XOR<VirtualAirlineUpdateManyMutationInput, VirtualAirlineUncheckedUpdateManyWithoutWorldInput>
  }

  export type VirtualAirlineScalarWhereInput = {
    AND?: VirtualAirlineScalarWhereInput | VirtualAirlineScalarWhereInput[]
    OR?: VirtualAirlineScalarWhereInput[]
    NOT?: VirtualAirlineScalarWhereInput | VirtualAirlineScalarWhereInput[]
    Id?: UuidFilter<"VirtualAirline"> | string
    ApiKey?: UuidFilter<"VirtualAirline"> | string
    IsPrimary?: BoolFilter<"VirtualAirline"> | boolean
    Identifier?: StringNullableFilter<"VirtualAirline"> | string | null
    Name?: StringNullableFilter<"VirtualAirline"> | string | null
    Description?: StringNullableFilter<"VirtualAirline"> | string | null
    WorldId?: UuidNullableFilter<"VirtualAirline"> | string | null
    LastDividendsDistribution?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    LastComputationDate?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    ComputedMemberCount?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedAircraftsCount?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedNumberOfFlights30Days?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedNumberOfFlightHours30Days?: IntNullableFilter<"VirtualAirline"> | number | null
    ComputedMostUsedAirports?: StringNullableFilter<"VirtualAirline"> | string | null
    LastConnection?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    LastReportDate?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    Reputation?: DecimalNullableFilter<"VirtualAirline"> | Decimal | DecimalJsLike | number | string | null
    CreationDate?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    DifficultyLevel?: IntNullableFilter<"VirtualAirline"> | number | null
    Level?: IntNullableFilter<"VirtualAirline"> | number | null
    LevelXP?: IntNullableFilter<"VirtualAirline"> | number | null
    TotalContractsCompleted?: IntNullableFilter<"VirtualAirline"> | number | null
    TotalContractsEarnedCredits?: IntNullableFilter<"VirtualAirline"> | number | null
    LastRefresh?: DateTimeNullableFilter<"VirtualAirline"> | Date | string | null
    CreatedAt?: DateTimeFilter<"VirtualAirline"> | Date | string
    UpdatedAt?: DateTimeFilter<"VirtualAirline"> | Date | string
  }

  export type CompanyUpsertWithWhereUniqueWithoutWorldInput = {
    where: CompanyWhereUniqueInput
    update: XOR<CompanyUpdateWithoutWorldInput, CompanyUncheckedUpdateWithoutWorldInput>
    create: XOR<CompanyCreateWithoutWorldInput, CompanyUncheckedCreateWithoutWorldInput>
  }

  export type CompanyUpdateWithWhereUniqueWithoutWorldInput = {
    where: CompanyWhereUniqueInput
    data: XOR<CompanyUpdateWithoutWorldInput, CompanyUncheckedUpdateWithoutWorldInput>
  }

  export type CompanyUpdateManyWithWhereWithoutWorldInput = {
    where: CompanyScalarWhereInput
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyWithoutWorldInput>
  }

  export type CompanyScalarWhereInput = {
    AND?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
    OR?: CompanyScalarWhereInput[]
    NOT?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
    Id?: UuidFilter<"Company"> | string
    Name?: StringFilter<"Company"> | string
    AirlineCode?: StringFilter<"Company"> | string
    CreationDate?: DateTimeFilter<"Company"> | Date | string
    Level?: IntFilter<"Company"> | number
    LevelXP?: IntFilter<"Company"> | number
    Reputation?: DecimalFilter<"Company"> | Decimal | DecimalJsLike | number | string
    Paused?: BoolFilter<"Company"> | boolean
    LastConnection?: DateTimeNullableFilter<"Company"> | Date | string | null
    LastReportDate?: DateTimeNullableFilter<"Company"> | Date | string | null
    DifficultyLevel?: IntFilter<"Company"> | number
    WorldId?: UuidFilter<"Company"> | string
    LastRefresh?: DateTimeNullableFilter<"Company"> | Date | string | null
    CreatedAt?: DateTimeFilter<"Company"> | Date | string
    UpdatedAt?: DateTimeFilter<"Company"> | Date | string
  }

  export type CompanyCreateWithoutOwnerInput = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date | string
    Level: number
    LevelXP: number
    Reputation: Decimal | DecimalJsLike | number | string
    Paused?: boolean
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    DifficultyLevel: number
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    World: WorldCreateNestedOneWithoutCompaniesInput
    Flights?: FlightCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutOwnerInput = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date | string
    Level: number
    LevelXP: number
    Reputation: Decimal | DecimalJsLike | number | string
    Paused?: boolean
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    DifficultyLevel: number
    WorldId: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Flights?: FlightUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutOwnerInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutOwnerInput, CompanyUncheckedCreateWithoutOwnerInput>
  }

  export type VirtualAirlineCreateWithoutMembersInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    World?: WorldCreateNestedOneWithoutVirtualAirlinesInput
    VARoles?: VirtualAirlineRoleCreateNestedManyWithoutVirtualAirlineInput
    Fleet?: AircraftCreateNestedManyWithoutVirtualAirlineInput
    Flights?: FlightCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineUncheckedCreateWithoutMembersInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    WorldId?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VARoles?: VirtualAirlineRoleUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Fleet?: AircraftUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Flights?: FlightUncheckedCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineCreateOrConnectWithoutMembersInput = {
    where: VirtualAirlineWhereUniqueInput
    create: XOR<VirtualAirlineCreateWithoutMembersInput, VirtualAirlineUncheckedCreateWithoutMembersInput>
  }

  export type VirtualAirlineRoleCreateWithoutMembersInput = {
    Id: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal | DecimalJsLike | number | string
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal | DecimalJsLike | number | string
    PayPerFlightHour: Decimal | DecimalJsLike | number | string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Role?: RoleCreateNestedOneWithoutVirtualAirlineRoleInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutVARolesInput
  }

  export type VirtualAirlineRoleUncheckedCreateWithoutMembersInput = {
    Id: string
    VAId: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal | DecimalJsLike | number | string
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal | DecimalJsLike | number | string
    PayPerFlightHour: Decimal | DecimalJsLike | number | string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Role?: RoleUncheckedCreateNestedOneWithoutVirtualAirlineRoleInput
  }

  export type VirtualAirlineRoleCreateOrConnectWithoutMembersInput = {
    where: VirtualAirlineRoleWhereUniqueInput
    create: XOR<VirtualAirlineRoleCreateWithoutMembersInput, VirtualAirlineRoleUncheckedCreateWithoutMembersInput>
  }

  export type FlightCreateWithoutMemberInput = {
    Id: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    Company: CompanyCreateNestedOneWithoutFlightsInput
    VirtualAirline?: VirtualAirlineCreateNestedOneWithoutFlightsInput
    Aircraft?: AircraftCreateNestedOneWithoutFlightsInput
    FlightRoute?: FlightRouteCreateNestedManyWithoutFlightInput
    DepartureAirport?: AirportCreateNestedOneWithoutDepartingFlightsInput
    ArrivalIntendedAirport?: AirportCreateNestedOneWithoutArrivingFlightsInput
    ArrivalAlternateAirport?: AirportCreateNestedOneWithoutArrivingAlternateFlightsInput
    ArrivalActualAirport?: AirportCreateNestedOneWithoutArrivingActualFlightsInput
  }

  export type FlightUncheckedCreateWithoutMemberInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedCreateNestedManyWithoutFlightInput
  }

  export type FlightCreateOrConnectWithoutMemberInput = {
    where: FlightWhereUniqueInput
    create: XOR<FlightCreateWithoutMemberInput, FlightUncheckedCreateWithoutMemberInput>
  }

  export type FlightCreateManyMemberInputEnvelope = {
    data: FlightCreateManyMemberInput | FlightCreateManyMemberInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutMembersInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
    Roles?: RoleCreateNestedManyWithoutUsersInput
    PrivacySettings?: UserPrivacySettingsCreateNestedManyWithoutUserInput
    InviteCode?: InviteCodeCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutMembersInput = {
    Id?: string
    Username: string
    Password?: string | null
    Email?: string | null
    FirstName?: string | null
    LastName?: string | null
    FirstLoginCompleted?: boolean
    IsOnline?: boolean
    IsBanned?: boolean
    BanReason?: string | null
    BanExpiresAt?: Date | string | null
    IsVerified?: boolean
    LastLogin?: Date | string | null
    InviteCodeId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DiscordId?: string | null
    DiscordUsername?: string | null
    DiscordAvatar?: string | null
    DiscordEmail?: string | null
    Roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    PrivacySettings?: UserPrivacySettingsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutMembersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMembersInput, UserUncheckedCreateWithoutMembersInput>
  }

  export type FlightRouteCreateWithoutMemberInput = {
    Id?: string
    Route: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Flight?: FlightCreateNestedOneWithoutFlightRouteInput
  }

  export type FlightRouteUncheckedCreateWithoutMemberInput = {
    Id?: string
    FlightId?: string | null
    Route: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type FlightRouteCreateOrConnectWithoutMemberInput = {
    where: FlightRouteWhereUniqueInput
    create: XOR<FlightRouteCreateWithoutMemberInput, FlightRouteUncheckedCreateWithoutMemberInput>
  }

  export type FlightRouteCreateManyMemberInputEnvelope = {
    data: FlightRouteCreateManyMemberInput | FlightRouteCreateManyMemberInput[]
    skipDuplicates?: boolean
  }

  export type CompanyUpsertWithoutOwnerInput = {
    update: XOR<CompanyUpdateWithoutOwnerInput, CompanyUncheckedUpdateWithoutOwnerInput>
    create: XOR<CompanyCreateWithoutOwnerInput, CompanyUncheckedCreateWithoutOwnerInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutOwnerInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutOwnerInput, CompanyUncheckedUpdateWithoutOwnerInput>
  }

  export type CompanyUpdateWithoutOwnerInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    World?: WorldUpdateOneRequiredWithoutCompaniesNestedInput
    Flights?: FlightUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutOwnerInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    WorldId?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Flights?: FlightUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type VirtualAirlineUpsertWithoutMembersInput = {
    update: XOR<VirtualAirlineUpdateWithoutMembersInput, VirtualAirlineUncheckedUpdateWithoutMembersInput>
    create: XOR<VirtualAirlineCreateWithoutMembersInput, VirtualAirlineUncheckedCreateWithoutMembersInput>
    where?: VirtualAirlineWhereInput
  }

  export type VirtualAirlineUpdateToOneWithWhereWithoutMembersInput = {
    where?: VirtualAirlineWhereInput
    data: XOR<VirtualAirlineUpdateWithoutMembersInput, VirtualAirlineUncheckedUpdateWithoutMembersInput>
  }

  export type VirtualAirlineUpdateWithoutMembersInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    World?: WorldUpdateOneWithoutVirtualAirlinesNestedInput
    VARoles?: VirtualAirlineRoleUpdateManyWithoutVirtualAirlineNestedInput
    Fleet?: AircraftUpdateManyWithoutVirtualAirlineNestedInput
    Flights?: FlightUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type VirtualAirlineUncheckedUpdateWithoutMembersInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WorldId?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VARoles?: VirtualAirlineRoleUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Fleet?: AircraftUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type VirtualAirlineRoleUpsertWithoutMembersInput = {
    update: XOR<VirtualAirlineRoleUpdateWithoutMembersInput, VirtualAirlineRoleUncheckedUpdateWithoutMembersInput>
    create: XOR<VirtualAirlineRoleCreateWithoutMembersInput, VirtualAirlineRoleUncheckedCreateWithoutMembersInput>
    where?: VirtualAirlineRoleWhereInput
  }

  export type VirtualAirlineRoleUpdateToOneWithWhereWithoutMembersInput = {
    where?: VirtualAirlineRoleWhereInput
    data: XOR<VirtualAirlineRoleUpdateWithoutMembersInput, VirtualAirlineRoleUncheckedUpdateWithoutMembersInput>
  }

  export type VirtualAirlineRoleUpdateWithoutMembersInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Role?: RoleUpdateOneWithoutVirtualAirlineRoleNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutVARolesNestedInput
  }

  export type VirtualAirlineRoleUncheckedUpdateWithoutMembersInput = {
    Id?: StringFieldUpdateOperationsInput | string
    VAId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Role?: RoleUncheckedUpdateOneWithoutVirtualAirlineRoleNestedInput
  }

  export type FlightUpsertWithWhereUniqueWithoutMemberInput = {
    where: FlightWhereUniqueInput
    update: XOR<FlightUpdateWithoutMemberInput, FlightUncheckedUpdateWithoutMemberInput>
    create: XOR<FlightCreateWithoutMemberInput, FlightUncheckedCreateWithoutMemberInput>
  }

  export type FlightUpdateWithWhereUniqueWithoutMemberInput = {
    where: FlightWhereUniqueInput
    data: XOR<FlightUpdateWithoutMemberInput, FlightUncheckedUpdateWithoutMemberInput>
  }

  export type FlightUpdateManyWithWhereWithoutMemberInput = {
    where: FlightScalarWhereInput
    data: XOR<FlightUpdateManyMutationInput, FlightUncheckedUpdateManyWithoutMemberInput>
  }

  export type UserUpsertWithoutMembersInput = {
    update: XOR<UserUpdateWithoutMembersInput, UserUncheckedUpdateWithoutMembersInput>
    create: XOR<UserCreateWithoutMembersInput, UserUncheckedCreateWithoutMembersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMembersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMembersInput, UserUncheckedUpdateWithoutMembersInput>
  }

  export type UserUpdateWithoutMembersInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Roles?: RoleUpdateManyWithoutUsersNestedInput
    PrivacySettings?: UserPrivacySettingsUpdateManyWithoutUserNestedInput
    InviteCode?: InviteCodeUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutMembersInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    InviteCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    PrivacySettings?: UserPrivacySettingsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type FlightRouteUpsertWithWhereUniqueWithoutMemberInput = {
    where: FlightRouteWhereUniqueInput
    update: XOR<FlightRouteUpdateWithoutMemberInput, FlightRouteUncheckedUpdateWithoutMemberInput>
    create: XOR<FlightRouteCreateWithoutMemberInput, FlightRouteUncheckedCreateWithoutMemberInput>
  }

  export type FlightRouteUpdateWithWhereUniqueWithoutMemberInput = {
    where: FlightRouteWhereUniqueInput
    data: XOR<FlightRouteUpdateWithoutMemberInput, FlightRouteUncheckedUpdateWithoutMemberInput>
  }

  export type FlightRouteUpdateManyWithWhereWithoutMemberInput = {
    where: FlightRouteScalarWhereInput
    data: XOR<FlightRouteUpdateManyMutationInput, FlightRouteUncheckedUpdateManyWithoutMemberInput>
  }

  export type FlightRouteScalarWhereInput = {
    AND?: FlightRouteScalarWhereInput | FlightRouteScalarWhereInput[]
    OR?: FlightRouteScalarWhereInput[]
    NOT?: FlightRouteScalarWhereInput | FlightRouteScalarWhereInput[]
    Id?: UuidFilter<"FlightRoute"> | string
    FlightId?: UuidNullableFilter<"FlightRoute"> | string | null
    MemberId?: UuidFilter<"FlightRoute"> | string
    Route?: StringFilter<"FlightRoute"> | string
    CreatedAt?: DateTimeFilter<"FlightRoute"> | Date | string
    UpdatedAt?: DateTimeFilter<"FlightRoute"> | Date | string
  }

  export type WorldCreateWithoutCompaniesInput = {
    Id: string
    Name: string
    Slug: string
    Description?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirlines?: VirtualAirlineCreateNestedManyWithoutWorldInput
  }

  export type WorldUncheckedCreateWithoutCompaniesInput = {
    Id: string
    Name: string
    Slug: string
    Description?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirlines?: VirtualAirlineUncheckedCreateNestedManyWithoutWorldInput
  }

  export type WorldCreateOrConnectWithoutCompaniesInput = {
    where: WorldWhereUniqueInput
    create: XOR<WorldCreateWithoutCompaniesInput, WorldUncheckedCreateWithoutCompaniesInput>
  }

  export type FlightCreateWithoutCompanyInput = {
    Id: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    VirtualAirline?: VirtualAirlineCreateNestedOneWithoutFlightsInput
    Aircraft?: AircraftCreateNestedOneWithoutFlightsInput
    FlightRoute?: FlightRouteCreateNestedManyWithoutFlightInput
    DepartureAirport?: AirportCreateNestedOneWithoutDepartingFlightsInput
    ArrivalIntendedAirport?: AirportCreateNestedOneWithoutArrivingFlightsInput
    ArrivalAlternateAirport?: AirportCreateNestedOneWithoutArrivingAlternateFlightsInput
    ArrivalActualAirport?: AirportCreateNestedOneWithoutArrivingActualFlightsInput
    Member?: MemberCreateNestedOneWithoutFlightsInput
  }

  export type FlightUncheckedCreateWithoutCompanyInput = {
    Id: string
    AircraftId?: string | null
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedCreateNestedManyWithoutFlightInput
  }

  export type FlightCreateOrConnectWithoutCompanyInput = {
    where: FlightWhereUniqueInput
    create: XOR<FlightCreateWithoutCompanyInput, FlightUncheckedCreateWithoutCompanyInput>
  }

  export type FlightCreateManyCompanyInputEnvelope = {
    data: FlightCreateManyCompanyInput | FlightCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type MemberCreateWithoutCompanyInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutMembersInput
    VARole: VirtualAirlineRoleCreateNestedOneWithoutMembersInput
    Flights?: FlightCreateNestedManyWithoutMemberInput
    User?: UserCreateNestedOneWithoutMembersInput
    FlightRoutes?: FlightRouteCreateNestedManyWithoutMemberInput
  }

  export type MemberUncheckedCreateWithoutCompanyInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VAId: string
    VARoleId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    UserId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Flights?: FlightUncheckedCreateNestedManyWithoutMemberInput
    FlightRoutes?: FlightRouteUncheckedCreateNestedManyWithoutMemberInput
  }

  export type MemberCreateOrConnectWithoutCompanyInput = {
    where: MemberWhereUniqueInput
    create: XOR<MemberCreateWithoutCompanyInput, MemberUncheckedCreateWithoutCompanyInput>
  }

  export type WorldUpsertWithoutCompaniesInput = {
    update: XOR<WorldUpdateWithoutCompaniesInput, WorldUncheckedUpdateWithoutCompaniesInput>
    create: XOR<WorldCreateWithoutCompaniesInput, WorldUncheckedCreateWithoutCompaniesInput>
    where?: WorldWhereInput
  }

  export type WorldUpdateToOneWithWhereWithoutCompaniesInput = {
    where?: WorldWhereInput
    data: XOR<WorldUpdateWithoutCompaniesInput, WorldUncheckedUpdateWithoutCompaniesInput>
  }

  export type WorldUpdateWithoutCompaniesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Slug?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirlines?: VirtualAirlineUpdateManyWithoutWorldNestedInput
  }

  export type WorldUncheckedUpdateWithoutCompaniesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Slug?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirlines?: VirtualAirlineUncheckedUpdateManyWithoutWorldNestedInput
  }

  export type FlightUpsertWithWhereUniqueWithoutCompanyInput = {
    where: FlightWhereUniqueInput
    update: XOR<FlightUpdateWithoutCompanyInput, FlightUncheckedUpdateWithoutCompanyInput>
    create: XOR<FlightCreateWithoutCompanyInput, FlightUncheckedCreateWithoutCompanyInput>
  }

  export type FlightUpdateWithWhereUniqueWithoutCompanyInput = {
    where: FlightWhereUniqueInput
    data: XOR<FlightUpdateWithoutCompanyInput, FlightUncheckedUpdateWithoutCompanyInput>
  }

  export type FlightUpdateManyWithWhereWithoutCompanyInput = {
    where: FlightScalarWhereInput
    data: XOR<FlightUpdateManyMutationInput, FlightUncheckedUpdateManyWithoutCompanyInput>
  }

  export type MemberUpsertWithoutCompanyInput = {
    update: XOR<MemberUpdateWithoutCompanyInput, MemberUncheckedUpdateWithoutCompanyInput>
    create: XOR<MemberCreateWithoutCompanyInput, MemberUncheckedCreateWithoutCompanyInput>
    where?: MemberWhereInput
  }

  export type MemberUpdateToOneWithWhereWithoutCompanyInput = {
    where?: MemberWhereInput
    data: XOR<MemberUpdateWithoutCompanyInput, MemberUncheckedUpdateWithoutCompanyInput>
  }

  export type MemberUpdateWithoutCompanyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutMembersNestedInput
    VARole?: VirtualAirlineRoleUpdateOneRequiredWithoutMembersNestedInput
    Flights?: FlightUpdateManyWithoutMemberNestedInput
    User?: UserUpdateOneWithoutMembersNestedInput
    FlightRoutes?: FlightRouteUpdateManyWithoutMemberNestedInput
  }

  export type MemberUncheckedUpdateWithoutCompanyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VAId?: StringFieldUpdateOperationsInput | string
    VARoleId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Flights?: FlightUncheckedUpdateManyWithoutMemberNestedInput
    FlightRoutes?: FlightRouteUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type AircraftClassCreateWithoutAircraftsInput = {
    Id: string
    ShortName: string
    Name: string
  }

  export type AircraftClassUncheckedCreateWithoutAircraftsInput = {
    Id: string
    ShortName: string
    Name: string
  }

  export type AircraftClassCreateOrConnectWithoutAircraftsInput = {
    where: AircraftClassWhereUniqueInput
    create: XOR<AircraftClassCreateWithoutAircraftsInput, AircraftClassUncheckedCreateWithoutAircraftsInput>
  }

  export type VirtualAirlineCreateWithoutFleetInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    World?: WorldCreateNestedOneWithoutVirtualAirlinesInput
    VARoles?: VirtualAirlineRoleCreateNestedManyWithoutVirtualAirlineInput
    Members?: MemberCreateNestedManyWithoutVirtualAirlineInput
    Flights?: FlightCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineUncheckedCreateWithoutFleetInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    WorldId?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VARoles?: VirtualAirlineRoleUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Members?: MemberUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Flights?: FlightUncheckedCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineCreateOrConnectWithoutFleetInput = {
    where: VirtualAirlineWhereUniqueInput
    create: XOR<VirtualAirlineCreateWithoutFleetInput, VirtualAirlineUncheckedCreateWithoutFleetInput>
  }

  export type AircraftStatusCreateWithoutAircraftsInput = {
    Id: number
    Name: string
  }

  export type AircraftStatusUncheckedCreateWithoutAircraftsInput = {
    Id: number
    Name: string
  }

  export type AircraftStatusCreateOrConnectWithoutAircraftsInput = {
    where: AircraftStatusWhereUniqueInput
    create: XOR<AircraftStatusCreateWithoutAircraftsInput, AircraftStatusUncheckedCreateWithoutAircraftsInput>
  }

  export type AirportCreateWithoutAircraftAtAirportInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DepartingFlights?: FlightCreateNestedManyWithoutDepartureAirportInput
    ArrivingFlights?: FlightCreateNestedManyWithoutArrivalIntendedAirportInput
    ArrivingAlternateFlights?: FlightCreateNestedManyWithoutArrivalAlternateAirportInput
    ArrivingActualFlights?: FlightCreateNestedManyWithoutArrivalActualAirportInput
  }

  export type AirportUncheckedCreateWithoutAircraftAtAirportInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    DepartingFlights?: FlightUncheckedCreateNestedManyWithoutDepartureAirportInput
    ArrivingFlights?: FlightUncheckedCreateNestedManyWithoutArrivalIntendedAirportInput
    ArrivingAlternateFlights?: FlightUncheckedCreateNestedManyWithoutArrivalAlternateAirportInput
    ArrivingActualFlights?: FlightUncheckedCreateNestedManyWithoutArrivalActualAirportInput
  }

  export type AirportCreateOrConnectWithoutAircraftAtAirportInput = {
    where: AirportWhereUniqueInput
    create: XOR<AirportCreateWithoutAircraftAtAirportInput, AirportUncheckedCreateWithoutAircraftAtAirportInput>
  }

  export type AircraftMaintenanceCreateWithoutAircraftInput = {
    Id: string
    AnnualCheckup: boolean
    Inspection100Hours: boolean
    FailuresRepair: boolean
    AirframeRepair: boolean
    AirframeReplace: boolean
    EcoSeats: number
    BusSeats: number
    FirstClassSeats: number
    AirframeRepairCondition: Decimal | DecimalJsLike | number | string
    MaintenanceFBOId: string
    RemainingMaintenanceWorkHours: Decimal | DecimalJsLike | number | string
    Amount: Decimal | DecimalJsLike | number | string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AircraftMaintenanceUncheckedCreateWithoutAircraftInput = {
    Id: string
    AnnualCheckup: boolean
    Inspection100Hours: boolean
    FailuresRepair: boolean
    AirframeRepair: boolean
    AirframeReplace: boolean
    EcoSeats: number
    BusSeats: number
    FirstClassSeats: number
    AirframeRepairCondition: Decimal | DecimalJsLike | number | string
    MaintenanceFBOId: string
    RemainingMaintenanceWorkHours: Decimal | DecimalJsLike | number | string
    Amount: Decimal | DecimalJsLike | number | string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AircraftMaintenanceCreateOrConnectWithoutAircraftInput = {
    where: AircraftMaintenanceWhereUniqueInput
    create: XOR<AircraftMaintenanceCreateWithoutAircraftInput, AircraftMaintenanceUncheckedCreateWithoutAircraftInput>
  }

  export type AircraftMaintenanceCreateManyAircraftInputEnvelope = {
    data: AircraftMaintenanceCreateManyAircraftInput | AircraftMaintenanceCreateManyAircraftInput[]
    skipDuplicates?: boolean
  }

  export type FlightCreateWithoutAircraftInput = {
    Id: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    Company: CompanyCreateNestedOneWithoutFlightsInput
    VirtualAirline?: VirtualAirlineCreateNestedOneWithoutFlightsInput
    FlightRoute?: FlightRouteCreateNestedManyWithoutFlightInput
    DepartureAirport?: AirportCreateNestedOneWithoutDepartingFlightsInput
    ArrivalIntendedAirport?: AirportCreateNestedOneWithoutArrivingFlightsInput
    ArrivalAlternateAirport?: AirportCreateNestedOneWithoutArrivingAlternateFlightsInput
    ArrivalActualAirport?: AirportCreateNestedOneWithoutArrivingActualFlightsInput
    Member?: MemberCreateNestedOneWithoutFlightsInput
  }

  export type FlightUncheckedCreateWithoutAircraftInput = {
    Id: string
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedCreateNestedManyWithoutFlightInput
  }

  export type FlightCreateOrConnectWithoutAircraftInput = {
    where: FlightWhereUniqueInput
    create: XOR<FlightCreateWithoutAircraftInput, FlightUncheckedCreateWithoutAircraftInput>
  }

  export type FlightCreateManyAircraftInputEnvelope = {
    data: FlightCreateManyAircraftInput | FlightCreateManyAircraftInput[]
    skipDuplicates?: boolean
  }

  export type LiveryCreateWithoutAircraftInput = {
    Id?: string
    Name: string
    IsActive?: boolean
    DownloadCount?: number
    Image: string
    ImageFileName?: string | null
    CoverPhoto?: string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: string | null
    Description?: string | null
    DownloadUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Images?: LiveryImageCreateNestedManyWithoutLiveryInput
    Files?: LiveryFileCreateNestedManyWithoutLiveryInput
  }

  export type LiveryUncheckedCreateWithoutAircraftInput = {
    Id?: string
    Name: string
    IsActive?: boolean
    DownloadCount?: number
    Image: string
    ImageFileName?: string | null
    CoverPhoto?: string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: string | null
    Description?: string | null
    DownloadUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Images?: LiveryImageUncheckedCreateNestedManyWithoutLiveryInput
    Files?: LiveryFileUncheckedCreateNestedManyWithoutLiveryInput
  }

  export type LiveryCreateOrConnectWithoutAircraftInput = {
    where: LiveryWhereUniqueInput
    create: XOR<LiveryCreateWithoutAircraftInput, LiveryUncheckedCreateWithoutAircraftInput>
  }

  export type LiveryCreateManyAircraftInputEnvelope = {
    data: LiveryCreateManyAircraftInput | LiveryCreateManyAircraftInput[]
    skipDuplicates?: boolean
  }

  export type AircraftClassUpsertWithoutAircraftsInput = {
    update: XOR<AircraftClassUpdateWithoutAircraftsInput, AircraftClassUncheckedUpdateWithoutAircraftsInput>
    create: XOR<AircraftClassCreateWithoutAircraftsInput, AircraftClassUncheckedCreateWithoutAircraftsInput>
    where?: AircraftClassWhereInput
  }

  export type AircraftClassUpdateToOneWithWhereWithoutAircraftsInput = {
    where?: AircraftClassWhereInput
    data: XOR<AircraftClassUpdateWithoutAircraftsInput, AircraftClassUncheckedUpdateWithoutAircraftsInput>
  }

  export type AircraftClassUpdateWithoutAircraftsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShortName?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
  }

  export type AircraftClassUncheckedUpdateWithoutAircraftsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShortName?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
  }

  export type VirtualAirlineUpsertWithoutFleetInput = {
    update: XOR<VirtualAirlineUpdateWithoutFleetInput, VirtualAirlineUncheckedUpdateWithoutFleetInput>
    create: XOR<VirtualAirlineCreateWithoutFleetInput, VirtualAirlineUncheckedCreateWithoutFleetInput>
    where?: VirtualAirlineWhereInput
  }

  export type VirtualAirlineUpdateToOneWithWhereWithoutFleetInput = {
    where?: VirtualAirlineWhereInput
    data: XOR<VirtualAirlineUpdateWithoutFleetInput, VirtualAirlineUncheckedUpdateWithoutFleetInput>
  }

  export type VirtualAirlineUpdateWithoutFleetInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    World?: WorldUpdateOneWithoutVirtualAirlinesNestedInput
    VARoles?: VirtualAirlineRoleUpdateManyWithoutVirtualAirlineNestedInput
    Members?: MemberUpdateManyWithoutVirtualAirlineNestedInput
    Flights?: FlightUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type VirtualAirlineUncheckedUpdateWithoutFleetInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WorldId?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VARoles?: VirtualAirlineRoleUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Members?: MemberUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type AircraftStatusUpsertWithoutAircraftsInput = {
    update: XOR<AircraftStatusUpdateWithoutAircraftsInput, AircraftStatusUncheckedUpdateWithoutAircraftsInput>
    create: XOR<AircraftStatusCreateWithoutAircraftsInput, AircraftStatusUncheckedCreateWithoutAircraftsInput>
    where?: AircraftStatusWhereInput
  }

  export type AircraftStatusUpdateToOneWithWhereWithoutAircraftsInput = {
    where?: AircraftStatusWhereInput
    data: XOR<AircraftStatusUpdateWithoutAircraftsInput, AircraftStatusUncheckedUpdateWithoutAircraftsInput>
  }

  export type AircraftStatusUpdateWithoutAircraftsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
  }

  export type AircraftStatusUncheckedUpdateWithoutAircraftsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
  }

  export type AirportUpsertWithoutAircraftAtAirportInput = {
    update: XOR<AirportUpdateWithoutAircraftAtAirportInput, AirportUncheckedUpdateWithoutAircraftAtAirportInput>
    create: XOR<AirportCreateWithoutAircraftAtAirportInput, AirportUncheckedCreateWithoutAircraftAtAirportInput>
    where?: AirportWhereInput
  }

  export type AirportUpdateToOneWithWhereWithoutAircraftAtAirportInput = {
    where?: AirportWhereInput
    data: XOR<AirportUpdateWithoutAircraftAtAirportInput, AirportUncheckedUpdateWithoutAircraftAtAirportInput>
  }

  export type AirportUpdateWithoutAircraftAtAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DepartingFlights?: FlightUpdateManyWithoutDepartureAirportNestedInput
    ArrivingFlights?: FlightUpdateManyWithoutArrivalIntendedAirportNestedInput
    ArrivingAlternateFlights?: FlightUpdateManyWithoutArrivalAlternateAirportNestedInput
    ArrivingActualFlights?: FlightUpdateManyWithoutArrivalActualAirportNestedInput
  }

  export type AirportUncheckedUpdateWithoutAircraftAtAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DepartingFlights?: FlightUncheckedUpdateManyWithoutDepartureAirportNestedInput
    ArrivingFlights?: FlightUncheckedUpdateManyWithoutArrivalIntendedAirportNestedInput
    ArrivingAlternateFlights?: FlightUncheckedUpdateManyWithoutArrivalAlternateAirportNestedInput
    ArrivingActualFlights?: FlightUncheckedUpdateManyWithoutArrivalActualAirportNestedInput
  }

  export type AircraftMaintenanceUpsertWithWhereUniqueWithoutAircraftInput = {
    where: AircraftMaintenanceWhereUniqueInput
    update: XOR<AircraftMaintenanceUpdateWithoutAircraftInput, AircraftMaintenanceUncheckedUpdateWithoutAircraftInput>
    create: XOR<AircraftMaintenanceCreateWithoutAircraftInput, AircraftMaintenanceUncheckedCreateWithoutAircraftInput>
  }

  export type AircraftMaintenanceUpdateWithWhereUniqueWithoutAircraftInput = {
    where: AircraftMaintenanceWhereUniqueInput
    data: XOR<AircraftMaintenanceUpdateWithoutAircraftInput, AircraftMaintenanceUncheckedUpdateWithoutAircraftInput>
  }

  export type AircraftMaintenanceUpdateManyWithWhereWithoutAircraftInput = {
    where: AircraftMaintenanceScalarWhereInput
    data: XOR<AircraftMaintenanceUpdateManyMutationInput, AircraftMaintenanceUncheckedUpdateManyWithoutAircraftInput>
  }

  export type AircraftMaintenanceScalarWhereInput = {
    AND?: AircraftMaintenanceScalarWhereInput | AircraftMaintenanceScalarWhereInput[]
    OR?: AircraftMaintenanceScalarWhereInput[]
    NOT?: AircraftMaintenanceScalarWhereInput | AircraftMaintenanceScalarWhereInput[]
    Id?: UuidFilter<"AircraftMaintenance"> | string
    AircraftId?: UuidFilter<"AircraftMaintenance"> | string
    AnnualCheckup?: BoolFilter<"AircraftMaintenance"> | boolean
    Inspection100Hours?: BoolFilter<"AircraftMaintenance"> | boolean
    FailuresRepair?: BoolFilter<"AircraftMaintenance"> | boolean
    AirframeRepair?: BoolFilter<"AircraftMaintenance"> | boolean
    AirframeReplace?: BoolFilter<"AircraftMaintenance"> | boolean
    EcoSeats?: IntFilter<"AircraftMaintenance"> | number
    BusSeats?: IntFilter<"AircraftMaintenance"> | number
    FirstClassSeats?: IntFilter<"AircraftMaintenance"> | number
    AirframeRepairCondition?: DecimalFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: UuidFilter<"AircraftMaintenance"> | string
    RemainingMaintenanceWorkHours?: DecimalFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    Amount?: DecimalFilter<"AircraftMaintenance"> | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeFilter<"AircraftMaintenance"> | Date | string
    UpdatedAt?: DateTimeFilter<"AircraftMaintenance"> | Date | string
  }

  export type FlightUpsertWithWhereUniqueWithoutAircraftInput = {
    where: FlightWhereUniqueInput
    update: XOR<FlightUpdateWithoutAircraftInput, FlightUncheckedUpdateWithoutAircraftInput>
    create: XOR<FlightCreateWithoutAircraftInput, FlightUncheckedCreateWithoutAircraftInput>
  }

  export type FlightUpdateWithWhereUniqueWithoutAircraftInput = {
    where: FlightWhereUniqueInput
    data: XOR<FlightUpdateWithoutAircraftInput, FlightUncheckedUpdateWithoutAircraftInput>
  }

  export type FlightUpdateManyWithWhereWithoutAircraftInput = {
    where: FlightScalarWhereInput
    data: XOR<FlightUpdateManyMutationInput, FlightUncheckedUpdateManyWithoutAircraftInput>
  }

  export type LiveryUpsertWithWhereUniqueWithoutAircraftInput = {
    where: LiveryWhereUniqueInput
    update: XOR<LiveryUpdateWithoutAircraftInput, LiveryUncheckedUpdateWithoutAircraftInput>
    create: XOR<LiveryCreateWithoutAircraftInput, LiveryUncheckedCreateWithoutAircraftInput>
  }

  export type LiveryUpdateWithWhereUniqueWithoutAircraftInput = {
    where: LiveryWhereUniqueInput
    data: XOR<LiveryUpdateWithoutAircraftInput, LiveryUncheckedUpdateWithoutAircraftInput>
  }

  export type LiveryUpdateManyWithWhereWithoutAircraftInput = {
    where: LiveryScalarWhereInput
    data: XOR<LiveryUpdateManyMutationInput, LiveryUncheckedUpdateManyWithoutAircraftInput>
  }

  export type LiveryScalarWhereInput = {
    AND?: LiveryScalarWhereInput | LiveryScalarWhereInput[]
    OR?: LiveryScalarWhereInput[]
    NOT?: LiveryScalarWhereInput | LiveryScalarWhereInput[]
    Id?: UuidFilter<"Livery"> | string
    Name?: StringFilter<"Livery"> | string
    IsActive?: BoolFilter<"Livery"> | boolean
    AircraftId?: UuidNullableFilter<"Livery"> | string | null
    DownloadCount?: IntFilter<"Livery"> | number
    Image?: StringFilter<"Livery"> | string
    ImageFileName?: StringNullableFilter<"Livery"> | string | null
    CoverPhoto?: StringNullableFilter<"Livery"> | string | null
    Metadata?: JsonNullableFilter<"Livery">
    Url?: StringNullableFilter<"Livery"> | string | null
    Description?: StringNullableFilter<"Livery"> | string | null
    DownloadUrl?: StringNullableFilter<"Livery"> | string | null
    CreatedAt?: DateTimeFilter<"Livery"> | Date | string
    UpdatedAt?: DateTimeFilter<"Livery"> | Date | string
  }

  export type AircraftCreateWithoutAircraftClassInput = {
    Id: string
    Identifier: string
    DisplayName: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutFleetInput
    AircraftStatus: AircraftStatusCreateNestedOneWithoutAircraftsInput
    CurrentAirport?: AirportCreateNestedOneWithoutAircraftAtAirportInput
    AircraftMaintenance?: AircraftMaintenanceCreateNestedManyWithoutAircraftInput
    Flights?: FlightCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryCreateNestedManyWithoutAircraftInput
  }

  export type AircraftUncheckedCreateWithoutAircraftClassInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    VirtualAirlineId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedCreateNestedManyWithoutAircraftInput
    Flights?: FlightUncheckedCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryUncheckedCreateNestedManyWithoutAircraftInput
  }

  export type AircraftCreateOrConnectWithoutAircraftClassInput = {
    where: AircraftWhereUniqueInput
    create: XOR<AircraftCreateWithoutAircraftClassInput, AircraftUncheckedCreateWithoutAircraftClassInput>
  }

  export type AircraftCreateManyAircraftClassInputEnvelope = {
    data: AircraftCreateManyAircraftClassInput | AircraftCreateManyAircraftClassInput[]
    skipDuplicates?: boolean
  }

  export type AircraftUpsertWithWhereUniqueWithoutAircraftClassInput = {
    where: AircraftWhereUniqueInput
    update: XOR<AircraftUpdateWithoutAircraftClassInput, AircraftUncheckedUpdateWithoutAircraftClassInput>
    create: XOR<AircraftCreateWithoutAircraftClassInput, AircraftUncheckedCreateWithoutAircraftClassInput>
  }

  export type AircraftUpdateWithWhereUniqueWithoutAircraftClassInput = {
    where: AircraftWhereUniqueInput
    data: XOR<AircraftUpdateWithoutAircraftClassInput, AircraftUncheckedUpdateWithoutAircraftClassInput>
  }

  export type AircraftUpdateManyWithWhereWithoutAircraftClassInput = {
    where: AircraftScalarWhereInput
    data: XOR<AircraftUpdateManyMutationInput, AircraftUncheckedUpdateManyWithoutAircraftClassInput>
  }

  export type AircraftCreateWithoutAircraftMaintenanceInput = {
    Id: string
    Identifier: string
    DisplayName: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftClass: AircraftClassCreateNestedOneWithoutAircraftsInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutFleetInput
    AircraftStatus: AircraftStatusCreateNestedOneWithoutAircraftsInput
    CurrentAirport?: AirportCreateNestedOneWithoutAircraftAtAirportInput
    Flights?: FlightCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryCreateNestedManyWithoutAircraftInput
  }

  export type AircraftUncheckedCreateWithoutAircraftMaintenanceInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    AircraftClassId: string
    VirtualAirlineId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Flights?: FlightUncheckedCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryUncheckedCreateNestedManyWithoutAircraftInput
  }

  export type AircraftCreateOrConnectWithoutAircraftMaintenanceInput = {
    where: AircraftWhereUniqueInput
    create: XOR<AircraftCreateWithoutAircraftMaintenanceInput, AircraftUncheckedCreateWithoutAircraftMaintenanceInput>
  }

  export type AircraftUpsertWithoutAircraftMaintenanceInput = {
    update: XOR<AircraftUpdateWithoutAircraftMaintenanceInput, AircraftUncheckedUpdateWithoutAircraftMaintenanceInput>
    create: XOR<AircraftCreateWithoutAircraftMaintenanceInput, AircraftUncheckedCreateWithoutAircraftMaintenanceInput>
    where?: AircraftWhereInput
  }

  export type AircraftUpdateToOneWithWhereWithoutAircraftMaintenanceInput = {
    where?: AircraftWhereInput
    data: XOR<AircraftUpdateWithoutAircraftMaintenanceInput, AircraftUncheckedUpdateWithoutAircraftMaintenanceInput>
  }

  export type AircraftUpdateWithoutAircraftMaintenanceInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftClass?: AircraftClassUpdateOneRequiredWithoutAircraftsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutFleetNestedInput
    AircraftStatus?: AircraftStatusUpdateOneRequiredWithoutAircraftsNestedInput
    CurrentAirport?: AirportUpdateOneWithoutAircraftAtAirportNestedInput
    Flights?: FlightUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateWithoutAircraftMaintenanceInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Flights?: FlightUncheckedUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUncheckedUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftCreateWithoutAircraftStatusInput = {
    Id: string
    Identifier: string
    DisplayName: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftClass: AircraftClassCreateNestedOneWithoutAircraftsInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutFleetInput
    CurrentAirport?: AirportCreateNestedOneWithoutAircraftAtAirportInput
    AircraftMaintenance?: AircraftMaintenanceCreateNestedManyWithoutAircraftInput
    Flights?: FlightCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryCreateNestedManyWithoutAircraftInput
  }

  export type AircraftUncheckedCreateWithoutAircraftStatusInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftClassId: string
    VirtualAirlineId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedCreateNestedManyWithoutAircraftInput
    Flights?: FlightUncheckedCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryUncheckedCreateNestedManyWithoutAircraftInput
  }

  export type AircraftCreateOrConnectWithoutAircraftStatusInput = {
    where: AircraftWhereUniqueInput
    create: XOR<AircraftCreateWithoutAircraftStatusInput, AircraftUncheckedCreateWithoutAircraftStatusInput>
  }

  export type AircraftCreateManyAircraftStatusInputEnvelope = {
    data: AircraftCreateManyAircraftStatusInput | AircraftCreateManyAircraftStatusInput[]
    skipDuplicates?: boolean
  }

  export type AircraftUpsertWithWhereUniqueWithoutAircraftStatusInput = {
    where: AircraftWhereUniqueInput
    update: XOR<AircraftUpdateWithoutAircraftStatusInput, AircraftUncheckedUpdateWithoutAircraftStatusInput>
    create: XOR<AircraftCreateWithoutAircraftStatusInput, AircraftUncheckedCreateWithoutAircraftStatusInput>
  }

  export type AircraftUpdateWithWhereUniqueWithoutAircraftStatusInput = {
    where: AircraftWhereUniqueInput
    data: XOR<AircraftUpdateWithoutAircraftStatusInput, AircraftUncheckedUpdateWithoutAircraftStatusInput>
  }

  export type AircraftUpdateManyWithWhereWithoutAircraftStatusInput = {
    where: AircraftScalarWhereInput
    data: XOR<AircraftUpdateManyMutationInput, AircraftUncheckedUpdateManyWithoutAircraftStatusInput>
  }

  export type AircraftCreateWithoutCurrentAirportInput = {
    Id: string
    Identifier: string
    DisplayName: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftClass: AircraftClassCreateNestedOneWithoutAircraftsInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutFleetInput
    AircraftStatus: AircraftStatusCreateNestedOneWithoutAircraftsInput
    AircraftMaintenance?: AircraftMaintenanceCreateNestedManyWithoutAircraftInput
    Flights?: FlightCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryCreateNestedManyWithoutAircraftInput
  }

  export type AircraftUncheckedCreateWithoutCurrentAirportInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    AircraftClassId: string
    VirtualAirlineId: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedCreateNestedManyWithoutAircraftInput
    Flights?: FlightUncheckedCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryUncheckedCreateNestedManyWithoutAircraftInput
  }

  export type AircraftCreateOrConnectWithoutCurrentAirportInput = {
    where: AircraftWhereUniqueInput
    create: XOR<AircraftCreateWithoutCurrentAirportInput, AircraftUncheckedCreateWithoutCurrentAirportInput>
  }

  export type AircraftCreateManyCurrentAirportInputEnvelope = {
    data: AircraftCreateManyCurrentAirportInput | AircraftCreateManyCurrentAirportInput[]
    skipDuplicates?: boolean
  }

  export type FlightCreateWithoutDepartureAirportInput = {
    Id: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    Company: CompanyCreateNestedOneWithoutFlightsInput
    VirtualAirline?: VirtualAirlineCreateNestedOneWithoutFlightsInput
    Aircraft?: AircraftCreateNestedOneWithoutFlightsInput
    FlightRoute?: FlightRouteCreateNestedManyWithoutFlightInput
    ArrivalIntendedAirport?: AirportCreateNestedOneWithoutArrivingFlightsInput
    ArrivalAlternateAirport?: AirportCreateNestedOneWithoutArrivingAlternateFlightsInput
    ArrivalActualAirport?: AirportCreateNestedOneWithoutArrivingActualFlightsInput
    Member?: MemberCreateNestedOneWithoutFlightsInput
  }

  export type FlightUncheckedCreateWithoutDepartureAirportInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedCreateNestedManyWithoutFlightInput
  }

  export type FlightCreateOrConnectWithoutDepartureAirportInput = {
    where: FlightWhereUniqueInput
    create: XOR<FlightCreateWithoutDepartureAirportInput, FlightUncheckedCreateWithoutDepartureAirportInput>
  }

  export type FlightCreateManyDepartureAirportInputEnvelope = {
    data: FlightCreateManyDepartureAirportInput | FlightCreateManyDepartureAirportInput[]
    skipDuplicates?: boolean
  }

  export type FlightCreateWithoutArrivalIntendedAirportInput = {
    Id: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    Company: CompanyCreateNestedOneWithoutFlightsInput
    VirtualAirline?: VirtualAirlineCreateNestedOneWithoutFlightsInput
    Aircraft?: AircraftCreateNestedOneWithoutFlightsInput
    FlightRoute?: FlightRouteCreateNestedManyWithoutFlightInput
    DepartureAirport?: AirportCreateNestedOneWithoutDepartingFlightsInput
    ArrivalAlternateAirport?: AirportCreateNestedOneWithoutArrivingAlternateFlightsInput
    ArrivalActualAirport?: AirportCreateNestedOneWithoutArrivingActualFlightsInput
    Member?: MemberCreateNestedOneWithoutFlightsInput
  }

  export type FlightUncheckedCreateWithoutArrivalIntendedAirportInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedCreateNestedManyWithoutFlightInput
  }

  export type FlightCreateOrConnectWithoutArrivalIntendedAirportInput = {
    where: FlightWhereUniqueInput
    create: XOR<FlightCreateWithoutArrivalIntendedAirportInput, FlightUncheckedCreateWithoutArrivalIntendedAirportInput>
  }

  export type FlightCreateManyArrivalIntendedAirportInputEnvelope = {
    data: FlightCreateManyArrivalIntendedAirportInput | FlightCreateManyArrivalIntendedAirportInput[]
    skipDuplicates?: boolean
  }

  export type FlightCreateWithoutArrivalAlternateAirportInput = {
    Id: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    Company: CompanyCreateNestedOneWithoutFlightsInput
    VirtualAirline?: VirtualAirlineCreateNestedOneWithoutFlightsInput
    Aircraft?: AircraftCreateNestedOneWithoutFlightsInput
    FlightRoute?: FlightRouteCreateNestedManyWithoutFlightInput
    DepartureAirport?: AirportCreateNestedOneWithoutDepartingFlightsInput
    ArrivalIntendedAirport?: AirportCreateNestedOneWithoutArrivingFlightsInput
    ArrivalActualAirport?: AirportCreateNestedOneWithoutArrivingActualFlightsInput
    Member?: MemberCreateNestedOneWithoutFlightsInput
  }

  export type FlightUncheckedCreateWithoutArrivalAlternateAirportInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedCreateNestedManyWithoutFlightInput
  }

  export type FlightCreateOrConnectWithoutArrivalAlternateAirportInput = {
    where: FlightWhereUniqueInput
    create: XOR<FlightCreateWithoutArrivalAlternateAirportInput, FlightUncheckedCreateWithoutArrivalAlternateAirportInput>
  }

  export type FlightCreateManyArrivalAlternateAirportInputEnvelope = {
    data: FlightCreateManyArrivalAlternateAirportInput | FlightCreateManyArrivalAlternateAirportInput[]
    skipDuplicates?: boolean
  }

  export type FlightCreateWithoutArrivalActualAirportInput = {
    Id: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    Company: CompanyCreateNestedOneWithoutFlightsInput
    VirtualAirline?: VirtualAirlineCreateNestedOneWithoutFlightsInput
    Aircraft?: AircraftCreateNestedOneWithoutFlightsInput
    FlightRoute?: FlightRouteCreateNestedManyWithoutFlightInput
    DepartureAirport?: AirportCreateNestedOneWithoutDepartingFlightsInput
    ArrivalIntendedAirport?: AirportCreateNestedOneWithoutArrivingFlightsInput
    ArrivalAlternateAirport?: AirportCreateNestedOneWithoutArrivingAlternateFlightsInput
    Member?: MemberCreateNestedOneWithoutFlightsInput
  }

  export type FlightUncheckedCreateWithoutArrivalActualAirportInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedCreateNestedManyWithoutFlightInput
  }

  export type FlightCreateOrConnectWithoutArrivalActualAirportInput = {
    where: FlightWhereUniqueInput
    create: XOR<FlightCreateWithoutArrivalActualAirportInput, FlightUncheckedCreateWithoutArrivalActualAirportInput>
  }

  export type FlightCreateManyArrivalActualAirportInputEnvelope = {
    data: FlightCreateManyArrivalActualAirportInput | FlightCreateManyArrivalActualAirportInput[]
    skipDuplicates?: boolean
  }

  export type AircraftUpsertWithWhereUniqueWithoutCurrentAirportInput = {
    where: AircraftWhereUniqueInput
    update: XOR<AircraftUpdateWithoutCurrentAirportInput, AircraftUncheckedUpdateWithoutCurrentAirportInput>
    create: XOR<AircraftCreateWithoutCurrentAirportInput, AircraftUncheckedCreateWithoutCurrentAirportInput>
  }

  export type AircraftUpdateWithWhereUniqueWithoutCurrentAirportInput = {
    where: AircraftWhereUniqueInput
    data: XOR<AircraftUpdateWithoutCurrentAirportInput, AircraftUncheckedUpdateWithoutCurrentAirportInput>
  }

  export type AircraftUpdateManyWithWhereWithoutCurrentAirportInput = {
    where: AircraftScalarWhereInput
    data: XOR<AircraftUpdateManyMutationInput, AircraftUncheckedUpdateManyWithoutCurrentAirportInput>
  }

  export type FlightUpsertWithWhereUniqueWithoutDepartureAirportInput = {
    where: FlightWhereUniqueInput
    update: XOR<FlightUpdateWithoutDepartureAirportInput, FlightUncheckedUpdateWithoutDepartureAirportInput>
    create: XOR<FlightCreateWithoutDepartureAirportInput, FlightUncheckedCreateWithoutDepartureAirportInput>
  }

  export type FlightUpdateWithWhereUniqueWithoutDepartureAirportInput = {
    where: FlightWhereUniqueInput
    data: XOR<FlightUpdateWithoutDepartureAirportInput, FlightUncheckedUpdateWithoutDepartureAirportInput>
  }

  export type FlightUpdateManyWithWhereWithoutDepartureAirportInput = {
    where: FlightScalarWhereInput
    data: XOR<FlightUpdateManyMutationInput, FlightUncheckedUpdateManyWithoutDepartureAirportInput>
  }

  export type FlightUpsertWithWhereUniqueWithoutArrivalIntendedAirportInput = {
    where: FlightWhereUniqueInput
    update: XOR<FlightUpdateWithoutArrivalIntendedAirportInput, FlightUncheckedUpdateWithoutArrivalIntendedAirportInput>
    create: XOR<FlightCreateWithoutArrivalIntendedAirportInput, FlightUncheckedCreateWithoutArrivalIntendedAirportInput>
  }

  export type FlightUpdateWithWhereUniqueWithoutArrivalIntendedAirportInput = {
    where: FlightWhereUniqueInput
    data: XOR<FlightUpdateWithoutArrivalIntendedAirportInput, FlightUncheckedUpdateWithoutArrivalIntendedAirportInput>
  }

  export type FlightUpdateManyWithWhereWithoutArrivalIntendedAirportInput = {
    where: FlightScalarWhereInput
    data: XOR<FlightUpdateManyMutationInput, FlightUncheckedUpdateManyWithoutArrivalIntendedAirportInput>
  }

  export type FlightUpsertWithWhereUniqueWithoutArrivalAlternateAirportInput = {
    where: FlightWhereUniqueInput
    update: XOR<FlightUpdateWithoutArrivalAlternateAirportInput, FlightUncheckedUpdateWithoutArrivalAlternateAirportInput>
    create: XOR<FlightCreateWithoutArrivalAlternateAirportInput, FlightUncheckedCreateWithoutArrivalAlternateAirportInput>
  }

  export type FlightUpdateWithWhereUniqueWithoutArrivalAlternateAirportInput = {
    where: FlightWhereUniqueInput
    data: XOR<FlightUpdateWithoutArrivalAlternateAirportInput, FlightUncheckedUpdateWithoutArrivalAlternateAirportInput>
  }

  export type FlightUpdateManyWithWhereWithoutArrivalAlternateAirportInput = {
    where: FlightScalarWhereInput
    data: XOR<FlightUpdateManyMutationInput, FlightUncheckedUpdateManyWithoutArrivalAlternateAirportInput>
  }

  export type FlightUpsertWithWhereUniqueWithoutArrivalActualAirportInput = {
    where: FlightWhereUniqueInput
    update: XOR<FlightUpdateWithoutArrivalActualAirportInput, FlightUncheckedUpdateWithoutArrivalActualAirportInput>
    create: XOR<FlightCreateWithoutArrivalActualAirportInput, FlightUncheckedCreateWithoutArrivalActualAirportInput>
  }

  export type FlightUpdateWithWhereUniqueWithoutArrivalActualAirportInput = {
    where: FlightWhereUniqueInput
    data: XOR<FlightUpdateWithoutArrivalActualAirportInput, FlightUncheckedUpdateWithoutArrivalActualAirportInput>
  }

  export type FlightUpdateManyWithWhereWithoutArrivalActualAirportInput = {
    where: FlightScalarWhereInput
    data: XOR<FlightUpdateManyMutationInput, FlightUncheckedUpdateManyWithoutArrivalActualAirportInput>
  }

  export type CompanyCreateWithoutFlightsInput = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date | string
    Level: number
    LevelXP: number
    Reputation: Decimal | DecimalJsLike | number | string
    Paused?: boolean
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    DifficultyLevel: number
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    World: WorldCreateNestedOneWithoutCompaniesInput
    Owner?: MemberCreateNestedOneWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutFlightsInput = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date | string
    Level: number
    LevelXP: number
    Reputation: Decimal | DecimalJsLike | number | string
    Paused?: boolean
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    DifficultyLevel: number
    WorldId: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Owner?: MemberUncheckedCreateNestedOneWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutFlightsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutFlightsInput, CompanyUncheckedCreateWithoutFlightsInput>
  }

  export type VirtualAirlineCreateWithoutFlightsInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    World?: WorldCreateNestedOneWithoutVirtualAirlinesInput
    VARoles?: VirtualAirlineRoleCreateNestedManyWithoutVirtualAirlineInput
    Members?: MemberCreateNestedManyWithoutVirtualAirlineInput
    Fleet?: AircraftCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineUncheckedCreateWithoutFlightsInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    WorldId?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    VARoles?: VirtualAirlineRoleUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Members?: MemberUncheckedCreateNestedManyWithoutVirtualAirlineInput
    Fleet?: AircraftUncheckedCreateNestedManyWithoutVirtualAirlineInput
  }

  export type VirtualAirlineCreateOrConnectWithoutFlightsInput = {
    where: VirtualAirlineWhereUniqueInput
    create: XOR<VirtualAirlineCreateWithoutFlightsInput, VirtualAirlineUncheckedCreateWithoutFlightsInput>
  }

  export type AircraftCreateWithoutFlightsInput = {
    Id: string
    Identifier: string
    DisplayName: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftClass: AircraftClassCreateNestedOneWithoutAircraftsInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutFleetInput
    AircraftStatus: AircraftStatusCreateNestedOneWithoutAircraftsInput
    CurrentAirport?: AirportCreateNestedOneWithoutAircraftAtAirportInput
    AircraftMaintenance?: AircraftMaintenanceCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryCreateNestedManyWithoutAircraftInput
  }

  export type AircraftUncheckedCreateWithoutFlightsInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    AircraftClassId: string
    VirtualAirlineId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedCreateNestedManyWithoutAircraftInput
    Liveries?: LiveryUncheckedCreateNestedManyWithoutAircraftInput
  }

  export type AircraftCreateOrConnectWithoutFlightsInput = {
    where: AircraftWhereUniqueInput
    create: XOR<AircraftCreateWithoutFlightsInput, AircraftUncheckedCreateWithoutFlightsInput>
  }

  export type FlightRouteCreateWithoutFlightInput = {
    Id?: string
    Route: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Member: MemberCreateNestedOneWithoutFlightRoutesInput
  }

  export type FlightRouteUncheckedCreateWithoutFlightInput = {
    Id?: string
    MemberId: string
    Route: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type FlightRouteCreateOrConnectWithoutFlightInput = {
    where: FlightRouteWhereUniqueInput
    create: XOR<FlightRouteCreateWithoutFlightInput, FlightRouteUncheckedCreateWithoutFlightInput>
  }

  export type FlightRouteCreateManyFlightInputEnvelope = {
    data: FlightRouteCreateManyFlightInput | FlightRouteCreateManyFlightInput[]
    skipDuplicates?: boolean
  }

  export type AirportCreateWithoutDepartingFlightsInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftAtAirport?: AircraftCreateNestedManyWithoutCurrentAirportInput
    ArrivingFlights?: FlightCreateNestedManyWithoutArrivalIntendedAirportInput
    ArrivingAlternateFlights?: FlightCreateNestedManyWithoutArrivalAlternateAirportInput
    ArrivingActualFlights?: FlightCreateNestedManyWithoutArrivalActualAirportInput
  }

  export type AirportUncheckedCreateWithoutDepartingFlightsInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftAtAirport?: AircraftUncheckedCreateNestedManyWithoutCurrentAirportInput
    ArrivingFlights?: FlightUncheckedCreateNestedManyWithoutArrivalIntendedAirportInput
    ArrivingAlternateFlights?: FlightUncheckedCreateNestedManyWithoutArrivalAlternateAirportInput
    ArrivingActualFlights?: FlightUncheckedCreateNestedManyWithoutArrivalActualAirportInput
  }

  export type AirportCreateOrConnectWithoutDepartingFlightsInput = {
    where: AirportWhereUniqueInput
    create: XOR<AirportCreateWithoutDepartingFlightsInput, AirportUncheckedCreateWithoutDepartingFlightsInput>
  }

  export type AirportCreateWithoutArrivingFlightsInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftAtAirport?: AircraftCreateNestedManyWithoutCurrentAirportInput
    DepartingFlights?: FlightCreateNestedManyWithoutDepartureAirportInput
    ArrivingAlternateFlights?: FlightCreateNestedManyWithoutArrivalAlternateAirportInput
    ArrivingActualFlights?: FlightCreateNestedManyWithoutArrivalActualAirportInput
  }

  export type AirportUncheckedCreateWithoutArrivingFlightsInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftAtAirport?: AircraftUncheckedCreateNestedManyWithoutCurrentAirportInput
    DepartingFlights?: FlightUncheckedCreateNestedManyWithoutDepartureAirportInput
    ArrivingAlternateFlights?: FlightUncheckedCreateNestedManyWithoutArrivalAlternateAirportInput
    ArrivingActualFlights?: FlightUncheckedCreateNestedManyWithoutArrivalActualAirportInput
  }

  export type AirportCreateOrConnectWithoutArrivingFlightsInput = {
    where: AirportWhereUniqueInput
    create: XOR<AirportCreateWithoutArrivingFlightsInput, AirportUncheckedCreateWithoutArrivingFlightsInput>
  }

  export type AirportCreateWithoutArrivingAlternateFlightsInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftAtAirport?: AircraftCreateNestedManyWithoutCurrentAirportInput
    DepartingFlights?: FlightCreateNestedManyWithoutDepartureAirportInput
    ArrivingFlights?: FlightCreateNestedManyWithoutArrivalIntendedAirportInput
    ArrivingActualFlights?: FlightCreateNestedManyWithoutArrivalActualAirportInput
  }

  export type AirportUncheckedCreateWithoutArrivingAlternateFlightsInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftAtAirport?: AircraftUncheckedCreateNestedManyWithoutCurrentAirportInput
    DepartingFlights?: FlightUncheckedCreateNestedManyWithoutDepartureAirportInput
    ArrivingFlights?: FlightUncheckedCreateNestedManyWithoutArrivalIntendedAirportInput
    ArrivingActualFlights?: FlightUncheckedCreateNestedManyWithoutArrivalActualAirportInput
  }

  export type AirportCreateOrConnectWithoutArrivingAlternateFlightsInput = {
    where: AirportWhereUniqueInput
    create: XOR<AirportCreateWithoutArrivingAlternateFlightsInput, AirportUncheckedCreateWithoutArrivingAlternateFlightsInput>
  }

  export type AirportCreateWithoutArrivingActualFlightsInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftAtAirport?: AircraftCreateNestedManyWithoutCurrentAirportInput
    DepartingFlights?: FlightCreateNestedManyWithoutDepartureAirportInput
    ArrivingFlights?: FlightCreateNestedManyWithoutArrivalIntendedAirportInput
    ArrivingAlternateFlights?: FlightCreateNestedManyWithoutArrivalAlternateAirportInput
  }

  export type AirportUncheckedCreateWithoutArrivingActualFlightsInput = {
    Id: string
    ICAO: string
    IATA?: string | null
    Description?: string | null
    Name: string
    Size?: number
    City?: string | null
    State?: string | null
    CountryCode?: string | null
    CountryName?: string | null
    CountryEmoji?: string | null
    Latitude: Decimal | DecimalJsLike | number | string
    Longitude: Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: string | null
    WikiUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    AircraftAtAirport?: AircraftUncheckedCreateNestedManyWithoutCurrentAirportInput
    DepartingFlights?: FlightUncheckedCreateNestedManyWithoutDepartureAirportInput
    ArrivingFlights?: FlightUncheckedCreateNestedManyWithoutArrivalIntendedAirportInput
    ArrivingAlternateFlights?: FlightUncheckedCreateNestedManyWithoutArrivalAlternateAirportInput
  }

  export type AirportCreateOrConnectWithoutArrivingActualFlightsInput = {
    where: AirportWhereUniqueInput
    create: XOR<AirportCreateWithoutArrivingActualFlightsInput, AirportUncheckedCreateWithoutArrivingActualFlightsInput>
  }

  export type MemberCreateWithoutFlightsInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Company: CompanyCreateNestedOneWithoutOwnerInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutMembersInput
    VARole: VirtualAirlineRoleCreateNestedOneWithoutMembersInput
    User?: UserCreateNestedOneWithoutMembersInput
    FlightRoutes?: FlightRouteCreateNestedManyWithoutMemberInput
  }

  export type MemberUncheckedCreateWithoutFlightsInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VAId: string
    VARoleId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    UserId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    CompanyId: string
    FlightRoutes?: FlightRouteUncheckedCreateNestedManyWithoutMemberInput
  }

  export type MemberCreateOrConnectWithoutFlightsInput = {
    where: MemberWhereUniqueInput
    create: XOR<MemberCreateWithoutFlightsInput, MemberUncheckedCreateWithoutFlightsInput>
  }

  export type CompanyUpsertWithoutFlightsInput = {
    update: XOR<CompanyUpdateWithoutFlightsInput, CompanyUncheckedUpdateWithoutFlightsInput>
    create: XOR<CompanyCreateWithoutFlightsInput, CompanyUncheckedCreateWithoutFlightsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutFlightsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutFlightsInput, CompanyUncheckedUpdateWithoutFlightsInput>
  }

  export type CompanyUpdateWithoutFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    World?: WorldUpdateOneRequiredWithoutCompaniesNestedInput
    Owner?: MemberUpdateOneWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    WorldId?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Owner?: MemberUncheckedUpdateOneWithoutCompanyNestedInput
  }

  export type VirtualAirlineUpsertWithoutFlightsInput = {
    update: XOR<VirtualAirlineUpdateWithoutFlightsInput, VirtualAirlineUncheckedUpdateWithoutFlightsInput>
    create: XOR<VirtualAirlineCreateWithoutFlightsInput, VirtualAirlineUncheckedCreateWithoutFlightsInput>
    where?: VirtualAirlineWhereInput
  }

  export type VirtualAirlineUpdateToOneWithWhereWithoutFlightsInput = {
    where?: VirtualAirlineWhereInput
    data: XOR<VirtualAirlineUpdateWithoutFlightsInput, VirtualAirlineUncheckedUpdateWithoutFlightsInput>
  }

  export type VirtualAirlineUpdateWithoutFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    World?: WorldUpdateOneWithoutVirtualAirlinesNestedInput
    VARoles?: VirtualAirlineRoleUpdateManyWithoutVirtualAirlineNestedInput
    Members?: MemberUpdateManyWithoutVirtualAirlineNestedInput
    Fleet?: AircraftUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type VirtualAirlineUncheckedUpdateWithoutFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    WorldId?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VARoles?: VirtualAirlineRoleUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Members?: MemberUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Fleet?: AircraftUncheckedUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type AircraftUpsertWithoutFlightsInput = {
    update: XOR<AircraftUpdateWithoutFlightsInput, AircraftUncheckedUpdateWithoutFlightsInput>
    create: XOR<AircraftCreateWithoutFlightsInput, AircraftUncheckedCreateWithoutFlightsInput>
    where?: AircraftWhereInput
  }

  export type AircraftUpdateToOneWithWhereWithoutFlightsInput = {
    where?: AircraftWhereInput
    data: XOR<AircraftUpdateWithoutFlightsInput, AircraftUncheckedUpdateWithoutFlightsInput>
  }

  export type AircraftUpdateWithoutFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftClass?: AircraftClassUpdateOneRequiredWithoutAircraftsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutFleetNestedInput
    AircraftStatus?: AircraftStatusUpdateOneRequiredWithoutAircraftsNestedInput
    CurrentAirport?: AirportUpdateOneWithoutAircraftAtAirportNestedInput
    AircraftMaintenance?: AircraftMaintenanceUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateWithoutFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUncheckedUpdateManyWithoutAircraftNestedInput
  }

  export type FlightRouteUpsertWithWhereUniqueWithoutFlightInput = {
    where: FlightRouteWhereUniqueInput
    update: XOR<FlightRouteUpdateWithoutFlightInput, FlightRouteUncheckedUpdateWithoutFlightInput>
    create: XOR<FlightRouteCreateWithoutFlightInput, FlightRouteUncheckedCreateWithoutFlightInput>
  }

  export type FlightRouteUpdateWithWhereUniqueWithoutFlightInput = {
    where: FlightRouteWhereUniqueInput
    data: XOR<FlightRouteUpdateWithoutFlightInput, FlightRouteUncheckedUpdateWithoutFlightInput>
  }

  export type FlightRouteUpdateManyWithWhereWithoutFlightInput = {
    where: FlightRouteScalarWhereInput
    data: XOR<FlightRouteUpdateManyMutationInput, FlightRouteUncheckedUpdateManyWithoutFlightInput>
  }

  export type AirportUpsertWithoutDepartingFlightsInput = {
    update: XOR<AirportUpdateWithoutDepartingFlightsInput, AirportUncheckedUpdateWithoutDepartingFlightsInput>
    create: XOR<AirportCreateWithoutDepartingFlightsInput, AirportUncheckedCreateWithoutDepartingFlightsInput>
    where?: AirportWhereInput
  }

  export type AirportUpdateToOneWithWhereWithoutDepartingFlightsInput = {
    where?: AirportWhereInput
    data: XOR<AirportUpdateWithoutDepartingFlightsInput, AirportUncheckedUpdateWithoutDepartingFlightsInput>
  }

  export type AirportUpdateWithoutDepartingFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftAtAirport?: AircraftUpdateManyWithoutCurrentAirportNestedInput
    ArrivingFlights?: FlightUpdateManyWithoutArrivalIntendedAirportNestedInput
    ArrivingAlternateFlights?: FlightUpdateManyWithoutArrivalAlternateAirportNestedInput
    ArrivingActualFlights?: FlightUpdateManyWithoutArrivalActualAirportNestedInput
  }

  export type AirportUncheckedUpdateWithoutDepartingFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftAtAirport?: AircraftUncheckedUpdateManyWithoutCurrentAirportNestedInput
    ArrivingFlights?: FlightUncheckedUpdateManyWithoutArrivalIntendedAirportNestedInput
    ArrivingAlternateFlights?: FlightUncheckedUpdateManyWithoutArrivalAlternateAirportNestedInput
    ArrivingActualFlights?: FlightUncheckedUpdateManyWithoutArrivalActualAirportNestedInput
  }

  export type AirportUpsertWithoutArrivingFlightsInput = {
    update: XOR<AirportUpdateWithoutArrivingFlightsInput, AirportUncheckedUpdateWithoutArrivingFlightsInput>
    create: XOR<AirportCreateWithoutArrivingFlightsInput, AirportUncheckedCreateWithoutArrivingFlightsInput>
    where?: AirportWhereInput
  }

  export type AirportUpdateToOneWithWhereWithoutArrivingFlightsInput = {
    where?: AirportWhereInput
    data: XOR<AirportUpdateWithoutArrivingFlightsInput, AirportUncheckedUpdateWithoutArrivingFlightsInput>
  }

  export type AirportUpdateWithoutArrivingFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftAtAirport?: AircraftUpdateManyWithoutCurrentAirportNestedInput
    DepartingFlights?: FlightUpdateManyWithoutDepartureAirportNestedInput
    ArrivingAlternateFlights?: FlightUpdateManyWithoutArrivalAlternateAirportNestedInput
    ArrivingActualFlights?: FlightUpdateManyWithoutArrivalActualAirportNestedInput
  }

  export type AirportUncheckedUpdateWithoutArrivingFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftAtAirport?: AircraftUncheckedUpdateManyWithoutCurrentAirportNestedInput
    DepartingFlights?: FlightUncheckedUpdateManyWithoutDepartureAirportNestedInput
    ArrivingAlternateFlights?: FlightUncheckedUpdateManyWithoutArrivalAlternateAirportNestedInput
    ArrivingActualFlights?: FlightUncheckedUpdateManyWithoutArrivalActualAirportNestedInput
  }

  export type AirportUpsertWithoutArrivingAlternateFlightsInput = {
    update: XOR<AirportUpdateWithoutArrivingAlternateFlightsInput, AirportUncheckedUpdateWithoutArrivingAlternateFlightsInput>
    create: XOR<AirportCreateWithoutArrivingAlternateFlightsInput, AirportUncheckedCreateWithoutArrivingAlternateFlightsInput>
    where?: AirportWhereInput
  }

  export type AirportUpdateToOneWithWhereWithoutArrivingAlternateFlightsInput = {
    where?: AirportWhereInput
    data: XOR<AirportUpdateWithoutArrivingAlternateFlightsInput, AirportUncheckedUpdateWithoutArrivingAlternateFlightsInput>
  }

  export type AirportUpdateWithoutArrivingAlternateFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftAtAirport?: AircraftUpdateManyWithoutCurrentAirportNestedInput
    DepartingFlights?: FlightUpdateManyWithoutDepartureAirportNestedInput
    ArrivingFlights?: FlightUpdateManyWithoutArrivalIntendedAirportNestedInput
    ArrivingActualFlights?: FlightUpdateManyWithoutArrivalActualAirportNestedInput
  }

  export type AirportUncheckedUpdateWithoutArrivingAlternateFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftAtAirport?: AircraftUncheckedUpdateManyWithoutCurrentAirportNestedInput
    DepartingFlights?: FlightUncheckedUpdateManyWithoutDepartureAirportNestedInput
    ArrivingFlights?: FlightUncheckedUpdateManyWithoutArrivalIntendedAirportNestedInput
    ArrivingActualFlights?: FlightUncheckedUpdateManyWithoutArrivalActualAirportNestedInput
  }

  export type AirportUpsertWithoutArrivingActualFlightsInput = {
    update: XOR<AirportUpdateWithoutArrivingActualFlightsInput, AirportUncheckedUpdateWithoutArrivingActualFlightsInput>
    create: XOR<AirportCreateWithoutArrivingActualFlightsInput, AirportUncheckedCreateWithoutArrivingActualFlightsInput>
    where?: AirportWhereInput
  }

  export type AirportUpdateToOneWithWhereWithoutArrivingActualFlightsInput = {
    where?: AirportWhereInput
    data: XOR<AirportUpdateWithoutArrivingActualFlightsInput, AirportUncheckedUpdateWithoutArrivingActualFlightsInput>
  }

  export type AirportUpdateWithoutArrivingActualFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftAtAirport?: AircraftUpdateManyWithoutCurrentAirportNestedInput
    DepartingFlights?: FlightUpdateManyWithoutDepartureAirportNestedInput
    ArrivingFlights?: FlightUpdateManyWithoutArrivalIntendedAirportNestedInput
    ArrivingAlternateFlights?: FlightUpdateManyWithoutArrivalAlternateAirportNestedInput
  }

  export type AirportUncheckedUpdateWithoutArrivingActualFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ICAO?: StringFieldUpdateOperationsInput | string
    IATA?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    City?: NullableStringFieldUpdateOperationsInput | string | null
    State?: NullableStringFieldUpdateOperationsInput | string | null
    CountryCode?: NullableStringFieldUpdateOperationsInput | string | null
    CountryName?: NullableStringFieldUpdateOperationsInput | string | null
    CountryEmoji?: NullableStringFieldUpdateOperationsInput | string | null
    Latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    HomeWebSiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    WikiUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftAtAirport?: AircraftUncheckedUpdateManyWithoutCurrentAirportNestedInput
    DepartingFlights?: FlightUncheckedUpdateManyWithoutDepartureAirportNestedInput
    ArrivingFlights?: FlightUncheckedUpdateManyWithoutArrivalIntendedAirportNestedInput
    ArrivingAlternateFlights?: FlightUncheckedUpdateManyWithoutArrivalAlternateAirportNestedInput
  }

  export type MemberUpsertWithoutFlightsInput = {
    update: XOR<MemberUpdateWithoutFlightsInput, MemberUncheckedUpdateWithoutFlightsInput>
    create: XOR<MemberCreateWithoutFlightsInput, MemberUncheckedCreateWithoutFlightsInput>
    where?: MemberWhereInput
  }

  export type MemberUpdateToOneWithWhereWithoutFlightsInput = {
    where?: MemberWhereInput
    data: XOR<MemberUpdateWithoutFlightsInput, MemberUncheckedUpdateWithoutFlightsInput>
  }

  export type MemberUpdateWithoutFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Company?: CompanyUpdateOneRequiredWithoutOwnerNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutMembersNestedInput
    VARole?: VirtualAirlineRoleUpdateOneRequiredWithoutMembersNestedInput
    User?: UserUpdateOneWithoutMembersNestedInput
    FlightRoutes?: FlightRouteUpdateManyWithoutMemberNestedInput
  }

  export type MemberUncheckedUpdateWithoutFlightsInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VAId?: StringFieldUpdateOperationsInput | string
    VARoleId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CompanyId?: StringFieldUpdateOperationsInput | string
    FlightRoutes?: FlightRouteUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type FlightCreateWithoutFlightRouteInput = {
    Id: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
    Company: CompanyCreateNestedOneWithoutFlightsInput
    VirtualAirline?: VirtualAirlineCreateNestedOneWithoutFlightsInput
    Aircraft?: AircraftCreateNestedOneWithoutFlightsInput
    DepartureAirport?: AirportCreateNestedOneWithoutDepartingFlightsInput
    ArrivalIntendedAirport?: AirportCreateNestedOneWithoutArrivingFlightsInput
    ArrivalAlternateAirport?: AirportCreateNestedOneWithoutArrivingAlternateFlightsInput
    ArrivalActualAirport?: AirportCreateNestedOneWithoutArrivingActualFlightsInput
    Member?: MemberCreateNestedOneWithoutFlightsInput
  }

  export type FlightUncheckedCreateWithoutFlightRouteInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
  }

  export type FlightCreateOrConnectWithoutFlightRouteInput = {
    where: FlightWhereUniqueInput
    create: XOR<FlightCreateWithoutFlightRouteInput, FlightUncheckedCreateWithoutFlightRouteInput>
  }

  export type MemberCreateWithoutFlightRoutesInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    Company: CompanyCreateNestedOneWithoutOwnerInput
    VirtualAirline: VirtualAirlineCreateNestedOneWithoutMembersInput
    VARole: VirtualAirlineRoleCreateNestedOneWithoutMembersInput
    Flights?: FlightCreateNestedManyWithoutMemberInput
    User?: UserCreateNestedOneWithoutMembersInput
  }

  export type MemberUncheckedCreateWithoutFlightRoutesInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VAId: string
    VARoleId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    UserId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    CompanyId: string
    Flights?: FlightUncheckedCreateNestedManyWithoutMemberInput
  }

  export type MemberCreateOrConnectWithoutFlightRoutesInput = {
    where: MemberWhereUniqueInput
    create: XOR<MemberCreateWithoutFlightRoutesInput, MemberUncheckedCreateWithoutFlightRoutesInput>
  }

  export type FlightUpsertWithoutFlightRouteInput = {
    update: XOR<FlightUpdateWithoutFlightRouteInput, FlightUncheckedUpdateWithoutFlightRouteInput>
    create: XOR<FlightCreateWithoutFlightRouteInput, FlightUncheckedCreateWithoutFlightRouteInput>
    where?: FlightWhereInput
  }

  export type FlightUpdateToOneWithWhereWithoutFlightRouteInput = {
    where?: FlightWhereInput
    data: XOR<FlightUpdateWithoutFlightRouteInput, FlightUncheckedUpdateWithoutFlightRouteInput>
  }

  export type FlightUpdateWithoutFlightRouteInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    Company?: CompanyUpdateOneRequiredWithoutFlightsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneWithoutFlightsNestedInput
    Aircraft?: AircraftUpdateOneWithoutFlightsNestedInput
    DepartureAirport?: AirportUpdateOneWithoutDepartingFlightsNestedInput
    ArrivalIntendedAirport?: AirportUpdateOneWithoutArrivingFlightsNestedInput
    ArrivalAlternateAirport?: AirportUpdateOneWithoutArrivingAlternateFlightsNestedInput
    ArrivalActualAirport?: AirportUpdateOneWithoutArrivingActualFlightsNestedInput
    Member?: MemberUpdateOneWithoutFlightsNestedInput
  }

  export type FlightUncheckedUpdateWithoutFlightRouteInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type MemberUpsertWithoutFlightRoutesInput = {
    update: XOR<MemberUpdateWithoutFlightRoutesInput, MemberUncheckedUpdateWithoutFlightRoutesInput>
    create: XOR<MemberCreateWithoutFlightRoutesInput, MemberUncheckedCreateWithoutFlightRoutesInput>
    where?: MemberWhereInput
  }

  export type MemberUpdateToOneWithWhereWithoutFlightRoutesInput = {
    where?: MemberWhereInput
    data: XOR<MemberUpdateWithoutFlightRoutesInput, MemberUncheckedUpdateWithoutFlightRoutesInput>
  }

  export type MemberUpdateWithoutFlightRoutesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Company?: CompanyUpdateOneRequiredWithoutOwnerNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutMembersNestedInput
    VARole?: VirtualAirlineRoleUpdateOneRequiredWithoutMembersNestedInput
    Flights?: FlightUpdateManyWithoutMemberNestedInput
    User?: UserUpdateOneWithoutMembersNestedInput
  }

  export type MemberUncheckedUpdateWithoutFlightRoutesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VAId?: StringFieldUpdateOperationsInput | string
    VARoleId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CompanyId?: StringFieldUpdateOperationsInput | string
    Flights?: FlightUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type ListenerEventCreateManyDiscordMessageInput = {
    Id?: number
    Variant: string
    Type: string
    SentAt: Date | string
    Status?: $Enums.ListenerEventStatus
    SenderId: string
    Error?: string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type ListenerEventUpdateWithoutDiscordMessageInput = {
    Variant?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    SentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Status?: EnumListenerEventStatusFieldUpdateOperationsInput | $Enums.ListenerEventStatus
    Error?: NullableStringFieldUpdateOperationsInput | string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Sender?: ListenerEventSenderUpdateOneRequiredWithoutListenerEventsNestedInput
  }

  export type ListenerEventUncheckedUpdateWithoutDiscordMessageInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Variant?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    SentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Status?: EnumListenerEventStatusFieldUpdateOperationsInput | $Enums.ListenerEventStatus
    SenderId?: StringFieldUpdateOperationsInput | string
    Error?: NullableStringFieldUpdateOperationsInput | string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventUncheckedUpdateManyWithoutDiscordMessageInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Variant?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    SentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Status?: EnumListenerEventStatusFieldUpdateOperationsInput | $Enums.ListenerEventStatus
    SenderId?: StringFieldUpdateOperationsInput | string
    Error?: NullableStringFieldUpdateOperationsInput | string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscordMessageCreateManyDiscordMessageTemplateInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordChannelWebhookId?: string | null
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type DiscordMessageUpdateWithoutDiscordMessageTemplateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordChannelWebhook?: DiscordChannelWebhookUpdateOneWithoutDiscordMessagesNestedInput
    ListenerEvents?: ListenerEventUpdateManyWithoutDiscordMessageNestedInput
  }

  export type DiscordMessageUncheckedUpdateWithoutDiscordMessageTemplateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordChannelWebhookId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListenerEvents?: ListenerEventUncheckedUpdateManyWithoutDiscordMessageNestedInput
  }

  export type DiscordMessageUncheckedUpdateManyWithoutDiscordMessageTemplateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordChannelWebhookId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscordMessageCreateManyDiscordChannelWebhookInput = {
    Id?: string
    ChannelId: string
    Content: string
    DiscordMessageTemplateId?: number | null
    DiscordMessageSentAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type ListenerEventSenderCreateManyDiscordChannelWebhookInput = {
    Id?: string
    Name: string
    Description?: string | null
    Slug: string
    Token: string
    IsActive?: boolean
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type DiscordMessageUpdateWithoutDiscordChannelWebhookInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessageTemplate?: DiscordMessageTemplateUpdateOneWithoutDiscordMessagesNestedInput
    ListenerEvents?: ListenerEventUpdateManyWithoutDiscordMessageNestedInput
  }

  export type DiscordMessageUncheckedUpdateWithoutDiscordChannelWebhookInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordMessageTemplateId?: NullableIntFieldUpdateOperationsInput | number | null
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListenerEvents?: ListenerEventUncheckedUpdateManyWithoutDiscordMessageNestedInput
  }

  export type DiscordMessageUncheckedUpdateManyWithoutDiscordChannelWebhookInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ChannelId?: StringFieldUpdateOperationsInput | string
    Content?: StringFieldUpdateOperationsInput | string
    DiscordMessageTemplateId?: NullableIntFieldUpdateOperationsInput | number | null
    DiscordMessageSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventSenderUpdateWithoutDiscordChannelWebhookInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListenerEvents?: ListenerEventUpdateManyWithoutSenderNestedInput
  }

  export type ListenerEventSenderUncheckedUpdateWithoutDiscordChannelWebhookInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListenerEvents?: ListenerEventUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type ListenerEventSenderUncheckedUpdateManyWithoutDiscordChannelWebhookInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventCreateManySenderInput = {
    Id?: number
    Variant: string
    Type: string
    SentAt: Date | string
    Status?: $Enums.ListenerEventStatus
    Error?: string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DiscordMessageId?: string | null
    DeliveredAt?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type ListenerEventUpdateWithoutSenderInput = {
    Variant?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    SentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Status?: EnumListenerEventStatusFieldUpdateOperationsInput | $Enums.ListenerEventStatus
    Error?: NullableStringFieldUpdateOperationsInput | string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DeliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordMessage?: DiscordMessageUpdateOneWithoutListenerEventsNestedInput
  }

  export type ListenerEventUncheckedUpdateWithoutSenderInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Variant?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    SentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Status?: EnumListenerEventStatusFieldUpdateOperationsInput | $Enums.ListenerEventStatus
    Error?: NullableStringFieldUpdateOperationsInput | string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DiscordMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    DeliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListenerEventUncheckedUpdateManyWithoutSenderInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Variant?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    SentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Status?: EnumListenerEventStatusFieldUpdateOperationsInput | $Enums.ListenerEventStatus
    Error?: NullableStringFieldUpdateOperationsInput | string | null
    Data?: NullableJsonNullValueInput | InputJsonValue
    DiscordMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    DeliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPrivacySettingsCreateManyUserInput = {
    Id?: string
    ShowOnlineStatus?: boolean
    ShowFirstName?: boolean
    ShowLastName?: boolean
    ShowLastNameInitial?: boolean
    ShowLastLogin?: boolean
    CreatedAt?: Date | string
  }

  export type MemberCreateManyUserInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VAId: string
    VARoleId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    CompanyId: string
  }

  export type RoleUpdateWithoutUsersInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Permissions?: PermissionUpdateManyWithoutRolesNestedInput
    VirtualAirlineRole?: VirtualAirlineRoleUpdateOneWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutUsersInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirlineRoleId?: NullableStringFieldUpdateOperationsInput | string | null
    Permissions?: PermissionUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutUsersInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirlineRoleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserPrivacySettingsUpdateWithoutUserInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShowOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    ShowFirstName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastNameInitial?: BoolFieldUpdateOperationsInput | boolean
    ShowLastLogin?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPrivacySettingsUncheckedUpdateWithoutUserInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShowOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    ShowFirstName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastNameInitial?: BoolFieldUpdateOperationsInput | boolean
    ShowLastLogin?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPrivacySettingsUncheckedUpdateManyWithoutUserInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ShowOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    ShowFirstName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastName?: BoolFieldUpdateOperationsInput | boolean
    ShowLastNameInitial?: BoolFieldUpdateOperationsInput | boolean
    ShowLastLogin?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MemberUpdateWithoutUserInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Company?: CompanyUpdateOneRequiredWithoutOwnerNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutMembersNestedInput
    VARole?: VirtualAirlineRoleUpdateOneRequiredWithoutMembersNestedInput
    Flights?: FlightUpdateManyWithoutMemberNestedInput
    FlightRoutes?: FlightRouteUpdateManyWithoutMemberNestedInput
  }

  export type MemberUncheckedUpdateWithoutUserInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VAId?: StringFieldUpdateOperationsInput | string
    VARoleId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CompanyId?: StringFieldUpdateOperationsInput | string
    Flights?: FlightUncheckedUpdateManyWithoutMemberNestedInput
    FlightRoutes?: FlightRouteUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type MemberUncheckedUpdateManyWithoutUserInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VAId?: StringFieldUpdateOperationsInput | string
    VARoleId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CompanyId?: StringFieldUpdateOperationsInput | string
  }

  export type PermissionUpdateWithoutRolesInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Entity?: StringFieldUpdateOperationsInput | string
    Action?: StringFieldUpdateOperationsInput | string
  }

  export type PermissionUncheckedUpdateWithoutRolesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Entity?: StringFieldUpdateOperationsInput | string
    Action?: StringFieldUpdateOperationsInput | string
  }

  export type PermissionUncheckedUpdateManyWithoutRolesInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    Entity?: StringFieldUpdateOperationsInput | string
    Action?: StringFieldUpdateOperationsInput | string
  }

  export type UserUpdateWithoutRolesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
    PrivacySettings?: UserPrivacySettingsUpdateManyWithoutUserNestedInput
    Members?: MemberUpdateManyWithoutUserNestedInput
    InviteCode?: InviteCodeUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRolesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    InviteCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
    PrivacySettings?: UserPrivacySettingsUncheckedUpdateManyWithoutUserNestedInput
    Members?: MemberUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutRolesInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    FirstLoginCompleted?: BoolFieldUpdateOperationsInput | boolean
    IsOnline?: BoolFieldUpdateOperationsInput | boolean
    IsBanned?: BoolFieldUpdateOperationsInput | boolean
    BanReason?: NullableStringFieldUpdateOperationsInput | string | null
    BanExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: BoolFieldUpdateOperationsInput | boolean
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    InviteCodeId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    DiscordId?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordUsername?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    DiscordEmail?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RoleUpdateWithoutPermissionsInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Users?: UserUpdateManyWithoutRolesNestedInput
    VirtualAirlineRole?: VirtualAirlineRoleUpdateOneWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutPermissionsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirlineRoleId?: NullableStringFieldUpdateOperationsInput | string | null
    Users?: UserUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutPermissionsInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    Slug?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirlineRoleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LiveryImageCreateManyLiveryInput = {
    Id?: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryFileCreateManyLiveryInput = {
    Id?: string
    Name: string
    Type: string
    Path: string
    Size: number
    MimeType: string
    FileName: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type LiveryImageUpdateWithoutLiveryInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryImageUncheckedUpdateWithoutLiveryInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryImageUncheckedUpdateManyWithoutLiveryInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryFileUpdateWithoutLiveryInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryFileUncheckedUpdateWithoutLiveryInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LiveryFileUncheckedUpdateManyWithoutLiveryInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    Path?: StringFieldUpdateOperationsInput | string
    Size?: IntFieldUpdateOperationsInput | number
    MimeType?: StringFieldUpdateOperationsInput | string
    FileName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VirtualAirlineRoleCreateManyVirtualAirlineInput = {
    Id: string
    Name: string
    Permission: number
    IsDefaultNewRole: boolean
    Color: string
    PayPercent: Decimal | DecimalJsLike | number | string
    IsHidden: boolean
    RestrictLoadingVAJobsIntoNonVAAircraft: boolean
    RestrictLoadingNonVAJobsIntoVAAircraft: boolean
    PayWeekly: Decimal | DecimalJsLike | number | string
    PayPerFlightHour: Decimal | DecimalJsLike | number | string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type MemberCreateManyVirtualAirlineInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VARoleId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    UserId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    CompanyId: string
  }

  export type AircraftCreateManyVirtualAirlineInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    AircraftClassId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type FlightCreateManyVirtualAirlineInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
  }

  export type VirtualAirlineRoleUpdateWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Role?: RoleUpdateOneWithoutVirtualAirlineRoleNestedInput
    Members?: MemberUpdateManyWithoutVARoleNestedInput
  }

  export type VirtualAirlineRoleUncheckedUpdateWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Role?: RoleUncheckedUpdateOneWithoutVirtualAirlineRoleNestedInput
    Members?: MemberUncheckedUpdateManyWithoutVARoleNestedInput
  }

  export type VirtualAirlineRoleUncheckedUpdateManyWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    Permission?: IntFieldUpdateOperationsInput | number
    IsDefaultNewRole?: BoolFieldUpdateOperationsInput | boolean
    Color?: StringFieldUpdateOperationsInput | string
    PayPercent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    IsHidden?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingVAJobsIntoNonVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    RestrictLoadingNonVAJobsIntoVAAircraft?: BoolFieldUpdateOperationsInput | boolean
    PayWeekly?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    PayPerFlightHour?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MemberUpdateWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Company?: CompanyUpdateOneRequiredWithoutOwnerNestedInput
    VARole?: VirtualAirlineRoleUpdateOneRequiredWithoutMembersNestedInput
    Flights?: FlightUpdateManyWithoutMemberNestedInput
    User?: UserUpdateOneWithoutMembersNestedInput
    FlightRoutes?: FlightRouteUpdateManyWithoutMemberNestedInput
  }

  export type MemberUncheckedUpdateWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VARoleId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CompanyId?: StringFieldUpdateOperationsInput | string
    Flights?: FlightUncheckedUpdateManyWithoutMemberNestedInput
    FlightRoutes?: FlightRouteUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type MemberUncheckedUpdateManyWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VARoleId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CompanyId?: StringFieldUpdateOperationsInput | string
  }

  export type AircraftUpdateWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftClass?: AircraftClassUpdateOneRequiredWithoutAircraftsNestedInput
    AircraftStatus?: AircraftStatusUpdateOneRequiredWithoutAircraftsNestedInput
    CurrentAirport?: AirportUpdateOneWithoutAircraftAtAirportNestedInput
    AircraftMaintenance?: AircraftMaintenanceUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUncheckedUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateManyWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlightUpdateWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    Company?: CompanyUpdateOneRequiredWithoutFlightsNestedInput
    Aircraft?: AircraftUpdateOneWithoutFlightsNestedInput
    FlightRoute?: FlightRouteUpdateManyWithoutFlightNestedInput
    DepartureAirport?: AirportUpdateOneWithoutDepartingFlightsNestedInput
    ArrivalIntendedAirport?: AirportUpdateOneWithoutArrivingFlightsNestedInput
    ArrivalAlternateAirport?: AirportUpdateOneWithoutArrivingAlternateFlightsNestedInput
    ArrivalActualAirport?: AirportUpdateOneWithoutArrivingActualFlightsNestedInput
    Member?: MemberUpdateOneWithoutFlightsNestedInput
  }

  export type FlightUncheckedUpdateWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedUpdateManyWithoutFlightNestedInput
  }

  export type FlightUncheckedUpdateManyWithoutVirtualAirlineInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type MemberCreateManyVARoleInput = {
    Id: string
    IsActive?: boolean
    DeactivatedAt?: Date | string | null
    VAId: string
    TotalCargosTransportedLbs: number
    TotalPAXsTransported: number
    TotalEarnedCredits: Decimal | DecimalJsLike | number | string
    TotalSpentCredits: Decimal | DecimalJsLike | number | string
    NumberOfFlights: number
    FlightHours: Decimal | DecimalJsLike | number | string
    Color: string
    ReputationImpact: Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: Date | string | null
    LastRefresh?: Date | string | null
    UserId?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    CompanyId: string
  }

  export type MemberUpdateWithoutVARoleInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Company?: CompanyUpdateOneRequiredWithoutOwnerNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutMembersNestedInput
    Flights?: FlightUpdateManyWithoutMemberNestedInput
    User?: UserUpdateOneWithoutMembersNestedInput
    FlightRoutes?: FlightRouteUpdateManyWithoutMemberNestedInput
  }

  export type MemberUncheckedUpdateWithoutVARoleInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VAId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CompanyId?: StringFieldUpdateOperationsInput | string
    Flights?: FlightUncheckedUpdateManyWithoutMemberNestedInput
    FlightRoutes?: FlightRouteUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type MemberUncheckedUpdateManyWithoutVARoleInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DeactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VAId?: StringFieldUpdateOperationsInput | string
    TotalCargosTransportedLbs?: IntFieldUpdateOperationsInput | number
    TotalPAXsTransported?: IntFieldUpdateOperationsInput | number
    TotalEarnedCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    TotalSpentCredits?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    NumberOfFlights?: IntFieldUpdateOperationsInput | number
    FlightHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Color?: StringFieldUpdateOperationsInput | string
    ReputationImpact?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    LastVAFlightDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserId?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CompanyId?: StringFieldUpdateOperationsInput | string
  }

  export type VirtualAirlineCreateManyWorldInput = {
    Id: string
    ApiKey: string
    IsPrimary?: boolean
    Identifier?: string | null
    Name?: string | null
    Description?: string | null
    LastDividendsDistribution?: Date | string | null
    LastComputationDate?: Date | string | null
    ComputedMemberCount?: number | null
    ComputedAircraftsCount?: number | null
    ComputedNumberOfFlights30Days?: number | null
    ComputedNumberOfFlightHours30Days?: number | null
    ComputedMostUsedAirports?: string | null
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    Reputation?: Decimal | DecimalJsLike | number | string | null
    CreationDate?: Date | string | null
    DifficultyLevel?: number | null
    Level?: number | null
    LevelXP?: number | null
    TotalContractsCompleted?: number | null
    TotalContractsEarnedCredits?: number | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type CompanyCreateManyWorldInput = {
    Id: string
    Name: string
    AirlineCode: string
    CreationDate: Date | string
    Level: number
    LevelXP: number
    Reputation: Decimal | DecimalJsLike | number | string
    Paused?: boolean
    LastConnection?: Date | string | null
    LastReportDate?: Date | string | null
    DifficultyLevel: number
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type VirtualAirlineUpdateWithoutWorldInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VARoles?: VirtualAirlineRoleUpdateManyWithoutVirtualAirlineNestedInput
    Members?: MemberUpdateManyWithoutVirtualAirlineNestedInput
    Fleet?: AircraftUpdateManyWithoutVirtualAirlineNestedInput
    Flights?: FlightUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type VirtualAirlineUncheckedUpdateWithoutWorldInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VARoles?: VirtualAirlineRoleUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Members?: MemberUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Fleet?: AircraftUncheckedUpdateManyWithoutVirtualAirlineNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutVirtualAirlineNestedInput
  }

  export type VirtualAirlineUncheckedUpdateManyWithoutWorldInput = {
    Id?: StringFieldUpdateOperationsInput | string
    ApiKey?: StringFieldUpdateOperationsInput | string
    IsPrimary?: BoolFieldUpdateOperationsInput | boolean
    Identifier?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    LastDividendsDistribution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastComputationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ComputedMemberCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedAircraftsCount?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlights30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedNumberOfFlightHours30Days?: NullableIntFieldUpdateOperationsInput | number | null
    ComputedMostUsedAirports?: NullableStringFieldUpdateOperationsInput | string | null
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Reputation?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CreationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Level?: NullableIntFieldUpdateOperationsInput | number | null
    LevelXP?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsCompleted?: NullableIntFieldUpdateOperationsInput | number | null
    TotalContractsEarnedCredits?: NullableIntFieldUpdateOperationsInput | number | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyUpdateWithoutWorldInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Flights?: FlightUpdateManyWithoutCompanyNestedInput
    Owner?: MemberUpdateOneWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutWorldInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Flights?: FlightUncheckedUpdateManyWithoutCompanyNestedInput
    Owner?: MemberUncheckedUpdateOneWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateManyWithoutWorldInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    AirlineCode?: StringFieldUpdateOperationsInput | string
    CreationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    Level?: IntFieldUpdateOperationsInput | number
    LevelXP?: IntFieldUpdateOperationsInput | number
    Reputation?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Paused?: BoolFieldUpdateOperationsInput | boolean
    LastConnection?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastReportDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DifficultyLevel?: IntFieldUpdateOperationsInput | number
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlightCreateManyMemberInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
  }

  export type FlightRouteCreateManyMemberInput = {
    Id?: string
    FlightId?: string | null
    Route: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type FlightUpdateWithoutMemberInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    Company?: CompanyUpdateOneRequiredWithoutFlightsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneWithoutFlightsNestedInput
    Aircraft?: AircraftUpdateOneWithoutFlightsNestedInput
    FlightRoute?: FlightRouteUpdateManyWithoutFlightNestedInput
    DepartureAirport?: AirportUpdateOneWithoutDepartingFlightsNestedInput
    ArrivalIntendedAirport?: AirportUpdateOneWithoutArrivingFlightsNestedInput
    ArrivalAlternateAirport?: AirportUpdateOneWithoutArrivingAlternateFlightsNestedInput
    ArrivalActualAirport?: AirportUpdateOneWithoutArrivingActualFlightsNestedInput
  }

  export type FlightUncheckedUpdateWithoutMemberInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedUpdateManyWithoutFlightNestedInput
  }

  export type FlightUncheckedUpdateManyWithoutMemberInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type FlightRouteUpdateWithoutMemberInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Route?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Flight?: FlightUpdateOneWithoutFlightRouteNestedInput
  }

  export type FlightRouteUncheckedUpdateWithoutMemberInput = {
    Id?: StringFieldUpdateOperationsInput | string
    FlightId?: NullableStringFieldUpdateOperationsInput | string | null
    Route?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlightRouteUncheckedUpdateManyWithoutMemberInput = {
    Id?: StringFieldUpdateOperationsInput | string
    FlightId?: NullableStringFieldUpdateOperationsInput | string | null
    Route?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlightCreateManyCompanyInput = {
    Id: string
    AircraftId?: string | null
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
  }

  export type FlightUpdateWithoutCompanyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    VirtualAirline?: VirtualAirlineUpdateOneWithoutFlightsNestedInput
    Aircraft?: AircraftUpdateOneWithoutFlightsNestedInput
    FlightRoute?: FlightRouteUpdateManyWithoutFlightNestedInput
    DepartureAirport?: AirportUpdateOneWithoutDepartingFlightsNestedInput
    ArrivalIntendedAirport?: AirportUpdateOneWithoutArrivingFlightsNestedInput
    ArrivalAlternateAirport?: AirportUpdateOneWithoutArrivingAlternateFlightsNestedInput
    ArrivalActualAirport?: AirportUpdateOneWithoutArrivingActualFlightsNestedInput
    Member?: MemberUpdateOneWithoutFlightsNestedInput
  }

  export type FlightUncheckedUpdateWithoutCompanyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedUpdateManyWithoutFlightNestedInput
  }

  export type FlightUncheckedUpdateManyWithoutCompanyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type AircraftMaintenanceCreateManyAircraftInput = {
    Id: string
    AnnualCheckup: boolean
    Inspection100Hours: boolean
    FailuresRepair: boolean
    AirframeRepair: boolean
    AirframeReplace: boolean
    EcoSeats: number
    BusSeats: number
    FirstClassSeats: number
    AirframeRepairCondition: Decimal | DecimalJsLike | number | string
    MaintenanceFBOId: string
    RemainingMaintenanceWorkHours: Decimal | DecimalJsLike | number | string
    Amount: Decimal | DecimalJsLike | number | string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type FlightCreateManyAircraftInput = {
    Id: string
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
  }

  export type LiveryCreateManyAircraftInput = {
    Id?: string
    Name: string
    IsActive?: boolean
    DownloadCount?: number
    Image: string
    ImageFileName?: string | null
    CoverPhoto?: string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: string | null
    Description?: string | null
    DownloadUrl?: string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AircraftMaintenanceUpdateWithoutAircraftInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AnnualCheckup?: BoolFieldUpdateOperationsInput | boolean
    Inspection100Hours?: BoolFieldUpdateOperationsInput | boolean
    FailuresRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeReplace?: BoolFieldUpdateOperationsInput | boolean
    EcoSeats?: IntFieldUpdateOperationsInput | number
    BusSeats?: IntFieldUpdateOperationsInput | number
    FirstClassSeats?: IntFieldUpdateOperationsInput | number
    AirframeRepairCondition?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: StringFieldUpdateOperationsInput | string
    RemainingMaintenanceWorkHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftMaintenanceUncheckedUpdateWithoutAircraftInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AnnualCheckup?: BoolFieldUpdateOperationsInput | boolean
    Inspection100Hours?: BoolFieldUpdateOperationsInput | boolean
    FailuresRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeReplace?: BoolFieldUpdateOperationsInput | boolean
    EcoSeats?: IntFieldUpdateOperationsInput | number
    BusSeats?: IntFieldUpdateOperationsInput | number
    FirstClassSeats?: IntFieldUpdateOperationsInput | number
    AirframeRepairCondition?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: StringFieldUpdateOperationsInput | string
    RemainingMaintenanceWorkHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftMaintenanceUncheckedUpdateManyWithoutAircraftInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AnnualCheckup?: BoolFieldUpdateOperationsInput | boolean
    Inspection100Hours?: BoolFieldUpdateOperationsInput | boolean
    FailuresRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeRepair?: BoolFieldUpdateOperationsInput | boolean
    AirframeReplace?: BoolFieldUpdateOperationsInput | boolean
    EcoSeats?: IntFieldUpdateOperationsInput | number
    BusSeats?: IntFieldUpdateOperationsInput | number
    FirstClassSeats?: IntFieldUpdateOperationsInput | number
    AirframeRepairCondition?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    MaintenanceFBOId?: StringFieldUpdateOperationsInput | string
    RemainingMaintenanceWorkHours?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlightUpdateWithoutAircraftInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    Company?: CompanyUpdateOneRequiredWithoutFlightsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneWithoutFlightsNestedInput
    FlightRoute?: FlightRouteUpdateManyWithoutFlightNestedInput
    DepartureAirport?: AirportUpdateOneWithoutDepartingFlightsNestedInput
    ArrivalIntendedAirport?: AirportUpdateOneWithoutArrivingFlightsNestedInput
    ArrivalAlternateAirport?: AirportUpdateOneWithoutArrivingAlternateFlightsNestedInput
    ArrivalActualAirport?: AirportUpdateOneWithoutArrivingActualFlightsNestedInput
    Member?: MemberUpdateOneWithoutFlightsNestedInput
  }

  export type FlightUncheckedUpdateWithoutAircraftInput = {
    Id?: StringFieldUpdateOperationsInput | string
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedUpdateManyWithoutFlightNestedInput
  }

  export type FlightUncheckedUpdateManyWithoutAircraftInput = {
    Id?: StringFieldUpdateOperationsInput | string
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type LiveryUpdateWithoutAircraftInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Images?: LiveryImageUpdateManyWithoutLiveryNestedInput
    Files?: LiveryFileUpdateManyWithoutLiveryNestedInput
  }

  export type LiveryUncheckedUpdateWithoutAircraftInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Images?: LiveryImageUncheckedUpdateManyWithoutLiveryNestedInput
    Files?: LiveryFileUncheckedUpdateManyWithoutLiveryNestedInput
  }

  export type LiveryUncheckedUpdateManyWithoutAircraftInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    DownloadCount?: IntFieldUpdateOperationsInput | number
    Image?: StringFieldUpdateOperationsInput | string
    ImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    CoverPhoto?: NullableStringFieldUpdateOperationsInput | string | null
    Metadata?: NullableJsonNullValueInput | InputJsonValue
    Url?: NullableStringFieldUpdateOperationsInput | string | null
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    DownloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftCreateManyAircraftClassInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    VirtualAirlineId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AircraftUpdateWithoutAircraftClassInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutFleetNestedInput
    AircraftStatus?: AircraftStatusUpdateOneRequiredWithoutAircraftsNestedInput
    CurrentAirport?: AirportUpdateOneWithoutAircraftAtAirportNestedInput
    AircraftMaintenance?: AircraftMaintenanceUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateWithoutAircraftClassInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUncheckedUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateManyWithoutAircraftClassInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftCreateManyAircraftStatusInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftClassId: string
    VirtualAirlineId: string
    CurrentAirportId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type AircraftUpdateWithoutAircraftStatusInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftClass?: AircraftClassUpdateOneRequiredWithoutAircraftsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutFleetNestedInput
    CurrentAirport?: AirportUpdateOneWithoutAircraftAtAirportNestedInput
    AircraftMaintenance?: AircraftMaintenanceUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateWithoutAircraftStatusInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUncheckedUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateManyWithoutAircraftStatusInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    CurrentAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AircraftCreateManyCurrentAirportInput = {
    Id: string
    Identifier: string
    DisplayName: string
    AircraftStatusId: number
    AircraftClassId: string
    VirtualAirlineId: string
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type FlightCreateManyDepartureAirportInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
  }

  export type FlightCreateManyArrivalIntendedAirportInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
  }

  export type FlightCreateManyArrivalAlternateAirportInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalActualAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
  }

  export type FlightCreateManyArrivalActualAirportInput = {
    Id: string
    AircraftId?: string | null
    CompanyId: string
    Registered: boolean
    Category: number
    ResultComments: string
    StartTime?: Date | string | null
    EndTime?: Date | string | null
    EngineOnTime?: Date | string | null
    EngineOffTime?: Date | string | null
    AirborneTime?: Date | string | null
    LandedTime?: Date | string | null
    IntendedFlightLevel?: number | null
    Passengers?: number | null
    Cargo?: number | null
    AddedFuelQty?: Decimal | DecimalJsLike | number | string | null
    IsAI: boolean
    VerticalSpeedAtTouchdownMpS?: Decimal | DecimalJsLike | number | string | null
    MaxGForce?: Decimal | DecimalJsLike | number | string | null
    MinGForce?: Decimal | DecimalJsLike | number | string | null
    MaxBank?: Decimal | DecimalJsLike | number | string | null
    MaxPitch?: Decimal | DecimalJsLike | number | string | null
    HasStalled?: boolean
    HasOverspeeded?: boolean
    XPFlight?: number | null
    XPFlightBonus?: Decimal | DecimalJsLike | number | string | null
    XPMissions?: number | null
    CargosTotalWeight?: Decimal | DecimalJsLike | number | string | null
    PAXCount?: number | null
    AircraftCurrentFOB?: Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: Decimal | DecimalJsLike | number | string | null
    RegisterState?: number | null
    WrongFuelDetected?: boolean
    WrongWeightDetected?: boolean
    TimeOffset?: Decimal | DecimalJsLike | number | string | null
    StartLatitude?: Decimal | DecimalJsLike | number | string | null
    StartLongitude?: Decimal | DecimalJsLike | number | string | null
    StartHeading?: Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: boolean
    RestCrewAfterWarp?: boolean
    Score?: Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: boolean
    EngineOnRealTime?: Date | string | null
    EngineOffRealTime?: Date | string | null
    LandedRealTime?: Date | string | null
    AirborneRealTime?: Date | string | null
    DepartureAirportId?: string | null
    ArrivalIntendedAirportId?: string | null
    ArrivalAlternateAirportId?: string | null
    VAId?: string | null
    MemberId?: string | null
    LastRefresh?: Date | string | null
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
    FlightStatus?: $Enums.FlightStatus
  }

  export type AircraftUpdateWithoutCurrentAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftClass?: AircraftClassUpdateOneRequiredWithoutAircraftsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneRequiredWithoutFleetNestedInput
    AircraftStatus?: AircraftStatusUpdateOneRequiredWithoutAircraftsNestedInput
    AircraftMaintenance?: AircraftMaintenanceUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateWithoutCurrentAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    AircraftMaintenance?: AircraftMaintenanceUncheckedUpdateManyWithoutAircraftNestedInput
    Flights?: FlightUncheckedUpdateManyWithoutAircraftNestedInput
    Liveries?: LiveryUncheckedUpdateManyWithoutAircraftNestedInput
  }

  export type AircraftUncheckedUpdateManyWithoutCurrentAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Identifier?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    AircraftStatusId?: IntFieldUpdateOperationsInput | number
    AircraftClassId?: StringFieldUpdateOperationsInput | string
    VirtualAirlineId?: StringFieldUpdateOperationsInput | string
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlightUpdateWithoutDepartureAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    Company?: CompanyUpdateOneRequiredWithoutFlightsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneWithoutFlightsNestedInput
    Aircraft?: AircraftUpdateOneWithoutFlightsNestedInput
    FlightRoute?: FlightRouteUpdateManyWithoutFlightNestedInput
    ArrivalIntendedAirport?: AirportUpdateOneWithoutArrivingFlightsNestedInput
    ArrivalAlternateAirport?: AirportUpdateOneWithoutArrivingAlternateFlightsNestedInput
    ArrivalActualAirport?: AirportUpdateOneWithoutArrivingActualFlightsNestedInput
    Member?: MemberUpdateOneWithoutFlightsNestedInput
  }

  export type FlightUncheckedUpdateWithoutDepartureAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedUpdateManyWithoutFlightNestedInput
  }

  export type FlightUncheckedUpdateManyWithoutDepartureAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type FlightUpdateWithoutArrivalIntendedAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    Company?: CompanyUpdateOneRequiredWithoutFlightsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneWithoutFlightsNestedInput
    Aircraft?: AircraftUpdateOneWithoutFlightsNestedInput
    FlightRoute?: FlightRouteUpdateManyWithoutFlightNestedInput
    DepartureAirport?: AirportUpdateOneWithoutDepartingFlightsNestedInput
    ArrivalAlternateAirport?: AirportUpdateOneWithoutArrivingAlternateFlightsNestedInput
    ArrivalActualAirport?: AirportUpdateOneWithoutArrivingActualFlightsNestedInput
    Member?: MemberUpdateOneWithoutFlightsNestedInput
  }

  export type FlightUncheckedUpdateWithoutArrivalIntendedAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedUpdateManyWithoutFlightNestedInput
  }

  export type FlightUncheckedUpdateManyWithoutArrivalIntendedAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type FlightUpdateWithoutArrivalAlternateAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    Company?: CompanyUpdateOneRequiredWithoutFlightsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneWithoutFlightsNestedInput
    Aircraft?: AircraftUpdateOneWithoutFlightsNestedInput
    FlightRoute?: FlightRouteUpdateManyWithoutFlightNestedInput
    DepartureAirport?: AirportUpdateOneWithoutDepartingFlightsNestedInput
    ArrivalIntendedAirport?: AirportUpdateOneWithoutArrivingFlightsNestedInput
    ArrivalActualAirport?: AirportUpdateOneWithoutArrivingActualFlightsNestedInput
    Member?: MemberUpdateOneWithoutFlightsNestedInput
  }

  export type FlightUncheckedUpdateWithoutArrivalAlternateAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedUpdateManyWithoutFlightNestedInput
  }

  export type FlightUncheckedUpdateManyWithoutArrivalAlternateAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalActualAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type FlightUpdateWithoutArrivalActualAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    Company?: CompanyUpdateOneRequiredWithoutFlightsNestedInput
    VirtualAirline?: VirtualAirlineUpdateOneWithoutFlightsNestedInput
    Aircraft?: AircraftUpdateOneWithoutFlightsNestedInput
    FlightRoute?: FlightRouteUpdateManyWithoutFlightNestedInput
    DepartureAirport?: AirportUpdateOneWithoutDepartingFlightsNestedInput
    ArrivalIntendedAirport?: AirportUpdateOneWithoutArrivingFlightsNestedInput
    ArrivalAlternateAirport?: AirportUpdateOneWithoutArrivingAlternateFlightsNestedInput
    Member?: MemberUpdateOneWithoutFlightsNestedInput
  }

  export type FlightUncheckedUpdateWithoutArrivalActualAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
    FlightRoute?: FlightRouteUncheckedUpdateManyWithoutFlightNestedInput
  }

  export type FlightUncheckedUpdateManyWithoutArrivalActualAirportInput = {
    Id?: StringFieldUpdateOperationsInput | string
    AircraftId?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyId?: StringFieldUpdateOperationsInput | string
    Registered?: BoolFieldUpdateOperationsInput | boolean
    Category?: IntFieldUpdateOperationsInput | number
    ResultComments?: StringFieldUpdateOperationsInput | string
    StartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOnTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IntendedFlightLevel?: NullableIntFieldUpdateOperationsInput | number | null
    Passengers?: NullableIntFieldUpdateOperationsInput | number | null
    Cargo?: NullableIntFieldUpdateOperationsInput | number | null
    AddedFuelQty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    IsAI?: BoolFieldUpdateOperationsInput | boolean
    VerticalSpeedAtTouchdownMpS?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MinGForce?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxBank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    MaxPitch?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    HasStalled?: BoolFieldUpdateOperationsInput | boolean
    HasOverspeeded?: BoolFieldUpdateOperationsInput | boolean
    XPFlight?: NullableIntFieldUpdateOperationsInput | number | null
    XPFlightBonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    XPMissions?: NullableIntFieldUpdateOperationsInput | number | null
    CargosTotalWeight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PAXCount?: NullableIntFieldUpdateOperationsInput | number | null
    AircraftCurrentFOB?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    AircraftCurrentAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInLbsPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTotalFuelConsumptionInLbs?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualConsumptionAtCruiseLevelInGalPerHour?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualTASAtCruiseLevel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualCruiseTimeInMinutes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ActualPressureAltitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    RegisterState?: NullableIntFieldUpdateOperationsInput | number | null
    WrongFuelDetected?: BoolFieldUpdateOperationsInput | boolean
    WrongWeightDetected?: BoolFieldUpdateOperationsInput | boolean
    TimeOffset?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLatitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartLongitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    StartHeading?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    UseFreelanceRouteSchedule?: BoolFieldUpdateOperationsInput | boolean
    RestCrewAfterWarp?: BoolFieldUpdateOperationsInput | boolean
    Score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    CanResumeOrAbort?: BoolFieldUpdateOperationsInput | boolean
    EngineOnRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EngineOffRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LandedRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AirborneRealTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DepartureAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalIntendedAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    ArrivalAlternateAirportId?: NullableStringFieldUpdateOperationsInput | string | null
    VAId?: NullableStringFieldUpdateOperationsInput | string | null
    MemberId?: NullableStringFieldUpdateOperationsInput | string | null
    LastRefresh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    FlightStatus?: EnumFlightStatusFieldUpdateOperationsInput | $Enums.FlightStatus
  }

  export type FlightRouteCreateManyFlightInput = {
    Id?: string
    MemberId: string
    Route: string
    CreatedAt?: Date | string
    UpdatedAt?: Date | string
  }

  export type FlightRouteUpdateWithoutFlightInput = {
    Id?: StringFieldUpdateOperationsInput | string
    Route?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Member?: MemberUpdateOneRequiredWithoutFlightRoutesNestedInput
  }

  export type FlightRouteUncheckedUpdateWithoutFlightInput = {
    Id?: StringFieldUpdateOperationsInput | string
    MemberId?: StringFieldUpdateOperationsInput | string
    Route?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlightRouteUncheckedUpdateManyWithoutFlightInput = {
    Id?: StringFieldUpdateOperationsInput | string
    MemberId?: StringFieldUpdateOperationsInput | string
    Route?: StringFieldUpdateOperationsInput | string
    CreatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    UpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}