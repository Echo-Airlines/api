
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AppConfigScalarFieldEnum = {
  Id: 'Id',
  OnAirSyncEnabled: 'OnAirSyncEnabled',
  OnAirVASyncEnabled: 'OnAirVASyncEnabled',
  OnAirVAMembersSyncEnabled: 'OnAirVAMembersSyncEnabled',
  OnAirCompanySyncEnabled: 'OnAirCompanySyncEnabled',
  VirtualAirlineId: 'VirtualAirlineId',
  ApiKey: 'ApiKey',
  DiscordServerInviteLink: 'DiscordServerInviteLink',
  DiscordServerInviteLinkEnabled: 'DiscordServerInviteLinkEnabled',
  AcceptingNewMembers: 'AcceptingNewMembers',
  DiscordAuthEnabled: 'DiscordAuthEnabled',
  LocalAuthEnabled: 'LocalAuthEnabled',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.LiveryScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  IsActive: 'IsActive',
  DownloadCount: 'DownloadCount',
  Image: 'Image',
  Url: 'Url',
  Description: 'Description',
  DownloadUrl: 'DownloadUrl',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.VirtualAirlineScalarFieldEnum = {
  Id: 'Id',
  Identifier: 'Identifier',
  Name: 'Name',
  Description: 'Description',
  LastDividendsDistribution: 'LastDividendsDistribution',
  LastComputationDate: 'LastComputationDate',
  ComputedMemberCount: 'ComputedMemberCount',
  ComputedAircraftsCount: 'ComputedAircraftsCount',
  ComputedNumberOfFlights30Days: 'ComputedNumberOfFlights30Days',
  ComputedNumberOfFlightHours30Days: 'ComputedNumberOfFlightHours30Days',
  ComputedMostUsedAirports: 'ComputedMostUsedAirports',
  LastConnection: 'LastConnection',
  LastReportDate: 'LastReportDate',
  Reputation: 'Reputation',
  CreationDate: 'CreationDate',
  DifficultyLevel: 'DifficultyLevel',
  Level: 'Level',
  LevelXP: 'LevelXP',
  TotalContractsCompleted: 'TotalContractsCompleted',
  TotalContractsEarnedCredits: 'TotalContractsEarnedCredits',
  LastRefresh: 'LastRefresh',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.JobScalarFieldEnum = {
  Id: 'Id',
  IsEnabled: 'IsEnabled',
  Type: 'Type',
  Status: 'Status',
  CronExpression: 'CronExpression',
  Name: 'Name',
  Description: 'Description',
  Parameters: 'Parameters',
  LastRunAt: 'LastRunAt',
  NextRunAt: 'NextRunAt',
  LastError: 'LastError',
  ExecutionCount: 'ExecutionCount',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.JobType = exports.$Enums.JobType = {
  VIRTUAL_AIRLINE_SYNC: 'VIRTUAL_AIRLINE_SYNC'
};

exports.JobStatus = exports.$Enums.JobStatus = {
  INACTIVE: 'INACTIVE',
  ACTIVE: 'ACTIVE',
  RUNNING: 'RUNNING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

exports.CronExpression = exports.$Enums.CronExpression = {
  EVERY_30_SECONDS: 'EVERY_30_SECONDS',
  EVERY_MINUTE: 'EVERY_MINUTE',
  EVERY_5_MINUTES: 'EVERY_5_MINUTES',
  EVERY_10_MINUTES: 'EVERY_10_MINUTES',
  EVERY_30_MINUTES: 'EVERY_30_MINUTES',
  EVERY_HOUR: 'EVERY_HOUR',
  EVERY_6_HOURS: 'EVERY_6_HOURS',
  EVERY_12_HOURS: 'EVERY_12_HOURS',
  EVERY_DAY: 'EVERY_DAY',
  EVERY_WEEK: 'EVERY_WEEK',
  EVERY_MONTH: 'EVERY_MONTH'
};

exports.Prisma.ModelName = {
  AppConfig: 'AppConfig',
  Livery: 'Livery',
  VirtualAirline: 'VirtualAirline',
  Job: 'Job'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
