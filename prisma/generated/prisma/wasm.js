
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AppConfigScalarFieldEnum = {
  Id: 'Id',
  OnAirSyncEnabled: 'OnAirSyncEnabled',
  OnAirVASyncEnabled: 'OnAirVASyncEnabled',
  OnAirVAMembersSyncEnabled: 'OnAirVAMembersSyncEnabled',
  OnAirCompanySyncEnabled: 'OnAirCompanySyncEnabled',
  DiscordServerInviteLink: 'DiscordServerInviteLink',
  DiscordServerInviteLinkEnabled: 'DiscordServerInviteLinkEnabled',
  AcceptingNewMembers: 'AcceptingNewMembers',
  DiscordAuthEnabled: 'DiscordAuthEnabled',
  DiscordAuthCreateUser: 'DiscordAuthCreateUser',
  LocalAuthEnabled: 'LocalAuthEnabled',
  VirtualAirlineInitiated: 'VirtualAirlineInitiated',
  FSHubApiKey: 'FSHubApiKey',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.InviteCodeScalarFieldEnum = {
  Id: 'Id',
  Code: 'Code',
  IsUsed: 'IsUsed',
  UsedAt: 'UsedAt',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.DiscordMessageScalarFieldEnum = {
  Id: 'Id',
  ChannelId: 'ChannelId',
  Content: 'Content',
  DiscordMessageTemplateId: 'DiscordMessageTemplateId',
  DiscordChannelWebhookId: 'DiscordChannelWebhookId',
  DiscordMessageSentAt: 'DiscordMessageSentAt',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.DiscordMessageTemplateScalarFieldEnum = {
  Id: 'Id',
  Slug: 'Slug',
  Name: 'Name',
  Description: 'Description',
  Content: 'Content',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.DiscordChannelWebhookScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  Description: 'Description',
  WebhookUrl: 'WebhookUrl',
  ChannelId: 'ChannelId',
  Token: 'Token',
  IsActive: 'IsActive',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.ListenerEventScalarFieldEnum = {
  Id: 'Id',
  Variant: 'Variant',
  Type: 'Type',
  SentAt: 'SentAt',
  Status: 'Status',
  SenderId: 'SenderId',
  Error: 'Error',
  Data: 'Data',
  DiscordMessageId: 'DiscordMessageId',
  DeliveredAt: 'DeliveredAt',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.ListenerEventSenderScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  Description: 'Description',
  Slug: 'Slug',
  Token: 'Token',
  IsActive: 'IsActive',
  DiscordChannelWebhookId: 'DiscordChannelWebhookId',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  Id: 'Id',
  Username: 'Username',
  Password: 'Password',
  Email: 'Email',
  FirstName: 'FirstName',
  LastName: 'LastName',
  FirstLoginCompleted: 'FirstLoginCompleted',
  IsOnline: 'IsOnline',
  IsBanned: 'IsBanned',
  BanReason: 'BanReason',
  BanExpiresAt: 'BanExpiresAt',
  IsVerified: 'IsVerified',
  LastLogin: 'LastLogin',
  InviteCodeId: 'InviteCodeId',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt',
  WelcomeEmailSentAt: 'WelcomeEmailSentAt',
  ConfirmEmailToken: 'ConfirmEmailToken',
  EmailVerifiedAt: 'EmailVerifiedAt',
  ResetPasswordToken: 'ResetPasswordToken',
  ResetPasswordEmailSentAt: 'ResetPasswordEmailSentAt',
  FSHubPilotId: 'FSHubPilotId',
  DiscordId: 'DiscordId',
  DiscordUsername: 'DiscordUsername',
  DiscordAvatar: 'DiscordAvatar',
  DiscordEmail: 'DiscordEmail'
};

exports.Prisma.UserPrivacySettingsScalarFieldEnum = {
  Id: 'Id',
  UserId: 'UserId',
  ShowOnlineStatus: 'ShowOnlineStatus',
  ShowFirstName: 'ShowFirstName',
  ShowLastName: 'ShowLastName',
  ShowLastNameInitial: 'ShowLastNameInitial',
  ShowLastLogin: 'ShowLastLogin',
  CreatedAt: 'CreatedAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  Description: 'Description',
  Slug: 'Slug',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt',
  VirtualAirlineRoleId: 'VirtualAirlineRoleId'
};

exports.Prisma.PermissionScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  Description: 'Description',
  Slug: 'Slug',
  Entity: 'Entity',
  Action: 'Action'
};

exports.Prisma.LiveryScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  IsActive: 'IsActive',
  AircraftId: 'AircraftId',
  DownloadCount: 'DownloadCount',
  Image: 'Image',
  ImageFileName: 'ImageFileName',
  CoverPhoto: 'CoverPhoto',
  Metadata: 'Metadata',
  Url: 'Url',
  Description: 'Description',
  DownloadUrl: 'DownloadUrl',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.LiveryImageScalarFieldEnum = {
  Id: 'Id',
  LiveryId: 'LiveryId',
  Name: 'Name',
  Type: 'Type',
  Path: 'Path',
  Size: 'Size',
  MimeType: 'MimeType',
  FileName: 'FileName',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.LiveryFileScalarFieldEnum = {
  Id: 'Id',
  LiveryId: 'LiveryId',
  Name: 'Name',
  Type: 'Type',
  Path: 'Path',
  Size: 'Size',
  MimeType: 'MimeType',
  FileName: 'FileName',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.VirtualAirlineScalarFieldEnum = {
  Id: 'Id',
  ApiKey: 'ApiKey',
  IsPrimary: 'IsPrimary',
  Identifier: 'Identifier',
  Name: 'Name',
  Description: 'Description',
  WorldId: 'WorldId',
  LastDividendsDistribution: 'LastDividendsDistribution',
  LastComputationDate: 'LastComputationDate',
  ComputedMemberCount: 'ComputedMemberCount',
  ComputedAircraftsCount: 'ComputedAircraftsCount',
  ComputedNumberOfFlights30Days: 'ComputedNumberOfFlights30Days',
  ComputedNumberOfFlightHours30Days: 'ComputedNumberOfFlightHours30Days',
  ComputedMostUsedAirports: 'ComputedMostUsedAirports',
  LastConnection: 'LastConnection',
  LastReportDate: 'LastReportDate',
  Reputation: 'Reputation',
  CreationDate: 'CreationDate',
  DifficultyLevel: 'DifficultyLevel',
  Level: 'Level',
  LevelXP: 'LevelXP',
  TotalContractsCompleted: 'TotalContractsCompleted',
  TotalContractsEarnedCredits: 'TotalContractsEarnedCredits',
  LastRefresh: 'LastRefresh',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt',
  VAManagerDiscordWebhookId: 'VAManagerDiscordWebhookId',
  NotifyNewMembersViaDiscord: 'NotifyNewMembersViaDiscord'
};

exports.Prisma.VirtualAirlineRoleScalarFieldEnum = {
  Id: 'Id',
  VAId: 'VAId',
  Name: 'Name',
  Permission: 'Permission',
  IsDefaultNewRole: 'IsDefaultNewRole',
  Color: 'Color',
  PayPercent: 'PayPercent',
  IsHidden: 'IsHidden',
  RestrictLoadingVAJobsIntoNonVAAircraft: 'RestrictLoadingVAJobsIntoNonVAAircraft',
  RestrictLoadingNonVAJobsIntoVAAircraft: 'RestrictLoadingNonVAJobsIntoVAAircraft',
  PayWeekly: 'PayWeekly',
  PayPerFlightHour: 'PayPerFlightHour',
  LastRefresh: 'LastRefresh',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.WorldScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  Slug: 'Slug',
  Description: 'Description',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.NotamScalarFieldEnum = {
  Id: 'Id',
  Title: 'Title',
  Content: 'Content',
  ExpirationDate: 'ExpirationDate',
  Link: 'Link',
  EffectiveDate: 'EffectiveDate',
  Status: 'Status',
  CreatedById: 'CreatedById',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.MemberScalarFieldEnum = {
  Id: 'Id',
  IsActive: 'IsActive',
  DeactivatedAt: 'DeactivatedAt',
  VAId: 'VAId',
  VARoleId: 'VARoleId',
  TotalCargosTransportedLbs: 'TotalCargosTransportedLbs',
  TotalPAXsTransported: 'TotalPAXsTransported',
  TotalEarnedCredits: 'TotalEarnedCredits',
  TotalSpentCredits: 'TotalSpentCredits',
  NumberOfFlights: 'NumberOfFlights',
  FlightHours: 'FlightHours',
  Color: 'Color',
  ReputationImpact: 'ReputationImpact',
  LastVAFlightDate: 'LastVAFlightDate',
  LastRefresh: 'LastRefresh',
  UserId: 'UserId',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt',
  CompanyId: 'CompanyId'
};

exports.Prisma.CompanyScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name',
  AirlineCode: 'AirlineCode',
  CreationDate: 'CreationDate',
  Level: 'Level',
  LevelXP: 'LevelXP',
  Reputation: 'Reputation',
  Paused: 'Paused',
  LastConnection: 'LastConnection',
  LastReportDate: 'LastReportDate',
  DifficultyLevel: 'DifficultyLevel',
  WorldId: 'WorldId',
  LastRefresh: 'LastRefresh',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.AircraftScalarFieldEnum = {
  Id: 'Id',
  Identifier: 'Identifier',
  DisplayName: 'DisplayName',
  AircraftStatusId: 'AircraftStatusId',
  AircraftClassId: 'AircraftClassId',
  VirtualAirlineId: 'VirtualAirlineId',
  CurrentAirportId: 'CurrentAirportId',
  LastRefresh: 'LastRefresh',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.AircraftClassScalarFieldEnum = {
  Id: 'Id',
  ShortName: 'ShortName',
  Name: 'Name'
};

exports.Prisma.AircraftMaintenanceScalarFieldEnum = {
  Id: 'Id',
  AircraftId: 'AircraftId',
  AnnualCheckup: 'AnnualCheckup',
  Inspection100Hours: 'Inspection100Hours',
  FailuresRepair: 'FailuresRepair',
  AirframeRepair: 'AirframeRepair',
  AirframeReplace: 'AirframeReplace',
  EcoSeats: 'EcoSeats',
  BusSeats: 'BusSeats',
  FirstClassSeats: 'FirstClassSeats',
  AirframeRepairCondition: 'AirframeRepairCondition',
  MaintenanceFBOId: 'MaintenanceFBOId',
  RemainingMaintenanceWorkHours: 'RemainingMaintenanceWorkHours',
  Amount: 'Amount',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.AircraftStatusScalarFieldEnum = {
  Id: 'Id',
  Name: 'Name'
};

exports.Prisma.AirportScalarFieldEnum = {
  Id: 'Id',
  ICAO: 'ICAO',
  IATA: 'IATA',
  Description: 'Description',
  Name: 'Name',
  Size: 'Size',
  City: 'City',
  State: 'State',
  CountryCode: 'CountryCode',
  CountryName: 'CountryName',
  CountryEmoji: 'CountryEmoji',
  Latitude: 'Latitude',
  Longitude: 'Longitude',
  HomeWebSiteUrl: 'HomeWebSiteUrl',
  WikiUrl: 'WikiUrl',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.FlightScalarFieldEnum = {
  Id: 'Id',
  FSHubId: 'FSHubId',
  AircraftId: 'AircraftId',
  CompanyId: 'CompanyId',
  Registered: 'Registered',
  Category: 'Category',
  ResultComments: 'ResultComments',
  StartTime: 'StartTime',
  EndTime: 'EndTime',
  EngineOnTime: 'EngineOnTime',
  EngineOffTime: 'EngineOffTime',
  AirborneTime: 'AirborneTime',
  LandedTime: 'LandedTime',
  IntendedFlightLevel: 'IntendedFlightLevel',
  Passengers: 'Passengers',
  Cargo: 'Cargo',
  AddedFuelQty: 'AddedFuelQty',
  IsAI: 'IsAI',
  VerticalSpeedAtTouchdownMpS: 'VerticalSpeedAtTouchdownMpS',
  MaxGForce: 'MaxGForce',
  MinGForce: 'MinGForce',
  MaxBank: 'MaxBank',
  MaxPitch: 'MaxPitch',
  HasStalled: 'HasStalled',
  HasOverspeeded: 'HasOverspeeded',
  XPFlight: 'XPFlight',
  XPFlightBonus: 'XPFlightBonus',
  XPMissions: 'XPMissions',
  CargosTotalWeight: 'CargosTotalWeight',
  PAXCount: 'PAXCount',
  AircraftCurrentFOB: 'AircraftCurrentFOB',
  AircraftCurrentAltitude: 'AircraftCurrentAltitude',
  ActualCruiseAltitude: 'ActualCruiseAltitude',
  ActualConsumptionAtCruiseLevelInLbsPerHour: 'ActualConsumptionAtCruiseLevelInLbsPerHour',
  ActualTotalFuelConsumptionInLbs: 'ActualTotalFuelConsumptionInLbs',
  ActualConsumptionAtCruiseLevelInGalPerHour: 'ActualConsumptionAtCruiseLevelInGalPerHour',
  ActualTASAtCruiseLevel: 'ActualTASAtCruiseLevel',
  ActualCruiseTimeInMinutes: 'ActualCruiseTimeInMinutes',
  ActualPressureAltitude: 'ActualPressureAltitude',
  RegisterState: 'RegisterState',
  WrongFuelDetected: 'WrongFuelDetected',
  WrongWeightDetected: 'WrongWeightDetected',
  TimeOffset: 'TimeOffset',
  StartLatitude: 'StartLatitude',
  StartLongitude: 'StartLongitude',
  StartHeading: 'StartHeading',
  UseFreelanceRouteSchedule: 'UseFreelanceRouteSchedule',
  RestCrewAfterWarp: 'RestCrewAfterWarp',
  Score: 'Score',
  CanResumeOrAbort: 'CanResumeOrAbort',
  EngineOnRealTime: 'EngineOnRealTime',
  EngineOffRealTime: 'EngineOffRealTime',
  LandedRealTime: 'LandedRealTime',
  AirborneRealTime: 'AirborneRealTime',
  DepartureAirportId: 'DepartureAirportId',
  ArrivalIntendedAirportId: 'ArrivalIntendedAirportId',
  ArrivalAlternateAirportId: 'ArrivalAlternateAirportId',
  ArrivalActualAirportId: 'ArrivalActualAirportId',
  VAId: 'VAId',
  MemberId: 'MemberId',
  LastRefresh: 'LastRefresh',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt',
  FlightStatus: 'FlightStatus'
};

exports.Prisma.FlightRouteScalarFieldEnum = {
  Id: 'Id',
  FlightId: 'FlightId',
  MemberId: 'MemberId',
  Route: 'Route',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.JobScalarFieldEnum = {
  Id: 'Id',
  IsEnabled: 'IsEnabled',
  FirstRunCompleted: 'FirstRunCompleted',
  Type: 'Type',
  Status: 'Status',
  CronExpression: 'CronExpression',
  Name: 'Name',
  Description: 'Description',
  Parameters: 'Parameters',
  LastRunAt: 'LastRunAt',
  NextRunAt: 'NextRunAt',
  LastError: 'LastError',
  ExecutionCount: 'ExecutionCount',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  Id: 'Id',
  CompanyId: 'CompanyId',
  DiscordMessageSent: 'DiscordMessageSent',
  IsRead: 'IsRead',
  IsNotification: 'IsNotification',
  ZuluEventTime: 'ZuluEventTime',
  DiscordMessageSentAt: 'DiscordMessageSentAt',
  DiscordMessageId: 'DiscordMessageId',
  Category: 'Category',
  Action: 'Action',
  Description: 'Description',
  CreatedAt: 'CreatedAt',
  UpdatedAt: 'UpdatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.ListenerEventStatus = exports.$Enums.ListenerEventStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  SKIPPED: 'SKIPPED'
};

exports.NOTAMStatus = exports.$Enums.NOTAMStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  PENDING: 'PENDING'
};

exports.FlightStatus = exports.$Enums.FlightStatus = {
  PENDING: 'PENDING',
  FLIGHT: 'FLIGHT',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  WARP: 'WARP'
};

exports.JobType = exports.$Enums.JobType = {
  VIRTUAL_AIRLINE_SYNC: 'VIRTUAL_AIRLINE_SYNC',
  VIRTUAL_AIRLINE_MEMBERS_SYNC: 'VIRTUAL_AIRLINE_MEMBERS_SYNC',
  VIRTUAL_AIRLINE_FLEET_SYNC: 'VIRTUAL_AIRLINE_FLEET_SYNC',
  VIRTUAL_AIRLINE_FLIGHTS_SYNC: 'VIRTUAL_AIRLINE_FLIGHTS_SYNC',
  VIRTUAL_AIRLINE_NOTIFICATION_SYNC: 'VIRTUAL_AIRLINE_NOTIFICATION_SYNC'
};

exports.JobStatus = exports.$Enums.JobStatus = {
  INACTIVE: 'INACTIVE',
  ACTIVE: 'ACTIVE',
  RUNNING: 'RUNNING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

exports.CronExpression = exports.$Enums.CronExpression = {
  EVERY_30_SECONDS: 'EVERY_30_SECONDS',
  EVERY_MINUTE: 'EVERY_MINUTE',
  EVERY_5_MINUTES: 'EVERY_5_MINUTES',
  EVERY_10_MINUTES: 'EVERY_10_MINUTES',
  EVERY_30_MINUTES: 'EVERY_30_MINUTES',
  EVERY_HOUR: 'EVERY_HOUR',
  EVERY_6_HOURS: 'EVERY_6_HOURS',
  EVERY_12_HOURS: 'EVERY_12_HOURS',
  EVERY_DAY_AT_MIDNIGHT: 'EVERY_DAY_AT_MIDNIGHT',
  EVERY_WEEK: 'EVERY_WEEK',
  EVERY_MONTH: 'EVERY_MONTH'
};

exports.Prisma.ModelName = {
  AppConfig: 'AppConfig',
  InviteCode: 'InviteCode',
  DiscordMessage: 'DiscordMessage',
  DiscordMessageTemplate: 'DiscordMessageTemplate',
  DiscordChannelWebhook: 'DiscordChannelWebhook',
  ListenerEvent: 'ListenerEvent',
  ListenerEventSender: 'ListenerEventSender',
  User: 'User',
  UserPrivacySettings: 'UserPrivacySettings',
  Role: 'Role',
  Permission: 'Permission',
  Livery: 'Livery',
  LiveryImage: 'LiveryImage',
  LiveryFile: 'LiveryFile',
  VirtualAirline: 'VirtualAirline',
  VirtualAirlineRole: 'VirtualAirlineRole',
  World: 'World',
  Notam: 'Notam',
  Member: 'Member',
  Company: 'Company',
  Aircraft: 'Aircraft',
  AircraftClass: 'AircraftClass',
  AircraftMaintenance: 'AircraftMaintenance',
  AircraftStatus: 'AircraftStatus',
  Airport: 'Airport',
  Flight: 'Flight',
  FlightRoute: 'FlightRoute',
  Job: 'Job',
  Notification: 'Notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\projects\\echoairlines.com\\api-v2\\prisma\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "metrics"
    ],
    "sourceFilePath": "D:\\projects\\echoairlines.com\\api-v2\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  output          = \"./generated/prisma\"\n  previewFeatures = [\"metrics\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel AppConfig {\n  Id                             Int      @id() @default(autoincrement())\n  OnAirSyncEnabled               Boolean  @default(false)\n  OnAirVASyncEnabled             Boolean  @default(false)\n  OnAirVAMembersSyncEnabled      Boolean  @default(false)\n  OnAirCompanySyncEnabled        Boolean  @default(false)\n  DiscordServerInviteLink        String?  @db.VarChar\n  DiscordServerInviteLinkEnabled Boolean  @default(false)\n  AcceptingNewMembers            Boolean  @default(false)\n  DiscordAuthEnabled             Boolean  @default(false)\n  DiscordAuthCreateUser          Boolean  @default(false)\n  LocalAuthEnabled               Boolean  @default(true)\n  VirtualAirlineInitiated        Boolean  @default(false)\n  FSHubApiKey                    String   @default(\"\") @db.VarChar\n  CreatedAt                      DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt                      DateTime @default(now()) @db.Timestamp(6)\n}\n\nmodel InviteCode {\n  Id        String    @id() @unique() @default(uuid()) @db.Uuid\n  Code      String    @unique() @db.VarChar\n  IsUsed    Boolean   @default(false)\n  UsedAt    DateTime? @db.Timestamp(6)\n  CreatedAt DateTime  @default(now()) @db.Timestamp(6)\n  UpdatedAt DateTime  @default(now()) @db.Timestamp(6)\n  User      User?\n}\n\nmodel DiscordMessage {\n  Id                       String    @id() @unique() @default(uuid()) @db.Uuid\n  ChannelId                String    @db.VarChar\n  Content                  String    @db.VarChar\n  DiscordMessageTemplateId Int?\n  DiscordChannelWebhookId  String?   @db.Uuid\n  DiscordMessageSentAt     DateTime? @db.Timestamp(6)\n  CreatedAt                DateTime  @default(now()) @db.Timestamp(6)\n  UpdatedAt                DateTime  @default(now()) @db.Timestamp(6)\n\n  // relations\n  DiscordMessageTemplate DiscordMessageTemplate? @relation(fields: [DiscordMessageTemplateId], references: [Id])\n  DiscordChannelWebhook  DiscordChannelWebhook?  @relation(fields: [DiscordChannelWebhookId], references: [Id])\n  ListenerEvents         ListenerEvent[]\n  Notifications          Notification[]\n}\n\nmodel DiscordMessageTemplate {\n  Id          Int      @id() @unique() @default(autoincrement())\n  Slug        String   @unique() @db.VarChar\n  Name        String   @db.VarChar\n  Description String?  @db.VarChar\n  Content     String   @db.VarChar\n  CreatedAt   DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt   DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  DiscordMessages DiscordMessage[]\n}\n\nmodel DiscordChannelWebhook {\n  Id          String   @id() @unique() @default(uuid()) @db.Uuid\n  Name        String   @default(\"Unnamed Webhook\") @db.VarChar\n  Description String?  @db.VarChar\n  WebhookUrl  String   @db.VarChar\n  ChannelId   String   @db.VarChar\n  Token       String   @unique() @db.VarChar\n  IsActive    Boolean  @default(true)\n  CreatedAt   DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt   DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  DiscordMessages      DiscordMessage[]\n  ListenerEventSenders ListenerEventSender[]\n  VirtualAirlines      VirtualAirline[]\n}\n\nmodel ListenerEvent {\n  Id               String              @id() @unique() @default(uuid()) @db.Uuid\n  Variant          String              @db.VarChar\n  Type             String              @db.VarChar\n  SentAt           DateTime            @db.Timestamp(6)\n  Status           ListenerEventStatus @default(PENDING)\n  SenderId         String              @db.Uuid\n  Error            String?             @db.VarChar\n  Data             Json?\n  DiscordMessageId String?             @db.Uuid\n  DeliveredAt      DateTime?           @db.Timestamp(6)\n  CreatedAt        DateTime            @default(now()) @db.Timestamp(6)\n  UpdatedAt        DateTime            @default(now()) @db.Timestamp(6)\n\n  // relations\n  DiscordMessage DiscordMessage?     @relation(fields: [DiscordMessageId], references: [Id])\n  Sender         ListenerEventSender @relation(fields: [SenderId], references: [Id])\n}\n\nmodel ListenerEventSender {\n  Id                      String   @id() @unique() @default(uuid()) @db.Uuid\n  Name                    String   @db.VarChar\n  Description             String?  @db.VarChar\n  Slug                    String   @unique() @db.VarChar\n  Token                   String   @unique() @db.VarChar\n  IsActive                Boolean  @default(true)\n  DiscordChannelWebhookId String?  @db.Uuid\n  CreatedAt               DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt               DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  ListenerEvents        ListenerEvent[]\n  DiscordChannelWebhook DiscordChannelWebhook? @relation(fields: [DiscordChannelWebhookId], references: [Id])\n}\n\nenum ListenerEventStatus {\n  PENDING\n  PROCESSING\n  COMPLETED\n  FAILED\n  SKIPPED\n}\n\nmodel User {\n  Id                       String    @id() @unique() @default(uuid()) @db.Uuid\n  Username                 String    @unique() @db.VarChar\n  Password                 String?   @db.VarChar\n  Email                    String?   @unique() @db.VarChar\n  FirstName                String?   @db.VarChar\n  LastName                 String?   @db.VarChar\n  FirstLoginCompleted      Boolean   @default(false)\n  IsOnline                 Boolean   @default(false)\n  IsBanned                 Boolean   @default(false)\n  BanReason                String?   @db.VarChar\n  BanExpiresAt             DateTime? @db.Timestamp(6)\n  IsVerified               Boolean   @default(false)\n  LastLogin                DateTime? @db.Timestamp(6)\n  InviteCodeId             String?   @unique() @db.Uuid\n  CreatedAt                DateTime  @default(now()) @db.Timestamp(6)\n  UpdatedAt                DateTime  @default(now()) @db.Timestamp(6)\n  WelcomeEmailSentAt       DateTime? @db.Timestamp(6)\n  ConfirmEmailToken        String?   @unique() @db.VarChar\n  EmailVerifiedAt          DateTime? @db.Timestamp(6)\n  ResetPasswordToken       String?   @unique() @db.VarChar\n  ResetPasswordEmailSentAt DateTime? @db.Timestamp(6)\n  FSHubPilotId             String?   @unique() @db.VarChar\n\n  // Discord OAuth2 fields\n  DiscordId       String? @unique() @db.VarChar\n  DiscordUsername String? @db.VarChar\n  DiscordAvatar   String? @db.VarChar\n  DiscordEmail    String? @db.VarChar\n\n  // user has many roles\n  Roles Role[] @relation(\"UserRoles\")\n\n  // user has one privacy settings\n  PrivacySettings UserPrivacySettings[]\n\n  // user belongs to multiple VAs through Member\n  Members Member[]\n\n  // user can be invited by an invite code\n  InviteCode InviteCode? @relation(fields: [InviteCodeId], references: [Id])\n\n  // user can create NOTAMs\n  NOTAMs Notam[]\n}\n\nmodel UserPrivacySettings {\n  Id                  String   @id() @unique() @default(uuid()) @db.Uuid\n  UserId              String   @unique() @db.Uuid\n  ShowOnlineStatus    Boolean  @default(true)\n  ShowFirstName       Boolean  @default(false)\n  ShowLastName        Boolean  @default(false)\n  ShowLastNameInitial Boolean  @default(false)\n  ShowLastLogin       Boolean  @default(false)\n  CreatedAt           DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  User User @relation(fields: [UserId], references: [Id])\n}\n\nmodel Role {\n  Id                   Int      @id() @unique() @default(autoincrement())\n  Name                 String   @db.VarChar\n  Description          String?  @db.VarChar\n  Slug                 String   @unique() @db.VarChar\n  CreatedAt            DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt            DateTime @default(now()) @db.Timestamp(6)\n  VirtualAirlineRoleId String?  @unique() @db.Uuid\n\n  // role has many permissions\n  Permissions Permission[] @relation(\"RolePermissions\")\n\n  // role has many users\n  Users User[] @relation(\"UserRoles\")\n\n  // role can have one virtual airline role\n  VirtualAirlineRole VirtualAirlineRole? @relation(fields: [VirtualAirlineRoleId], references: [Id])\n}\n\nmodel Permission {\n  Id          Int     @id() @default(autoincrement())\n  Name        String  @db.VarChar\n  Description String? @db.VarChar\n  Slug        String  @unique() @db.VarChar\n  Entity      String  @db.VarChar\n  Action      String  @db.VarChar\n\n  // relations\n  // permission has many roles\n  Roles Role[] @relation(\"RolePermissions\")\n}\n\nmodel Livery {\n  Id            String   @id() @default(uuid()) @db.Uuid\n  Name          String   @db.VarChar\n  IsActive      Boolean  @default(true)\n  AircraftId    String?  @db.Uuid\n  DownloadCount Int      @default(0)\n  Image         String   @db.VarChar\n  ImageFileName String?  @db.VarChar\n  CoverPhoto    String?  @db.VarChar\n  Metadata      Json?\n  Url           String?\n  Description   String?\n  DownloadUrl   String?\n  CreatedAt     DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt     DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  Aircraft Aircraft?     @relation(fields: [AircraftId], references: [Id])\n  Images   LiveryImage[]\n  Files    LiveryFile[]\n}\n\nmodel LiveryImage {\n  Id        String   @id() @default(uuid()) @db.Uuid\n  LiveryId  String   @db.Uuid\n  Name      String   @db.VarChar\n  Type      String   @db.VarChar\n  Path      String   @db.VarChar\n  Size      Int\n  MimeType  String   @db.VarChar\n  FileName  String   @db.VarChar\n  CreatedAt DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  Livery Livery @relation(fields: [LiveryId], references: [Id])\n}\n\nmodel LiveryFile {\n  Id        String   @id() @default(uuid()) @db.Uuid\n  LiveryId  String   @db.Uuid\n  Name      String   @db.VarChar\n  Type      String   @db.VarChar\n  Path      String   @db.VarChar\n  Size      Int\n  MimeType  String   @db.VarChar\n  FileName  String   @db.VarChar\n  CreatedAt DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  Livery Livery @relation(fields: [LiveryId], references: [Id])\n}\n\nmodel VirtualAirline {\n  Id                                String    @id() @db.Uuid\n  ApiKey                            String    @unique() @db.Uuid\n  IsPrimary                         Boolean   @default(false)\n  Identifier                        String?   @unique() @db.VarChar\n  Name                              String?   @db.VarChar\n  Description                       String?   @db.VarChar\n  WorldId                           String?   @db.Uuid\n  LastDividendsDistribution         DateTime? @db.Timestamp(6)\n  LastComputationDate               DateTime? @db.Timestamp(6)\n  ComputedMemberCount               Int?\n  ComputedAircraftsCount            Int?\n  ComputedNumberOfFlights30Days     Int?\n  ComputedNumberOfFlightHours30Days Int?\n  ComputedMostUsedAirports          String?   @db.VarChar\n  LastConnection                    DateTime? @db.Timestamp(6)\n  LastReportDate                    DateTime? @db.Timestamp(6)\n  Reputation                        Decimal?  @db.Decimal(10, 3)\n  CreationDate                      DateTime? @db.Timestamp(6)\n  DifficultyLevel                   Int?\n  Level                             Int?\n  LevelXP                           Int?\n  TotalContractsCompleted           Int?\n  TotalContractsEarnedCredits       Int?\n  LastRefresh                       DateTime? @db.Timestamp(6)\n  CreatedAt                         DateTime  @default(now()) @db.Timestamp(6)\n  UpdatedAt                         DateTime  @default(now()) @db.Timestamp(6)\n  VAManagerDiscordWebhookId         String?   @db.Uuid\n  NotifyNewMembersViaDiscord        Boolean   @default(false)\n\n  // relations\n  World                   World?                 @relation(fields: [WorldId], references: [Id])\n  VAManagerDiscordWebhook DiscordChannelWebhook? @relation(fields: [VAManagerDiscordWebhookId], references: [Id])\n\n  VARoles       VirtualAirlineRole[]\n  Members       Member[]\n  Fleet         Aircraft[]\n  Flights       Flight[]\n  Notifications Notification[]\n}\n\nmodel VirtualAirlineRole {\n  Id                                     String    @id() @db.Uuid\n  VAId                                   String    @db.Uuid\n  Name                                   String    @db.VarChar\n  Permission                             Int\n  IsDefaultNewRole                       Boolean\n  Color                                  String    @db.VarChar\n  PayPercent                             Decimal   @db.Decimal(10, 2) // Precision: 10, Scale: 2\n  IsHidden                               Boolean\n  RestrictLoadingVAJobsIntoNonVAAircraft Boolean\n  RestrictLoadingNonVAJobsIntoVAAircraft Boolean\n  PayWeekly                              Decimal   @db.Decimal(10, 2) // Precision: 10, Scale: 2\n  PayPerFlightHour                       Decimal   @db.Decimal(10, 2) // Precision: 10, Scale: 2\n  LastRefresh                            DateTime? @db.Timestamp(6)\n  CreatedAt                              DateTime  @default(now()) @db.Timestamp(6)\n  UpdatedAt                              DateTime  @default(now()) @db.Timestamp(6)\n\n  // relations\n  Role           Role?\n  VirtualAirline VirtualAirline @relation(fields: [VAId], references: [Id])\n  Members        Member[]\n}\n\nmodel World {\n  Id          String   @id() @db.Uuid\n  Name        String   @db.VarChar\n  Slug        String   @unique() @db.VarChar\n  Description String?  @db.VarChar\n  CreatedAt   DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt   DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  VirtualAirlines VirtualAirline[]\n  Companies       Company[]\n}\n\nmodel Notam {\n  Id             String      @id() @default(uuid()) @db.Uuid\n  Title          String      @db.VarChar\n  Content        String      @db.VarChar\n  ExpirationDate DateTime?   @db.Timestamp(6)\n  Link           String?     @db.VarChar\n  EffectiveDate  DateTime    @default(now()) @db.Timestamp(6)\n  Status         NOTAMStatus @default(ACTIVE)\n  CreatedById    String      @db.Uuid\n\n  CreatedAt DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  CreatedBy User @relation(fields: [CreatedById], references: [Id])\n}\n\nenum NOTAMStatus {\n  ACTIVE\n  INACTIVE\n  PENDING\n}\n\nmodel Member {\n  Id                        String    @id() @db.Uuid\n  IsActive                  Boolean   @default(true)\n  DeactivatedAt             DateTime? @db.Timestamp(6)\n  VAId                      String    @db.Uuid\n  VARoleId                  String    @db.Uuid\n  TotalCargosTransportedLbs Int\n  TotalPAXsTransported      Int\n  TotalEarnedCredits        Decimal\n  TotalSpentCredits         Decimal\n  NumberOfFlights           Int\n  FlightHours               Decimal\n  Color                     String    @db.VarChar\n  ReputationImpact          Decimal\n  LastVAFlightDate          DateTime? @db.Timestamp(6)\n  LastRefresh               DateTime? @db.Timestamp(6)\n  UserId                    String?   @db.Uuid\n  CreatedAt                 DateTime  @default(now()) @db.Timestamp(6)\n  UpdatedAt                 DateTime  @default(now()) @db.Timestamp(6)\n  CompanyId                 String    @unique() @db.Uuid\n\n  // relations\n  Company        Company            @relation(fields: [CompanyId], references: [Id])\n  VirtualAirline VirtualAirline     @relation(fields: [VAId], references: [Id])\n  VARole         VirtualAirlineRole @relation(fields: [VARoleId], references: [Id])\n  Flights        Flight[]\n\n  // Member can belong to one user\n  User         User?         @relation(fields: [UserId], references: [Id])\n  FlightRoutes FlightRoute[]\n}\n\nmodel Company {\n  Id              String    @id() @db.Uuid\n  Name            String    @db.VarChar\n  AirlineCode     String    @unique() @db.VarChar\n  CreationDate    DateTime  @db.Timestamp(6)\n  Level           Int\n  LevelXP         Int\n  Reputation      Decimal   @db.Decimal(10, 3)\n  Paused          Boolean   @default(false)\n  LastConnection  DateTime? @db.Timestamp(6)\n  LastReportDate  DateTime? @db.Timestamp(6)\n  DifficultyLevel Int\n  WorldId         String    @db.Uuid\n\n  LastRefresh DateTime? @db.Timestamp(6)\n  CreatedAt   DateTime  @default(now()) @db.Timestamp(6)\n  UpdatedAt   DateTime  @default(now()) @db.Timestamp(6)\n\n  // relations\n  World   World    @relation(fields: [WorldId], references: [Id])\n  Flights Flight[]\n  Owner   Member?\n}\n\nmodel Aircraft {\n  Id               String @id() @db.Uuid\n  Identifier       String @unique() @db.VarChar\n  DisplayName      String @db.VarChar\n  AircraftStatusId Int\n\n  AircraftClassId  String    @db.Uuid\n  VirtualAirlineId String    @db.Uuid\n  CurrentAirportId String?   @db.Uuid\n  LastRefresh      DateTime? @db.Timestamp(6)\n  CreatedAt        DateTime  @default(now()) @db.Timestamp(6)\n  UpdatedAt        DateTime  @default(now()) @db.Timestamp(6)\n\n  // relations\n  AircraftClass       AircraftClass         @relation(fields: [AircraftClassId], references: [Id])\n  VirtualAirline      VirtualAirline        @relation(fields: [VirtualAirlineId], references: [Id])\n  AircraftStatus      AircraftStatus        @relation(fields: [AircraftStatusId], references: [Id])\n  CurrentAirport      Airport?              @relation(\"AircraftAtAirport\", fields: [CurrentAirportId], references: [Id])\n  AircraftMaintenance AircraftMaintenance[]\n  Flights             Flight[]\n  Liveries            Livery[]\n}\n\nmodel AircraftClass {\n  Id        String @id() @db.Uuid\n  ShortName String @unique() @db.VarChar\n  Name      String @db.VarChar\n\n  // relations\n  Aircrafts Aircraft[]\n}\n\nmodel AircraftMaintenance {\n  Id                            String   @id() @db.Uuid\n  AircraftId                    String   @db.Uuid\n  AnnualCheckup                 Boolean\n  Inspection100Hours            Boolean\n  FailuresRepair                Boolean\n  AirframeRepair                Boolean\n  AirframeReplace               Boolean\n  EcoSeats                      Int\n  BusSeats                      Int\n  FirstClassSeats               Int\n  AirframeRepairCondition       Decimal  @db.Decimal(10, 6)\n  MaintenanceFBOId              String   @db.Uuid\n  RemainingMaintenanceWorkHours Decimal  @db.Decimal(10, 6)\n  Amount                        Decimal  @db.Decimal(10, 2)\n  CreatedAt                     DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt                     DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  Aircraft Aircraft @relation(fields: [AircraftId], references: [Id])\n}\n\n// 0: Idle\n// 1: Maintenance\n// 2: Apron Work\n// 3: In Flight\n// 4: Warp\n// 5: Ferry\nmodel AircraftStatus {\n  Id   Int    @id() @unique()\n  Name String @db.VarChar\n\n  // relations\n  Aircrafts Aircraft[]\n}\n\nmodel Airport {\n  Id             String   @id() @unique() @db.Uuid\n  ICAO           String   @unique() @db.VarChar\n  IATA           String?  @unique() @db.VarChar\n  Description    String?  @db.VarChar\n  Name           String   @db.VarChar\n  Size           Int      @default(9)\n  City           String?  @db.VarChar\n  State          String?  @db.VarChar\n  CountryCode    String?  @db.VarChar\n  CountryName    String?  @db.VarChar\n  CountryEmoji   String?  @db.VarChar\n  Latitude       Decimal  @db.Decimal(10, 6)\n  Longitude      Decimal  @db.Decimal(10, 6)\n  HomeWebSiteUrl String?  @db.VarChar\n  WikiUrl        String?  @db.VarChar\n  CreatedAt      DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt      DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  AircraftAtAirport        Aircraft[] @relation(\"AircraftAtAirport\")\n  DepartingFlights         Flight[]   @relation(\"DepartureAirport\")\n  ArrivingFlights          Flight[]   @relation(\"ArrivalIntendedAirport\")\n  ArrivingAlternateFlights Flight[]   @relation(\"ArrivalAlternateAirport\")\n  ArrivingActualFlights    Flight[]   @relation(\"ArrivalActualAirport\")\n}\n\nmodel Flight {\n  Id                                         String    @id() @unique() @db.Uuid\n  FSHubId                                    Int?      @unique()\n  AircraftId                                 String?   @db.Uuid\n  CompanyId                                  String    @db.Uuid\n  Registered                                 Boolean\n  Category                                   Int\n  ResultComments                             String\n  StartTime                                  DateTime?\n  EndTime                                    DateTime?\n  EngineOnTime                               DateTime?\n  EngineOffTime                              DateTime?\n  AirborneTime                               DateTime?\n  LandedTime                                 DateTime?\n  IntendedFlightLevel                        Int?\n  Passengers                                 Int?\n  Cargo                                      Int?\n  AddedFuelQty                               Decimal?\n  IsAI                                       Boolean   @default(false)\n  VerticalSpeedAtTouchdownMpS                Decimal?\n  MaxGForce                                  Decimal?\n  MinGForce                                  Decimal?\n  MaxBank                                    Decimal?\n  MaxPitch                                   Decimal?\n  HasStalled                                 Boolean   @default(false)\n  HasOverspeeded                             Boolean   @default(false)\n  XPFlight                                   Int?\n  XPFlightBonus                              Decimal?\n  XPMissions                                 Int?\n  CargosTotalWeight                          Decimal?\n  PAXCount                                   Int?\n  AircraftCurrentFOB                         Decimal?\n  AircraftCurrentAltitude                    Decimal?\n  ActualCruiseAltitude                       Decimal?\n  ActualConsumptionAtCruiseLevelInLbsPerHour Decimal?\n  ActualTotalFuelConsumptionInLbs            Decimal?\n  ActualConsumptionAtCruiseLevelInGalPerHour Decimal?\n  ActualTASAtCruiseLevel                     Decimal?\n  ActualCruiseTimeInMinutes                  Decimal?\n  ActualPressureAltitude                     Decimal?\n  RegisterState                              Int?\n  WrongFuelDetected                          Boolean   @default(false)\n  WrongWeightDetected                        Boolean   @default(false)\n  TimeOffset                                 Decimal?\n  StartLatitude                              Decimal?\n  StartLongitude                             Decimal?\n  StartHeading                               Decimal?\n  UseFreelanceRouteSchedule                  Boolean   @default(false)\n  RestCrewAfterWarp                          Boolean   @default(false)\n  Score                                      Decimal?\n  CanResumeOrAbort                           Boolean   @default(false)\n  EngineOnRealTime                           DateTime? @db.Timestamp(6)\n  EngineOffRealTime                          DateTime? @db.Timestamp(6)\n  LandedRealTime                             DateTime? @db.Timestamp(6)\n  AirborneRealTime                           DateTime? @db.Timestamp(6)\n  DepartureAirportId                         String?   @db.Uuid\n  ArrivalIntendedAirportId                   String?   @db.Uuid\n  ArrivalAlternateAirportId                  String?   @db.Uuid\n  ArrivalActualAirportId                     String?   @db.Uuid\n  VAId                                       String?   @db.Uuid\n  MemberId                                   String?   @db.Uuid\n  LastRefresh                                DateTime? @db.Timestamp(6)\n  CreatedAt                                  DateTime  @default(now()) @db.Timestamp(6)\n  UpdatedAt                                  DateTime  @default(now()) @db.Timestamp(6)\n\n  // relations\n  FlightStatus            FlightStatus    @default(PENDING)\n  Company                 Company         @relation(fields: [CompanyId], references: [Id])\n  VirtualAirline          VirtualAirline? @relation(fields: [VAId], references: [Id])\n  Aircraft                Aircraft?       @relation(fields: [AircraftId], references: [Id])\n  FlightRoute             FlightRoute[]\n  DepartureAirport        Airport?        @relation(\"DepartureAirport\", fields: [DepartureAirportId], references: [Id])\n  ArrivalIntendedAirport  Airport?        @relation(\"ArrivalIntendedAirport\", fields: [ArrivalIntendedAirportId], references: [Id])\n  ArrivalAlternateAirport Airport?        @relation(\"ArrivalAlternateAirport\", fields: [ArrivalAlternateAirportId], references: [Id])\n  ArrivalActualAirport    Airport?        @relation(\"ArrivalActualAirport\", fields: [ArrivalActualAirportId], references: [Id])\n  Member                  Member?         @relation(fields: [MemberId], references: [Id])\n}\n\nenum FlightStatus {\n  PENDING\n  FLIGHT\n  COMPLETED\n  CANCELLED\n  WARP\n}\n\nmodel FlightRoute {\n  Id        String   @id() @default(uuid()) @db.Uuid\n  FlightId  String?  @db.Uuid\n  MemberId  String   @db.Uuid\n  Route     String   @db.VarChar\n  CreatedAt DateTime @default(now()) @db.Timestamp(6)\n  UpdatedAt DateTime @default(now()) @db.Timestamp(6)\n\n  // relations\n  Flight Flight? @relation(fields: [FlightId], references: [Id])\n  Member Member  @relation(fields: [MemberId], references: [Id])\n}\n\nmodel Job {\n  Id                String         @id() @default(uuid()) @db.Uuid\n  IsEnabled         Boolean        @default(false)\n  FirstRunCompleted Boolean        @default(false)\n  Type              JobType\n  Status            JobStatus      @default(INACTIVE)\n  CronExpression    CronExpression\n  Name              String\n  Description       String?\n  Parameters        Json?\n  LastRunAt         DateTime?      @db.Timestamp(6)\n  NextRunAt         DateTime?      @db.Timestamp(6)\n  LastError         String?\n  ExecutionCount    Int            @default(0)\n  CreatedAt         DateTime       @default(now()) @db.Timestamp(6)\n  UpdatedAt         DateTime       @default(now()) @db.Timestamp(6)\n}\n\nenum JobType {\n  VIRTUAL_AIRLINE_SYNC\n  VIRTUAL_AIRLINE_MEMBERS_SYNC\n  VIRTUAL_AIRLINE_FLEET_SYNC\n  VIRTUAL_AIRLINE_FLIGHTS_SYNC\n  VIRTUAL_AIRLINE_NOTIFICATION_SYNC\n}\n\nenum JobStatus {\n  INACTIVE\n  ACTIVE\n  RUNNING\n  COMPLETED\n  FAILED\n}\n\nenum CronExpression {\n  EVERY_30_SECONDS\n  EVERY_MINUTE\n  EVERY_5_MINUTES\n  EVERY_10_MINUTES\n  EVERY_30_MINUTES\n  EVERY_HOUR\n  EVERY_6_HOURS\n  EVERY_12_HOURS\n  EVERY_DAY_AT_MIDNIGHT\n  EVERY_WEEK\n  EVERY_MONTH\n}\n\nmodel Notification {\n  Id                   String    @id() @unique() @db.Uuid\n  CompanyId            String    @db.Uuid\n  DiscordMessageSent   Boolean   @default(false)\n  IsRead               Boolean   @default(false)\n  IsNotification       Boolean   @default(false)\n  ZuluEventTime        DateTime? @db.Timestamp(6)\n  DiscordMessageSentAt DateTime? @db.Timestamp(6)\n  DiscordMessageId     String?   @db.Uuid\n  Category             Int       @default(0)\n  Action               Int       @default(0)\n  Description          String    @db.VarChar\n  CreatedAt            DateTime  @default(now()) @db.Timestamp(6)\n  UpdatedAt            DateTime  @default(now()) @db.Timestamp(6)\n\n  // relations\n  VirtualAirline VirtualAirline  @relation(fields: [CompanyId], references: [Id])\n  DiscordMessage DiscordMessage? @relation(fields: [DiscordMessageId], references: [Id])\n}\n",
  "inlineSchemaHash": "caa8ad4a16448cd431f72d1504222017ffcdce2c6c926eb5e97088202ef53e11",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"AppConfig\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"OnAirSyncEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"OnAirVASyncEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"OnAirVAMembersSyncEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"OnAirCompanySyncEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"DiscordServerInviteLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DiscordServerInviteLinkEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"AcceptingNewMembers\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"DiscordAuthEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"DiscordAuthCreateUser\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"LocalAuthEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"VirtualAirlineInitiated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"FSHubApiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"InviteCode\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IsUsed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"UsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InviteCodeToUser\"}],\"dbName\":null},\"DiscordMessage\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ChannelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DiscordMessageTemplateId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"DiscordChannelWebhookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DiscordMessageSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"DiscordMessageTemplate\",\"kind\":\"object\",\"type\":\"DiscordMessageTemplate\",\"relationName\":\"DiscordMessageToDiscordMessageTemplate\"},{\"name\":\"DiscordChannelWebhook\",\"kind\":\"object\",\"type\":\"DiscordChannelWebhook\",\"relationName\":\"DiscordChannelWebhookToDiscordMessage\"},{\"name\":\"ListenerEvents\",\"kind\":\"object\",\"type\":\"ListenerEvent\",\"relationName\":\"DiscordMessageToListenerEvent\"},{\"name\":\"Notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"DiscordMessageToNotification\"}],\"dbName\":null},\"DiscordMessageTemplate\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"DiscordMessages\",\"kind\":\"object\",\"type\":\"DiscordMessage\",\"relationName\":\"DiscordMessageToDiscordMessageTemplate\"}],\"dbName\":null},\"DiscordChannelWebhook\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"WebhookUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ChannelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IsActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"DiscordMessages\",\"kind\":\"object\",\"type\":\"DiscordMessage\",\"relationName\":\"DiscordChannelWebhookToDiscordMessage\"},{\"name\":\"ListenerEventSenders\",\"kind\":\"object\",\"type\":\"ListenerEventSender\",\"relationName\":\"DiscordChannelWebhookToListenerEventSender\"},{\"name\":\"VirtualAirlines\",\"kind\":\"object\",\"type\":\"VirtualAirline\",\"relationName\":\"DiscordChannelWebhookToVirtualAirline\"}],\"dbName\":null},\"ListenerEvent\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Variant\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Status\",\"kind\":\"enum\",\"type\":\"ListenerEventStatus\"},{\"name\":\"SenderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"DiscordMessageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DeliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"DiscordMessage\",\"kind\":\"object\",\"type\":\"DiscordMessage\",\"relationName\":\"DiscordMessageToListenerEvent\"},{\"name\":\"Sender\",\"kind\":\"object\",\"type\":\"ListenerEventSender\",\"relationName\":\"ListenerEventToListenerEventSender\"}],\"dbName\":null},\"ListenerEventSender\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IsActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"DiscordChannelWebhookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ListenerEvents\",\"kind\":\"object\",\"type\":\"ListenerEvent\",\"relationName\":\"ListenerEventToListenerEventSender\"},{\"name\":\"DiscordChannelWebhook\",\"kind\":\"object\",\"type\":\"DiscordChannelWebhook\",\"relationName\":\"DiscordChannelWebhookToListenerEventSender\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FirstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FirstLoginCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"IsOnline\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"IsBanned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"BanReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"BanExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"IsVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"LastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"InviteCodeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"WelcomeEmailSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ConfirmEmailToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"EmailVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ResetPasswordToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ResetPasswordEmailSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"FSHubPilotId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DiscordId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DiscordUsername\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DiscordAvatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DiscordEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Roles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"UserRoles\"},{\"name\":\"PrivacySettings\",\"kind\":\"object\",\"type\":\"UserPrivacySettings\",\"relationName\":\"UserToUserPrivacySettings\"},{\"name\":\"Members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToUser\"},{\"name\":\"InviteCode\",\"kind\":\"object\",\"type\":\"InviteCode\",\"relationName\":\"InviteCodeToUser\"},{\"name\":\"NOTAMs\",\"kind\":\"object\",\"type\":\"Notam\",\"relationName\":\"NotamToUser\"}],\"dbName\":null},\"UserPrivacySettings\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"UserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ShowOnlineStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ShowFirstName\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ShowLastName\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ShowLastNameInitial\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ShowLastLogin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserPrivacySettings\"}],\"dbName\":null},\"Role\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"VirtualAirlineRoleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Permissions\",\"kind\":\"object\",\"type\":\"Permission\",\"relationName\":\"RolePermissions\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserRoles\"},{\"name\":\"VirtualAirlineRole\",\"kind\":\"object\",\"type\":\"VirtualAirlineRole\",\"relationName\":\"RoleToVirtualAirlineRole\"}],\"dbName\":null},\"Permission\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Roles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RolePermissions\"}],\"dbName\":null},\"Livery\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IsActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"AircraftId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DownloadCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ImageFileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CoverPhoto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"Url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DownloadUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Aircraft\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToLivery\"},{\"name\":\"Images\",\"kind\":\"object\",\"type\":\"LiveryImage\",\"relationName\":\"LiveryToLiveryImage\"},{\"name\":\"Files\",\"kind\":\"object\",\"type\":\"LiveryFile\",\"relationName\":\"LiveryToLiveryFile\"}],\"dbName\":null},\"LiveryImage\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LiveryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"MimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Livery\",\"kind\":\"object\",\"type\":\"Livery\",\"relationName\":\"LiveryToLiveryImage\"}],\"dbName\":null},\"LiveryFile\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LiveryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"MimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Livery\",\"kind\":\"object\",\"type\":\"Livery\",\"relationName\":\"LiveryToLiveryFile\"}],\"dbName\":null},\"VirtualAirline\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ApiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IsPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"WorldId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LastDividendsDistribution\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"LastComputationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ComputedMemberCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ComputedAircraftsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ComputedNumberOfFlights30Days\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ComputedNumberOfFlightHours30Days\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ComputedMostUsedAirports\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LastConnection\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"LastReportDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Reputation\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"CreationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"DifficultyLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Level\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"LevelXP\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"TotalContractsCompleted\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"TotalContractsEarnedCredits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"LastRefresh\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"VAManagerDiscordWebhookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"NotifyNewMembersViaDiscord\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"World\",\"kind\":\"object\",\"type\":\"World\",\"relationName\":\"VirtualAirlineToWorld\"},{\"name\":\"VAManagerDiscordWebhook\",\"kind\":\"object\",\"type\":\"DiscordChannelWebhook\",\"relationName\":\"DiscordChannelWebhookToVirtualAirline\"},{\"name\":\"VARoles\",\"kind\":\"object\",\"type\":\"VirtualAirlineRole\",\"relationName\":\"VirtualAirlineToVirtualAirlineRole\"},{\"name\":\"Members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToVirtualAirline\"},{\"name\":\"Fleet\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToVirtualAirline\"},{\"name\":\"Flights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"FlightToVirtualAirline\"},{\"name\":\"Notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToVirtualAirline\"}],\"dbName\":null},\"VirtualAirlineRole\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"VAId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Permission\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"IsDefaultNewRole\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PayPercent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"IsHidden\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"RestrictLoadingVAJobsIntoNonVAAircraft\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"RestrictLoadingNonVAJobsIntoVAAircraft\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"PayWeekly\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"PayPerFlightHour\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"LastRefresh\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToVirtualAirlineRole\"},{\"name\":\"VirtualAirline\",\"kind\":\"object\",\"type\":\"VirtualAirline\",\"relationName\":\"VirtualAirlineToVirtualAirlineRole\"},{\"name\":\"Members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToVirtualAirlineRole\"}],\"dbName\":null},\"World\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"VirtualAirlines\",\"kind\":\"object\",\"type\":\"VirtualAirline\",\"relationName\":\"VirtualAirlineToWorld\"},{\"name\":\"Companies\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToWorld\"}],\"dbName\":null},\"Notam\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ExpirationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"EffectiveDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Status\",\"kind\":\"enum\",\"type\":\"NOTAMStatus\"},{\"name\":\"CreatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CreatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotamToUser\"}],\"dbName\":null},\"Member\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IsActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"DeactivatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"VAId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"VARoleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"TotalCargosTransportedLbs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"TotalPAXsTransported\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"TotalEarnedCredits\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"TotalSpentCredits\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"NumberOfFlights\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"FlightHours\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ReputationImpact\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"LastVAFlightDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"LastRefresh\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CompanyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToMember\"},{\"name\":\"VirtualAirline\",\"kind\":\"object\",\"type\":\"VirtualAirline\",\"relationName\":\"MemberToVirtualAirline\"},{\"name\":\"VARole\",\"kind\":\"object\",\"type\":\"VirtualAirlineRole\",\"relationName\":\"MemberToVirtualAirlineRole\"},{\"name\":\"Flights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"FlightToMember\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MemberToUser\"},{\"name\":\"FlightRoutes\",\"kind\":\"object\",\"type\":\"FlightRoute\",\"relationName\":\"FlightRouteToMember\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AirlineCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Level\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"LevelXP\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Reputation\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Paused\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"LastConnection\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"LastReportDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"DifficultyLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"WorldId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LastRefresh\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"World\",\"kind\":\"object\",\"type\":\"World\",\"relationName\":\"CompanyToWorld\"},{\"name\":\"Flights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"CompanyToFlight\"},{\"name\":\"Owner\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"CompanyToMember\"}],\"dbName\":null},\"Aircraft\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DisplayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AircraftStatusId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"AircraftClassId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"VirtualAirlineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CurrentAirportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LastRefresh\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"AircraftClass\",\"kind\":\"object\",\"type\":\"AircraftClass\",\"relationName\":\"AircraftToAircraftClass\"},{\"name\":\"VirtualAirline\",\"kind\":\"object\",\"type\":\"VirtualAirline\",\"relationName\":\"AircraftToVirtualAirline\"},{\"name\":\"AircraftStatus\",\"kind\":\"object\",\"type\":\"AircraftStatus\",\"relationName\":\"AircraftToAircraftStatus\"},{\"name\":\"CurrentAirport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"AircraftAtAirport\"},{\"name\":\"AircraftMaintenance\",\"kind\":\"object\",\"type\":\"AircraftMaintenance\",\"relationName\":\"AircraftToAircraftMaintenance\"},{\"name\":\"Flights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"AircraftToFlight\"},{\"name\":\"Liveries\",\"kind\":\"object\",\"type\":\"Livery\",\"relationName\":\"AircraftToLivery\"}],\"dbName\":null},\"AircraftClass\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ShortName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Aircrafts\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToAircraftClass\"}],\"dbName\":null},\"AircraftMaintenance\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AircraftId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AnnualCheckup\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Inspection100Hours\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"FailuresRepair\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"AirframeRepair\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"AirframeReplace\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"EcoSeats\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"BusSeats\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"FirstClassSeats\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"AirframeRepairCondition\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"MaintenanceFBOId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"RemainingMaintenanceWorkHours\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Aircraft\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToAircraftMaintenance\"}],\"dbName\":null},\"AircraftStatus\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Aircrafts\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToAircraftStatus\"}],\"dbName\":null},\"Airport\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ICAO\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IATA\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"City\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"State\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CountryCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CountryName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CountryEmoji\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Latitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Longitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"HomeWebSiteUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"WikiUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"AircraftAtAirport\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftAtAirport\"},{\"name\":\"DepartingFlights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"DepartureAirport\"},{\"name\":\"ArrivingFlights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"ArrivalIntendedAirport\"},{\"name\":\"ArrivingAlternateFlights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"ArrivalAlternateAirport\"},{\"name\":\"ArrivingActualFlights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"ArrivalActualAirport\"}],\"dbName\":null},\"Flight\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FSHubId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"AircraftId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CompanyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Registered\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Category\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ResultComments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"StartTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"EndTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"EngineOnTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"EngineOffTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"AirborneTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"LandedTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"IntendedFlightLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Passengers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Cargo\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"AddedFuelQty\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"IsAI\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"VerticalSpeedAtTouchdownMpS\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"MaxGForce\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"MinGForce\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"MaxBank\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"MaxPitch\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"HasStalled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"HasOverspeeded\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"XPFlight\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"XPFlightBonus\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"XPMissions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"CargosTotalWeight\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"PAXCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"AircraftCurrentFOB\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"AircraftCurrentAltitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ActualCruiseAltitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ActualConsumptionAtCruiseLevelInLbsPerHour\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ActualTotalFuelConsumptionInLbs\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ActualConsumptionAtCruiseLevelInGalPerHour\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ActualTASAtCruiseLevel\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ActualCruiseTimeInMinutes\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ActualPressureAltitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"RegisterState\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"WrongFuelDetected\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"WrongWeightDetected\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"TimeOffset\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"StartLatitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"StartLongitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"StartHeading\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"UseFreelanceRouteSchedule\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"RestCrewAfterWarp\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Score\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"CanResumeOrAbort\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"EngineOnRealTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"EngineOffRealTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"LandedRealTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"AirborneRealTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"DepartureAirportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ArrivalIntendedAirportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ArrivalAlternateAirportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ArrivalActualAirportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"VAId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"MemberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LastRefresh\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"FlightStatus\",\"kind\":\"enum\",\"type\":\"FlightStatus\"},{\"name\":\"Company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToFlight\"},{\"name\":\"VirtualAirline\",\"kind\":\"object\",\"type\":\"VirtualAirline\",\"relationName\":\"FlightToVirtualAirline\"},{\"name\":\"Aircraft\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToFlight\"},{\"name\":\"FlightRoute\",\"kind\":\"object\",\"type\":\"FlightRoute\",\"relationName\":\"FlightToFlightRoute\"},{\"name\":\"DepartureAirport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"DepartureAirport\"},{\"name\":\"ArrivalIntendedAirport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"ArrivalIntendedAirport\"},{\"name\":\"ArrivalAlternateAirport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"ArrivalAlternateAirport\"},{\"name\":\"ArrivalActualAirport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"ArrivalActualAirport\"},{\"name\":\"Member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"FlightToMember\"}],\"dbName\":null},\"FlightRoute\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FlightId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"MemberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Route\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Flight\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"FlightToFlightRoute\"},{\"name\":\"Member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"FlightRouteToMember\"}],\"dbName\":null},\"Job\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IsEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"FirstRunCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Type\",\"kind\":\"enum\",\"type\":\"JobType\"},{\"name\":\"Status\",\"kind\":\"enum\",\"type\":\"JobStatus\"},{\"name\":\"CronExpression\",\"kind\":\"enum\",\"type\":\"CronExpression\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Parameters\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"LastRunAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"NextRunAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"LastError\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ExecutionCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CompanyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DiscordMessageSent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"IsRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"IsNotification\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ZuluEventTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"DiscordMessageSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"DiscordMessageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Category\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Action\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"VirtualAirline\",\"kind\":\"object\",\"type\":\"VirtualAirline\",\"relationName\":\"NotificationToVirtualAirline\"},{\"name\":\"DiscordMessage\",\"kind\":\"object\",\"type\":\"DiscordMessage\",\"relationName\":\"DiscordMessageToNotification\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

