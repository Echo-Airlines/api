import { VirtualAirlineService } from './virtual-airline.service';
import { Prisma } from 'prisma/generated/prisma';
import { AppConfigService } from '@app-config/app-config.service';
import { PublicMemberDto } from './dto/public-member.dto';
export declare class VirtualAirlineController {
    private readonly virtualAirlineService;
    private readonly appConfigService;
    constructor(virtualAirlineService: VirtualAirlineService, appConfigService: AppConfigService);
    getAll(worldSlug?: string): Promise<{
        Id: string;
        ApiKey: string;
        IsPrimary: boolean;
        Identifier: string | null;
        Name: string | null;
        Description: string | null;
        WorldId: string | null;
        LastDividendsDistribution: Date | null;
        LastComputationDate: Date | null;
        ComputedMemberCount: number | null;
        ComputedAircraftsCount: number | null;
        ComputedNumberOfFlights30Days: number | null;
        ComputedNumberOfFlightHours30Days: number | null;
        ComputedMostUsedAirports: string | null;
        LastConnection: Date | null;
        LastReportDate: Date | null;
        Reputation: Prisma.Decimal | null;
        CreationDate: Date | null;
        DifficultyLevel: number | null;
        Level: number | null;
        LevelXP: number | null;
        TotalContractsCompleted: number | null;
        TotalContractsEarnedCredits: number | null;
        LastRefresh: Date | null;
        CreatedAt: Date;
        UpdatedAt: Date;
    }[]>;
    getLeaderboard(): Promise<PublicMemberDto[]>;
    getPrimaryVirtualAirlineMembers(): Promise<PublicMemberDto[]>;
    getVARoles(): Promise<{
        Id: string;
        Name: string;
        LastRefresh: Date | null;
        CreatedAt: Date;
        UpdatedAt: Date;
        VAId: string;
        Color: string;
        Permission: number;
        IsDefaultNewRole: boolean;
        PayPercent: Prisma.Decimal;
        IsHidden: boolean;
        RestrictLoadingVAJobsIntoNonVAAircraft: boolean;
        RestrictLoadingNonVAJobsIntoVAAircraft: boolean;
        PayWeekly: Prisma.Decimal;
        PayPerFlightHour: Prisma.Decimal;
    }[]>;
    create(body: Prisma.VirtualAirlineCreateInput): Promise<{
        Id: string;
        ApiKey: string;
        IsPrimary: boolean;
        Identifier: string | null;
        Name: string | null;
        Description: string | null;
        WorldId: string | null;
        LastDividendsDistribution: Date | null;
        LastComputationDate: Date | null;
        ComputedMemberCount: number | null;
        ComputedAircraftsCount: number | null;
        ComputedNumberOfFlights30Days: number | null;
        ComputedNumberOfFlightHours30Days: number | null;
        ComputedMostUsedAirports: string | null;
        LastConnection: Date | null;
        LastReportDate: Date | null;
        Reputation: Prisma.Decimal | null;
        CreationDate: Date | null;
        DifficultyLevel: number | null;
        Level: number | null;
        LevelXP: number | null;
        TotalContractsCompleted: number | null;
        TotalContractsEarnedCredits: number | null;
        LastRefresh: Date | null;
        CreatedAt: Date;
        UpdatedAt: Date;
    }>;
}
