import { PrismaService } from '@prisma/prisma.service';
import { Prisma } from 'prisma/generated/prisma';
import { CreateFlightRouteDto } from './dto/create-flight-route.dto';
import { updateFlightRouteDto } from './dto/update-flight-route.dto';
export declare class FlightService {
    private prisma;
    constructor(prisma: PrismaService);
    findAll(query?: Prisma.FlightFindManyArgs): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        LastRefresh: Date | null;
        VAId: string | null;
        CompanyId: string;
        Registered: boolean;
        Category: number;
        ResultComments: string;
        StartTime: Date | null;
        EndTime: Date | null;
        EngineOnTime: Date | null;
        EngineOffTime: Date | null;
        AirborneTime: Date | null;
        LandedTime: Date | null;
        IntendedFlightLevel: number | null;
        Passengers: number | null;
        Cargo: number | null;
        AddedFuelQty: Prisma.Decimal | null;
        IsAI: boolean;
        VerticalSpeedAtTouchdownMpS: Prisma.Decimal | null;
        MaxGForce: Prisma.Decimal | null;
        MinGForce: Prisma.Decimal | null;
        MaxBank: Prisma.Decimal | null;
        MaxPitch: Prisma.Decimal | null;
        HasStalled: boolean;
        HasOverspeeded: boolean;
        XPFlight: number | null;
        XPFlightBonus: Prisma.Decimal | null;
        XPMissions: number | null;
        CargosTotalWeight: Prisma.Decimal | null;
        PAXCount: number | null;
        AircraftCurrentFOB: Prisma.Decimal | null;
        AircraftCurrentAltitude: Prisma.Decimal | null;
        ActualCruiseAltitude: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInLbsPerHour: Prisma.Decimal | null;
        ActualTotalFuelConsumptionInLbs: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInGalPerHour: Prisma.Decimal | null;
        ActualTASAtCruiseLevel: Prisma.Decimal | null;
        ActualCruiseTimeInMinutes: Prisma.Decimal | null;
        ActualPressureAltitude: Prisma.Decimal | null;
        RegisterState: number | null;
        WrongFuelDetected: boolean;
        WrongWeightDetected: boolean;
        TimeOffset: Prisma.Decimal | null;
        StartLatitude: Prisma.Decimal | null;
        StartLongitude: Prisma.Decimal | null;
        StartHeading: Prisma.Decimal | null;
        UseFreelanceRouteSchedule: boolean;
        RestCrewAfterWarp: boolean;
        Score: Prisma.Decimal | null;
        CanResumeOrAbort: boolean;
        EngineOnRealTime: Date | null;
        EngineOffRealTime: Date | null;
        LandedRealTime: Date | null;
        AirborneRealTime: Date | null;
        FlightStatus: import("prisma/generated/prisma").$Enums.FlightStatus;
        AircraftId: string | null;
        DepartureAirportId: string | null;
        ArrivalIntendedAirportId: string | null;
        ArrivalAlternateAirportId: string | null;
        ArrivalActualAirportId: string | null;
        MemberId: string | null;
    }[]>;
    findAllByAircraftIdentifier(aircraftIdentifier: string): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        LastRefresh: Date | null;
        VAId: string | null;
        CompanyId: string;
        Registered: boolean;
        Category: number;
        ResultComments: string;
        StartTime: Date | null;
        EndTime: Date | null;
        EngineOnTime: Date | null;
        EngineOffTime: Date | null;
        AirborneTime: Date | null;
        LandedTime: Date | null;
        IntendedFlightLevel: number | null;
        Passengers: number | null;
        Cargo: number | null;
        AddedFuelQty: Prisma.Decimal | null;
        IsAI: boolean;
        VerticalSpeedAtTouchdownMpS: Prisma.Decimal | null;
        MaxGForce: Prisma.Decimal | null;
        MinGForce: Prisma.Decimal | null;
        MaxBank: Prisma.Decimal | null;
        MaxPitch: Prisma.Decimal | null;
        HasStalled: boolean;
        HasOverspeeded: boolean;
        XPFlight: number | null;
        XPFlightBonus: Prisma.Decimal | null;
        XPMissions: number | null;
        CargosTotalWeight: Prisma.Decimal | null;
        PAXCount: number | null;
        AircraftCurrentFOB: Prisma.Decimal | null;
        AircraftCurrentAltitude: Prisma.Decimal | null;
        ActualCruiseAltitude: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInLbsPerHour: Prisma.Decimal | null;
        ActualTotalFuelConsumptionInLbs: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInGalPerHour: Prisma.Decimal | null;
        ActualTASAtCruiseLevel: Prisma.Decimal | null;
        ActualCruiseTimeInMinutes: Prisma.Decimal | null;
        ActualPressureAltitude: Prisma.Decimal | null;
        RegisterState: number | null;
        WrongFuelDetected: boolean;
        WrongWeightDetected: boolean;
        TimeOffset: Prisma.Decimal | null;
        StartLatitude: Prisma.Decimal | null;
        StartLongitude: Prisma.Decimal | null;
        StartHeading: Prisma.Decimal | null;
        UseFreelanceRouteSchedule: boolean;
        RestCrewAfterWarp: boolean;
        Score: Prisma.Decimal | null;
        CanResumeOrAbort: boolean;
        EngineOnRealTime: Date | null;
        EngineOffRealTime: Date | null;
        LandedRealTime: Date | null;
        AirborneRealTime: Date | null;
        FlightStatus: import("prisma/generated/prisma").$Enums.FlightStatus;
        AircraftId: string | null;
        DepartureAirportId: string | null;
        ArrivalIntendedAirportId: string | null;
        ArrivalAlternateAirportId: string | null;
        ArrivalActualAirportId: string | null;
        MemberId: string | null;
    }[]>;
    findAllByVirtualAirlineIdentifier(virtualAirlineIdentifier: string): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        LastRefresh: Date | null;
        VAId: string | null;
        CompanyId: string;
        Registered: boolean;
        Category: number;
        ResultComments: string;
        StartTime: Date | null;
        EndTime: Date | null;
        EngineOnTime: Date | null;
        EngineOffTime: Date | null;
        AirborneTime: Date | null;
        LandedTime: Date | null;
        IntendedFlightLevel: number | null;
        Passengers: number | null;
        Cargo: number | null;
        AddedFuelQty: Prisma.Decimal | null;
        IsAI: boolean;
        VerticalSpeedAtTouchdownMpS: Prisma.Decimal | null;
        MaxGForce: Prisma.Decimal | null;
        MinGForce: Prisma.Decimal | null;
        MaxBank: Prisma.Decimal | null;
        MaxPitch: Prisma.Decimal | null;
        HasStalled: boolean;
        HasOverspeeded: boolean;
        XPFlight: number | null;
        XPFlightBonus: Prisma.Decimal | null;
        XPMissions: number | null;
        CargosTotalWeight: Prisma.Decimal | null;
        PAXCount: number | null;
        AircraftCurrentFOB: Prisma.Decimal | null;
        AircraftCurrentAltitude: Prisma.Decimal | null;
        ActualCruiseAltitude: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInLbsPerHour: Prisma.Decimal | null;
        ActualTotalFuelConsumptionInLbs: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInGalPerHour: Prisma.Decimal | null;
        ActualTASAtCruiseLevel: Prisma.Decimal | null;
        ActualCruiseTimeInMinutes: Prisma.Decimal | null;
        ActualPressureAltitude: Prisma.Decimal | null;
        RegisterState: number | null;
        WrongFuelDetected: boolean;
        WrongWeightDetected: boolean;
        TimeOffset: Prisma.Decimal | null;
        StartLatitude: Prisma.Decimal | null;
        StartLongitude: Prisma.Decimal | null;
        StartHeading: Prisma.Decimal | null;
        UseFreelanceRouteSchedule: boolean;
        RestCrewAfterWarp: boolean;
        Score: Prisma.Decimal | null;
        CanResumeOrAbort: boolean;
        EngineOnRealTime: Date | null;
        EngineOffRealTime: Date | null;
        LandedRealTime: Date | null;
        AirborneRealTime: Date | null;
        FlightStatus: import("prisma/generated/prisma").$Enums.FlightStatus;
        AircraftId: string | null;
        DepartureAirportId: string | null;
        ArrivalIntendedAirportId: string | null;
        ArrivalAlternateAirportId: string | null;
        ArrivalActualAirportId: string | null;
        MemberId: string | null;
    }[]>;
    findById(Id: string, include?: Prisma.FlightInclude): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        LastRefresh: Date | null;
        VAId: string | null;
        CompanyId: string;
        Registered: boolean;
        Category: number;
        ResultComments: string;
        StartTime: Date | null;
        EndTime: Date | null;
        EngineOnTime: Date | null;
        EngineOffTime: Date | null;
        AirborneTime: Date | null;
        LandedTime: Date | null;
        IntendedFlightLevel: number | null;
        Passengers: number | null;
        Cargo: number | null;
        AddedFuelQty: Prisma.Decimal | null;
        IsAI: boolean;
        VerticalSpeedAtTouchdownMpS: Prisma.Decimal | null;
        MaxGForce: Prisma.Decimal | null;
        MinGForce: Prisma.Decimal | null;
        MaxBank: Prisma.Decimal | null;
        MaxPitch: Prisma.Decimal | null;
        HasStalled: boolean;
        HasOverspeeded: boolean;
        XPFlight: number | null;
        XPFlightBonus: Prisma.Decimal | null;
        XPMissions: number | null;
        CargosTotalWeight: Prisma.Decimal | null;
        PAXCount: number | null;
        AircraftCurrentFOB: Prisma.Decimal | null;
        AircraftCurrentAltitude: Prisma.Decimal | null;
        ActualCruiseAltitude: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInLbsPerHour: Prisma.Decimal | null;
        ActualTotalFuelConsumptionInLbs: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInGalPerHour: Prisma.Decimal | null;
        ActualTASAtCruiseLevel: Prisma.Decimal | null;
        ActualCruiseTimeInMinutes: Prisma.Decimal | null;
        ActualPressureAltitude: Prisma.Decimal | null;
        RegisterState: number | null;
        WrongFuelDetected: boolean;
        WrongWeightDetected: boolean;
        TimeOffset: Prisma.Decimal | null;
        StartLatitude: Prisma.Decimal | null;
        StartLongitude: Prisma.Decimal | null;
        StartHeading: Prisma.Decimal | null;
        UseFreelanceRouteSchedule: boolean;
        RestCrewAfterWarp: boolean;
        Score: Prisma.Decimal | null;
        CanResumeOrAbort: boolean;
        EngineOnRealTime: Date | null;
        EngineOffRealTime: Date | null;
        LandedRealTime: Date | null;
        AirborneRealTime: Date | null;
        FlightStatus: import("prisma/generated/prisma").$Enums.FlightStatus;
        AircraftId: string | null;
        DepartureAirportId: string | null;
        ArrivalIntendedAirportId: string | null;
        ArrivalAlternateAirportId: string | null;
        ArrivalActualAirportId: string | null;
        MemberId: string | null;
    } | null>;
    upsert(dto: Prisma.FlightCreateInput): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        LastRefresh: Date | null;
        VAId: string | null;
        CompanyId: string;
        Registered: boolean;
        Category: number;
        ResultComments: string;
        StartTime: Date | null;
        EndTime: Date | null;
        EngineOnTime: Date | null;
        EngineOffTime: Date | null;
        AirborneTime: Date | null;
        LandedTime: Date | null;
        IntendedFlightLevel: number | null;
        Passengers: number | null;
        Cargo: number | null;
        AddedFuelQty: Prisma.Decimal | null;
        IsAI: boolean;
        VerticalSpeedAtTouchdownMpS: Prisma.Decimal | null;
        MaxGForce: Prisma.Decimal | null;
        MinGForce: Prisma.Decimal | null;
        MaxBank: Prisma.Decimal | null;
        MaxPitch: Prisma.Decimal | null;
        HasStalled: boolean;
        HasOverspeeded: boolean;
        XPFlight: number | null;
        XPFlightBonus: Prisma.Decimal | null;
        XPMissions: number | null;
        CargosTotalWeight: Prisma.Decimal | null;
        PAXCount: number | null;
        AircraftCurrentFOB: Prisma.Decimal | null;
        AircraftCurrentAltitude: Prisma.Decimal | null;
        ActualCruiseAltitude: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInLbsPerHour: Prisma.Decimal | null;
        ActualTotalFuelConsumptionInLbs: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInGalPerHour: Prisma.Decimal | null;
        ActualTASAtCruiseLevel: Prisma.Decimal | null;
        ActualCruiseTimeInMinutes: Prisma.Decimal | null;
        ActualPressureAltitude: Prisma.Decimal | null;
        RegisterState: number | null;
        WrongFuelDetected: boolean;
        WrongWeightDetected: boolean;
        TimeOffset: Prisma.Decimal | null;
        StartLatitude: Prisma.Decimal | null;
        StartLongitude: Prisma.Decimal | null;
        StartHeading: Prisma.Decimal | null;
        UseFreelanceRouteSchedule: boolean;
        RestCrewAfterWarp: boolean;
        Score: Prisma.Decimal | null;
        CanResumeOrAbort: boolean;
        EngineOnRealTime: Date | null;
        EngineOffRealTime: Date | null;
        LandedRealTime: Date | null;
        AirborneRealTime: Date | null;
        FlightStatus: import("prisma/generated/prisma").$Enums.FlightStatus;
        AircraftId: string | null;
        DepartureAirportId: string | null;
        ArrivalIntendedAirportId: string | null;
        ArrivalAlternateAirportId: string | null;
        ArrivalActualAirportId: string | null;
        MemberId: string | null;
    }>;
    findAllFlightsByCompanyId(CompanyId: string, completed?: boolean, include?: Prisma.FlightInclude): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        LastRefresh: Date | null;
        VAId: string | null;
        CompanyId: string;
        Registered: boolean;
        Category: number;
        ResultComments: string;
        StartTime: Date | null;
        EndTime: Date | null;
        EngineOnTime: Date | null;
        EngineOffTime: Date | null;
        AirborneTime: Date | null;
        LandedTime: Date | null;
        IntendedFlightLevel: number | null;
        Passengers: number | null;
        Cargo: number | null;
        AddedFuelQty: Prisma.Decimal | null;
        IsAI: boolean;
        VerticalSpeedAtTouchdownMpS: Prisma.Decimal | null;
        MaxGForce: Prisma.Decimal | null;
        MinGForce: Prisma.Decimal | null;
        MaxBank: Prisma.Decimal | null;
        MaxPitch: Prisma.Decimal | null;
        HasStalled: boolean;
        HasOverspeeded: boolean;
        XPFlight: number | null;
        XPFlightBonus: Prisma.Decimal | null;
        XPMissions: number | null;
        CargosTotalWeight: Prisma.Decimal | null;
        PAXCount: number | null;
        AircraftCurrentFOB: Prisma.Decimal | null;
        AircraftCurrentAltitude: Prisma.Decimal | null;
        ActualCruiseAltitude: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInLbsPerHour: Prisma.Decimal | null;
        ActualTotalFuelConsumptionInLbs: Prisma.Decimal | null;
        ActualConsumptionAtCruiseLevelInGalPerHour: Prisma.Decimal | null;
        ActualTASAtCruiseLevel: Prisma.Decimal | null;
        ActualCruiseTimeInMinutes: Prisma.Decimal | null;
        ActualPressureAltitude: Prisma.Decimal | null;
        RegisterState: number | null;
        WrongFuelDetected: boolean;
        WrongWeightDetected: boolean;
        TimeOffset: Prisma.Decimal | null;
        StartLatitude: Prisma.Decimal | null;
        StartLongitude: Prisma.Decimal | null;
        StartHeading: Prisma.Decimal | null;
        UseFreelanceRouteSchedule: boolean;
        RestCrewAfterWarp: boolean;
        Score: Prisma.Decimal | null;
        CanResumeOrAbort: boolean;
        EngineOnRealTime: Date | null;
        EngineOffRealTime: Date | null;
        LandedRealTime: Date | null;
        AirborneRealTime: Date | null;
        FlightStatus: import("prisma/generated/prisma").$Enums.FlightStatus;
        AircraftId: string | null;
        DepartureAirportId: string | null;
        ArrivalIntendedAirportId: string | null;
        ArrivalAlternateAirportId: string | null;
        ArrivalActualAirportId: string | null;
        MemberId: string | null;
    }[]>;
    findAllFlightRoutesByMemberId(MemberId: string, include?: Prisma.FlightRouteInclude): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        MemberId: string;
        FlightId: string | null;
        Route: string;
    }[]>;
    findAllFlightRoutesByFlightId(FlightId: string, include?: Prisma.FlightRouteInclude): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        MemberId: string;
        FlightId: string | null;
        Route: string;
    }[]>;
    createFlightRoute(dto: CreateFlightRouteDto, include?: Prisma.FlightRouteInclude): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        MemberId: string;
        FlightId: string | null;
        Route: string;
    }>;
    updateFlightRoute(dto: updateFlightRouteDto, include?: Prisma.FlightRouteInclude): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        MemberId: string;
        FlightId: string | null;
        Route: string;
    }>;
    deleteFlightRouteById(Id: string): Promise<{
        Id: string;
        CreatedAt: Date;
        UpdatedAt: Date;
        MemberId: string;
        FlightId: string | null;
        Route: string;
    }>;
    deleteAllFlightRoutesByFlightId(FlightId: string): Promise<Prisma.BatchPayload>;
}
