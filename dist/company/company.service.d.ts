import { DatabaseService } from '@database/database.service';
import { Prisma } from 'prisma/generated/prisma';
export declare class CompanyService {
    private prisma;
    constructor(prisma: DatabaseService);
    findMany(query?: Prisma.CompanyFindManyArgs): Promise<{
        Id: string;
        Name: string;
        AirlineCode: string;
        CreationDate: Date;
        Level: number;
        LevelXP: number;
        Reputation: Prisma.Decimal;
        Paused: boolean;
        LastConnection: Date | null;
        LastReportDate: Date | null;
        DifficultyLevel: number;
        WorldId: string;
        LastRefresh: Date | null;
        CreatedAt: Date;
        UpdatedAt: Date;
    }[]>;
    findUnique(query: Prisma.CompanyFindUniqueArgs): Promise<{
        Id: string;
        Name: string;
        AirlineCode: string;
        CreationDate: Date;
        Level: number;
        LevelXP: number;
        Reputation: Prisma.Decimal;
        Paused: boolean;
        LastConnection: Date | null;
        LastReportDate: Date | null;
        DifficultyLevel: number;
        WorldId: string;
        LastRefresh: Date | null;
        CreatedAt: Date;
        UpdatedAt: Date;
    } | null>;
    findById(Id: string): Promise<{
        Id: string;
        Name: string;
        AirlineCode: string;
        CreationDate: Date;
        Level: number;
        LevelXP: number;
        Reputation: Prisma.Decimal;
        Paused: boolean;
        LastConnection: Date | null;
        LastReportDate: Date | null;
        DifficultyLevel: number;
        WorldId: string;
        LastRefresh: Date | null;
        CreatedAt: Date;
        UpdatedAt: Date;
    } | null>;
    findByAirlineCode(AirlineCode: string): Promise<{
        Id: string;
        Name: string;
        AirlineCode: string;
        CreationDate: Date;
        Level: number;
        LevelXP: number;
        Reputation: Prisma.Decimal;
        Paused: boolean;
        LastConnection: Date | null;
        LastReportDate: Date | null;
        DifficultyLevel: number;
        WorldId: string;
        LastRefresh: Date | null;
        CreatedAt: Date;
        UpdatedAt: Date;
    } | null>;
    findByOwnerId(OwnerId: string): Promise<{
        Id: string;
        Name: string;
        AirlineCode: string;
        CreationDate: Date;
        Level: number;
        LevelXP: number;
        Reputation: Prisma.Decimal;
        Paused: boolean;
        LastConnection: Date | null;
        LastReportDate: Date | null;
        DifficultyLevel: number;
        WorldId: string;
        LastRefresh: Date | null;
        CreatedAt: Date;
        UpdatedAt: Date;
    } | null>;
    upsert(dto: Prisma.CompanyCreateInput): Promise<{
        Id: string;
        Name: string;
        AirlineCode: string;
        CreationDate: Date;
        Level: number;
        LevelXP: number;
        Reputation: Prisma.Decimal;
        Paused: boolean;
        LastConnection: Date | null;
        LastReportDate: Date | null;
        DifficultyLevel: number;
        WorldId: string;
        LastRefresh: Date | null;
        CreatedAt: Date;
        UpdatedAt: Date;
    }>;
}
