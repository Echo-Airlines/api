import { Member, Role, UserPrivacySettings } from "prisma/generated/prisma";
export type RawUser = {
    Id: string;
    Username: string;
    FirstName: string | null;
    LastName: string | null;
    FirstLoginCompleted: boolean;
    IsOnline: boolean;
    IsBanned: boolean;
    BanReason: string | null;
    BanExpiresAt: Date | null;
    IsVerified: boolean;
    CreatedAt: Date;
    UpdatedAt: Date;
    PrivacySettings: UserPrivacySettings[];
    Roles?: Role[];
    LastLogin: Date | null;
    Members?: Member[];
};
export type User = {
    Id: string;
    Username: string;
    FirstName: string | null;
    LastName: string | null;
    FirstLoginCompleted: boolean;
    IsOnline: boolean;
    IsBanned: boolean;
    Email: string | null;
    BanReason: string | null;
    BanExpiresAt: Date | null;
    IsVerified: boolean;
    CreatedAt: Date;
    UpdatedAt: Date;
    PrivacySettings: UserPrivacySettings | null;
    Roles?: Role[];
    LastLogin: Date | null;
    FSHubPilotId: number | null;
    Members?: Member[];
};
export type AuthUser = {
    Id: string;
    Username: string;
    FirstName: string | null;
    LastName: string | null;
    FirstLoginCompleted: boolean;
    IsOnline: boolean;
    IsVerified: boolean;
    CreatedAt: Date;
    UpdatedAt: Date | null;
    Roles: Role[];
    PrivacySettings: UserPrivacySettings[];
    Email: string | null;
    IsBanned: boolean;
    BanReason: string | null;
    BanExpiresAt: Date | null;
    Password: string | null;
    LastLogin: Date | null;
    DiscordId?: string | null;
    DiscordUsername?: string | null;
    DiscordAvatar?: string | null;
    DiscordEmail?: string | null;
    Members?: Member[];
};
export declare class PublicUserDto {
    Id: string;
    Username: string;
    FirstName?: string;
    LastName?: string;
    FirstLoginCompleted: boolean;
    IsOnline: boolean;
    IsVerified?: boolean;
    private PrivacySettings;
    constructor(user?: RawUser | null);
}
