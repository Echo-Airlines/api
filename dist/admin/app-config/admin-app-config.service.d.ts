import { DatabaseService } from "@database/database.service";
import { AppConfig, Prisma } from "prisma/generated/prisma";
export declare class AdminAppConfigService {
    private prisma;
    constructor(prisma: DatabaseService);
    create(dto: AppConfig): Promise<{
        Id: number;
        OnAirSyncEnabled: boolean;
        OnAirVASyncEnabled: boolean;
        OnAirVAMembersSyncEnabled: boolean;
        OnAirCompanySyncEnabled: boolean;
        DiscordServerInviteLink: string | null;
        DiscordServerInviteLinkEnabled: boolean;
        AcceptingNewMembers: boolean;
        DiscordAuthEnabled: boolean;
        DiscordAuthCreateUser: boolean;
        LocalAuthEnabled: boolean;
        VirtualAirlineInitiated: boolean;
        FSHubApiKey: string;
        CreatedAt: Date;
        UpdatedAt: Date;
    }>;
    findOne(query: Prisma.AppConfigWhereInput): Promise<{
        Id: number;
        OnAirSyncEnabled: boolean;
        OnAirVASyncEnabled: boolean;
        OnAirVAMembersSyncEnabled: boolean;
        OnAirCompanySyncEnabled: boolean;
        DiscordServerInviteLink: string | null;
        DiscordServerInviteLinkEnabled: boolean;
        AcceptingNewMembers: boolean;
        DiscordAuthEnabled: boolean;
        DiscordAuthCreateUser: boolean;
        LocalAuthEnabled: boolean;
        VirtualAirlineInitiated: boolean;
        FSHubApiKey: string;
        CreatedAt: Date;
        UpdatedAt: Date;
    }>;
    findMany(query: Prisma.AppConfigFindManyArgs): Promise<{
        Id: number;
        OnAirSyncEnabled: boolean;
        OnAirVASyncEnabled: boolean;
        OnAirVAMembersSyncEnabled: boolean;
        OnAirCompanySyncEnabled: boolean;
        DiscordServerInviteLink: string | null;
        DiscordServerInviteLinkEnabled: boolean;
        AcceptingNewMembers: boolean;
        DiscordAuthEnabled: boolean;
        DiscordAuthCreateUser: boolean;
        LocalAuthEnabled: boolean;
        VirtualAirlineInitiated: boolean;
        FSHubApiKey: string;
        CreatedAt: Date;
        UpdatedAt: Date;
    }[]>;
    getLatest(): Promise<{
        Id: number;
        OnAirSyncEnabled: boolean;
        OnAirVASyncEnabled: boolean;
        OnAirVAMembersSyncEnabled: boolean;
        OnAirCompanySyncEnabled: boolean;
        DiscordServerInviteLink: string | null;
        DiscordServerInviteLinkEnabled: boolean;
        AcceptingNewMembers: boolean;
        DiscordAuthEnabled: boolean;
        DiscordAuthCreateUser: boolean;
        LocalAuthEnabled: boolean;
        VirtualAirlineInitiated: boolean;
        FSHubApiKey: string;
        CreatedAt: Date;
        UpdatedAt: Date;
    } | null>;
    update(query: Prisma.AppConfigWhereInput, dto: AppConfig): Promise<{
        Id: number;
        OnAirSyncEnabled: boolean;
        OnAirVASyncEnabled: boolean;
        OnAirVAMembersSyncEnabled: boolean;
        OnAirCompanySyncEnabled: boolean;
        DiscordServerInviteLink: string | null;
        DiscordServerInviteLinkEnabled: boolean;
        AcceptingNewMembers: boolean;
        DiscordAuthEnabled: boolean;
        DiscordAuthCreateUser: boolean;
        LocalAuthEnabled: boolean;
        VirtualAirlineInitiated: boolean;
        FSHubApiKey: string;
        CreatedAt: Date;
        UpdatedAt: Date;
    }>;
    upsert(dto: AppConfig): Promise<{
        Id: number;
        OnAirSyncEnabled: boolean;
        OnAirVASyncEnabled: boolean;
        OnAirVAMembersSyncEnabled: boolean;
        OnAirCompanySyncEnabled: boolean;
        DiscordServerInviteLink: string | null;
        DiscordServerInviteLinkEnabled: boolean;
        AcceptingNewMembers: boolean;
        DiscordAuthEnabled: boolean;
        DiscordAuthCreateUser: boolean;
        LocalAuthEnabled: boolean;
        VirtualAirlineInitiated: boolean;
        FSHubApiKey: string;
        CreatedAt: Date;
        UpdatedAt: Date;
    }>;
    delete(query: Prisma.AppConfigWhereInput): Promise<{
        Id: number;
        OnAirSyncEnabled: boolean;
        OnAirVASyncEnabled: boolean;
        OnAirVAMembersSyncEnabled: boolean;
        OnAirCompanySyncEnabled: boolean;
        DiscordServerInviteLink: string | null;
        DiscordServerInviteLinkEnabled: boolean;
        AcceptingNewMembers: boolean;
        DiscordAuthEnabled: boolean;
        DiscordAuthCreateUser: boolean;
        LocalAuthEnabled: boolean;
        VirtualAirlineInitiated: boolean;
        FSHubApiKey: string;
        CreatedAt: Date;
        UpdatedAt: Date;
    }>;
    setVirtualAirlineInitiated(VirtualAirlineInitiated: boolean): Promise<{
        Id: number;
        OnAirSyncEnabled: boolean;
        OnAirVASyncEnabled: boolean;
        OnAirVAMembersSyncEnabled: boolean;
        OnAirCompanySyncEnabled: boolean;
        DiscordServerInviteLink: string | null;
        DiscordServerInviteLinkEnabled: boolean;
        AcceptingNewMembers: boolean;
        DiscordAuthEnabled: boolean;
        DiscordAuthCreateUser: boolean;
        LocalAuthEnabled: boolean;
        VirtualAirlineInitiated: boolean;
        FSHubApiKey: string;
        CreatedAt: Date;
        UpdatedAt: Date;
    }>;
}
