generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AppConfig {
  Id                             Int     @id() @default(autoincrement())
  OnAirSyncEnabled               Boolean @default(false)
  OnAirVASyncEnabled             Boolean @default(false)
  OnAirVAMembersSyncEnabled      Boolean @default(false)
  OnAirCompanySyncEnabled        Boolean @default(false)
  DiscordServerInviteLink        String? @db.VarChar
  DiscordServerInviteLinkEnabled Boolean @default(false)
  AcceptingNewMembers            Boolean @default(false)
  DiscordAuthEnabled             Boolean @default(false)
  LocalAuthEnabled               Boolean @default(true)
  VirtualAirlineInitiated        Boolean @default(false)
  CreatedAt                      DateTime @default(now()) @db.Timestamp(6)
  UpdatedAt                      DateTime @default(now()) @db.Timestamp(6)
}

model User {
  Id String @id() @db.Uuid @default(uuid()) @unique()
  Username String @unique() @db.VarChar
  Password String @db.VarChar
  Email String? @unique() @db.VarChar
  FirstName String? @db.VarChar
  LastName String? @db.VarChar
  FirstLoginCompleted Boolean @default(false)
  IsOnline Boolean @default(false)
  IsBanned Boolean @default(false)
  BanReason String? @db.VarChar
  BanExpiresAt DateTime? @db.Timestamp(6)
  IsVerified Boolean @default(false)
  LastLogin DateTime? @db.Timestamp(6)
  CreatedAt DateTime @default(now()) @db.Timestamp(6)
  UpdatedAt DateTime @default(now()) @db.Timestamp(6)
  // user has many roles
  Roles Role[] @relation("UserRoles")

  // user has one privacy settings
  PrivacySettings UserPrivacySettings?
}

model UserPrivacySettings {
  Id String @id() @db.Uuid @default(uuid()) @unique()
  UserId String @db.Uuid @unique()
  ShowOnlineStatus Boolean @default(true)
  ShowFirstName Boolean @default(false)
  ShowLastName Boolean @default(false)
  ShowLastNameInitial Boolean @default(false)
  ShowLastLogin DateTime? @db.Timestamp(6)
  CreatedAt DateTime @default(now()) @db.Timestamp(6)

  // relations
  User User @relation(fields: [UserId], references: [Id])
}

model Role {
  Id Int @id() @default(autoincrement())
  Name String @db.VarChar
  Description String? @db.VarChar
  Slug String @unique() @db.VarChar
  CreatedAt DateTime @default(now()) @db.Timestamp(6)
  UpdatedAt DateTime @default(now()) @db.Timestamp(6)

  // role has many permissions
  Permissions Permission[] @relation("RolePermissions")

  // role has many users
  Users User[] @relation("UserRoles")
}

model Permission {
  Id Int @id() @default(autoincrement())
  Name String @db.VarChar
  Description String? @db.VarChar
  Slug String @unique() @db.VarChar
  Entity String @db.VarChar
  Action String @db.VarChar

  // relations
  // permission has many roles
  Roles Role[] @relation("RolePermissions")
}

model Livery {
  Id String @id() @db.Uuid @default(uuid())
  Name String @db.VarChar
  IsActive Boolean @default(true)
  DownloadCount Int @default(0)
  Image String @db.VarChar
  Url String?
  Description String?
  DownloadUrl String?
  CreatedAt                      DateTime @default(now()) @db.Timestamp(6)
  UpdatedAt                      DateTime @default(now()) @db.Timestamp(6)
}

model VirtualAirline {
  Id                                String    @id() @db.Uuid
  ApiKey                            String    @db.Uuid @unique()
  IsPrimary                         Boolean   @default(false)
  Identifier                        String?    @unique() @db.VarChar
  Name                              String?    @db.VarChar
  Description                       String?   @db.VarChar
  WorldId                           String?   @db.Uuid
  LastDividendsDistribution         DateTime? @db.Timestamp(6)
  LastComputationDate               DateTime? @db.Timestamp(6)
  ComputedMemberCount               Int?
  ComputedAircraftsCount            Int?
  ComputedNumberOfFlights30Days     Int?
  ComputedNumberOfFlightHours30Days Int?
  ComputedMostUsedAirports          String?    @db.VarChar
  LastConnection                    DateTime? @db.Timestamp(6)
  LastReportDate                    DateTime? @db.Timestamp(6)
  Reputation                        Decimal?  @db.Decimal(10, 3)
  CreationDate                      DateTime?  @db.Timestamp(6)
  DifficultyLevel                   Int?
  Level                             Int?
  LevelXP                           Int?
  TotalContractsCompleted           Int?
  TotalContractsEarnedCredits       Int?
  LastRefresh                       DateTime? @db.Timestamp(6)
  CreatedAt                         DateTime  @default(now()) @db.Timestamp(6)
  UpdatedAt                         DateTime  @default(now()) @db.Timestamp(6)

  // relations
  World World? @relation(fields: [WorldId], references: [Id])

  // relations
  VARoles VirtualAirlineRole[]
  Members Member[]
}

model VirtualAirlineRole {
  Id String @id() @db.Uuid @default(uuid())
  VAId String @db.Uuid
  Name String @db.VarChar
  Permission Int
  IsDefaultNewRole Boolean
  Color String @db.VarChar
  PayPercent Decimal @db.Decimal(10, 2) // Precision: 10, Scale: 2
  IsHidden Boolean
  RestrictLoadingVAJobsIntoNonVAAircraft Boolean
  RestrictLoadingNonVAJobsIntoVAAircraft Boolean
  PayWeekly Decimal @db.Decimal(10, 2) // Precision: 10, Scale: 2
  PayPerFlightHour Decimal @db.Decimal(10, 2) // Precision: 10, Scale: 2
  LastRefresh                       DateTime? @db.Timestamp(6)
  CreatedAt                         DateTime  @default(now()) @db.Timestamp(6)
  UpdatedAt                         DateTime  @default(now()) @db.Timestamp(6)

  // relations
  VirtualAirline VirtualAirline @relation(fields: [VAId], references: [Id])
  Members Member[]
}

model World {
  Id String @id() @db.Uuid
  Name String @db.VarChar
  Slug String @unique() @db.VarChar
  Description String? @db.VarChar
  CreatedAt DateTime @default(now()) @db.Timestamp(6)
  UpdatedAt DateTime @default(now()) @db.Timestamp(6)

  // relations
  VirtualAirlines VirtualAirline[]
}

model Member {
  Id String @id() @db.Uuid @default(uuid())
  VAId String @db.Uuid
  CompanyId String @db.Uuid
  CompanyName String @db.VarChar
  AirlineCode String @db.VarChar @unique()
  LastConnection DateTime? @db.Timestamp(6)
  Reputation Decimal @db.Decimal(10, 3)
  CompanyCreationDate DateTime @db.Timestamp(6)
  CompanyLevel Int
  CompanyLevelXP Int
  VARoleId String @db.Uuid
  TotalCargosTransportedLbs Int
  TotalPAXsTransported Int
  TotalEarnedCredits Decimal
  TotalSpentCredits Decimal
  NumberOfFlights Int
  FlightHours Decimal
  Color String @db.VarChar
  ReputationImpact Decimal
  LastVAFlightDate DateTime? @db.Timestamp(6)
  LastRefresh DateTime? @db.Timestamp(6)
  CreatedAt DateTime @default(now()) @db.Timestamp(6)
  UpdatedAt DateTime @default(now()) @db.Timestamp(6)

  // relations
  VirtualAirline VirtualAirline @relation(fields: [VAId], references: [Id])
  VARole VirtualAirlineRole @relation(fields: [VARoleId], references: [Id])
}

model Job {
  Id String @id() @db.Uuid @default(uuid())
  IsEnabled Boolean @default(false)
  FirstRunCompleted Boolean @default(false)
  Type JobType
  Status JobStatus @default(INACTIVE)
  CronExpression CronExpression
  Name String
  Description String?
  Parameters Json?
  LastRunAt DateTime? @db.Timestamp(6)
  NextRunAt DateTime? @db.Timestamp(6)
  LastError String?
  ExecutionCount Int @default(0)
  CreatedAt DateTime @default(now()) @db.Timestamp(6)
  UpdatedAt DateTime @default(now()) @db.Timestamp(6)
}

enum JobType {
  VIRTUAL_AIRLINE_SYNC
  VIRTUAL_AIRLINE_MEMBERS_SYNC
}

enum JobStatus {
  INACTIVE
  ACTIVE
  RUNNING
  COMPLETED
  FAILED
}

enum CronExpression {
  EVERY_30_SECONDS
  EVERY_MINUTE
  EVERY_5_MINUTES
  EVERY_10_MINUTES
  EVERY_30_MINUTES
  EVERY_HOUR
  EVERY_6_HOURS
  EVERY_12_HOURS
  EVERY_DAY
  EVERY_WEEK
  EVERY_MONTH
}